!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AATextItem	src/dialog/cardeditor.cpp	/^AATextItem::AATextItem(const QString &text, QGraphicsItem *parent)$/;"	f	class:AATextItem
AATextItem	src/dialog/cardeditor.h	/^class AATextItem: public QGraphicsTextItem{$/;"	c
ADD_CUSTOM_SCENARIO	src/scenario/miniscenarios.cpp	335;"	d	file:
ADD_PACKAGE	src/package/package.h	84;"	d
ADD_SCENARIO	src/scenario/scenario.h	45;"	d
AFM_FontInfo	include/freetype/freetype/internal/t1types.h	/^  } AFM_FontInfoRec, *AFM_FontInfo;$/;"	t	typeref:struct:AFM_FontInfoRec_
AFM_FontInfoRec	include/freetype/freetype/internal/t1types.h	/^  } AFM_FontInfoRec, *AFM_FontInfo;$/;"	t	typeref:struct:AFM_FontInfoRec_
AFM_FontInfoRec_	include/freetype/freetype/internal/t1types.h	/^  typedef struct  AFM_FontInfoRec_$/;"	s
AFM_KernPair	include/freetype/freetype/internal/t1types.h	/^  } AFM_KernPairRec, *AFM_KernPair;$/;"	t	typeref:struct:AFM_KernPairRec_
AFM_KernPairRec	include/freetype/freetype/internal/t1types.h	/^  } AFM_KernPairRec, *AFM_KernPair;$/;"	t	typeref:struct:AFM_KernPairRec_
AFM_KernPairRec_	include/freetype/freetype/internal/t1types.h	/^  typedef struct  AFM_KernPairRec_$/;"	s
AFM_Parser	include/freetype/freetype/internal/psaux.h	/^  typedef struct AFM_ParserRec_*  AFM_Parser;$/;"	t	typeref:struct:AFM_ParserRec_
AFM_ParserRec	include/freetype/freetype/internal/psaux.h	/^  } AFM_ParserRec;$/;"	t	typeref:struct:AFM_ParserRec_
AFM_ParserRec_	include/freetype/freetype/internal/psaux.h	/^  typedef struct  AFM_ParserRec_$/;"	s
AFM_Parser_FuncsRec	include/freetype/freetype/internal/psaux.h	/^  } AFM_Parser_FuncsRec;$/;"	t	typeref:struct:AFM_Parser_FuncsRec_
AFM_Parser_FuncsRec_	include/freetype/freetype/internal/psaux.h	/^  typedef struct  AFM_Parser_FuncsRec_$/;"	s
AFM_Stream	include/freetype/freetype/internal/psaux.h	/^  typedef struct AFM_StreamRec_*  AFM_Stream;$/;"	t	typeref:struct:AFM_StreamRec_
AFM_TrackKern	include/freetype/freetype/internal/t1types.h	/^  } AFM_TrackKernRec, *AFM_TrackKern;$/;"	t	typeref:struct:AFM_TrackKernRec_
AFM_TrackKernRec	include/freetype/freetype/internal/t1types.h	/^  } AFM_TrackKernRec, *AFM_TrackKern;$/;"	t	typeref:struct:AFM_TrackKernRec_
AFM_TrackKernRec_	include/freetype/freetype/internal/t1types.h	/^  typedef struct  AFM_TrackKernRec_$/;"	s
AF_CONFIG_OPTION_CJK	include/freetype/freetype/config/ftoption.h	730;"	d
AF_CONFIG_OPTION_INDIC	include/freetype/freetype/config/ftoption.h	736;"	d
AI	src/server/ai.cpp	/^AI::AI(ServerPlayer *player)$/;"	f	class:AI
AI	src/server/ai.h	/^class AI: public QObject{$/;"	c
AIDelay	src/core/settings.h	/^    int AIDelay;$/;"	m	class:Settings
AI_H	src/server/ai.h	2;"	d
ANY_FILE	src/breakpad/common/windows/pdb_source_line_writer.h	/^    ANY_FILE   \/\/ try PDB_FILE and then EXE_FILE$/;"	e	enum:google_breakpad::PDBSourceLineWriter::FileFormat
AOE	src/package/standard.h	/^    AOE(Suit suit, int number):TrickCard(suit, number, true){ target_fixed = true;}$/;"	f	class:AOE
AOE	src/package/standard.h	/^class AOE:public TrickCard{$/;"	c
ASIOChannelList	include/fmod/fmod.h	/^    char          **ASIOChannelList;            \/* [r\/w] Optional. Specify 0 to ignore. Pointer to an array of strings (number of entries defined by ASIONumChannels) with ASIO channel names. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
ASIONumChannels	include/fmod/fmod.h	/^    int             ASIONumChannels;            \/* [r\/w] Optional. Specify 0 to ignore. Number of channels available on the ASIO device. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
ASIOSpeakerList	include/fmod/fmod.h	/^    FMOD_SPEAKER   *ASIOSpeakerList;            \/* [r\/w] Optional. Specify 0 to ignore. Pointer to a list of speakers that the ASIO channels map to.  This can be called after System::init to remap ASIO output. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
ASSERT_EQ	src/breakpad/processor/address_map_unittest.cc	49;"	d	file:
ASSERT_EQ	src/breakpad/processor/pathname_stripper_unittest.cc	41;"	d	file:
ASSERT_EQ_ABORT	src/breakpad/processor/minidump_processor_unittest.cc	102;"	d	file:
ASSERT_FALSE	src/breakpad/processor/address_map_unittest.cc	47;"	d	file:
ASSERT_FALSE	src/breakpad/processor/contained_range_map_unittest.cc	47;"	d	file:
ASSERT_FALSE	src/breakpad/processor/module_comparer.cc	51;"	d	file:
ASSERT_TRUE	src/breakpad/processor/address_map_unittest.cc	41;"	d	file:
ASSERT_TRUE	src/breakpad/processor/contained_range_map_unittest.cc	41;"	d	file:
ASSERT_TRUE	src/breakpad/processor/module_comparer.cc	44;"	d	file:
ASSERT_TRUE	src/breakpad/processor/pathname_stripper_unittest.cc	35;"	d	file:
ASSERT_TRUE_ABORT	src/breakpad/processor/minidump_processor_unittest.cc	96;"	d	file:
AUDIO_H	src/core/audio.h	2;"	d
AUXMARK	src/lua/loadlib.c	590;"	d	file:
AUXSKILLS_H	src/client/aux-skills.h	2;"	d
A_space	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  A_space;$/;"	m	struct:FT_WinFNT_HeaderRec_
AcknowledgementScene	src/dialog/mainwindow.cpp	/^AcknowledgementScene::AcknowledgementScene(QObject *parent) :$/;"	f	class:AcknowledgementScene
AcknowledgementScene	src/dialog/mainwindow.h	/^class AcknowledgementScene : public QGraphicsScene$/;"	c
Acquire	src/breakpad/client/windows/common/auto_critical_section.h	/^  void Acquire() {$/;"	f	class:google_breakpad::AutoCriticalSection
AcquireGenerals	src/package/mountainpackage.cpp	/^    static void AcquireGenerals(ServerPlayer *zuoci, int n){$/;"	f	class:Huashen
Add	src/breakpad/processor/stackwalker_unittest_utils.h	/^  void Add(const MockCodeModule *module) { $/;"	f	class:MockCodeModules
Add	src/breakpad/processor/synth_minidump.cc	/^Dump &Dump::Add(Memory *memory) {$/;"	f	class:google_breakpad::SynthMinidump::Dump
Add	src/breakpad/processor/synth_minidump.cc	/^Dump &Dump::Add(Module *module) {$/;"	f	class:google_breakpad::SynthMinidump::Dump
Add	src/breakpad/processor/synth_minidump.cc	/^Dump &Dump::Add(Stream *stream) {$/;"	f	class:google_breakpad::SynthMinidump::Dump
Add	src/breakpad/processor/synth_minidump.cc	/^Dump &Dump::Add(SynthMinidump::Section *section) {$/;"	f	class:google_breakpad::SynthMinidump::Dump
Add	src/breakpad/processor/synth_minidump.cc	/^Dump &Dump::Add(Thread *thread) {$/;"	f	class:google_breakpad::SynthMinidump::Dump
Add	src/breakpad/processor/synth_minidump.h	/^  void Add(Element *element) {$/;"	f	class:google_breakpad::SynthMinidump::List
AddClient	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^bool CrashGenerationServer::AddClient(ClientInfo* client_info) {$/;"	f	class:google_breakpad::CrashGenerationServer
AddRoleIcon	src/ui/roomscene.cpp	/^static inline void AddRoleIcon(QMap<QChar, QPixmap> &map, char c, const QString &role){$/;"	f	file:
AddTranslationEntry	swig/sanguosha_wrap.cxx	/^static int AddTranslationEntry(lua_State *lua){$/;"	f	file:
AddrMap	src/breakpad/processor/static_address_map_unittest.cc	/^typedef google_breakpad::AddressMap<int, string> AddrMap;$/;"	t	file:
AddrType	src/breakpad/processor/map_serializers_unittest.cc	/^typedef int32_t AddrType;$/;"	t	file:
Address	src/core/settings.h	/^    QString Address;$/;"	m	class:Settings
AddressIsAscii	src/breakpad/processor/exploitability.cc	/^bool Exploitability::AddressIsAscii(u_int64_t address) {$/;"	f	class:google_breakpad::Exploitability
AddressMap	src/breakpad/processor/address_map.h	/^  AddressMap() : map_() {}$/;"	f	class:google_breakpad::AddressMap
AddressMap	src/breakpad/processor/address_map.h	/^class AddressMap {$/;"	c	namespace:google_breakpad
AddressMapSerializer	src/breakpad/processor/map_serializers.h	/^class AddressMapSerializer {$/;"	c	namespace:google_breakpad
AddressToEntryMap	src/breakpad/processor/address_map.h	/^  typedef std::map<AddressType, EntryType> AddressToEntryMap;$/;"	t	class:google_breakpad::AddressMap
AddressToEntryMap	src/breakpad/processor/static_address_map.h	/^  typedef StaticMap<AddressType, EntryType> AddressToEntryMap;$/;"	t	class:google_breakpad::StaticAddressMap
AddressToRangeMap	src/breakpad/processor/contained_range_map.h	/^  typedef std::map<AddressType, ContainedRangeMap *> AddressToRangeMap;$/;"	t	class:google_breakpad::ContainedRangeMap
AddressToRangeMap	src/breakpad/processor/range_map.h	/^  typedef std::map<AddressType, Range> AddressToRangeMap;$/;"	t	class:google_breakpad::RangeMap
AddressToRangeMap	src/breakpad/processor/static_contained_range_map.h	/^  StaticMap<AddressType, StaticContainedRangeMap> AddressToRangeMap;$/;"	t	class:google_breakpad::StaticContainedRangeMap
AddressToRangeMap	src/breakpad/processor/static_range_map.h	/^  typedef StaticMap<AddressType, Range> AddressToRangeMap;$/;"	t	class:google_breakpad::StaticRangeMap
AddressType	src/breakpad/processor/address_map_unittest.cc	/^typedef int AddressType;$/;"	t	namespace:__anon76	file:
AddressType	src/breakpad/processor/range_map_unittest.cc	/^typedef int AddressType;$/;"	t	namespace:__anon84	file:
AddressType	src/breakpad/processor/static_range_map_unittest.cc	/^typedef int AddressType;$/;"	t	namespace:__anon85	file:
Alert	swig/sanguosha_wrap.cxx	/^static int Alert(lua_State *lua){$/;"	f	file:
AllBanSet	src/core/banpair.cpp	/^static QSet<QString> AllBanSet;$/;"	v	file:
AllSuits	src/core/card.cpp	/^const Card::Suit Card::AllSuits[4] = {$/;"	m	class:Card	file:
AllSuits	src/core/card.h	/^    static const Suit AllSuits[4];$/;"	m	class:Card
AmazingGrace	src/package/standard-cards.cpp	/^AmazingGrace::AmazingGrace(Suit suit, int number)$/;"	f	class:AmazingGrace
AmazingGrace	src/package/standard.h	/^class AmazingGrace:public GlobalEffect{$/;"	c
Analeptic	src/package/maneuvering.cpp	/^Analeptic::Analeptic(Card::Suit suit, int number)$/;"	f	class:Analeptic
Analeptic	src/package/maneuvering.h	/^class Analeptic: public BasicCard{$/;"	c
AnchoredRect	src/ui/SkinBank.h	/^    class AnchoredRect$/;"	c	class:IQSanComponentSkin
AnimationFunc	src/ui/roomscene.h	/^    typedef void (RoomScene::*AnimationFunc)(const QString &, const QStringList &);$/;"	t	class:RoomScene
AnimationLine	src/ui/sprite.h	/^        AnimationLine(){ frames[0] = 1; }$/;"	f	struct:Sprite::AnimationLine
AnimationLine	src/ui/sprite.h	/^    struct AnimationLine$/;"	s	class:Sprite
AnnounceIP	src/core/settings.h	/^    bool AnnounceIP;$/;"	m	class:Settings
Anxian	src/package/bgm-package.cpp	/^    Anxian():TriggerSkill("anxian"){$/;"	f	class:Anxian
Anxian	src/package/bgm-package.cpp	/^class Anxian: public TriggerSkill{$/;"	c	file:
Anxu	src/package/yjcm2012-package.cpp	/^    Anxu():ZeroCardViewAsSkill("anxu"){$/;"	f	class:Anxu
Anxu	src/package/yjcm2012-package.cpp	/^class Anxu: public ZeroCardViewAsSkill{$/;"	c	file:
AnxuCard	src/package/yjcm2012-package.cpp	/^AnxuCard::AnxuCard(){$/;"	f	class:AnxuCard
AnxuCard	src/package/yjcm2012-package.h	/^class AnxuCard: public SkillCard{$/;"	c
AppFont	src/core/settings.h	/^    QFont AppFont;$/;"	m	class:Settings
ArcheryAttack	src/package/standard-cards.cpp	/^ArcheryAttack::ArcheryAttack(Card::Suit suit, int number)$/;"	f	class:ArcheryAttack
ArcheryAttack	src/package/standard.h	/^class ArcheryAttack:public AOE{$/;"	c
Args	src/jsoncpp/include/json/value.h	/^      typedef std::vector<PathArgument> Args;$/;"	t	class:Json::Path
Arith	src/lua/lvm.c	/^static void Arith (lua_State *L, StkId ra, const TValue *rb,$/;"	f	file:
Armor	src/package/standard.h	/^    Armor(Suit suit, int number):EquipCard(suit, number){}$/;"	f	class:Armor
Armor	src/package/standard.h	/^class Armor:public EquipCard{$/;"	c
ArmorLocation	src/package/standard.h	/^        ArmorLocation = 1,$/;"	e	enum:EquipCard::Location
ArmorSkill	src/core/skill.cpp	/^ArmorSkill::ArmorSkill(const QString &name)$/;"	f	class:ArmorSkill
ArmorSkill	src/core/skill.h	/^class ArmorSkill: public TriggerSkill{$/;"	c
ArrayIndex	src/jsoncpp/include/json/forwards.h	/^   typedef unsigned int ArrayIndex;$/;"	t	namespace:Json
ArrayIndex	src/jsoncpp/include/json/value.h	/^      typedef Json::ArrayIndex ArrayIndex;$/;"	t	class:Json::Value
ArrayIndex	src/jsoncpp/include/json/value.h	/^      typedef Value::ArrayIndex ArrayIndex;$/;"	t	class:Json::ValueInternalArray
Ascender	include/freetype/freetype/internal/t1types.h	/^    FT_Fixed       Ascender;$/;"	m	struct:AFM_FontInfoRec_
Ascender	include/freetype/freetype/tttables.h	/^    FT_Short   Ascender;$/;"	m	struct:TT_HoriHeader_
Ascender	include/freetype/freetype/tttables.h	/^    FT_Short   Ascender;$/;"	m	struct:TT_VertHeader_
AskForAG	src/client/client.h	/^        AskForAG,$/;"	e	enum:Client::Status
AskForGongxin	src/client/client.h	/^        AskForGongxin,$/;"	e	enum:Client::Status
AskForGuanxing	src/client/client.h	/^        AskForGuanxing,$/;"	e	enum:Client::Status
AskForPeaches	src/core/structs.h	/^    AskForPeaches,$/;"	e	enum:TriggerEvent
AskForPeachesDone	src/core/structs.h	/^    AskForPeachesDone,$/;"	e	enum:TriggerEvent
AskForPlayerChoose	src/client/client.h	/^        AskForPlayerChoose,$/;"	e	enum:Client::Status
AskForRetrial	src/core/structs.h	/^    AskForRetrial,$/;"	e	enum:TriggerEvent
AskForShowOrPindian	src/client/client.h	/^        AskForShowOrPindian$/;"	e	enum:Client::Status
AskForSkillInvoke	src/client/client.h	/^        AskForSkillInvoke,$/;"	e	enum:Client::Status
AskForYiji	src/client/client.h	/^        AskForYiji,$/;"	e	enum:Client::Status
Audio	src/core/audio.h	/^class Audio{$/;"	c
AutoCriticalSection	src/breakpad/client/windows/common/auto_critical_section.h	/^  explicit AutoCriticalSection(CRITICAL_SECTION* cs) : cs_(cs), taken_(false) {$/;"	f	class:google_breakpad::AutoCriticalSection
AutoCriticalSection	src/breakpad/client/windows/common/auto_critical_section.h	/^class AutoCriticalSection {$/;"	c	namespace:google_breakpad
AutoExceptionHandler	src/breakpad/client/windows/handler/exception_handler.cc	/^  AutoExceptionHandler() {$/;"	f	class:google_breakpad::AutoExceptionHandler
AutoExceptionHandler	src/breakpad/client/windows/handler/exception_handler.cc	/^class AutoExceptionHandler {$/;"	c	namespace:google_breakpad	file:
AutoFileCloser	src/breakpad/processor/source_line_resolver_base_types.h	/^  explicit AutoFileCloser(FILE *file) : file_(file) {}$/;"	f	class:google_breakpad::SourceLineResolverBase::AutoFileCloser
AutoFileCloser	src/breakpad/processor/source_line_resolver_base_types.h	/^class SourceLineResolverBase::AutoFileCloser {$/;"	c	class:google_breakpad::SourceLineResolverBase
AutoImage	src/breakpad/common/windows/pdb_source_line_writer.cc	/^  explicit AutoImage(PLOADED_IMAGE img) : img_(img) {}$/;"	f	class:google_breakpad::AutoImage
AutoImage	src/breakpad/common/windows/pdb_source_line_writer.cc	/^class AutoImage {$/;"	c	namespace:google_breakpad	file:
AutoInternetHandle	src/breakpad/common/windows/http_upload.cc	/^  explicit AutoInternetHandle(HINTERNET handle) : handle_(handle) {}$/;"	f	class:google_breakpad::HTTPUpload::AutoInternetHandle
AutoInternetHandle	src/breakpad/common/windows/http_upload.cc	/^class HTTPUpload::AutoInternetHandle {$/;"	c	class:google_breakpad::HTTPUpload	file:
AutoStackClearer	src/breakpad/processor/postfix_evaluator-inl.h	/^  explicit AutoStackClearer(vector<string> *stack) : stack_(stack) {}$/;"	f	class:google_breakpad::AutoStackClearer
AutoStackClearer	src/breakpad/processor/postfix_evaluator-inl.h	/^class AutoStackClearer {$/;"	c	namespace:google_breakpad
AvatarRectItem	src/dialog/cardeditor.cpp	/^AvatarRectItem::AvatarRectItem(qreal width, qreal height, const QRectF &box_rect, int font_size)$/;"	f	class:AvatarRectItem
AvatarRectItem	src/dialog/cardeditor.h	/^class AvatarRectItem: public QGraphicsRectItem{$/;"	c
Axe	src/package/standard-cards.cpp	/^Axe::Axe(Suit suit, int number)$/;"	f	class:Axe
Axe	src/package/standard-equips.h	/^class Axe:public Weapon{$/;"	c
AxeSkill	src/package/standard-cards.cpp	/^    AxeSkill():WeaponSkill("Axe"){$/;"	f	class:AxeSkill
AxeSkill	src/package/standard-cards.cpp	/^class AxeSkill: public WeaponSkill{$/;"	c	file:
AxeViewAsSkill	src/package/standard-cards.cpp	/^    AxeViewAsSkill():ViewAsSkill("Axe"){$/;"	f	class:AxeViewAsSkill
AxeViewAsSkill	src/package/standard-cards.cpp	/^class AxeViewAsSkill: public ViewAsSkill{$/;"	c	file:
BANPAIRDIALOG_H	src/core/banpair.h	2;"	d
BASIC_CI_SIZE	src/lua/lstate.h	32;"	d
BASIC_STACK_SIZE	src/lua/lstate.h	34;"	d
BDF_PROPERTY_TYPE_ATOM	include/freetype/freetype/ftbdf.h	/^    BDF_PROPERTY_TYPE_ATOM     = 1,$/;"	e	enum:BDF_PropertyType_
BDF_PROPERTY_TYPE_CARDINAL	include/freetype/freetype/ftbdf.h	/^    BDF_PROPERTY_TYPE_CARDINAL = 3$/;"	e	enum:BDF_PropertyType_
BDF_PROPERTY_TYPE_INTEGER	include/freetype/freetype/ftbdf.h	/^    BDF_PROPERTY_TYPE_INTEGER  = 2,$/;"	e	enum:BDF_PropertyType_
BDF_PROPERTY_TYPE_NONE	include/freetype/freetype/ftbdf.h	/^    BDF_PROPERTY_TYPE_NONE     = 0,$/;"	e	enum:BDF_PropertyType_
BDF_Property	include/freetype/freetype/ftbdf.h	/^  typedef struct BDF_PropertyRec_*  BDF_Property;$/;"	t	typeref:struct:BDF_PropertyRec_
BDF_PropertyRec	include/freetype/freetype/ftbdf.h	/^  } BDF_PropertyRec;$/;"	t	typeref:struct:BDF_PropertyRec_
BDF_PropertyRec_	include/freetype/freetype/ftbdf.h	/^  typedef struct  BDF_PropertyRec_$/;"	s
BDF_PropertyType	include/freetype/freetype/ftbdf.h	/^  } BDF_PropertyType;$/;"	t	typeref:enum:BDF_PropertyType_
BDF_PropertyType_	include/freetype/freetype/ftbdf.h	/^  typedef enum  BDF_PropertyType_$/;"	g
BGM	src/core/audio.cpp	/^static FMOD_SOUND *BGM;$/;"	v	file:
BGMChannel	src/core/audio.cpp	/^static FMOD_CHANNEL *BGMChannel;$/;"	v	file:
BGMPACKAGE_H	src/package/bgm-package.h	2;"	d
BGMPackage	src/package/bgm-package.cpp	/^BGMPackage::BGMPackage():Package("BGM"){$/;"	f	class:BGMPackage
BGMPackage	src/package/bgm-package.h	/^class BGMPackage : public Package{$/;"	c
BGMVolume	src/core/settings.h	/^    float BGMVolume;$/;"	m	class:Settings
BITRK	src/lua/lopcodes.h	119;"	d
BLACKBIT	src/lua/lgc.h	56;"	d
BOSSCHALLENGE_H	src/scenario/boss-mode-scenario.h	2;"	d
BPLOG	src/breakpad/processor/logging.h	138;"	d
BPLOG_ERROR	src/breakpad/processor/logging.h	154;"	d
BPLOG_ERROR_STREAM	src/breakpad/processor/logging.h	152;"	d
BPLOG_IF	src/breakpad/processor/logging.h	159;"	d
BPLOG_INFO	src/breakpad/processor/logging.h	145;"	d
BPLOG_INFO_STREAM	src/breakpad/processor/logging.h	143;"	d
BPLOG_INIT	src/breakpad/processor/logging.h	134;"	d
BUILD	Makefile	/^BUILD:=$(OLDPWD)_build$/;"	m
BUILD	linux.mk	/^BUILD:=$(OLDPWD)_build$/;"	m
BUTTON_H	src/ui/button.h	2;"	d
B_space	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  B_space;$/;"	m	struct:FT_WinFNT_HeaderRec_
BackLoader	src/dialog/mainwindow.h	/^class BackLoader$/;"	c
BackgroundImage	src/core/settings.h	/^    QString BackgroundImage;$/;"	m	class:Settings
Badao	src/package/wisdompackage.cpp	/^    Badao():TriggerSkill("badao"){$/;"	f	class:Badao
Badao	src/package/wisdompackage.cpp	/^class Badao: public TriggerSkill{$/;"	c	file:
Baiyin	src/package/god.cpp	/^    Baiyin():PhaseChangeSkill("baiyin"){$/;"	f	class:Baiyin
Baiyin	src/package/god.cpp	/^class Baiyin: public PhaseChangeSkill{$/;"	c	file:
BanPackages	src/core/settings.h	/^    QStringList BanPackages;$/;"	m	class:Settings
BanPair	src/core/banpair.cpp	/^BanPair::BanPair(){$/;"	f	class:BanPair
BanPair	src/core/banpair.cpp	/^BanPair::BanPair(const QString &first, const QString &second)$/;"	f	class:BanPair
BanPair	src/core/banpair.h	/^struct BanPair: public QPair<QString, QString>{$/;"	s
BanPairSet	src/core/banpair.cpp	/^static QSet<BanPair> BanPairSet;$/;"	v	file:
BanlistDialog	src/server/server.cpp	/^BanlistDialog::BanlistDialog(QWidget *parent, bool view)$/;"	f	class:BanlistDialog
BanlistDialog	src/server/server.h	/^class BanlistDialog: public QDialog{$/;"	c
Baonue	src/package/thicket.cpp	/^    Baonue():TriggerSkill("baonue$"){$/;"	f	class:Baonue
Baonue	src/package/thicket.cpp	/^class Baonue: public TriggerSkill{$/;"	c	file:
BasaraMode	src/server/gamerule.cpp	/^BasaraMode::BasaraMode(QObject *parent)$/;"	f	class:BasaraMode
BasaraMode	src/server/gamerule.h	/^class BasaraMode: public GameRule{$/;"	c
Base	src/breakpad/processor/basic_source_line_resolver_types.h	/^  typedef SourceLineResolverBase::Function Base;$/;"	t	struct:google_breakpad::BasicSourceLineResolver::Function
Basic	src/core/card.h	/^        Basic,$/;"	e	enum:Card::CardType
BasicCard	src/package/standard.h	/^    BasicCard(Suit suit, int number):Card(suit, number){}$/;"	f	class:BasicCard
BasicCard	src/package/standard.h	/^class BasicCard:public Card{$/;"	c
BasicCodeModule	src/breakpad/processor/basic_code_module.h	/^  BasicCodeModule(u_int64_t base_address, u_int64_t size,$/;"	f	class:google_breakpad::BasicCodeModule
BasicCodeModule	src/breakpad/processor/basic_code_module.h	/^  explicit BasicCodeModule(const CodeModule *that)$/;"	f	class:google_breakpad::BasicCodeModule
BasicCodeModule	src/breakpad/processor/basic_code_module.h	/^class BasicCodeModule : public CodeModule {$/;"	c	namespace:google_breakpad
BasicCodeModules	src/breakpad/processor/basic_code_modules.cc	/^BasicCodeModules::BasicCodeModules(const CodeModules *that)$/;"	f	class:google_breakpad::BasicCodeModules
BasicCodeModules	src/breakpad/processor/basic_code_modules.h	/^class BasicCodeModules : public CodeModules {$/;"	c	namespace:google_breakpad
BasicFunc	src/breakpad/processor/module_comparer.h	/^  typedef BasicSourceLineResolver::Function BasicFunc;$/;"	t	class:google_breakpad::ModuleComparer
BasicLine	src/breakpad/processor/module_comparer.h	/^  typedef BasicSourceLineResolver::Line BasicLine;$/;"	t	class:google_breakpad::ModuleComparer
BasicModule	src/breakpad/processor/module_comparer.h	/^  typedef BasicSourceLineResolver::Module BasicModule;$/;"	t	class:google_breakpad::ModuleComparer
BasicModuleFactory	src/breakpad/processor/module_factory.h	/^class BasicModuleFactory : public ModuleFactory {$/;"	c	namespace:google_breakpad
BasicPubSymbol	src/breakpad/processor/module_comparer.h	/^  typedef BasicSourceLineResolver::PublicSymbol BasicPubSymbol;$/;"	t	class:google_breakpad::ModuleComparer
BasicSourceLineResolver	src/breakpad/google_breakpad/processor/basic_source_line_resolver.h	/^class BasicSourceLineResolver : public SourceLineResolverBase {$/;"	c	namespace:google_breakpad
BasicSourceLineResolver	src/breakpad/processor/basic_source_line_resolver.cc	/^BasicSourceLineResolver::BasicSourceLineResolver() :$/;"	f	class:google_breakpad::BasicSourceLineResolver
BatchAllocator	src/jsoncpp/src/json_batchallocator.h	/^   BatchAllocator( unsigned int objectsPerPage = 255 )$/;"	f	class:Json::BatchAllocator
BatchAllocator	src/jsoncpp/src/json_batchallocator.h	/^class BatchAllocator$/;"	c	namespace:Json
BatchInfo	src/jsoncpp/src/json_batchallocator.h	/^   struct BatchInfo$/;"	s	class:Json::BatchAllocator
Bawang	src/package/wisdompackage.cpp	/^    Bawang():TriggerSkill("bawang"){$/;"	f	class:Bawang
Bawang	src/package/wisdompackage.cpp	/^class Bawang: public TriggerSkill{$/;"	c	file:
BawangCard	src/package/wisdompackage.cpp	/^BawangCard::BawangCard(){$/;"	f	class:BawangCard
BawangCard	src/package/wisdompackage.h	/^class BawangCard: public SkillCard{$/;"	c
BawangViewAsSkill	src/package/wisdompackage.cpp	/^    BawangViewAsSkill():ZeroCardViewAsSkill("bawang"){$/;"	f	class:BawangViewAsSkill
BawangViewAsSkill	src/package/wisdompackage.cpp	/^class BawangViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
Bazhen	src/package/firepackage.cpp	/^    Bazhen():TriggerSkill("bazhen"){$/;"	f	class:Bazhen
Bazhen	src/package/firepackage.cpp	/^class Bazhen: public TriggerSkill{$/;"	c	file:
Beifa	src/package/wisdompackage.cpp	/^    Beifa():TriggerSkill("beifa"){$/;"	f	class:Beifa
Beifa	src/package/wisdompackage.cpp	/^class Beifa: public TriggerSkill{$/;"	c	file:
Beige	src/package/mountainpackage.cpp	/^    Beige():TriggerSkill("beige"){$/;"	f	class:Beige
Beige	src/package/mountainpackage.cpp	/^class Beige: public TriggerSkill{$/;"	c	file:
Benghuai	src/package/thicket.cpp	/^    Benghuai():PhaseChangeSkill("benghuai"){$/;"	f	class:Benghuai
Benghuai	src/package/thicket.cpp	/^class Benghuai: public PhaseChangeSkill{$/;"	c	file:
BigFont	src/core/settings.h	/^    QFont BigFont;$/;"	m	class:Settings
BinOpr	src/lua/lcode.h	/^typedef enum BinOpr {$/;"	g
BinOpr	src/lua/lcode.h	/^} BinOpr;$/;"	t	typeref:enum:BinOpr
BinaryStreamBasicTest	src/breakpad/processor/binarystream_unittest.cc	/^class BinaryStreamBasicTest : public ::testing::Test {$/;"	c	namespace:__anon72	file:
BinaryStreamU8Test	src/breakpad/processor/binarystream_unittest.cc	/^class BinaryStreamU8Test : public ::testing::Test {$/;"	c	namespace:__anon72	file:
Biyue	src/package/standard-generals.cpp	/^    Biyue():PhaseChangeSkill("biyue"){$/;"	f	class:Biyue
Biyue	src/package/standard-generals.cpp	/^class Biyue: public PhaseChangeSkill{$/;"	c	file:
Black	src/core/card.h	/^    enum Color{Red, Black, Colorless};$/;"	e	enum:Card::Color
BlackEdgeTextItem	src/dialog/cardeditor.cpp	/^BlackEdgeTextItem::BlackEdgeTextItem()$/;"	f	class:BlackEdgeTextItem
BlackEdgeTextItem	src/dialog/cardeditor.h	/^class BlackEdgeTextItem: public QGraphicsObject{$/;"	c
Blade	src/package/standard-cards.cpp	/^Blade::Blade(Suit suit, int number)$/;"	f	class:Blade
Blade	src/package/standard-equips.h	/^class Blade:public Weapon{$/;"	c
BladeSkill	src/package/standard-cards.cpp	/^    BladeSkill():WeaponSkill("Blade"){$/;"	f	class:BladeSkill
BladeSkill	src/package/standard-cards.cpp	/^class BladeSkill : public WeaponSkill{$/;"	c	file:
BlockCnt	src/lua/lparser.c	/^typedef struct BlockCnt {$/;"	s	file:
BlockCnt	src/lua/lparser.c	/^} BlockCnt;$/;"	t	typeref:struct:BlockCnt	file:
BrandContext	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  void BrandContext(MDRawContextAMD64 *raw_context) {$/;"	f	class:StackwalkerAMD64Fixture
BrandContext	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  void BrandContext(MDRawContextARM *raw_context) {$/;"	f	class:StackwalkerARMFixture
BrandContext	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  void BrandContext(MDRawContextX86 *raw_context) {$/;"	f	class:StackwalkerX86Fixture
BroadcastBox	src/dialog/mainwindow.cpp	/^BroadcastBox::BroadcastBox(Server *server, QWidget *parent)$/;"	f	class:BroadcastBox
BroadcastBox	src/dialog/mainwindow.h	/^class BroadcastBox: public QDialog{$/;"	c
BucketIndex	src/jsoncpp/include/json/value.h	/^      typedef unsigned int BucketIndex;$/;"	t	class:Json::ValueInternalMap
Buqu	src/package/wind.cpp	/^    Buqu():TriggerSkill("buqu"){$/;"	f	class:Buqu
Buqu	src/package/wind.cpp	/^class Buqu: public TriggerSkill{$/;"	c	file:
BuquRemove	src/package/wind.cpp	/^    BuquRemove():TriggerSkill("#buqu-remove"){$/;"	f	class:BuquRemove
BuquRemove	src/package/wind.cpp	/^class BuquRemove: public TriggerSkill{$/;"	c	file:
Button	src/ui/button.cpp	/^Button::Button(const QString &label, const QSizeF &size)$/;"	f	class:Button
Button	src/ui/button.cpp	/^Button::Button(const QString &label, qreal scale)$/;"	f	class:Button
Button	src/ui/button.h	/^class Button : public QGraphicsObject$/;"	c
ButtonState	src/ui/qsanbutton.h	/^    enum ButtonState { S_STATE_UP, S_STATE_HOVER, S_STATE_DOWN, $/;"	g	class:QSanButton
ButtonStyle	src/ui/qsanbutton.h	/^    enum ButtonStyle { S_STYLE_PUSH, S_STYLE_TOGGLE };$/;"	g	class:QSanButton
Buyi	src/package/yjcm-package.cpp	/^    Buyi():TriggerSkill("buyi"){$/;"	f	class:Buyi
Buyi	src/package/yjcm-package.cpp	/^class Buyi: public TriggerSkill{$/;"	c	file:
CAP_POSITION	src/lua/lstrlib.c	168;"	d	file:
CAP_UNFINISHED	src/lua/lstrlib.c	167;"	d	file:
CARDCONTAINER_H	src/ui/cardcontainer.h	2;"	d
CARDEDITOR_H	src/dialog/cardeditor.h	2;"	d
CARDOVERVIEW_H	src/dialog/cardoverview.h	2;"	d
CARD_H	src/core/card.h	2;"	d
CCallS	src/lua/lapi.c	/^struct CCallS {  \/* data to `f_Ccall' *\/$/;"	s	file:
CClosure	src/lua/lobject.h	/^typedef struct CClosure {$/;"	s
CClosure	src/lua/lobject.h	/^} CClosure;$/;"	t	typeref:struct:CClosure
CFARule	src/breakpad/processor/cfi_frame_info.cc	/^void CFIFrameInfoParseHandler::CFARule(const string &expression) {$/;"	f	class:google_breakpad::CFIFrameInfoParseHandler
CFI	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^class CFI: public CFIFixture, public Test { };$/;"	c	file:
CFI	src/breakpad/processor/stackwalker_arm_unittest.cc	/^class CFI: public CFIFixture, public Test { };$/;"	c	file:
CFI	src/breakpad/processor/stackwalker_x86_unittest.cc	/^class CFI: public CFIFixture, public Test { };$/;"	c	file:
CFIFixture	src/breakpad/processor/cfi_frame_info_unittest.cc	/^struct CFIFixture {$/;"	s	file:
CFIFixture	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  CFIFixture() {$/;"	f	struct:CFIFixture
CFIFixture	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^struct CFIFixture: public StackwalkerAMD64Fixture {$/;"	s	file:
CFIFixture	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  CFIFixture() {$/;"	f	struct:CFIFixture
CFIFixture	src/breakpad/processor/stackwalker_arm_unittest.cc	/^struct CFIFixture: public StackwalkerARMFixture {$/;"	s	file:
CFIFixture	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  CFIFixture() {$/;"	f	struct:CFIFixture
CFIFixture	src/breakpad/processor/stackwalker_x86_unittest.cc	/^struct CFIFixture: public StackwalkerX86Fixture {$/;"	s	file:
CFIFrameInfo	src/breakpad/processor/cfi_frame_info.h	/^class CFIFrameInfo {$/;"	c	namespace:google_breakpad
CFIFrameInfoParseHandler	src/breakpad/processor/cfi_frame_info.h	/^  CFIFrameInfoParseHandler(CFIFrameInfo *frame_info)$/;"	f	class:google_breakpad::CFIFrameInfoParseHandler
CFIFrameInfoParseHandler	src/breakpad/processor/cfi_frame_info.h	/^class CFIFrameInfoParseHandler: public CFIRuleParser::Handler {$/;"	c	namespace:google_breakpad
CFIParserFixture	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  CFIParserFixture() : parser(&mock_handler) {$/;"	f	class:CFIParserFixture
CFIParserFixture	src/breakpad/processor/cfi_frame_info_unittest.cc	/^class CFIParserFixture {$/;"	c	file:
CFIRuleParser	src/breakpad/processor/cfi_frame_info.h	/^  CFIRuleParser(Handler *handler) : handler_(handler) { }$/;"	f	class:google_breakpad::CFIRuleParser
CFIRuleParser	src/breakpad/processor/cfi_frame_info.h	/^class CFIRuleParser {$/;"	c	namespace:google_breakpad
CFIWalker	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  typedef SimpleCFIWalker<u_int64_t, RawContext> CFIWalker;$/;"	t	struct:SimpleCFIWalkerFixture	file:
CFIWalker	src/breakpad/processor/stackwalker_amd64.h	/^  typedef SimpleCFIWalker<u_int64_t, MDRawContextAMD64> CFIWalker;$/;"	t	class:google_breakpad::StackwalkerAMD64
CFIWalker	src/breakpad/processor/stackwalker_x86.h	/^  typedef SimpleCFIWalker<u_int32_t, MDRawContextX86> CFIWalker;$/;"	t	class:google_breakpad::StackwalkerX86
CHATWIDGET_H	src/ui/chatwidget.h	2;"	d
CHOOSEGENERALDIALOG_H	src/dialog/choosegeneraldialog.h	2;"	d
CID_Face	include/freetype/freetype/internal/t1types.h	/^  typedef struct CID_FaceRec_*  CID_Face;$/;"	t	typeref:struct:CID_FaceRec_
CID_FaceDict	include/freetype/freetype/t1tables.h	/^  typedef struct CID_FaceDictRec_*  CID_FaceDict;$/;"	t	typeref:struct:CID_FaceDictRec_
CID_FaceDictRec	include/freetype/freetype/t1tables.h	/^  } CID_FaceDictRec;$/;"	t	typeref:struct:CID_FaceDictRec_
CID_FaceDictRec_	include/freetype/freetype/t1tables.h	/^  typedef struct  CID_FaceDictRec_$/;"	s
CID_FaceInfo	include/freetype/freetype/t1tables.h	/^  typedef struct CID_FaceInfoRec_*  CID_FaceInfo;$/;"	t	typeref:struct:CID_FaceInfoRec_
CID_FaceInfoRec	include/freetype/freetype/t1tables.h	/^  } CID_FaceInfoRec;$/;"	t	typeref:struct:CID_FaceInfoRec_
CID_FaceInfoRec_	include/freetype/freetype/t1tables.h	/^  typedef struct  CID_FaceInfoRec_$/;"	s
CID_FaceRec	include/freetype/freetype/internal/t1types.h	/^  } CID_FaceRec;$/;"	t	typeref:struct:CID_FaceRec_
CID_FaceRec_	include/freetype/freetype/internal/t1types.h	/^  typedef struct  CID_FaceRec_$/;"	s
CID_FontDict	include/freetype/freetype/t1tables.h	/^  typedef CID_FaceDictRec  CID_FontDict;$/;"	t
CID_Info	include/freetype/freetype/t1tables.h	/^  typedef CID_FaceInfoRec  CID_Info;$/;"	t
CID_Subrs	include/freetype/freetype/internal/t1types.h	/^  } CID_SubrsRec, *CID_Subrs;$/;"	t	typeref:struct:CID_SubrsRec_
CID_SubrsRec	include/freetype/freetype/internal/t1types.h	/^  } CID_SubrsRec, *CID_Subrs;$/;"	t	typeref:struct:CID_SubrsRec_
CID_SubrsRec_	include/freetype/freetype/internal/t1types.h	/^  typedef struct  CID_SubrsRec_$/;"	s
CLIENTLOGBOX_H	src/ui/clientlogbox.h	2;"	d
CLIENTPLAYER_H	src/client/clientplayer.h	2;"	d
CLIENTSTRUCT_H	src/client/clientstruct.h	2;"	d
CLIENT_H	src/client/client.h	2;"	d
CLIENT_WINDOWS_COMMON_AUTO_CRITICAL_SECTION_H__	src/breakpad/client/windows/common/auto_critical_section.h	31;"	d
CLIENT_WINDOWS_COMMON_IPC_PROTOCOL_H__	src/breakpad/client/windows/common/ipc_protocol.h	31;"	d
CLIENT_WINDOWS_CRASH_GENERATION_CLIENT_INFO_H__	src/breakpad/client/windows/crash_generation/client_info.h	31;"	d
CLIENT_WINDOWS_CRASH_GENERATION_CRASH_GENERATION_CLIENT_H_	src/breakpad/client/windows/crash_generation/crash_generation_client.h	31;"	d
CLIENT_WINDOWS_CRASH_GENERATION_CRASH_GENERATION_SERVER_H__	src/breakpad/client/windows/crash_generation/crash_generation_server.h	31;"	d
CLIENT_WINDOWS_CRASH_GENERATION_MINIDUMP_GENERATOR_H_	src/breakpad/client/windows/crash_generation/minidump_generator.h	31;"	d
CLIENT_WINDOWS_HANDLER_EXCEPTION_HANDLER_H__	src/breakpad/client/windows/handler/exception_handler.h	57;"	d
COMMON_WINDOWS_GUID_STRING_H__	src/breakpad/common/windows/guid_string.h	33;"	d
COMMON_WINDOWS_HTTP_UPLOAD_H__	src/breakpad/common/windows/http_upload.h	35;"	d
COMMON_WINDOWS_STRING_UTILS_INL_H__	src/breakpad/common/windows/string_utils-inl.h	34;"	d
CONFIGDIALOG_H	src/dialog/configdialog.h	2;"	d
CONNECTIONDIALOG_H	src/dialog/connectiondialog.h	2;"	d
CONST_FT_RFORK_RULE_ARRAY_BEGIN	include/freetype/freetype/internal/ftrfork.h	84;"	d
CONST_FT_RFORK_RULE_ARRAY_BEGIN	include/freetype/freetype/internal/ftrfork.h	91;"	d
CONST_FT_RFORK_RULE_ARRAY_END	include/freetype/freetype/internal/ftrfork.h	88;"	d
CONST_FT_RFORK_RULE_ARRAY_END	include/freetype/freetype/internal/ftrfork.h	99;"	d
CONST_FT_RFORK_RULE_ARRAY_ENTRY	include/freetype/freetype/internal/ftrfork.h	86;"	d
CONST_FT_RFORK_RULE_ARRAY_ENTRY	include/freetype/freetype/internal/ftrfork.h	95;"	d
CONTESTDB_H	src/server/contestdb.h	2;"	d
CONTEXT_VALID_ALL	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_ALL  = -1$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_ALL	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_ALL  = -1$/;"	e	enum:google_breakpad::StackFramePPC::ContextValidity
CONTEXT_VALID_ALL	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_ALL  = -1$/;"	e	enum:google_breakpad::StackFrameSPARC::ContextValidity
CONTEXT_VALID_ALL	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_ALL  = -1$/;"	e	enum:google_breakpad::StackFrameX86::ContextValidity
CONTEXT_VALID_ALL	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_ALL  = ~CONTEXT_VALID_NONE,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_EAX	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_EAX  = 1 << 3,$/;"	e	enum:google_breakpad::StackFrameX86::ContextValidity
CONTEXT_VALID_EBP	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_EBP  = 1 << 2,$/;"	e	enum:google_breakpad::StackFrameX86::ContextValidity
CONTEXT_VALID_EBX	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_EBX  = 1 << 4,$/;"	e	enum:google_breakpad::StackFrameX86::ContextValidity
CONTEXT_VALID_ECX	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_ECX  = 1 << 5,$/;"	e	enum:google_breakpad::StackFrameX86::ContextValidity
CONTEXT_VALID_EDI	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_EDI  = 1 << 8,$/;"	e	enum:google_breakpad::StackFrameX86::ContextValidity
CONTEXT_VALID_EDX	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_EDX  = 1 << 6,$/;"	e	enum:google_breakpad::StackFrameX86::ContextValidity
CONTEXT_VALID_EIP	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_EIP  = 1 << 0,$/;"	e	enum:google_breakpad::StackFrameX86::ContextValidity
CONTEXT_VALID_ESI	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_ESI  = 1 << 7,$/;"	e	enum:google_breakpad::StackFrameX86::ContextValidity
CONTEXT_VALID_ESP	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_ESP  = 1 << 1,$/;"	e	enum:google_breakpad::StackFrameX86::ContextValidity
CONTEXT_VALID_FP	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_FP   = 1 << 2,$/;"	e	enum:google_breakpad::StackFrameSPARC::ContextValidity
CONTEXT_VALID_FP	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_FP   = CONTEXT_VALID_R11,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_GPR1	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_GPR1 = 1 << 1,$/;"	e	enum:google_breakpad::StackFramePPC::ContextValidity
CONTEXT_VALID_LR	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_LR   = CONTEXT_VALID_R14,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_NONE	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_NONE  = 0,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_NONE	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_NONE = 0,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_NONE	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_NONE = 0,$/;"	e	enum:google_breakpad::StackFramePPC::ContextValidity
CONTEXT_VALID_NONE	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_NONE = 0,$/;"	e	enum:google_breakpad::StackFrameSPARC::ContextValidity
CONTEXT_VALID_NONE	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_NONE = 0,$/;"	e	enum:google_breakpad::StackFrameX86::ContextValidity
CONTEXT_VALID_PC	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_PC   = 1 << 0,$/;"	e	enum:google_breakpad::StackFrameSPARC::ContextValidity
CONTEXT_VALID_PC	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_PC   = CONTEXT_VALID_R15$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R0	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R0   = 1 << 0,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R1	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R1   = 1 << 1,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R10	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R10   = 1 << 10,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_R10	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R10  = 1 << 10,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R11	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R11   = 1 << 11,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_R11	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R11  = 1 << 11,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R12	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R12   = 1 << 12,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_R12	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R12  = 1 << 12,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R13	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R13   = 1 << 13,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_R13	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R13  = 1 << 13,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R14	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R14   = 1 << 14,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_R14	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R14  = 1 << 14,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R15	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R15   = 1 << 15,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_R15	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R15  = 1 << 15,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R2	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R2   = 1 << 2,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R3	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R3   = 1 << 3,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R4	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R4   = 1 << 4,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R5	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R5   = 1 << 5,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R6	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R6   = 1 << 6,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R7	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R7   = 1 << 7,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R8	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R8    = 1 << 8,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_R8	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R8   = 1 << 8,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_R9	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R9    = 1 << 9,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_R9	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_R9   = 1 << 9,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_RAX	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_RAX   = 1 << 0,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_RBP	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_RBP   = 1 << 6,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_RBX	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_RBX   = 1 << 3,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_RCX	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_RCX   = 1 << 2,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_RDI	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_RDI   = 1 << 5,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_RDX	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_RDX   = 1 << 1,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_RIP	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_RIP   = 1 << 16,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_RSI	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_RSI   = 1 << 4,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_RSP	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_RSP   = 1 << 7,$/;"	e	enum:google_breakpad::StackFrameAMD64::ContextValidity
CONTEXT_VALID_SP	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_SP   = 1 << 1,$/;"	e	enum:google_breakpad::StackFrameSPARC::ContextValidity
CONTEXT_VALID_SP	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_SP   = CONTEXT_VALID_R13,$/;"	e	enum:google_breakpad::StackFrameARM::ContextValidity
CONTEXT_VALID_SRR0	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^    CONTEXT_VALID_SRR0 = 1 << 0,$/;"	e	enum:google_breakpad::StackFramePPC::ContextValidity
COUPLESCENARIO_H	src/scenario/couple-scenario.h	2;"	d
CO_DEAD	src/lua/lbaselib.c	485;"	d	file:
CO_NOR	src/lua/lbaselib.c	484;"	d	file:
CO_RUN	src/lua/lbaselib.c	482;"	d	file:
CO_SUS	src/lua/lbaselib.c	483;"	d	file:
CPPTL_AUTOLINK_DLL	src/jsoncpp/include/json/autolink.h	17;"	d
CPPTL_AUTOLINK_DLL	src/jsoncpp/include/json/autolink.h	19;"	d
CPPTL_AUTOLINK_NAME	src/jsoncpp/include/json/autolink.h	16;"	d
CPPTL_JSON_ASSERTIONS_H_INCLUDED	src/jsoncpp/include/json/assertions.h	7;"	d
CPPTL_JSON_FEATURES_H_INCLUDED	src/jsoncpp/include/json/features.h	7;"	d
CPPTL_JSON_H_INCLUDED	src/jsoncpp/include/json/value.h	7;"	d
CPPTL_JSON_READER_H_INCLUDED	src/jsoncpp/include/json/reader.h	7;"	d
CREATE_ABC	src/lua/lopcodes.h	104;"	d
CREATE_ABx	src/lua/lopcodes.h	109;"	d
CRMMap	src/breakpad/processor/static_contained_range_map_unittest.cc	/^typedef google_breakpad::ContainedRangeMap<unsigned int, int> CRMMap;$/;"	t	namespace:__anon81	file:
CUSTOMASSIGNDIALOG_H	src/dialog/customassigndialog.h	2;"	d
CZString	src/jsoncpp/include/json/value.h	/^      class CZString $/;"	c	class:Json::Value
CZString	src/jsoncpp/src/json_value.cpp	/^Value::CZString::CZString( ArrayIndex index )$/;"	f	class:Json::Value::CZString
CZString	src/jsoncpp/src/json_value.cpp	/^Value::CZString::CZString( const CZString &other )$/;"	f	class:Json::Value::CZString
CZString	src/jsoncpp/src/json_value.cpp	/^Value::CZString::CZString( const char *cstr, DuplicationPolicy allocate )$/;"	f	class:Json::Value::CZString
C_space	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  C_space;$/;"	m	struct:FT_WinFNT_HeaderRec_
CacheFileID	src/breakpad/common/windows/pdb_source_line_writer.h	/^  void CacheFileID(const wstring &file, DWORD id) {$/;"	f	class:google_breakpad::PDBSourceLineWriter
CaizhaojiHujia	src/package/yitianpackage.cpp	/^    CaizhaojiHujia():TriggerSkill("caizhaoji_hujia"){$/;"	f	class:CaizhaojiHujia
CaizhaojiHujia	src/package/yitianpackage.cpp	/^class CaizhaojiHujia: public TriggerSkill{$/;"	c	file:
CallBack	src/client/client.h	/^    typedef void (Client::*CallBack)(const Json::Value &);$/;"	t	class:Client
CallBack	src/server/room.h	/^    typedef bool (Room::*CallBack)(ServerPlayer *, const QSanProtocol::QSanGeneralPacket*);$/;"	t	class:Room
CallInfo	src/lua/lstate.h	/^typedef struct CallInfo {$/;"	s
CallInfo	src/lua/lstate.h	/^} CallInfo;$/;"	t	typeref:struct:CallInfo
CallS	src/lua/lapi.c	/^struct CallS {  \/* data to `f_call' *\/$/;"	s	file:
CallStack	src/breakpad/google_breakpad/processor/call_stack.h	/^  CallStack() { Clear(); }$/;"	f	class:google_breakpad::CallStack
CallStack	src/breakpad/google_breakpad/processor/call_stack.h	/^class CallStack {$/;"	c	namespace:google_breakpad
Callback	src/client/client.h	/^    typedef void (Client::*Callback)(const QString &);$/;"	t	class:Client
Callback	src/server/room.h	/^    typedef void (Room::*Callback)(ServerPlayer *, const QString &);$/;"	t	class:Room
CapHeight	include/freetype/freetype/tttables.h	/^    FT_UShort  CapHeight;$/;"	m	struct:TT_PCLT_
Card	src/core/card.cpp	/^Card::Card(Suit suit, int number, bool target_fixed)$/;"	f	class:Card
Card	src/core/card.h	/^class Card : public QObject$/;"	c
CardAsked	src/core/structs.h	/^    CardAsked,$/;"	e	enum:TriggerEvent
CardAssignDialog	src/dialog/customassigndialog.cpp	/^CardAssignDialog::CardAssignDialog(QWidget *parent, QString card_type, QString class_name, QList<int> excluded) :$/;"	f	class:CardAssignDialog
CardAssignDialog	src/dialog/customassigndialog.h	/^class CardAssignDialog : public QDialog {$/;"	c
CardContainer	src/ui/cardcontainer.cpp	/^CardContainer::CardContainer() : _m_background("image\/system\/card-container.png")    $/;"	f	class:CardContainer
CardContainer	src/ui/cardcontainer.h	/^class CardContainer : public GenericCardContainer$/;"	c
CardDiscarded	src/core/structs.h	/^    CardDiscarded,$/;"	e	enum:TriggerEvent
CardDrawing	src/core/structs.h	/^    CardDrawing,$/;"	e	enum:TriggerEvent
CardDrawnDone	src/core/structs.h	/^    CardDrawnDone,$/;"	e	enum:TriggerEvent
CardEditor	src/dialog/cardeditor.cpp	/^CardEditor::CardEditor(QWidget *parent) :$/;"	f	class:CardEditor
CardEditor	src/dialog/cardeditor.h	/^class CardEditor : public QMainWindow$/;"	c
CardEffect	src/core/structs.h	/^    CardEffect,$/;"	e	enum:TriggerEvent
CardEffectStruct	src/core/structs.h	/^struct CardEffectStruct{$/;"	s
CardEffectStruct	src/server/roomthread.cpp	/^CardEffectStruct::CardEffectStruct()$/;"	f	class:CardEffectStruct
CardEffected	src/core/structs.h	/^    CardEffected,$/;"	e	enum:TriggerEvent
CardFinished	src/core/structs.h	/^    CardFinished,$/;"	e	enum:TriggerEvent
CardItem	src/ui/carditem.cpp	/^CardItem::CardItem(const Card *card)$/;"	f	class:CardItem
CardItem	src/ui/carditem.cpp	/^CardItem::CardItem(const QString &general_name)$/;"	f	class:CardItem
CardItem	src/ui/carditem.h	/^class CardItem : public QSanSelectableItem$/;"	c
CardMoveReason	src/core/structs.h	/^    inline CardMoveReason(){ m_reason = S_REASON_UNKNOWN; }$/;"	f	class:CardMoveReason
CardMoveReason	src/core/structs.h	/^    inline CardMoveReason(int moveReason, QString playerId)$/;"	f	class:CardMoveReason
CardMoveReason	src/core/structs.h	/^    inline CardMoveReason(int moveReason, QString playerId, QString skillName, QString eventName)$/;"	f	class:CardMoveReason
CardMoveReason	src/core/structs.h	/^    inline CardMoveReason(int moveReason, QString playerId, QString targetId, QString skillName, QString eventName)$/;"	f	class:CardMoveReason
CardMoveReason	src/core/structs.h	/^class CardMoveReason$/;"	c
CardMoveStar	src/core/structs.h	/^typedef const CardMoveStruct *CardMoveStar;$/;"	t
CardMoveStruct	src/core/structs.h	/^    inline CardMoveStruct()$/;"	f	struct:CardMoveStruct
CardMoveStruct	src/core/structs.h	/^struct CardMoveStruct{$/;"	s
CardOverview	src/dialog/cardoverview.cpp	/^CardOverview::CardOverview(QWidget *parent) :$/;"	f	class:CardOverview
CardOverview	src/dialog/cardoverview.h	/^class CardOverview : public QDialog {$/;"	c
CardPack	src/package/package.h	/^        CardPack,$/;"	e	enum:Package::Type
CardPattern	src/package/package.h	/^class CardPattern{$/;"	c
CardResponsed	src/core/structs.h	/^    CardResponsed,$/;"	e	enum:TriggerEvent
CardScene	src/dialog/cardeditor.cpp	/^CardScene::CardScene()$/;"	f	class:CardScene
CardScene	src/dialog/cardeditor.h	/^class CardScene: public QGraphicsScene{$/;"	c
CardStar	src/core/structs.h	/^typedef const Card *CardStar;$/;"	t
CardType	src/core/card.h	/^    enum CardType{$/;"	g	class:Card
CardUseStruct	src/core/structs.h	/^struct CardUseStruct{$/;"	s
CardUseStruct	src/server/roomthread.cpp	/^CardUseStruct::CardUseStruct()$/;"	f	class:CardUseStruct
CardUsed	src/core/structs.h	/^    CardUsed,$/;"	e	enum:TriggerEvent
Card_toWeapon	swig/sanguosha_wrap.cxx	/^SWIGINTERN Weapon *Card_toWeapon(Card *self){$/;"	f
Card_toWrapped	swig/sanguosha_wrap.cxx	/^SWIGINTERN WrappedCard *Card_toWrapped(Card *self){$/;"	f
CardsMoveOneTime	src/core/structs.h	/^    CardsMoveOneTime,$/;"	e	enum:TriggerEvent
CardsMoveOneTimeStar	src/core/structs.h	/^typedef const CardsMoveOneTimeStruct *CardsMoveOneTimeStar;$/;"	t
CardsMoveOneTimeStruct	src/core/structs.h	/^struct CardsMoveOneTimeStruct{$/;"	s
CardsMoveStar	src/core/structs.h	/^typedef const CardsMoveStruct *CardsMoveStar;$/;"	t
CardsMoveStruct	src/core/structs.h	/^    inline CardsMoveStruct()$/;"	f	struct:CardsMoveStruct
CardsMoveStruct	src/core/structs.h	/^    inline CardsMoveStruct(const QList<int> &ids, Player* from, Player* to, Player::Place to_place, CardMoveReason reason)$/;"	f	struct:CardsMoveStruct
CardsMoveStruct	src/core/structs.h	/^    inline CardsMoveStruct(const QList<int> &ids, Player* to, Player::Place to_place, CardMoveReason reason)$/;"	f	struct:CardsMoveStruct
CardsMoveStruct	src/core/structs.h	/^struct CardsMoveStruct{$/;"	s
Channel	include/fmod/fmod.hpp	/^    class Channel$/;"	c	namespace:FMOD
ChannelGroup	include/fmod/fmod.hpp	/^    class ChannelGroup$/;"	c	namespace:FMOD
Char	src/jsoncpp/include/json/reader.h	/^      typedef char Char;$/;"	t	class:Json::Reader
CharacterComplement	include/freetype/freetype/tttables.h	/^    FT_Char    CharacterComplement[8];$/;"	m	struct:TT_PCLT_
ChatWidget	src/ui/chatwidget.cpp	/^ChatWidget::ChatWidget():base_pixmap("image\/system\/chatface\/base.png")$/;"	f	class:ChatWidget
ChatWidget	src/ui/chatwidget.h	/^class ChatWidget : public QGraphicsObject$/;"	c
CheatCategory	src/core/protocol.h	/^    enum CheatCategory$/;"	g	namespace:QSanProtocol
CheatCode	src/core/protocol.h	/^    enum CheatCode$/;"	g	namespace:QSanProtocol
CheckAgainstSystemInfo	src/breakpad/processor/minidump.cc	/^bool MinidumpContext::CheckAgainstSystemInfo(u_int32_t context_cpu_type) {$/;"	f	class:google_breakpad::MinidumpContext
CheckExploitability	src/breakpad/processor/exploitability.cc	/^ExploitabilityRating Exploitability::CheckExploitability() {$/;"	f	class:google_breakpad::Exploitability
CheckParameters	src/breakpad/common/windows/http_upload.cc	/^bool HTTPUpload::CheckParameters(const map<wstring, wstring> &parameters) {$/;"	f	class:google_breakpad::HTTPUpload
CheckPlatformExploitability	src/breakpad/processor/exploitability_win.cc	/^ExploitabilityRating ExploitabilityWin::CheckPlatformExploitability() {$/;"	f	class:google_breakpad::ExploitabilityWin
CheckSum	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong  CheckSum;   \/*    table checksum *\/$/;"	m	struct:TT_TableRec_
CheckSum_Adjust	include/freetype/freetype/tttables.h	/^    FT_Long    CheckSum_Adjust;$/;"	m	struct:TT_Header_
CheckWalk	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  void CheckWalk() {$/;"	f	struct:CFIFixture
CheckWalk	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  void CheckWalk() {$/;"	f	struct:CFIFixture
CheckWalk	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  void CheckWalk() {$/;"	f	struct:CFIFixture
Chengxiang	src/package/yitianpackage.cpp	/^    Chengxiang():MasochismSkill("chengxiang"){$/;"	f	class:Chengxiang
Chengxiang	src/package/yitianpackage.cpp	/^class Chengxiang: public MasochismSkill{$/;"	c	file:
ChengxiangCard	src/package/yitianpackage.cpp	/^ChengxiangCard::ChengxiangCard()$/;"	f	class:ChengxiangCard
ChengxiangCard	src/package/yitianpackage.h	/^class ChengxiangCard: public SkillCard{$/;"	c
ChengxiangViewAsSkill	src/package/yitianpackage.cpp	/^    ChengxiangViewAsSkill():ViewAsSkill("chengxiang"){$/;"	f	class:ChengxiangViewAsSkill
ChengxiangViewAsSkill	src/package/yitianpackage.cpp	/^class ChengxiangViewAsSkill: public ViewAsSkill{$/;"	c	file:
ChildValues	src/jsoncpp/include/json/writer.h	/^      typedef std::vector<std::string> ChildValues;$/;"	t	class:Json::StyledStreamWriter
ChildValues	src/jsoncpp/include/json/writer.h	/^      typedef std::vector<std::string> ChildValues;$/;"	t	class:Json::StyledWriter
ChoiceMade	src/core/structs.h	/^    ChoiceMade,$/;"	e	enum:TriggerEvent
ChongZhen	src/package/bgm-package.cpp	/^    ChongZhen(): TriggerSkill("chongzhen"){$/;"	f	class:ChongZhen
ChongZhen	src/package/bgm-package.cpp	/^class ChongZhen: public TriggerSkill{$/;"	c	file:
ChooseGeneralDialog	src/dialog/choosegeneraldialog.cpp	/^ChooseGeneralDialog::ChooseGeneralDialog(const QStringList &general_names, QWidget *parent)$/;"	f	class:ChooseGeneralDialog
ChooseGeneralDialog	src/dialog/choosegeneraldialog.h	/^class ChooseGeneralDialog : public QDialog$/;"	c
ChoosePlayerCard	src/client/aux-skills.cpp	/^    ChoosePlayerCard(){$/;"	f	class:ChoosePlayerCard
ChoosePlayerCard	src/client/aux-skills.cpp	/^class ChoosePlayerCard: public DummyCard{$/;"	c	file:
ChoosePlayerSkill	src/client/aux-skills.cpp	/^ChoosePlayerSkill::ChoosePlayerSkill()$/;"	f	class:ChoosePlayerSkill
ChoosePlayerSkill	src/client/aux-skills.h	/^class ChoosePlayerSkill: public ZeroCardViewAsSkill{$/;"	c
Chouliang	src/package/wisdompackage.cpp	/^    Chouliang():PhaseChangeSkill("chouliang"){$/;"	f	class:Chouliang
Chouliang	src/package/wisdompackage.cpp	/^class Chouliang: public PhaseChangeSkill{$/;"	c	file:
Chunlao	src/package/yjcm2012-package.cpp	/^    Chunlao():TriggerSkill("chunlao"){$/;"	f	class:Chunlao
Chunlao	src/package/yjcm2012-package.cpp	/^class Chunlao: public TriggerSkill{$/;"	c	file:
ChunlaoCard	src/package/yjcm2012-package.cpp	/^ChunlaoCard::ChunlaoCard(){$/;"	f	class:ChunlaoCard
ChunlaoCard	src/package/yjcm2012-package.h	/^class ChunlaoCard: public SkillCard{$/;"	c
ChunlaoViewAsSkill	src/package/yjcm2012-package.cpp	/^    ChunlaoViewAsSkill():ViewAsSkill("chunlao"){$/;"	f	class:ChunlaoViewAsSkill
ChunlaoViewAsSkill	src/package/yjcm2012-package.cpp	/^class ChunlaoViewAsSkill:public ViewAsSkill{$/;"	c	file:
Chushi	src/package/standard-generals.cpp	/^    Chushi():TriggerSkill("chushi"){$/;"	f	class:Chushi
Chushi	src/package/standard-generals.cpp	/^class Chushi: public TriggerSkill{$/;"	c	file:
CiteLocationIn	src/breakpad/processor/synth_minidump.cc	/^void Section::CiteLocationIn(test_assembler::Section *section) const {$/;"	f	class:google_breakpad::SynthMinidump::Section
CiteMemoryIn	src/breakpad/processor/synth_minidump.cc	/^void Memory::CiteMemoryIn(test_assembler::Section *section) const {$/;"	f	class:google_breakpad::SynthMinidump::Memory
CiteStreamIn	src/breakpad/processor/synth_minidump.cc	/^void Stream::CiteStreamIn(test_assembler::Section *section) const {$/;"	f	class:google_breakpad::SynthMinidump::Stream
CiteStringIn	src/breakpad/processor/synth_minidump.cc	/^void String::CiteStringIn(test_assembler::Section *section) const {$/;"	f	class:google_breakpad::SynthMinidump::String
CleanupClient	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^DWORD WINAPI CrashGenerationServer::CleanupClient(void* context) {$/;"	f	class:google_breakpad::CrashGenerationServer
Clear	src/breakpad/google_breakpad/processor/system_info.h	/^  void Clear() {$/;"	f	struct:google_breakpad::SystemInfo
Clear	src/breakpad/processor/address_map-inl.h	/^void AddressMap<AddressType, EntryType>::Clear() {$/;"	f	class:google_breakpad::AddressMap
Clear	src/breakpad/processor/call_stack.cc	/^void CallStack::Clear() {$/;"	f	class:google_breakpad::CallStack
Clear	src/breakpad/processor/contained_range_map-inl.h	/^void ContainedRangeMap<AddressType, EntryType>::Clear() {$/;"	f	class:google_breakpad::ContainedRangeMap
Clear	src/breakpad/processor/process_state.cc	/^void ProcessState::Clear() {$/;"	f	class:google_breakpad::ProcessState
Clear	src/breakpad/processor/range_map-inl.h	/^void RangeMap<AddressType, EntryType>::Clear() {$/;"	f	class:google_breakpad::RangeMap
Clear	src/breakpad/processor/windows_frame_info.h	/^  void Clear() {$/;"	f	struct:google_breakpad::WindowsFrameInfo
ClearSourceLineInfo	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^static void ClearSourceLineInfo(StackFrame *frame) {$/;"	f	namespace:__anon71
ClearSourceLineInfo	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^static void ClearSourceLineInfo(StackFrame *frame) {$/;"	f	namespace:__anon73
Client	src/client/client.cpp	/^Client::Client(QObject *parent, const QString &filename)$/;"	f	class:Client
Client	src/client/client.h	/^class Client : public QObject$/;"	c
ClientInfo	src/breakpad/client/windows/crash_generation/client_info.cc	/^ClientInfo::ClientInfo(CrashGenerationServer* crash_server,$/;"	f	class:google_breakpad::ClientInfo
ClientInfo	src/breakpad/client/windows/crash_generation/client_info.h	/^class ClientInfo {$/;"	c	namespace:google_breakpad
ClientLogBox	src/ui/clientlogbox.cpp	/^ClientLogBox::ClientLogBox(QWidget *parent) :$/;"	f	class:ClientLogBox
ClientLogBox	src/ui/clientlogbox.h	/^class ClientLogBox : public QTextEdit{$/;"	c
ClientPlayer	src/client/clientplayer.cpp	/^ClientPlayer::ClientPlayer(Client *client)$/;"	f	class:ClientPlayer
ClientPlayer	src/client/clientplayer.h	/^class ClientPlayer : public Player$/;"	c
ClientSocket	src/util/socket.h	/^class ClientSocket: public QObject{$/;"	c
Clone	src/core/card.cpp	/^Card *Card::Clone(const Card *card){$/;"	f	class:Card
CloneAI	lua/ai/smart-ai.lua	/^function CloneAI(player)$/;"	f
Close	src/breakpad/common/windows/pdb_source_line_writer.cc	/^void PDBSourceLineWriter::Close() {$/;"	f	class:google_breakpad::PDBSourceLineWriter
CloseButton	src/ui/cardcontainer.cpp	/^CloseButton::CloseButton()$/;"	f	class:CloseButton
CloseButton	src/ui/cardcontainer.h	/^class CloseButton: public QSanSelectableItem{$/;"	c
Closure	src/lua/lobject.h	/^typedef union Closure {$/;"	u
Closure	src/lua/lobject.h	/^} Closure;$/;"	t	typeref:union:Closure
ClosureHeader	src/lua/lobject.h	/^  ClosureHeader;$/;"	m	struct:CClosure
ClosureHeader	src/lua/lobject.h	/^  ClosureHeader;$/;"	m	struct:LClosure
ClosureHeader	src/lua/lobject.h	291;"	d
Club	src/core/card.h	/^    enum Suit {Spade, Club, Heart, Diamond, NoSuit};$/;"	e	enum:Card::Suit
CodeModule	src/breakpad/google_breakpad/processor/code_module.h	/^class CodeModule {$/;"	c	namespace:google_breakpad
CodeModule	src/breakpad/processor/stackwalker_unittest_utils.h	/^  typedef google_breakpad::CodeModule CodeModule;$/;"	t	class:MockCodeModules
CodeModule	src/breakpad/processor/stackwalker_unittest_utils.h	/^  typedef google_breakpad::CodeModule CodeModule;$/;"	t	class:MockSymbolSupplier
CodeModules	src/breakpad/google_breakpad/processor/code_modules.h	/^class CodeModules {$/;"	c	namespace:google_breakpad
CodeModules	src/breakpad/processor/stackwalker_unittest_utils.h	/^  typedef google_breakpad::CodeModules CodeModules;$/;"	t	class:MockCodeModules
Collateral	src/package/standard-cards.cpp	/^Collateral::Collateral(Card::Suit suit, int number)$/;"	f	class:Collateral
Collateral	src/package/standard.h	/^class Collateral:public SingleTargetTrick{$/;"	c
CollectHandleData	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^bool HandleTraceData::CollectHandleData($/;"	f	class:__anon67::HandleTraceData
Color	src/core/card.h	/^    enum Color{Red, Black, Colorless};$/;"	g	class:Card
Colorless	src/core/card.h	/^    enum Color{Red, Black, Colorless};$/;"	e	enum:Card::Color
CommandType	src/core/protocol.h	/^    enum CommandType$/;"	g	namespace:QSanProtocol
CommentInfo	src/jsoncpp/include/json/value.h	/^      struct CommentInfo$/;"	s	class:Json::Value
CommentInfo	src/jsoncpp/src/json_value.cpp	/^Value::CommentInfo::CommentInfo()$/;"	f	class:Json::Value::CommentInfo
CommentPlacement	src/jsoncpp/include/json/value.h	/^   enum CommentPlacement$/;"	g	namespace:Json
CommonHeader	src/lua/lobject.h	/^    CommonHeader;$/;"	m	struct:TString::__anon91
CommonHeader	src/lua/lobject.h	/^    CommonHeader;$/;"	m	struct:Udata::__anon92
CommonHeader	src/lua/lobject.h	/^  CommonHeader;$/;"	m	struct:GCheader
CommonHeader	src/lua/lobject.h	/^  CommonHeader;$/;"	m	struct:Proto
CommonHeader	src/lua/lobject.h	/^  CommonHeader;$/;"	m	struct:Table
CommonHeader	src/lua/lobject.h	/^  CommonHeader;$/;"	m	struct:UpVal
CommonHeader	src/lua/lobject.h	43;"	d
CommonHeader	src/lua/lstate.h	/^  CommonHeader;$/;"	m	struct:lua_State
CommonLayout	src/ui/SkinBank.h	/^    struct CommonLayout$/;"	s	class:QSanRoomSkin
Compare	src/breakpad/processor/module_comparer.cc	/^bool ModuleComparer::Compare(const string &symbol_data) {$/;"	f	class:google_breakpad::ModuleComparer
CompareByActionOrder	src/server/serverplayer.cpp	/^bool ServerPlayer::CompareByActionOrder(ServerPlayer *a, ServerPlayer *b){$/;"	f	class:ServerPlayer
CompareByColor	src/core/card.cpp	/^bool Card::CompareByColor(const Card *a, const Card *b){$/;"	f	class:Card
CompareByMaxHp	src/server/generalselector.cpp	/^static bool CompareByMaxHp(const QString &a, const QString &b){$/;"	f	file:
CompareByNumber	src/server/ai.cpp	/^static bool CompareByNumber(const Card *c1, const Card *c2){$/;"	f	file:
CompareByNumber	src/ui/GenericCardContainerUI.cpp	/^static bool CompareByNumber(const Card *card1, const Card *card2){$/;"	f	file:
CompareByPlayerActionOrder	src/server/room.cpp	/^static bool CompareByPlayerActionOrder(CardsMoveOneTimeStruct move1,$/;"	f	file:
CompareByPriority	src/server/roomthread.cpp	/^static bool CompareByPriority(const TriggerSkill *a, const TriggerSkill *b){$/;"	f	file:
CompareByRole	src/server/room.cpp	/^static bool CompareByRole(ServerPlayer *player1, ServerPlayer *player2){$/;"	f	file:
CompareBySuit	src/package/god.cpp	/^static bool CompareBySuit(int card1, int card2){$/;"	f	file:
CompareBySuitNumber	src/core/card.cpp	/^bool Card::CompareBySuitNumber(const Card *a, const Card *b){$/;"	f	class:Card
CompareByType	src/core/card.cpp	/^bool Card::CompareByType(const Card *a, const Card *b){$/;"	f	class:Card
CompareByType	src/ui/dashboard.cpp	/^static bool CompareByType(const CardItem *a, const CardItem *b) $/;"	f	file:
CompareCRM	src/breakpad/processor/module_comparer.cc	/^bool ModuleComparer::CompareCRM($/;"	f	class:google_breakpad::ModuleComparer
CompareFunction	src/breakpad/processor/module_comparer.cc	/^bool ModuleComparer::CompareFunction(const BasicFunc *basic_func,$/;"	f	class:google_breakpad::ModuleComparer
CompareFunction	src/server/generalselector.cpp	/^static bool CompareFunction(const QString &first, const QString &second){$/;"	f	file:
CompareLine	src/breakpad/processor/module_comparer.cc	/^bool ModuleComparer::CompareLine(const BasicLine *basic_line,$/;"	f	class:google_breakpad::ModuleComparer
CompareLookupResult	src/breakpad/processor/static_map_unittest.cc	/^  void CompareLookupResult(int test_case) {$/;"	f	class:TestValidMap
CompareModule	src/breakpad/processor/module_comparer.cc	/^bool ModuleComparer::CompareModule(const BasicModule *basic_module,$/;"	f	class:google_breakpad::ModuleComparer
ComparePubSymbol	src/breakpad/processor/module_comparer.cc	/^bool ModuleComparer::ComparePubSymbol(const BasicPubSymbol* basic_ps,$/;"	f	class:google_breakpad::ModuleComparer
CompareRetrieveResult	src/breakpad/processor/static_address_map_unittest.cc	/^  void CompareRetrieveResult(int testcase, int target) {$/;"	f	class:TestStaticAddressMap
CompareString	src/breakpad/google_breakpad/processor/source_line_resolver_base.h	/^  struct CompareString {$/;"	s	class:google_breakpad::SourceLineResolverBase
CompareWFI	src/breakpad/processor/module_comparer.cc	/^bool ModuleComparer::CompareWFI(const WindowsFrameInfo& wfi1,$/;"	f	class:google_breakpad::ModuleComparer
Compulsory	src/core/skill.h	/^        Compulsory,$/;"	e	enum:Skill::Frequency
Config	src/core/settings.cpp	/^Settings Config;$/;"	v
ConfigDialog	src/dialog/configdialog.cpp	/^ConfigDialog::ConfigDialog(QWidget *parent) :$/;"	f	class:ConfigDialog
ConfigDialog	src/dialog/configdialog.h	/^class ConfigDialog : public QDialog {$/;"	c
ConfirmDamage	src/core/structs.h	/^    ConfirmDamage,    \/\/ confirm the damage's count and damage's nature$/;"	e	enum:TriggerEvent
Conghui	src/package/yitianpackage.cpp	/^    Conghui():TriggerSkill("conghui"){$/;"	f	class:Conghui
Conghui	src/package/yitianpackage.cpp	/^class Conghui: public TriggerSkill{$/;"	c	file:
ConnectToPipe	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^HANDLE CrashGenerationClient::ConnectToPipe(const wchar_t* pipe_name,$/;"	f	class:google_breakpad::CrashGenerationClient
ConnectToServer	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^HANDLE CrashGenerationClient::ConnectToServer() {$/;"	f	class:google_breakpad::CrashGenerationClient
ConnectionDialog	src/dialog/connectiondialog.cpp	/^ConnectionDialog::ConnectionDialog(QWidget *parent) :$/;"	f	class:ConnectionDialog
ConnectionDialog	src/dialog/connectiondialog.h	/^class ConnectionDialog : public QDialog {$/;"	c
ConnectionPoint	include/fmod/fmod.h	/^    FMOD_DSP    *ConnectionPoint;      \/* [r\/w] See remarks.         DSP network location to connect reverb for this channel. (SUPPORTED:SFX).*\/$/;"	m	struct:FMOD_REVERB_CHANNELPROPERTIES
ConsControl	src/lua/lparser.c	/^struct ConsControl {$/;"	s	file:
ContainedRangeMap	src/breakpad/processor/contained_range_map.h	/^  ContainedRangeMap() : base_(), entry_(), map_(NULL) {}$/;"	f	class:google_breakpad::ContainedRangeMap
ContainedRangeMap	src/breakpad/processor/contained_range_map.h	/^  ContainedRangeMap(const AddressType &base, const EntryType &entry,$/;"	f	class:google_breakpad::ContainedRangeMap
ContainedRangeMap	src/breakpad/processor/contained_range_map.h	/^class ContainedRangeMap {$/;"	c	namespace:google_breakpad
ContainedRangeMapSerializer	src/breakpad/processor/map_serializers.h	/^class ContainedRangeMapSerializer {$/;"	c	namespace:google_breakpad
ContestDB	src/server/contestdb.cpp	/^ContestDB::ContestDB(QObject *parent) :$/;"	f	class:ContestDB
ContestDB	src/server/contestdb.h	/^class ContestDB : public QObject$/;"	c
ContestMode	src/core/settings.h	/^    bool ContestMode;$/;"	m	class:Settings
Context	src/breakpad/processor/synth_minidump.cc	/^Context::Context(const Dump &dump, const MDRawContextARM &context)$/;"	f	class:google_breakpad::SynthMinidump::Context
Context	src/breakpad/processor/synth_minidump.cc	/^Context::Context(const Dump &dump, const MDRawContextX86 &context)$/;"	f	class:google_breakpad::SynthMinidump::Context
Context	src/breakpad/processor/synth_minidump.h	/^class Context: public Section {$/;"	c	namespace:google_breakpad::SynthMinidump
ContextValidity	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  enum ContextValidity {$/;"	g	struct:google_breakpad::StackFrameAMD64
ContextValidity	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  enum ContextValidity {$/;"	g	struct:google_breakpad::StackFrameARM
ContextValidity	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  enum ContextValidity {$/;"	g	struct:google_breakpad::StackFramePPC
ContextValidity	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  enum ContextValidity {$/;"	g	struct:google_breakpad::StackFrameSPARC
ContextValidity	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  enum ContextValidity {$/;"	g	struct:google_breakpad::StackFrameX86
ConvertAllModules	src/breakpad/processor/module_serializer.cc	/^void ModuleSerializer::ConvertAllModules($/;"	f	class:google_breakpad::ModuleSerializer
ConvertFromBase64	src/server/server.cpp	/^static inline QString ConvertFromBase64(const QString &base64){$/;"	f	file:
ConvertOneModule	src/breakpad/processor/module_serializer.cc	/^bool ModuleSerializer::ConvertOneModule($/;"	f	class:google_breakpad::ModuleSerializer
Copy	src/breakpad/processor/basic_code_module.h	/^  virtual const CodeModule* Copy() const { return new BasicCodeModule(this); }$/;"	f	class:google_breakpad::BasicCodeModule
Copy	src/breakpad/processor/basic_code_modules.cc	/^const CodeModules* BasicCodeModules::Copy() const {$/;"	f	class:google_breakpad::BasicCodeModules
Copy	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  virtual const CodeModule* Copy() const {$/;"	f	class:__anon71::TestCodeModule
Copy	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  virtual const CodeModule* Copy() const {$/;"	f	class:__anon73::TestCodeModule
Copy	src/breakpad/processor/minidump.cc	/^const CodeModule* MinidumpModule::Copy() const {$/;"	f	class:google_breakpad::MinidumpModule
Copy	src/breakpad/processor/minidump.cc	/^const CodeModules* MinidumpModuleList::Copy() const {$/;"	f	class:google_breakpad::MinidumpModuleList
Copy	src/breakpad/processor/stackwalker_unittest_utils.h	/^  const CodeModules *Copy() const { abort(); } \/\/ Tests won't use this.$/;"	f	class:MockCodeModules
Copy	src/breakpad/processor/stackwalker_unittest_utils.h	/^  const google_breakpad::CodeModule *Copy() const {$/;"	f	class:MockCodeModule
CopyFrom	src/breakpad/processor/fast_source_line_resolver_types.h	/^  void CopyFrom(const Function *func_ptr) {$/;"	f	struct:google_breakpad::FastSourceLineResolver::Function
CopyFrom	src/breakpad/processor/fast_source_line_resolver_types.h	/^  void CopyFrom(const Line *line_ptr) {$/;"	f	struct:google_breakpad::FastSourceLineResolver::Line
CopyFrom	src/breakpad/processor/fast_source_line_resolver_types.h	/^  void CopyFrom(const PublicSymbol *public_symbol_ptr) {$/;"	f	struct:google_breakpad::FastSourceLineResolver::PublicSymbol
CopyFrom	src/breakpad/processor/fast_source_line_resolver_types.h	/^  void CopyFrom(const char *raw) {$/;"	f	struct:google_breakpad::FastSourceLineResolver::Function
CopyFrom	src/breakpad/processor/fast_source_line_resolver_types.h	/^  void CopyFrom(const char *raw) {$/;"	f	struct:google_breakpad::FastSourceLineResolver::Line
CopyFrom	src/breakpad/processor/fast_source_line_resolver_types.h	/^  void CopyFrom(const char *raw) {$/;"	f	struct:google_breakpad::FastSourceLineResolver::PublicSymbol
CopyFrom	src/breakpad/processor/windows_frame_info.h	/^  void CopyFrom(const WindowsFrameInfo &that) {$/;"	f	struct:google_breakpad::WindowsFrameInfo
CopySymbolDataAndOwnTheCopy	src/breakpad/processor/stackwalker_unittest_utils.h	/^  char* CopySymbolDataAndOwnTheCopy(const std::string &info) {$/;"	f	class:MockSymbolSupplier
CopyWFI	src/breakpad/processor/fast_source_line_resolver.cc	/^WindowsFrameInfo FastSourceLineResolver::CopyWFI(const char *raw) {$/;"	f	class:google_breakpad::FastSourceLineResolver
CountCallerFrames	src/breakpad/processor/stackwalker_selftest.cc	/^static unsigned int CountCallerFrames() {$/;"	f	file:
CountDownSeconds	src/core/settings.h	/^    int CountDownSeconds;$/;"	m	class:Settings
Countdown	src/core/protocol.h	/^        inline Countdown(CountdownType type = S_COUNTDOWN_NO_LIMIT, time_t current = 0, time_t max = 0):$/;"	f	class:QSanProtocol::Countdown
Countdown	src/core/protocol.h	/^    class Countdown$/;"	c	namespace:QSanProtocol
CountdownType	src/core/protocol.h	/^        enum CountdownType$/;"	g	class:QSanProtocol::Countdown
CountedObject	src/breakpad/processor/address_map_unittest.cc	/^  explicit CountedObject(int id) : id_(id) { ++count_; }$/;"	f	class:__anon76::CountedObject
CountedObject	src/breakpad/processor/address_map_unittest.cc	/^class CountedObject {$/;"	c	namespace:__anon76	file:
CountedObject	src/breakpad/processor/range_map_unittest.cc	/^  explicit CountedObject(int id) : id_(id) { ++count_; }$/;"	f	class:__anon84::CountedObject
CountedObject	src/breakpad/processor/range_map_unittest.cc	/^class CountedObject {$/;"	c	namespace:__anon84	file:
Couple	src/scenario/couple-scenario.cpp	/^ADD_SCENARIO(Couple);$/;"	v
CoupleScenario	src/scenario/couple-scenario.cpp	/^CoupleScenario::CoupleScenario()$/;"	f	class:CoupleScenario
CoupleScenario	src/scenario/couple-scenario.h	/^class CoupleScenario : public Scenario$/;"	c
CoupleScenarioRule	src/scenario/couple-scenario.cpp	/^    CoupleScenarioRule(Scenario *scenario)$/;"	f	class:CoupleScenarioRule
CoupleScenarioRule	src/scenario/couple-scenario.cpp	/^class CoupleScenarioRule: public ScenarioRule{$/;"	c	file:
CrashFunction	src/breakpad/processor/testdata/linux_test_app.cc	/^static void CrashFunction() {$/;"	f	namespace:__anon79
CrashFunction	src/breakpad/processor/testdata/test_app.cc	/^static void CrashFunction() {$/;"	f	namespace:__anon80
CrashGenerationClient	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^CrashGenerationClient::CrashGenerationClient($/;"	f	class:google_breakpad::CrashGenerationClient
CrashGenerationClient	src/breakpad/client/windows/crash_generation/crash_generation_client.h	/^class CrashGenerationClient {$/;"	c	namespace:google_breakpad
CrashGenerationServer	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^CrashGenerationServer::CrashGenerationServer($/;"	f	class:google_breakpad::CrashGenerationServer
CrashGenerationServer	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^class CrashGenerationServer {$/;"	c	namespace:google_breakpad
CreateClientHandles	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^bool CrashGenerationServer::CreateClientHandles(const ClientInfo& client_info,$/;"	f	class:google_breakpad::CrashGenerationServer
CreateLuaState	src/core/util.cpp	/^lua_State *CreateLuaState(){$/;"	f
CreateModule	src/breakpad/processor/module_factory.h	/^  virtual BasicSourceLineResolver::Module* CreateModule($/;"	f	class:google_breakpad::BasicModuleFactory
CreateModule	src/breakpad/processor/module_factory.h	/^  virtual FastSourceLineResolver::Module* CreateModule($/;"	f	class:google_breakpad::FastModuleFactory
Created	include/freetype/freetype/tttables.h	/^    FT_Long    Created [2];$/;"	m	struct:TT_Header_
Crossbow	src/package/standard-cards.cpp	/^Crossbow::Crossbow(Suit suit, int number)$/;"	f	class:Crossbow
Crossbow	src/package/standard-equips.h	/^class Crossbow:public Weapon{$/;"	c
CustomAssignDialog	src/dialog/customassigndialog.cpp	/^CustomAssignDialog::CustomAssignDialog(QWidget *parent)$/;"	f	class:CustomAssignDialog
CustomAssignDialog	src/dialog/customassigndialog.h	/^class CustomAssignDialog: public QDialog{$/;"	c
CustomClientInfo	src/breakpad/client/windows/common/ipc_protocol.h	/^struct CustomClientInfo {$/;"	s	namespace:google_breakpad
CustomInfoEntry	src/breakpad/client/windows/common/ipc_protocol.h	/^  CustomInfoEntry() {$/;"	f	struct:google_breakpad::CustomInfoEntry
CustomInfoEntry	src/breakpad/client/windows/common/ipc_protocol.h	/^  CustomInfoEntry(const wchar_t* name_arg, const wchar_t* value_arg) {$/;"	f	struct:google_breakpad::CustomInfoEntry
CustomInfoEntry	src/breakpad/client/windows/common/ipc_protocol.h	/^struct CustomInfoEntry {$/;"	s	namespace:google_breakpad
CustomInstance	src/dialog/customassigndialog.cpp	/^CustomAssignDialog *CustomInstance = NULL;$/;"	v
CustomScenario	src/scenario/miniscenarios.h	/^    CustomScenario()$/;"	f	class:CustomScenario
CustomScenario	src/scenario/miniscenarios.h	/^class CustomScenario : public MiniScene$/;"	c
DASHBOARD_H	src/ui/dashboard.h	2;"	d
DETECTOR_H	src/util/detector.h	2;"	d
DISTANCEVIEWDIALOG_H	src/dialog/distanceviewdialog.h	2;"	d
DISX86_BAD_ARGUMENT_PASSED	src/breakpad/processor/disassembler_x86.h	/^  DISX86_BAD_ARGUMENT_PASSED =  0x2,$/;"	e	enum:google_breakpad::__anon78
DISX86_BAD_BLOCK_READ	src/breakpad/processor/disassembler_x86.h	/^  DISX86_BAD_BLOCK_READ =       0x20,$/;"	e	enum:google_breakpad::__anon78
DISX86_BAD_BLOCK_WRITE	src/breakpad/processor/disassembler_x86.h	/^  DISX86_BAD_BLOCK_WRITE =      0x8,$/;"	e	enum:google_breakpad::__anon78
DISX86_BAD_BRANCH_TARGET	src/breakpad/processor/disassembler_x86.h	/^  DISX86_BAD_BRANCH_TARGET =    0x1,$/;"	e	enum:google_breakpad::__anon78
DISX86_BAD_COMPARISON	src/breakpad/processor/disassembler_x86.h	/^  DISX86_BAD_COMPARISON =       0x40$/;"	e	enum:google_breakpad::__anon78
DISX86_BAD_READ	src/breakpad/processor/disassembler_x86.h	/^  DISX86_BAD_READ =             0x10,$/;"	e	enum:google_breakpad::__anon78
DISX86_BAD_WRITE	src/breakpad/processor/disassembler_x86.h	/^  DISX86_BAD_WRITE =            0x4,$/;"	e	enum:google_breakpad::__anon78
DISX86_NONE	src/breakpad/processor/disassembler_x86.h	/^  DISX86_NONE =                 0x0,$/;"	e	enum:google_breakpad::__anon78
DLMSG	src/lua/loadlib.c	236;"	d	file:
DSP	include/fmod/fmod.hpp	/^    class DSP$/;"	c	namespace:FMOD
DSPConnection	include/fmod/fmod.hpp	/^    class DSPConnection$/;"	c	namespace:FMOD
Dahe	src/package/bgm-package.cpp	/^    Dahe():TriggerSkill("dahe"){$/;"	f	class:Dahe
Dahe	src/package/bgm-package.cpp	/^class Dahe: public TriggerSkill{$/;"	c	file:
DaheCard	src/package/bgm-package.cpp	/^DaheCard::DaheCard(){$/;"	f	class:DaheCard
DaheCard	src/package/bgm-package.h	/^class DaheCard: public SkillCard{$/;"	c
DahePindian	src/package/bgm-package.cpp	/^    DahePindian():TriggerSkill("#dahe"){$/;"	f	class:DahePindian
DahePindian	src/package/bgm-package.cpp	/^class DahePindian: public TriggerSkill{$/;"	c	file:
DaheViewAsSkill	src/package/bgm-package.cpp	/^    DaheViewAsSkill():OneCardViewAsSkill("dahe"){$/;"	f	class:DaheViewAsSkill
DaheViewAsSkill	src/package/bgm-package.cpp	/^class DaheViewAsSkill: public OneCardViewAsSkill{$/;"	c	file:
Daji	src/scenario/boss-mode-scenario.cpp	/^    Daji():TriggerSkill("daji"){$/;"	f	class:Daji
Daji	src/scenario/boss-mode-scenario.cpp	/^class Daji: public TriggerSkill{$/;"	c	file:
Damage	src/core/structs.h	/^    Damage,           \/\/ the moment for -- lieren..$/;"	e	enum:TriggerEvent
DamageBeforePlay	src/scenario/guandu-scenario.cpp	/^    DamageBeforePlay():PhaseChangeSkill("damagebeforeplay"){$/;"	f	class:DamageBeforePlay
DamageBeforePlay	src/scenario/guandu-scenario.cpp	/^class DamageBeforePlay: public PhaseChangeSkill{$/;"	c	file:
DamageCaused	src/core/structs.h	/^    DamageCaused,     \/\/ the moment for -- qianxi..$/;"	e	enum:TriggerEvent
DamageComplete	src/core/structs.h	/^    DamageComplete,   \/\/ the moment for trigger iron chain$/;"	e	enum:TriggerEvent
DamageDone	src/core/structs.h	/^    DamageDone,       \/\/ it's time to do the damage$/;"	e	enum:TriggerEvent
DamageForseen	src/core/structs.h	/^    DamageForseen,    \/\/ the first event in a damage -- kuangfeng dawu$/;"	e	enum:TriggerEvent
DamageInflicted	src/core/structs.h	/^    DamageInflicted,  \/\/ the moment for -- tianxiang..$/;"	e	enum:TriggerEvent
DamageMakerDialog	src/ui/roomscene.cpp	/^DamageMakerDialog::DamageMakerDialog(QWidget *parent)$/;"	f	class:DamageMakerDialog
DamageMakerDialog	src/ui/roomscene.h	/^class DamageMakerDialog: public QDialog{$/;"	c
DamageStar	src/core/structs.h	/^typedef DamageStruct *DamageStar;$/;"	t
DamageStruct	src/core/structs.h	/^struct DamageStruct{$/;"	s
DamageStruct	src/server/roomthread.cpp	/^DamageStruct::DamageStruct()$/;"	f	class:DamageStruct
Damaged	src/core/structs.h	/^    Damaged,          \/\/ the moment for -- yiji..$/;"	e	enum:TriggerEvent
Dangxian	src/package/yjcm2012-package.cpp	/^    Dangxian():TriggerSkill("dangxian"){$/;"	f	class:Dangxian
Dangxian	src/package/yjcm2012-package.cpp	/^class Dangxian: public TriggerSkill{$/;"	c	file:
Danji	src/package/sp-package.cpp	/^    Danji():PhaseChangeSkill("danji"){$/;"	f	class:Danji
Danji	src/package/sp-package.cpp	/^class Danji: public PhaseChangeSkill{$/;"	c	file:
Danlao	src/package/sp-package.cpp	/^    Danlao():TriggerSkill("danlao"){$/;"	f	class:Danlao
Danlao	src/package/sp-package.cpp	/^class Danlao: public TriggerSkill{$/;"	c	file:
Dashboard	src/ui/dashboard.cpp	/^Dashboard::Dashboard(QGraphicsItem *widget)$/;"	f	class:Dashboard
Dashboard	src/ui/dashboard.h	/^class Dashboard : public PlayerCardContainer$/;"	c
DashboardLayout	src/ui/SkinBank.h	/^    struct DashboardLayout : public PlayerCardContainerLayout$/;"	s	class:QSanRoomSkin
Data1	include/fmod/fmod.h	/^    unsigned int   Data1;       \/* Specifies the first 8 hexadecimal digits of the GUID *\/$/;"	m	struct:__anon107
Data2	include/fmod/fmod.h	/^    unsigned short Data2;       \/* Specifies the first group of 4 hexadecimal digits.   *\/$/;"	m	struct:__anon107
Data3	include/fmod/fmod.h	/^    unsigned short Data3;       \/* Specifies the second group of 4 hexadecimal digits.  *\/$/;"	m	struct:__anon107
Data4	include/fmod/fmod.h	/^    unsigned char  Data4[8];    \/* Array of 8 bytes. The first 2 bytes contain the third group of 4 hexadecimal digits. The remaining 6 bytes contain the final 12 hexadecimal digits. *\/$/;"	m	struct:__anon107
Dawu	src/package/god.cpp	/^    Dawu():TriggerSkill("dawu"){$/;"	f	class:Dawu
Dawu	src/package/god.cpp	/^class Dawu: public TriggerSkill{$/;"	c	file:
DawuCard	src/package/god.cpp	/^DawuCard::DawuCard(){$/;"	f	class:DawuCard
DawuCard	src/package/god.h	/^class DawuCard: public SkillCard{$/;"	c
DawuViewAsSkill	src/package/god.cpp	/^    DawuViewAsSkill():ZeroCardViewAsSkill("dawu"){$/;"	f	class:DawuViewAsSkill
DawuViewAsSkill	src/package/god.cpp	/^class DawuViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
Death	src/core/structs.h	/^    Death,$/;"	e	enum:TriggerEvent
DeathNoteDialog	src/ui/roomscene.cpp	/^DeathNoteDialog::DeathNoteDialog(QWidget *parent)$/;"	f	class:DeathNoteDialog
DeathNoteDialog	src/ui/roomscene.h	/^class DeathNoteDialog: public QDialog{$/;"	c
Debug_GetLevel	include/fmod/fmod.hpp	/^    inline FMOD_RESULT Debug_GetLevel(FMOD_DEBUGLEVEL *level) { return FMOD_Debug_GetLevel(level); }$/;"	f	namespace:FMOD
Debug_SetLevel	include/fmod/fmod.hpp	/^    inline FMOD_RESULT Debug_SetLevel(FMOD_DEBUGLEVEL level)  { return FMOD_Debug_SetLevel(level); }$/;"	f	namespace:FMOD
DecayHFRatio	include/fmod/fmod.h	/^    float        DecayHFRatio;      \/* [r\/w] 0.1    2.0    0.83    High-frequency to mid-frequency decay time ratio                      (SUPPORTED:SFX) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
DecayLFRatio	include/fmod/fmod.h	/^    float        DecayLFRatio;      \/* [r\/w] 0.1    2.0    1.0     Low-frequency to mid-frequency decay time ratio                       (SUPPORTED:---) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
DecayTime	include/fmod/fmod.h	/^    float        DecayTime;         \/* [r\/w] 0.1    20.0   1.49    Reverberation decay time at mid frequencies                           (SUPPORTED:SFX\/WII) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
DefaultCompare	src/breakpad/processor/static_map.h	/^class DefaultCompare {$/;"	c	namespace:google_breakpad
DefensiveHorse	src/package/standard.cpp	/^DefensiveHorse::DefensiveHorse(Card::Suit suit, int number, int correct)$/;"	f	class:DefensiveHorse
DefensiveHorse	src/package/standard.h	/^class DefensiveHorse: public Horse{$/;"	c
DefensiveHorseLocation	src/package/standard.h	/^        DefensiveHorseLocation = 2,$/;"	e	enum:EquipCard::Location
DelayedTrick	src/package/standard.cpp	/^DelayedTrick::DelayedTrick(Suit suit, int number, bool movable)$/;"	f	class:DelayedTrick
DelayedTrick	src/package/standard.h	/^class DelayedTrick:public TrickCard{$/;"	c
DeleteAction	src/dialog/cardeditor.cpp	/^static QAction *DeleteAction;$/;"	v	file:
Deluge	src/package/joypackage.cpp	/^Deluge::Deluge(Card::Suit suit, int number)$/;"	f	class:Deluge
Deluge	src/package/joypackage.h	/^class Deluge: public Disaster{$/;"	c
Density	include/fmod/fmod.h	/^    float        Density;           \/* [r\/w] 0.0    100.0  100.0   Value that controls the modal density in the late reverberation decay (SUPPORTED:SFX) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
Descender	include/freetype/freetype/internal/t1types.h	/^    FT_Fixed       Descender;$/;"	m	struct:AFM_FontInfoRec_
Descender	include/freetype/freetype/tttables.h	/^    FT_Short   Descender;$/;"	m	struct:TT_HoriHeader_
Descender	include/freetype/freetype/tttables.h	/^    FT_Short   Descender;$/;"	m	struct:TT_VertHeader_
Detector	src/util/detector.h	/^class Detector : public QObject$/;"	c
DetectorPort	src/core/settings.h	/^    ushort DetectorPort;$/;"	m	class:Settings
Diamond	src/core/card.h	/^    enum Suit {Spade, Club, Heart, Diamond, NoSuit};$/;"	e	enum:Card::Suit
DictionaryType	src/breakpad/processor/postfix_evaluator.h	/^  typedef map<string, ValueType> DictionaryType;$/;"	t	class:google_breakpad::PostfixEvaluator
DictionaryValidityType	src/breakpad/processor/postfix_evaluator.h	/^  typedef map<string, bool> DictionaryValidityType;$/;"	t	class:google_breakpad::PostfixEvaluator
Diffusion	include/fmod/fmod.h	/^    float        Diffusion;         \/* [r\/w] 0.0    100.0  100.0   Value that controls the echo density in the late reverberation decay. (SUPPORTED:SFX) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
Dimeng	src/package/thicket.cpp	/^    Dimeng():ZeroCardViewAsSkill("dimeng"){$/;"	f	class:Dimeng
Dimeng	src/package/thicket.cpp	/^class Dimeng: public ZeroCardViewAsSkill{$/;"	c	file:
DimengCard	src/package/thicket.cpp	/^DimengCard::DimengCard(){$/;"	f	class:DimengCard
DimengCard	src/package/thicket.h	/^class DimengCard: public SkillCard{$/;"	c
Direct	include/fmod/fmod.h	/^    int          Direct;               \/* [r\/w] -10000 1000 0        Direct path level                                        (SUPPORTED:SFX) *\/$/;"	m	struct:FMOD_REVERB_CHANNELPROPERTIES
DisableChat	src/client/clientstruct.h	/^    bool DisableChat;$/;"	m	struct:ServerInfoStruct
DisableChat	src/core/settings.h	/^    bool DisableChat;$/;"	m	class:Settings
DisassemblerX86	src/breakpad/processor/disassembler_x86.cc	/^DisassemblerX86::DisassemblerX86(const u_int8_t *bytecode,$/;"	f	class:google_breakpad::DisassemblerX86
DisassemblerX86	src/breakpad/processor/disassembler_x86.h	/^class DisassemblerX86 {$/;"	c	namespace:google_breakpad
Disaster	src/package/standard-cards.cpp	/^Disaster::Disaster(Card::Suit suit, int number)$/;"	f	class:Disaster
Disaster	src/package/standard.h	/^class Disaster: public DelayedTrick{$/;"	c
DisasterPackage	src/package/joypackage.cpp	/^DisasterPackage::DisasterPackage()$/;"	f	class:DisasterPackage
DisasterPackage	src/package/joypackage.h	/^class DisasterPackage: public Package{$/;"	c
Discard	src/core/player.h	/^    enum Phase {RoundStart, Start, Judge, Draw, Play, Discard, Finish, NotActive, PhaseNone};$/;"	e	enum:Player::Phase
DiscardPile	src/core/player.h	/^    enum Place {PlaceHand, PlaceEquip, PlaceDelayedTrick, PlaceJudge, PlaceSpecial, DiscardPile, DrawPile, PlaceTable, PlaceUnknown};$/;"	e	enum:Player::Place
DiscardSkill	src/client/aux-skills.cpp	/^DiscardSkill::DiscardSkill()$/;"	f	class:DiscardSkill
DiscardSkill	src/client/aux-skills.h	/^class DiscardSkill : public ViewAsSkill{$/;"	c
DiscardStar	src/package/god.cpp	/^    static void DiscardStar(ServerPlayer *shenzhuge, int n, QString skillName){$/;"	f	class:Qixing
Discarding	src/client/client.h	/^        Discarding,$/;"	e	enum:Client::Status
Dismantlement	src/package/standard-cards.cpp	/^Dismantlement::Dismantlement(Suit suit, int number)$/;"	f	class:Dismantlement
Dismantlement	src/package/standard.h	/^class Dismantlement: public SingleTargetTrick{$/;"	c
DistanceSkill	src/core/skill.cpp	/^DistanceSkill::DistanceSkill(const QString &name)$/;"	f	class:DistanceSkill
DistanceSkill	src/core/skill.h	/^class DistanceSkill: public Skill{$/;"	c
DistanceViewDialog	src/dialog/distanceviewdialog.cpp	/^DistanceViewDialog::DistanceViewDialog(QWidget *parent) :$/;"	f	class:DistanceViewDialog
DistanceViewDialog	src/dialog/distanceviewdialog.h	/^class DistanceViewDialog : public QDialog {$/;"	c
DistanceViewDialogUI	src/dialog/distanceviewdialog.cpp	/^    DistanceViewDialogUI(){$/;"	f	struct:DistanceViewDialogUI
DistanceViewDialogUI	src/dialog/distanceviewdialog.cpp	/^struct DistanceViewDialogUI{$/;"	s	file:
DoAddressMapTest	src/breakpad/processor/address_map_unittest.cc	/^static bool DoAddressMapTest() {$/;"	f	namespace:__anon76
DoCleanup	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::DoCleanup(ClientInfo* client_info) {$/;"	f	class:google_breakpad::CrashGenerationServer
DoLuaScript	src/core/util.cpp	/^void DoLuaScript(lua_State *L, const char *script){$/;"	f
DoLuaScripts	src/core/util.cpp	/^void DoLuaScripts(lua_State *L, const QStringList &scripts){$/;"	f
Dongcha	src/package/yitianpackage.cpp	/^    Dongcha():PhaseChangeSkill("dongcha"){$/;"	f	class:Dongcha
Dongcha	src/package/yitianpackage.cpp	/^class Dongcha: public PhaseChangeSkill{$/;"	c	file:
DoubleSword	src/package/standard-cards.cpp	/^DoubleSword::DoubleSword(Suit suit, int number)$/;"	f	class:DoubleSword
DoubleSword	src/package/standard-equips.h	/^class DoubleSword:public Weapon{$/;"	c
DoubleSwordSkill	src/package/standard-cards.cpp	/^    DoubleSwordSkill():WeaponSkill("DoubleSword"){$/;"	f	class:DoubleSwordSkill
DoubleSwordSkill	src/package/standard-cards.cpp	/^class DoubleSwordSkill: public WeaponSkill{$/;"	c	file:
Down	src/ui/joystick.h	/^    static const int Down = 4;$/;"	m	class:Joystick
Draw	src/core/player.h	/^    enum Phase {RoundStart, Start, Judge, Draw, Play, Discard, Finish, NotActive, PhaseNone};$/;"	e	enum:Player::Phase
DrawCardsSkill	src/core/skill.cpp	/^DrawCardsSkill::DrawCardsSkill(const QString &name)$/;"	f	class:DrawCardsSkill
DrawCardsSkill	src/core/skill.h	/^class DrawCardsSkill: public TriggerSkill{$/;"	c
DrawNCards	src/core/structs.h	/^    DrawNCards,$/;"	e	enum:TriggerEvent
DrawPile	src/core/player.h	/^    enum Place {PlaceHand, PlaceEquip, PlaceDelayedTrick, PlaceJudge, PlaceSpecial, DiscardPile, DrawPile, PlaceTable, PlaceUnknown};$/;"	e	enum:Player::Place
Duanchang	src/package/mountainpackage.cpp	/^    Duanchang():TriggerSkill("duanchang"){$/;"	f	class:Duanchang
Duanchang	src/package/mountainpackage.cpp	/^class Duanchang: public TriggerSkill{$/;"	c	file:
Duanliang	src/package/thicket.cpp	/^    Duanliang():OneCardViewAsSkill("duanliang"){$/;"	f	class:Duanliang
Duanliang	src/package/thicket.cpp	/^class Duanliang: public OneCardViewAsSkill{$/;"	c	file:
Duduan	src/scenario/boss-mode-scenario.cpp	/^    Duduan():ProhibitSkill("duduan"){$/;"	f	class:Duduan
Duduan	src/scenario/boss-mode-scenario.cpp	/^class Duduan: public ProhibitSkill{$/;"	c	file:
Duel	src/package/standard-cards.cpp	/^Duel::Duel(Suit suit, int number)$/;"	f	class:Duel
Duel	src/package/standard.h	/^class Duel:public SingleTargetTrick{$/;"	c
Dujiang	src/scenario/fancheng-scenario.cpp	/^    Dujiang():PhaseChangeSkill("dujiang"){$/;"	f	class:Dujiang
Dujiang	src/scenario/fancheng-scenario.cpp	/^class Dujiang: public PhaseChangeSkill{$/;"	c	file:
DujiangCard	src/scenario/fancheng-scenario.cpp	/^DujiangCard::DujiangCard(){$/;"	f	class:DujiangCard
DujiangCard	src/scenario/fancheng-scenario.h	/^class DujiangCard: public SkillCard{$/;"	c
DujiangViewAsSkill	src/scenario/fancheng-scenario.cpp	/^    DujiangViewAsSkill():ViewAsSkill("dujiang"){$/;"	f	class:DujiangViewAsSkill
DujiangViewAsSkill	src/scenario/fancheng-scenario.cpp	/^class DujiangViewAsSkill: public ViewAsSkill{$/;"	c	file:
DummyCard	src/core/card.cpp	/^DummyCard::DummyCard():SkillCard()$/;"	f	class:DummyCard
DummyCard	src/core/card.h	/^class DummyCard: public SkillCard{$/;"	c
Dump	src/breakpad/processor/synth_minidump.cc	/^Dump::Dump(u_int64_t flags,$/;"	f	class:google_breakpad::SynthMinidump::Dump
Dump	src/breakpad/processor/synth_minidump.h	/^class Dump: public test_assembler::Section {$/;"	c	namespace:google_breakpad::SynthMinidump
DumpBlock	src/lua/ldump.c	/^static void DumpBlock(const void* b, size_t size, DumpState* D)$/;"	f	file:
DumpChar	src/lua/ldump.c	/^static void DumpChar(int y, DumpState* D)$/;"	f	file:
DumpCode	src/lua/ldump.c	76;"	d	file:
DumpConstants	src/lua/ldump.c	/^static void DumpConstants(const Proto* f, DumpState* D)$/;"	f	file:
DumpDebug	src/lua/ldump.c	/^static void DumpDebug(const Proto* f, DumpState* D)$/;"	f	file:
DumpFunction	src/lua/ldump.c	/^static void DumpFunction(const Proto* f, const TString* p, DumpState* D)$/;"	f	file:
DumpHeader	src/lua/ldump.c	/^static void DumpHeader(DumpState* D)$/;"	f	file:
DumpInt	src/lua/ldump.c	/^static void DumpInt(int x, DumpState* D)$/;"	f	file:
DumpMem	src/lua/ldump.c	26;"	d	file:
DumpNumber	src/lua/ldump.c	/^static void DumpNumber(lua_Number x, DumpState* D)$/;"	f	file:
DumpRawStream	src/breakpad/processor/minidump_dump.cc	/^static void DumpRawStream(Minidump *minidump,$/;"	f	namespace:__anon82
DumpState	src/lua/ldump.c	/^} DumpState;$/;"	t	typeref:struct:__anon87	file:
DumpString	src/lua/ldump.c	/^static void DumpString(const TString* s, DumpState* D)$/;"	f	file:
DumpVar	src/lua/ldump.c	27;"	d	file:
DumpVector	src/lua/ldump.c	/^static void DumpVector(const void* b, int n, size_t size, DumpState* D)$/;"	f	file:
DuplicationPolicy	src/jsoncpp/include/json/value.h	/^         enum DuplicationPolicy $/;"	g	class:Json::Value::CZString
Dushi	src/package/yitianpackage.cpp	/^    Dushi():TriggerSkill("dushi"){$/;"	f	class:Dushi
Dushi	src/package/yitianpackage.cpp	/^class Dushi: public TriggerSkill{$/;"	c	file:
Dying	src/core/structs.h	/^    Dying,$/;"	e	enum:TriggerEvent
DyingStruct	src/core/structs.h	/^struct DyingStruct{$/;"	s
DyingStruct	src/server/roomthread.cpp	/^DyingStruct::DyingStruct()$/;"	f	class:DyingStruct
ENGINE_H	src/core/engine.h	2;"	d
EOZ	src/lua/lzio.h	16;"	d
ERRFUNC	src/lua/loadlib.c	40;"	d	file:
ERRLIB	src/lua/loadlib.c	39;"	d	file:
ERROR	src/breakpad/processor/logging.h	78;"	d
EXE_FILE	src/breakpad/common/windows/pdb_source_line_writer.h	/^    EXE_FILE,  \/\/ a .exe or .dll file$/;"	e	enum:google_breakpad::PDBSourceLineWriter::FileFormat
EXPLOITABILITY_ERR_NOENGINE	src/breakpad/google_breakpad/processor/process_state.h	/^  EXPLOITABILITY_ERR_NOENGINE,            \/\/ The supplied minidump's platform does$/;"	e	enum:google_breakpad::ExploitabilityRating
EXPLOITABILITY_ERR_PROCESSING	src/breakpad/google_breakpad/processor/process_state.h	/^  EXPLOITABILITY_ERR_PROCESSING           \/\/ An error occured within the$/;"	e	enum:google_breakpad::ExploitabilityRating
EXPLOITABILITY_HIGH	src/breakpad/google_breakpad/processor/process_state.h	/^  EXPLOITABILITY_HIGH,                    \/\/ The crash likely represents$/;"	e	enum:google_breakpad::ExploitabilityRating
EXPLOITABILITY_INTERESTING	src/breakpad/google_breakpad/processor/process_state.h	/^  EXPLOITABILITY_INTERESTING,             \/\/ The crash does not appear to be$/;"	e	enum:google_breakpad::ExploitabilityRating
EXPLOITABILITY_LOW	src/breakpad/google_breakpad/processor/process_state.h	/^  EXPLOITABILITY_LOW,                     \/\/ The crash either does not corrupt$/;"	e	enum:google_breakpad::ExploitabilityRating
EXPLOITABILITY_NONE	src/breakpad/google_breakpad/processor/process_state.h	/^  EXPLOITABILITY_NONE,                    \/\/ The crash does not appear to represent$/;"	e	enum:google_breakpad::ExploitabilityRating
EXPLOITABILITY_NOT_ANALYZED	src/breakpad/google_breakpad/processor/process_state.h	/^  EXPLOITABILITY_NOT_ANALYZED,            \/\/ The crash was not analyzed for$/;"	e	enum:google_breakpad::ExploitabilityRating
EXPLOITABLITY_MEDIUM	src/breakpad/google_breakpad/processor/process_state.h	/^  EXPLOITABLITY_MEDIUM,                   \/\/ The crash appears to corrupt$/;"	e	enum:google_breakpad::ExploitabilityRating
EXPPATTERN_H	src/package/exppattern.h	2;"	d
EXTRA_STACK	src/lua/lstate.h	29;"	d
Earthquake	src/package/joypackage.cpp	/^Earthquake::Earthquake(Card::Suit suit, int number)$/;"	f	class:Earthquake
Earthquake	src/package/joypackage.h	/^class Earthquake: public Disaster{$/;"	c
EditAction	src/dialog/cardeditor.cpp	/^static QAction *EditAction;$/;"	v	file:
EffectAnimation	src/ui/sprite.cpp	/^EffectAnimation::EffectAnimation()$/;"	f	class:EffectAnimation
EffectAnimation	src/ui/sprite.h	/^class EffectAnimation : public QObject$/;"	c
EffectVolume	src/core/settings.h	/^    float EffectVolume;$/;"	m	class:Settings
EightDiagram	src/package/standard-cards.cpp	/^EightDiagram::EightDiagram(Suit suit, int number)$/;"	f	class:EightDiagram
EightDiagram	src/package/standard-equips.h	/^class EightDiagram:public Armor{$/;"	c
EightDiagramSkill	src/package/standard-cards.cpp	/^    EightDiagramSkill():ArmorSkill("EightDiagram"){$/;"	f	class:EightDiagramSkill	file:
EightDiagramSkill	src/package/standard-cards.cpp	/^class EightDiagramSkill: public ArmorSkill{$/;"	c	file:
EmphasizeEffect	src/ui/sprite.cpp	/^EmphasizeEffect::EmphasizeEffect(bool stay,QObject *parent)$/;"	f	class:EmphasizeEffect
EmphasizeEffect	src/ui/sprite.h	/^class EmphasizeEffect : public QAnimatedEffect$/;"	c
Empty	src/breakpad/processor/synth_minidump.h	/^  bool Empty() { return count_ == 0; }$/;"	f	class:google_breakpad::SynthMinidump::List
Enable2ndGeneral	src/client/clientstruct.h	/^    bool Enable2ndGeneral;$/;"	m	struct:ServerInfoStruct
Enable2ndGeneral	src/core/settings.h	/^    bool Enable2ndGeneral;$/;"	m	class:Settings
EnableAI	src/client/clientstruct.h	/^    bool EnableAI;$/;"	m	struct:ServerInfoStruct
EnableAI	src/core/settings.h	/^    bool EnableAI;$/;"	m	class:Settings
EnableAutoTarget	src/core/settings.h	/^    bool EnableAutoTarget;$/;"	m	class:Settings
EnableBasara	src/client/clientstruct.h	/^    bool EnableBasara;$/;"	m	struct:ServerInfoStruct
EnableBasara	src/core/settings.h	/^    bool EnableBasara;$/;"	m	class:Settings
EnableBgMusic	src/core/settings.h	/^    bool EnableBgMusic;$/;"	m	class:Settings
EnableEffects	src/core/settings.h	/^    bool EnableEffects;$/;"	m	class:Settings
EnableHegemony	src/client/clientstruct.h	/^    bool EnableHegemony;$/;"	m	struct:ServerInfoStruct
EnableHegemony	src/core/settings.h	/^    bool EnableHegemony;$/;"	m	class:Settings
EnableHotKey	src/core/settings.h	/^    bool EnableHotKey;$/;"	m	class:Settings
EnableLastWord	src/core/settings.h	/^    bool EnableLastWord;$/;"	m	class:Settings
EnableMinimizeDialog	src/core/settings.h	/^    bool EnableMinimizeDialog;$/;"	m	class:Settings
EnableSame	src/client/clientstruct.h	/^    bool EnableSame;$/;"	m	struct:ServerInfoStruct
EnableSame	src/core/settings.h	/^    bool EnableSame;$/;"	m	class:Settings
EnableScene	src/client/clientstruct.h	/^    bool EnableScene;$/;"	m	struct:ServerInfoStruct
EnableScene	src/core/settings.h	/^    bool EnableScene;	\/\/changjing$/;"	m	class:Settings
Enemy	src/server/ai.h	/^    enum Relation { Friend, Enemy, Neutrality };$/;"	e	enum:AI::Relation
Engine	src/core/engine.cpp	/^Engine::Engine()$/;"	f	class:Engine
Engine	src/core/engine.h	/^class Engine: public QObject$/;"	c
EnterErrorState	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::EnterErrorState() {$/;"	f	class:google_breakpad::CrashGenerationServer
EnterStateImmediately	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::EnterStateImmediately(IPCServerState state) {$/;"	f	class:google_breakpad::CrashGenerationServer
EnterStateWhenSignaled	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::EnterStateWhenSignaled(IPCServerState state) {$/;"	f	class:google_breakpad::CrashGenerationServer
EntryType	src/breakpad/processor/map_serializers_unittest.cc	/^typedef int32_t EntryType;$/;"	t	file:
EntryType	src/breakpad/processor/static_range_map_unittest.cc	/^typedef int EntryType;$/;"	t	namespace:__anon85	file:
EnvDiffusion	include/fmod/fmod.h	/^    float        EnvDiffusion;      \/* [r\/w] 0.0    1.0    1.0     Environment diffusion                                                 (SUPPORTED:WII) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
Environment	include/fmod/fmod.h	/^    int          Environment;       \/* [r\/w] -1     25     -1      Sets all listener properties.  -1 = OFF.                              (SUPPORTED:SFX(-1 only)\/PSP) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
Enyuan	src/package/yjcm-package.cpp	/^    Enyuan():TriggerSkill("enyuan"){$/;"	f	class:Enyuan
Enyuan	src/package/yjcm-package.cpp	/^class Enyuan: public TriggerSkill{$/;"	c	file:
EnyuanPattern	src/package/nostalgia.cpp	/^class EnyuanPattern: public CardPattern{$/;"	c	file:
Equip	src/core/card.h	/^        Equip$/;"	e	enum:Card::CardType
EquipCard	src/package/standard.h	/^    EquipCard(Suit suit, int number):Card(suit, number, true), skill(NULL){}$/;"	f	class:EquipCard
EquipCard	src/package/standard.h	/^class EquipCard:public Card{$/;"	c
ErrnoString	src/breakpad/processor/logging.cc	/^int ErrnoString(string *error_string) {$/;"	f	namespace:google_breakpad
Error	swig/sanguosha_wrap.cxx	/^static void Error(lua_State *L){$/;"	f	file:
ErrorInfo	src/jsoncpp/include/json/reader.h	/^      class ErrorInfo$/;"	c	class:Json::Reader
Errors	src/jsoncpp/include/json/reader.h	/^      typedef std::deque<ErrorInfo> Errors;$/;"	t	class:Json::Reader
Evaluate	src/breakpad/processor/postfix_evaluator-inl.h	/^bool PostfixEvaluator<ValueType>::Evaluate(const string &expression,$/;"	f	class:google_breakpad::PostfixEvaluator
EvaluateForValue	src/breakpad/processor/postfix_evaluator-inl.h	/^bool PostfixEvaluator<ValueType>::EvaluateForValue(const string &expression,$/;"	f	class:google_breakpad::PostfixEvaluator
EvaluateForValueTest	src/breakpad/processor/postfix_evaluator_unittest.cc	/^struct EvaluateForValueTest {$/;"	s	namespace:__anon75	file:
EvaluateInternal	src/breakpad/processor/postfix_evaluator-inl.h	/^bool PostfixEvaluator<ValueType>::EvaluateInternal($/;"	f	class:google_breakpad::PostfixEvaluator
EvaluateTest	src/breakpad/processor/postfix_evaluator_unittest.cc	/^struct EvaluateTest {$/;"	s	namespace:__anon75	file:
EvaluateTestSet	src/breakpad/processor/postfix_evaluator_unittest.cc	/^struct EvaluateTestSet {$/;"	s	namespace:__anon75	file:
EvaluateToken	src/breakpad/processor/postfix_evaluator-inl.h	/^bool PostfixEvaluator<ValueType>::EvaluateToken($/;"	f	class:google_breakpad::PostfixEvaluator
EventAcquireSkill	src/core/structs.h	/^    EventAcquireSkill,$/;"	e	enum:TriggerEvent
EventLoseSkill	src/core/structs.h	/^    EventLoseSkill,$/;"	e	enum:TriggerEvent
EventPhaseChanging	src/core/structs.h	/^    EventPhaseChanging,$/;"	e	enum:TriggerEvent
EventPhaseEnd	src/core/structs.h	/^    EventPhaseEnd,$/;"	e	enum:TriggerEvent
EventPhaseStart	src/core/structs.h	/^    EventPhaseStart,$/;"	e	enum:TriggerEvent
EventTriplet	src/server/roomthread.h	/^    inline EventTriplet(TriggerEvent event, Room* room, ServerPlayer *target, QVariant *data)$/;"	f	class:EventTriplet
EventTriplet	src/server/roomthread.h	/^class EventTriplet{$/;"	c
ExNihilo	src/package/standard-cards.cpp	/^ExNihilo::ExNihilo(Suit suit, int number)$/;"	f	class:ExNihilo
ExNihilo	src/package/standard.h	/^class ExNihilo: public SingleTargetTrick{$/;"	c
Exception	src/breakpad/processor/synth_minidump.cc	/^Exception::Exception(const Dump &dump,$/;"	f	class:google_breakpad::SynthMinidump::Exception
Exception	src/breakpad/processor/synth_minidump.h	/^class Exception : public Stream {$/;"	c	namespace:google_breakpad::SynthMinidump
ExceptionHandler	src/breakpad/client/windows/handler/exception_handler.cc	/^ExceptionHandler::ExceptionHandler(const wstring &dump_path,$/;"	f	class:google_breakpad::ExceptionHandler
ExceptionHandler	src/breakpad/client/windows/handler/exception_handler.cc	/^ExceptionHandler::ExceptionHandler(const wstring& dump_path,$/;"	f	class:google_breakpad::ExceptionHandler
ExceptionHandler	src/breakpad/client/windows/handler/exception_handler.h	/^class ExceptionHandler {$/;"	c	namespace:google_breakpad
ExceptionHandlerThreadMain	src/breakpad/client/windows/handler/exception_handler.cc	/^DWORD ExceptionHandler::ExceptionHandlerThreadMain(void* lpParameter) {$/;"	f	class:google_breakpad::ExceptionHandler
Exchange	src/package/god.cpp	/^    static void Exchange(ServerPlayer *shenzhuge){$/;"	f	class:Qixing
ExecDialog	src/client/client.h	/^        ExecDialog,$/;"	e	enum:Client::Status
ExpPattern	src/package/exppattern.cpp	/^ExpPattern::ExpPattern(const QString &exp)$/;"	f	class:ExpPattern
ExpPattern	src/package/exppattern.h	/^class ExpPattern : public CardPattern$/;"	c
ExpandWidth	src/dialog/connectiondialog.cpp	/^static const int ExpandWidth = 826;$/;"	v	file:
ExpectNoMemoryReferences	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  void ExpectNoMemoryReferences() {$/;"	f	struct:CFIFixture
Exploitability	src/breakpad/google_breakpad/processor/exploitability.h	/^class Exploitability {$/;"	c	namespace:google_breakpad
Exploitability	src/breakpad/processor/exploitability.cc	/^Exploitability::Exploitability(Minidump *dump,$/;"	f	class:google_breakpad::Exploitability
ExploitabilityForPlatform	src/breakpad/processor/exploitability.cc	/^Exploitability *Exploitability::ExploitabilityForPlatform($/;"	f	class:google_breakpad::Exploitability
ExploitabilityRating	src/breakpad/google_breakpad/processor/process_state.h	/^enum ExploitabilityRating {$/;"	g	namespace:google_breakpad
ExploitabilityWin	src/breakpad/processor/exploitability_win.cc	/^ExploitabilityWin::ExploitabilityWin(Minidump *dump,$/;"	f	class:google_breakpad::ExploitabilityWin
ExploitabilityWin	src/breakpad/processor/exploitability_win.h	/^class ExploitabilityWin : public Exploitability {$/;"	c	namespace:google_breakpad
Extensions	src/client/clientstruct.h	/^    QStringList Extensions;$/;"	m	struct:ServerInfoStruct
F2DOT14_TO_FIXED	include/freetype/freetype/internal/ftcalc.h	166;"	d
FALSE	include/freetype/freetype/internal/ftobjs.h	57;"	d
FANCHENGSCENARIO_H	src/scenario/fancheng-scenario.h	2;"	d
FILE_LINE_LINK	src/core/compiler-specific.h	10;"	d
FINALIZEDBIT	src/lua/lgc.h	57;"	d
FIREPACKAGE_H	src/package/firepackage.h	2;"	d
FIRST_RESERVED	src/lua/llex.h	14;"	d
FIXEDBIT	src/lua/lgc.h	60;"	d
FIXED_TO_INT	include/freetype/freetype/internal/ftcalc.h	168;"	d
FLAGS	src/lua/lstrlib.c	688;"	d	file:
FLOAT_TO_FIXED	include/freetype/freetype/internal/ftcalc.h	167;"	d
FMOD	include/fmod/fmod.hpp	/^namespace FMOD$/;"	n
FMOD_2D	include/fmod/fmod.h	871;"	d
FMOD_3D	include/fmod/fmod.h	872;"	d
FMOD_3D_CUSTOMROLLOFF	include/fmod/fmod.h	892;"	d
FMOD_3D_HEADRELATIVE	include/fmod/fmod.h	887;"	d
FMOD_3D_IGNOREGEOMETRY	include/fmod/fmod.h	893;"	d
FMOD_3D_INVERSEROLLOFF	include/fmod/fmod.h	889;"	d
FMOD_3D_LINEARROLLOFF	include/fmod/fmod.h	890;"	d
FMOD_3D_LINEARSQUAREROLLOFF	include/fmod/fmod.h	891;"	d
FMOD_3D_ROLLOFFCALLBACK	include/fmod/fmod.h	/^typedef float       (F_CALLBACK *FMOD_3D_ROLLOFFCALLBACK)    (FMOD_CHANNEL *channel, float distance);$/;"	t
FMOD_3D_WORLDRELATIVE	include/fmod/fmod.h	888;"	d
FMOD_64BIT_ADD	include/fmod/fmod.h	1235;"	d
FMOD_64BIT_SUB	include/fmod/fmod.h	1236;"	d
FMOD_ACCURATETIME	include/fmod/fmod.h	883;"	d
FMOD_ADVANCEDSETTINGS	include/fmod/fmod.h	/^typedef struct FMOD_ADVANCEDSETTINGS$/;"	s
FMOD_ADVANCEDSETTINGS	include/fmod/fmod.h	/^} FMOD_ADVANCEDSETTINGS;$/;"	t	typeref:struct:FMOD_ADVANCEDSETTINGS
FMOD_ASYNCREADINFO	include/fmod/fmod.h	/^} FMOD_ASYNCREADINFO;$/;"	t	typeref:struct:__anon108
FMOD_BOOL	include/fmod/fmod.h	/^typedef int                       FMOD_BOOL;$/;"	t
FMOD_CAPS	include/fmod/fmod.h	/^typedef unsigned int              FMOD_CAPS;$/;"	t
FMOD_CAPS_HARDWARE	include/fmod/fmod.h	399;"	d
FMOD_CAPS_HARDWARE_EMULATED	include/fmod/fmod.h	400;"	d
FMOD_CAPS_NONE	include/fmod/fmod.h	398;"	d
FMOD_CAPS_OUTPUT_FORMAT_PCM16	include/fmod/fmod.h	403;"	d
FMOD_CAPS_OUTPUT_FORMAT_PCM24	include/fmod/fmod.h	404;"	d
FMOD_CAPS_OUTPUT_FORMAT_PCM32	include/fmod/fmod.h	405;"	d
FMOD_CAPS_OUTPUT_FORMAT_PCM8	include/fmod/fmod.h	402;"	d
FMOD_CAPS_OUTPUT_FORMAT_PCMFLOAT	include/fmod/fmod.h	406;"	d
FMOD_CAPS_OUTPUT_MULTICHANNEL	include/fmod/fmod.h	401;"	d
FMOD_CAPS_REVERB_LIMITED	include/fmod/fmod.h	407;"	d
FMOD_CDTOC	include/fmod/fmod.h	/^typedef struct FMOD_CDTOC$/;"	s
FMOD_CDTOC	include/fmod/fmod.h	/^} FMOD_CDTOC;$/;"	t	typeref:struct:FMOD_CDTOC
FMOD_CHANNEL	include/fmod/fmod.h	/^typedef struct FMOD_CHANNEL       FMOD_CHANNEL;$/;"	t	typeref:struct:FMOD_CHANNEL
FMOD_CHANNELGROUP	include/fmod/fmod.h	/^typedef struct FMOD_CHANNELGROUP  FMOD_CHANNELGROUP;$/;"	t	typeref:struct:FMOD_CHANNELGROUP
FMOD_CHANNELINDEX	include/fmod/fmod.h	/^} FMOD_CHANNELINDEX;$/;"	t	typeref:enum:__anon125
FMOD_CHANNEL_CALLBACK	include/fmod/fmod.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_CHANNEL_CALLBACK)      (FMOD_CHANNEL *channel, FMOD_CHANNEL_CALLBACKTYPE type, void *commanddata1, void *commanddata2);$/;"	t
FMOD_CHANNEL_CALLBACKTYPE	include/fmod/fmod.h	/^} FMOD_CHANNEL_CALLBACKTYPE;$/;"	t	typeref:enum:__anon117
FMOD_CHANNEL_CALLBACKTYPE_END	include/fmod/fmod.h	/^    FMOD_CHANNEL_CALLBACKTYPE_END,                  \/* Called when a sound ends. *\/$/;"	e	enum:__anon117
FMOD_CHANNEL_CALLBACKTYPE_FORCEINT	include/fmod/fmod.h	/^    FMOD_CHANNEL_CALLBACKTYPE_FORCEINT = 65536      \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon117
FMOD_CHANNEL_CALLBACKTYPE_MAX	include/fmod/fmod.h	/^    FMOD_CHANNEL_CALLBACKTYPE_MAX,                  \/* Maximum number of callback types supported. *\/$/;"	e	enum:__anon117
FMOD_CHANNEL_CALLBACKTYPE_OCCLUSION	include/fmod/fmod.h	/^    FMOD_CHANNEL_CALLBACKTYPE_OCCLUSION,            \/* Called when the channel has its geometry occlusion value calculated.  Can be used to clamp or change the value. *\/$/;"	e	enum:__anon117
FMOD_CHANNEL_CALLBACKTYPE_SYNCPOINT	include/fmod/fmod.h	/^    FMOD_CHANNEL_CALLBACKTYPE_SYNCPOINT,            \/* Called when a syncpoint is encountered.  Can be from wav file markers. *\/$/;"	e	enum:__anon117
FMOD_CHANNEL_CALLBACKTYPE_VIRTUALVOICE	include/fmod/fmod.h	/^    FMOD_CHANNEL_CALLBACKTYPE_VIRTUALVOICE,         \/* Called when a voice is swapped out or swapped in. *\/$/;"	e	enum:__anon117
FMOD_CHANNEL_FREE	include/fmod/fmod.h	/^    FMOD_CHANNEL_FREE  = -1,      \/* For a channel index, FMOD chooses a free voice using the priority system. *\/$/;"	e	enum:__anon125
FMOD_CHANNEL_REUSE	include/fmod/fmod.h	/^    FMOD_CHANNEL_REUSE = -2       \/* For a channel index, re-use the channel handle that was passed in. *\/$/;"	e	enum:__anon125
FMOD_CODEC_CLOSECALLBACK	include/fmod/fmod_codec.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_CODEC_CLOSECALLBACK)       (FMOD_CODEC_STATE *codec_state);$/;"	t
FMOD_CODEC_DESCRIPTION	include/fmod/fmod_codec.h	/^typedef struct FMOD_CODEC_DESCRIPTION$/;"	s
FMOD_CODEC_DESCRIPTION	include/fmod/fmod_codec.h	/^} FMOD_CODEC_DESCRIPTION;$/;"	t	typeref:struct:FMOD_CODEC_DESCRIPTION
FMOD_CODEC_GETLENGTHCALLBACK	include/fmod/fmod_codec.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_CODEC_GETLENGTHCALLBACK)   (FMOD_CODEC_STATE *codec_state, unsigned int *length, FMOD_TIMEUNIT lengthtype);$/;"	t
FMOD_CODEC_GETPOSITIONCALLBACK	include/fmod/fmod_codec.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_CODEC_GETPOSITIONCALLBACK) (FMOD_CODEC_STATE *codec_state, unsigned int *position, FMOD_TIMEUNIT postype);$/;"	t
FMOD_CODEC_GETWAVEFORMAT	include/fmod/fmod_codec.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_CODEC_GETWAVEFORMAT)       (FMOD_CODEC_STATE *codec_state, int index, FMOD_CODEC_WAVEFORMAT *waveformat);$/;"	t
FMOD_CODEC_METADATACALLBACK	include/fmod/fmod_codec.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_CODEC_METADATACALLBACK)    (FMOD_CODEC_STATE *codec_state, FMOD_TAGTYPE tagtype, char *name, void *data, unsigned int datalen, FMOD_TAGDATATYPE datatype, int unique);$/;"	t
FMOD_CODEC_OPENCALLBACK	include/fmod/fmod_codec.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_CODEC_OPENCALLBACK)        (FMOD_CODEC_STATE *codec_state, FMOD_MODE usermode, FMOD_CREATESOUNDEXINFO *userexinfo);$/;"	t
FMOD_CODEC_READCALLBACK	include/fmod/fmod_codec.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_CODEC_READCALLBACK)        (FMOD_CODEC_STATE *codec_state, void *buffer, unsigned int sizebytes, unsigned int *bytesread);$/;"	t
FMOD_CODEC_SETPOSITIONCALLBACK	include/fmod/fmod_codec.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_CODEC_SETPOSITIONCALLBACK) (FMOD_CODEC_STATE *codec_state, int subsound, unsigned int position, FMOD_TIMEUNIT postype);$/;"	t
FMOD_CODEC_SOUNDCREATECALLBACK	include/fmod/fmod_codec.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_CODEC_SOUNDCREATECALLBACK) (FMOD_CODEC_STATE *codec_state, int subsound, FMOD_SOUND *sound);$/;"	t
FMOD_CODEC_STATE	include/fmod/fmod_codec.h	/^struct FMOD_CODEC_STATE$/;"	s
FMOD_CODEC_STATE	include/fmod/fmod_codec.h	/^typedef struct FMOD_CODEC_STATE FMOD_CODEC_STATE;$/;"	t	typeref:struct:FMOD_CODEC_STATE
FMOD_CODEC_WAVEFORMAT	include/fmod/fmod_codec.h	/^struct FMOD_CODEC_WAVEFORMAT$/;"	s
FMOD_CODEC_WAVEFORMAT	include/fmod/fmod_codec.h	/^typedef struct FMOD_CODEC_WAVEFORMAT FMOD_CODEC_WAVEFORMAT;$/;"	t	typeref:struct:FMOD_CODEC_WAVEFORMAT
FMOD_CREATECOMPRESSEDSAMPLE	include/fmod/fmod.h	877;"	d
FMOD_CREATESAMPLE	include/fmod/fmod.h	876;"	d
FMOD_CREATESOUNDEXINFO	include/fmod/fmod.h	/^typedef struct FMOD_CREATESOUNDEXINFO$/;"	s
FMOD_CREATESOUNDEXINFO	include/fmod/fmod.h	/^} FMOD_CREATESOUNDEXINFO;$/;"	t	typeref:struct:FMOD_CREATESOUNDEXINFO
FMOD_CREATESTREAM	include/fmod/fmod.h	875;"	d
FMOD_DEBUGLEVEL	include/fmod/fmod.h	/^typedef unsigned int              FMOD_DEBUGLEVEL;$/;"	t
FMOD_DEBUG_ALL	include/fmod/fmod.h	446;"	d
FMOD_DEBUG_DISPLAY_ALL	include/fmod/fmod.h	445;"	d
FMOD_DEBUG_DISPLAY_COMPRESS	include/fmod/fmod.h	443;"	d
FMOD_DEBUG_DISPLAY_LINENUMBERS	include/fmod/fmod.h	442;"	d
FMOD_DEBUG_DISPLAY_THREAD	include/fmod/fmod.h	444;"	d
FMOD_DEBUG_DISPLAY_TIMESTAMPS	include/fmod/fmod.h	441;"	d
FMOD_DEBUG_LEVEL_ALL	include/fmod/fmod.h	434;"	d
FMOD_DEBUG_LEVEL_ERROR	include/fmod/fmod.h	431;"	d
FMOD_DEBUG_LEVEL_HINT	include/fmod/fmod.h	433;"	d
FMOD_DEBUG_LEVEL_LOG	include/fmod/fmod.h	430;"	d
FMOD_DEBUG_LEVEL_NONE	include/fmod/fmod.h	429;"	d
FMOD_DEBUG_LEVEL_WARNING	include/fmod/fmod.h	432;"	d
FMOD_DEBUG_TYPE_ALL	include/fmod/fmod.h	440;"	d
FMOD_DEBUG_TYPE_EVENT	include/fmod/fmod.h	439;"	d
FMOD_DEBUG_TYPE_FILE	include/fmod/fmod.h	437;"	d
FMOD_DEBUG_TYPE_MEMORY	include/fmod/fmod.h	435;"	d
FMOD_DEBUG_TYPE_NET	include/fmod/fmod.h	438;"	d
FMOD_DEBUG_TYPE_THREAD	include/fmod/fmod.h	436;"	d
FMOD_DEFAULT	include/fmod/fmod.h	867;"	d
FMOD_DELAYTYPE	include/fmod/fmod.h	/^} FMOD_DELAYTYPE;$/;"	t	typeref:enum:__anon123
FMOD_DELAYTYPE_DSPCLOCK_END	include/fmod/fmod.h	/^    FMOD_DELAYTYPE_DSPCLOCK_END,        \/* Time the sound should end. If this is non-zero, the channel will go silent at this exact tick. *\/$/;"	e	enum:__anon123
FMOD_DELAYTYPE_DSPCLOCK_PAUSE	include/fmod/fmod.h	/^    FMOD_DELAYTYPE_DSPCLOCK_PAUSE,      \/* Time the sound should pause. If this is non-zero, the channel will pause at this exact tick. *\/$/;"	e	enum:__anon123
FMOD_DELAYTYPE_DSPCLOCK_START	include/fmod/fmod.h	/^    FMOD_DELAYTYPE_DSPCLOCK_START,      \/* Time the sound started if Channel::getDelay is used, or if Channel::setDelay is used, the sound will delay playing until this exact tick. *\/$/;"	e	enum:__anon123
FMOD_DELAYTYPE_END_MS	include/fmod/fmod.h	/^    FMOD_DELAYTYPE_END_MS,              \/* Delay at the end of the sound in milliseconds.  Use delayhi only.   Channel::isPlaying will remain true until this delay has passed even though the sound itself has stopped playing.*\/$/;"	e	enum:__anon123
FMOD_DELAYTYPE_FORCEINT	include/fmod/fmod.h	/^    FMOD_DELAYTYPE_FORCEINT = 65536     \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon123
FMOD_DELAYTYPE_MAX	include/fmod/fmod.h	/^    FMOD_DELAYTYPE_MAX,                 \/* Maximum number of tag datatypes supported. *\/$/;"	e	enum:__anon123
FMOD_DSP	include/fmod/fmod.h	/^typedef struct FMOD_DSP           FMOD_DSP;$/;"	t	typeref:struct:FMOD_DSP
FMOD_DSPCONNECTION	include/fmod/fmod.h	/^typedef struct FMOD_DSPCONNECTION FMOD_DSPCONNECTION;$/;"	t	typeref:struct:FMOD_DSPCONNECTION
FMOD_DSP_CHORUS	include/fmod/fmod_dsp.h	/^} FMOD_DSP_CHORUS;$/;"	t	typeref:enum:__anon139
FMOD_DSP_CHORUS_DELAY	include/fmod/fmod_dsp.h	/^    FMOD_DSP_CHORUS_DELAY,    \/* Chorus delay in ms.  0.1 to 100.0.  Default = 40.0 ms. *\/$/;"	e	enum:__anon139
FMOD_DSP_CHORUS_DEPTH	include/fmod/fmod_dsp.h	/^    FMOD_DSP_CHORUS_DEPTH     \/* Chorus modulation depth.  0.0 to 1.0.  Default = 0.03. *\/$/;"	e	enum:__anon139
FMOD_DSP_CHORUS_DRYMIX	include/fmod/fmod_dsp.h	/^    FMOD_DSP_CHORUS_DRYMIX,   \/* Volume of original signal to pass to output.  0.0 to 1.0. Default = 0.5. *\/$/;"	e	enum:__anon139
FMOD_DSP_CHORUS_RATE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_CHORUS_RATE,     \/* Chorus modulation rate in hz.  0.0 to 20.0.  Default = 0.8 hz. *\/$/;"	e	enum:__anon139
FMOD_DSP_CHORUS_WETMIX1	include/fmod/fmod_dsp.h	/^    FMOD_DSP_CHORUS_WETMIX1,  \/* Volume of 1st chorus tap.  0.0 to 1.0.  Default = 0.5. *\/$/;"	e	enum:__anon139
FMOD_DSP_CHORUS_WETMIX2	include/fmod/fmod_dsp.h	/^    FMOD_DSP_CHORUS_WETMIX2,  \/* Volume of 2nd chorus tap. This tap is 90 degrees out of phase of the first tap.  0.0 to 1.0.  Default = 0.5. *\/$/;"	e	enum:__anon139
FMOD_DSP_CHORUS_WETMIX3	include/fmod/fmod_dsp.h	/^    FMOD_DSP_CHORUS_WETMIX3,  \/* Volume of 3rd chorus tap. This tap is 90 degrees out of phase of the second tap.  0.0 to 1.0.  Default = 0.5. *\/$/;"	e	enum:__anon139
FMOD_DSP_COMPRESSOR	include/fmod/fmod_dsp.h	/^} FMOD_DSP_COMPRESSOR;$/;"	t	typeref:enum:__anon141
FMOD_DSP_COMPRESSOR_ATTACK	include/fmod/fmod_dsp.h	/^    FMOD_DSP_COMPRESSOR_ATTACK,     \/* Gain reduction attack time (milliseconds), in the range from 10 through 200. The default value is 50. *\/$/;"	e	enum:__anon141
FMOD_DSP_COMPRESSOR_GAINMAKEUP	include/fmod/fmod_dsp.h	/^    FMOD_DSP_COMPRESSOR_GAINMAKEUP  \/* Make-up gain (dB) applied after limiting, in the range from 0 through 30. The default value is 0. *\/$/;"	e	enum:__anon141
FMOD_DSP_COMPRESSOR_RELEASE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_COMPRESSOR_RELEASE,    \/* Gain reduction release time (milliseconds), in the range from 20 through 1000. The default value is 50. *\/$/;"	e	enum:__anon141
FMOD_DSP_COMPRESSOR_THRESHOLD	include/fmod/fmod_dsp.h	/^    FMOD_DSP_COMPRESSOR_THRESHOLD,  \/* Threshold level (dB) in the range from -60 through 0. The default value is 0. *\/ $/;"	e	enum:__anon141
FMOD_DSP_CREATECALLBACK	include/fmod/fmod_dsp.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_DSP_CREATECALLBACK)     (FMOD_DSP_STATE *dsp_state);$/;"	t
FMOD_DSP_DELAY	include/fmod/fmod_dsp.h	/^} FMOD_DSP_DELAY;$/;"	t	typeref:enum:__anon132
FMOD_DSP_DELAY_CH0	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH0,      \/* Channel #0 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_CH1	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH1,      \/* Channel #1 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_CH10	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH10,     \/* Channel #10 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_CH11	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH11,     \/* Channel #11 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_CH12	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH12,     \/* Channel #12 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_CH13	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH13,     \/* Channel #13 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_CH14	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH14,     \/* Channel #14 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_CH15	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH15,     \/* Channel #15 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_CH2	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH2,      \/* Channel #2 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_CH3	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH3,      \/* Channel #3 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_CH4	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH4,      \/* Channel #4 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_CH5	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH5,      \/* Channel #5 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_CH6	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH6,      \/* Channel #6 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_CH7	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH7,      \/* Channel #7 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_CH8	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH8,      \/* Channel #8 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_CH9	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_CH9,      \/* Channel #9 Delay in ms.  0  to 10000.  Default = 0. *\/$/;"	e	enum:__anon132
FMOD_DSP_DELAY_MAXDELAY	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DELAY_MAXDELAY  \/* Maximum delay in ms.  0  to 10000.  Default = 10. *\/$/;"	e	enum:__anon132
FMOD_DSP_DESCRIPTION	include/fmod/fmod_dsp.h	/^typedef struct FMOD_DSP_DESCRIPTION$/;"	s
FMOD_DSP_DESCRIPTION	include/fmod/fmod_dsp.h	/^} FMOD_DSP_DESCRIPTION;$/;"	t	typeref:struct:FMOD_DSP_DESCRIPTION
FMOD_DSP_DIALOGCALLBACK	include/fmod/fmod_dsp.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_DSP_DIALOGCALLBACK)     (FMOD_DSP_STATE *dsp_state, void *hwnd, int show);$/;"	t
FMOD_DSP_DISTORTION	include/fmod/fmod_dsp.h	/^} FMOD_DSP_DISTORTION;$/;"	t	typeref:enum:__anon135
FMOD_DSP_DISTORTION_LEVEL	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DISTORTION_LEVEL    \/* Distortion value.  0.0 to 1.0.  Default = 0.5. *\/$/;"	e	enum:__anon135
FMOD_DSP_ECHO	include/fmod/fmod_dsp.h	/^} FMOD_DSP_ECHO;$/;"	t	typeref:enum:__anon131
FMOD_DSP_ECHO_DECAYRATIO	include/fmod/fmod_dsp.h	/^    FMOD_DSP_ECHO_DECAYRATIO,  \/* Echo decay per delay.  0 to 1.  1.0 = No decay, 0.0 = total decay (ie simple 1 line delay).  Default = 0.5. *\/$/;"	e	enum:__anon131
FMOD_DSP_ECHO_DELAY	include/fmod/fmod_dsp.h	/^    FMOD_DSP_ECHO_DELAY,       \/* Echo delay in ms.  10  to 5000.  Default = 500. *\/$/;"	e	enum:__anon131
FMOD_DSP_ECHO_DRYMIX	include/fmod/fmod_dsp.h	/^    FMOD_DSP_ECHO_DRYMIX,      \/* Volume of original signal to pass to output.  0.0 to 1.0. Default = 1.0. *\/$/;"	e	enum:__anon131
FMOD_DSP_ECHO_MAXCHANNELS	include/fmod/fmod_dsp.h	/^    FMOD_DSP_ECHO_MAXCHANNELS, \/* Maximum channels supported.  0 to 16.  0 = same as fmod's default output polyphony, 1 = mono, 2 = stereo etc.  See remarks for more.  Default = 0.  It is suggested to leave at 0! *\/$/;"	e	enum:__anon131
FMOD_DSP_ECHO_WETMIX	include/fmod/fmod_dsp.h	/^    FMOD_DSP_ECHO_WETMIX       \/* Volume of echo signal to pass to output.  0.0 to 1.0. Default = 1.0. *\/$/;"	e	enum:__anon131
FMOD_DSP_FFT_WINDOW	include/fmod/fmod.h	/^} FMOD_DSP_FFT_WINDOW;$/;"	t	typeref:enum:__anon119
FMOD_DSP_FFT_WINDOW_BLACKMAN	include/fmod/fmod.h	/^    FMOD_DSP_FFT_WINDOW_BLACKMAN,        \/* w[n] = 0.42 - (0.5  * COS(n\/N) ) + (0.08 * COS(2.0 * n\/N) )                                           *\/$/;"	e	enum:__anon119
FMOD_DSP_FFT_WINDOW_BLACKMANHARRIS	include/fmod/fmod.h	/^    FMOD_DSP_FFT_WINDOW_BLACKMANHARRIS,  \/* w[n] = 0.35875 - (0.48829 * COS(1.0 * n\/N)) + (0.14128 * COS(2.0 * n\/N)) - (0.01168 * COS(3.0 * n\/N)) *\/$/;"	e	enum:__anon119
FMOD_DSP_FFT_WINDOW_FORCEINT	include/fmod/fmod.h	/^    FMOD_DSP_FFT_WINDOW_FORCEINT = 65536 \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon119
FMOD_DSP_FFT_WINDOW_HAMMING	include/fmod/fmod.h	/^    FMOD_DSP_FFT_WINDOW_HAMMING,         \/* w[n] = 0.54 - (0.46 * COS(n\/N) )                                                                      *\/$/;"	e	enum:__anon119
FMOD_DSP_FFT_WINDOW_HANNING	include/fmod/fmod.h	/^    FMOD_DSP_FFT_WINDOW_HANNING,         \/* w[n] = 0.5 *  (1.0  - COS(n\/N) )                                                                      *\/$/;"	e	enum:__anon119
FMOD_DSP_FFT_WINDOW_MAX	include/fmod/fmod.h	/^    FMOD_DSP_FFT_WINDOW_MAX,             \/* Maximum number of FFT window types supported. *\/$/;"	e	enum:__anon119
FMOD_DSP_FFT_WINDOW_RECT	include/fmod/fmod.h	/^    FMOD_DSP_FFT_WINDOW_RECT,            \/* w[n] = 1.0                                                                                            *\/$/;"	e	enum:__anon119
FMOD_DSP_FFT_WINDOW_TRIANGLE	include/fmod/fmod.h	/^    FMOD_DSP_FFT_WINDOW_TRIANGLE,        \/* w[n] = TRI(2n\/N)                                                                                      *\/$/;"	e	enum:__anon119
FMOD_DSP_FLANGE	include/fmod/fmod_dsp.h	/^} FMOD_DSP_FLANGE;$/;"	t	typeref:enum:__anon133
FMOD_DSP_FLANGE_DEPTH	include/fmod/fmod_dsp.h	/^    FMOD_DSP_FLANGE_DEPTH,       \/* Flange depth (percentage of 40ms delay).  0.01 to 1.0.  Default = 1.0. *\/$/;"	e	enum:__anon133
FMOD_DSP_FLANGE_DRYMIX	include/fmod/fmod_dsp.h	/^    FMOD_DSP_FLANGE_DRYMIX,      \/* Volume of original signal to pass to output.  0.0 to 1.0. Default = 0.45. *\/$/;"	e	enum:__anon133
FMOD_DSP_FLANGE_RATE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_FLANGE_RATE         \/* Flange speed in hz.  0.0 to 20.0.  Default = 0.1. *\/$/;"	e	enum:__anon133
FMOD_DSP_FLANGE_WETMIX	include/fmod/fmod_dsp.h	/^    FMOD_DSP_FLANGE_WETMIX,      \/* Volume of flange signal to pass to output.  0.0 to 1.0. Default = 0.55. *\/$/;"	e	enum:__anon133
FMOD_DSP_GETPARAMCALLBACK	include/fmod/fmod_dsp.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_DSP_GETPARAMCALLBACK)   (FMOD_DSP_STATE *dsp_state, int index, float *value, char *valuestr);$/;"	t
FMOD_DSP_HIGHPASS	include/fmod/fmod_dsp.h	/^} FMOD_DSP_HIGHPASS;$/;"	t	typeref:enum:__anon130
FMOD_DSP_HIGHPASS_CUTOFF	include/fmod/fmod_dsp.h	/^    FMOD_DSP_HIGHPASS_CUTOFF,    \/* Highpass cutoff frequency in hz.  1.0 to output 22000.0.  Default = 5000.0. *\/$/;"	e	enum:__anon130
FMOD_DSP_HIGHPASS_RESONANCE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_HIGHPASS_RESONANCE  \/* Highpass resonance Q value.  1.0 to 10.0.  Default = 1.0. *\/$/;"	e	enum:__anon130
FMOD_DSP_HIGHPASS_SIMPLE	include/fmod/fmod_dsp.h	/^} FMOD_DSP_HIGHPASS_SIMPLE;$/;"	t	typeref:enum:__anon144
FMOD_DSP_HIGHPASS_SIMPLE_CUTOFF	include/fmod/fmod_dsp.h	/^    FMOD_DSP_HIGHPASS_SIMPLE_CUTOFF     \/* Highpass cutoff frequency in hz.  10.0 to 22000.0.  Default = 1000.0 *\/$/;"	e	enum:__anon144
FMOD_DSP_ITECHO	include/fmod/fmod_dsp.h	/^} FMOD_DSP_ITECHO;$/;"	t	typeref:enum:__anon140
FMOD_DSP_ITECHO_FEEDBACK	include/fmod/fmod_dsp.h	/^    FMOD_DSP_ITECHO_FEEDBACK,       \/* Percentage of output fed back into input, in the range from 0.0 through 100.0. The default value is 50. *\/$/;"	e	enum:__anon140
FMOD_DSP_ITECHO_LEFTDELAY	include/fmod/fmod_dsp.h	/^    FMOD_DSP_ITECHO_LEFTDELAY,      \/* Delay for left channel, in milliseconds, in the range from 1.0 through 2000.0. The default value is 500 ms. *\/$/;"	e	enum:__anon140
FMOD_DSP_ITECHO_PANDELAY	include/fmod/fmod_dsp.h	/^    FMOD_DSP_ITECHO_PANDELAY        \/* Value that specifies whether to swap left and right delays with each successive echo. The default value is zero, meaning no swap. Possible values are defined as 0.0 (equivalent to FALSE) and 1.0 (equivalent to TRUE).  CURRENTLY NOT SUPPORTED. *\/$/;"	e	enum:__anon140
FMOD_DSP_ITECHO_RIGHTDELAY	include/fmod/fmod_dsp.h	/^    FMOD_DSP_ITECHO_RIGHTDELAY,     \/* Delay for right channel, in milliseconds, in the range from 1.0 through 2000.0. The default value is 500 ms. *\/$/;"	e	enum:__anon140
FMOD_DSP_ITECHO_WETDRYMIX	include/fmod/fmod_dsp.h	/^    FMOD_DSP_ITECHO_WETDRYMIX,      \/* Ratio of wet (processed) signal to dry (unprocessed) signal. Must be in the range from 0.0 through 100.0 (all wet). The default value is 50. *\/$/;"	e	enum:__anon140
FMOD_DSP_ITLOWPASS	include/fmod/fmod_dsp.h	/^} FMOD_DSP_ITLOWPASS;$/;"	t	typeref:enum:__anon129
FMOD_DSP_ITLOWPASS_CUTOFF	include/fmod/fmod_dsp.h	/^    FMOD_DSP_ITLOWPASS_CUTOFF,    \/* Lowpass cutoff frequency in hz.  1.0 to 22000.0.  Default = 5000.0\/ *\/$/;"	e	enum:__anon129
FMOD_DSP_ITLOWPASS_RESONANCE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_ITLOWPASS_RESONANCE  \/* Lowpass resonance Q value.  0.0 to 127.0.  Default = 1.0. *\/$/;"	e	enum:__anon129
FMOD_DSP_LOWPASS	include/fmod/fmod_dsp.h	/^} FMOD_DSP_LOWPASS;$/;"	t	typeref:enum:__anon128
FMOD_DSP_LOWPASS_CUTOFF	include/fmod/fmod_dsp.h	/^    FMOD_DSP_LOWPASS_CUTOFF,    \/* Lowpass cutoff frequency in hz.   10.0 to 22000.0.  Default = 5000.0. *\/$/;"	e	enum:__anon128
FMOD_DSP_LOWPASS_RESONANCE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_LOWPASS_RESONANCE  \/* Lowpass resonance Q value. 1.0 to 10.0.  Default = 1.0. *\/$/;"	e	enum:__anon128
FMOD_DSP_LOWPASS_SIMPLE	include/fmod/fmod_dsp.h	/^} FMOD_DSP_LOWPASS_SIMPLE;$/;"	t	typeref:enum:__anon143
FMOD_DSP_LOWPASS_SIMPLE_CUTOFF	include/fmod/fmod_dsp.h	/^    FMOD_DSP_LOWPASS_SIMPLE_CUTOFF     \/* Lowpass cutoff frequency in hz.  10.0 to 22000.0.  Default = 5000.0 *\/$/;"	e	enum:__anon143
FMOD_DSP_NORMALIZE	include/fmod/fmod_dsp.h	/^} FMOD_DSP_NORMALIZE;$/;"	t	typeref:enum:__anon136
FMOD_DSP_NORMALIZE_FADETIME	include/fmod/fmod_dsp.h	/^    FMOD_DSP_NORMALIZE_FADETIME,    \/* Time to ramp the silence to full in ms.  0.0 to 20000.0. Default = 5000.0. *\/$/;"	e	enum:__anon136
FMOD_DSP_NORMALIZE_MAXAMP	include/fmod/fmod_dsp.h	/^    FMOD_DSP_NORMALIZE_MAXAMP       \/* Maximum amplification allowed.  1.0 to 100000.0.  Default = 20.0.  1.0 = no amplifaction, higher values allow more boost. *\/$/;"	e	enum:__anon136
FMOD_DSP_NORMALIZE_THRESHHOLD	include/fmod/fmod_dsp.h	/^    FMOD_DSP_NORMALIZE_THRESHHOLD,  \/* Lower volume range threshold to ignore.  0.0 to 1.0.  Default = 0.1.  Raise higher to stop amplification of very quiet signals. *\/$/;"	e	enum:__anon136
FMOD_DSP_OSCILLATOR	include/fmod/fmod_dsp.h	/^} FMOD_DSP_OSCILLATOR;$/;"	t	typeref:enum:__anon127
FMOD_DSP_OSCILLATOR_RATE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_OSCILLATOR_RATE    \/* Frequency of the sinewave in hz.  1.0 to 22000.0.  Default = 220.0. *\/$/;"	e	enum:__anon127
FMOD_DSP_OSCILLATOR_TYPE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_OSCILLATOR_TYPE,   \/* Waveform type.  0 = sine.  1 = square. 2 = sawup. 3 = sawdown. 4 = triangle. 5 = noise.  *\/$/;"	e	enum:__anon127
FMOD_DSP_PARAMEQ	include/fmod/fmod_dsp.h	/^} FMOD_DSP_PARAMEQ;$/;"	t	typeref:enum:__anon137
FMOD_DSP_PARAMEQ_BANDWIDTH	include/fmod/fmod_dsp.h	/^    FMOD_DSP_PARAMEQ_BANDWIDTH,  \/* Octave range around the center frequency to filter.  0.2 to 5.0.  Default = 1.0. *\/$/;"	e	enum:__anon137
FMOD_DSP_PARAMEQ_CENTER	include/fmod/fmod_dsp.h	/^    FMOD_DSP_PARAMEQ_CENTER,     \/* Frequency center.  20.0 to 22000.0.  Default = 8000.0. *\/$/;"	e	enum:__anon137
FMOD_DSP_PARAMEQ_GAIN	include/fmod/fmod_dsp.h	/^    FMOD_DSP_PARAMEQ_GAIN        \/* Frequency Gain.  0.05 to 3.0.  Default = 1.0.  *\/$/;"	e	enum:__anon137
FMOD_DSP_PARAMETERDESC	include/fmod/fmod_dsp.h	/^typedef struct FMOD_DSP_PARAMETERDESC$/;"	s
FMOD_DSP_PARAMETERDESC	include/fmod/fmod_dsp.h	/^} FMOD_DSP_PARAMETERDESC;$/;"	t	typeref:struct:FMOD_DSP_PARAMETERDESC
FMOD_DSP_PITCHSHIFT	include/fmod/fmod_dsp.h	/^} FMOD_DSP_PITCHSHIFT;$/;"	t	typeref:enum:__anon138
FMOD_DSP_PITCHSHIFT_FFTSIZE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_PITCHSHIFT_FFTSIZE,     \/* FFT window size.  256, 512, 1024, 2048, 4096.  Default = 1024.  Increase this to reduce 'smearing'.  This effect is a warbling sound similar to when an mp3 is encoded at very low bitrates. *\/$/;"	e	enum:__anon138
FMOD_DSP_PITCHSHIFT_MAXCHANNELS	include/fmod/fmod_dsp.h	/^    FMOD_DSP_PITCHSHIFT_MAXCHANNELS  \/* Maximum channels supported.  0 to 16.  0 = same as fmod's default output polyphony, 1 = mono, 2 = stereo etc.  See remarks for more.  Default = 0.  It is suggested to leave at 0! *\/$/;"	e	enum:__anon138
FMOD_DSP_PITCHSHIFT_OVERLAP	include/fmod/fmod_dsp.h	/^    FMOD_DSP_PITCHSHIFT_OVERLAP,     \/* Removed.  Do not use.  FMOD now uses 4 overlaps and cannot be changed. *\/$/;"	e	enum:__anon138
FMOD_DSP_PITCHSHIFT_PITCH	include/fmod/fmod_dsp.h	/^    FMOD_DSP_PITCHSHIFT_PITCH,       \/* Pitch value.  0.5 to 2.0.  Default = 1.0. 0.5 = one octave down, 2.0 = one octave up.  1.0 does not change the pitch. *\/$/;"	e	enum:__anon138
FMOD_DSP_READCALLBACK	include/fmod/fmod_dsp.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_DSP_READCALLBACK)       (FMOD_DSP_STATE *dsp_state, float *inbuffer, float *outbuffer, unsigned int length, int inchannels, int outchannels);$/;"	t
FMOD_DSP_RELEASECALLBACK	include/fmod/fmod_dsp.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_DSP_RELEASECALLBACK)    (FMOD_DSP_STATE *dsp_state);$/;"	t
FMOD_DSP_RESAMPLER	include/fmod/fmod.h	/^} FMOD_DSP_RESAMPLER;$/;"	t	typeref:enum:__anon120
FMOD_DSP_RESAMPLER_CUBIC	include/fmod/fmod.h	/^    FMOD_DSP_RESAMPLER_CUBIC,           \/* Cubic interpolation.  Slower than linear interpolation but better quality. *\/$/;"	e	enum:__anon120
FMOD_DSP_RESAMPLER_FORCEINT	include/fmod/fmod.h	/^    FMOD_DSP_RESAMPLER_FORCEINT = 65536 \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon120
FMOD_DSP_RESAMPLER_LINEAR	include/fmod/fmod.h	/^    FMOD_DSP_RESAMPLER_LINEAR,          \/* Linear interpolation (default method).  Fast and good quality, causes very slight lowpass effect on low frequency sounds. *\/$/;"	e	enum:__anon120
FMOD_DSP_RESAMPLER_MAX	include/fmod/fmod.h	/^    FMOD_DSP_RESAMPLER_MAX,             \/* Maximum number of resample methods supported. *\/$/;"	e	enum:__anon120
FMOD_DSP_RESAMPLER_NOINTERP	include/fmod/fmod.h	/^    FMOD_DSP_RESAMPLER_NOINTERP,        \/* No interpolation.  High frequency aliasing hiss will be audible depending on the sample rate of the sound. *\/$/;"	e	enum:__anon120
FMOD_DSP_RESAMPLER_SPLINE	include/fmod/fmod.h	/^    FMOD_DSP_RESAMPLER_SPLINE,          \/* 5 point spline interpolation.  Slowest resampling method but best quality. *\/$/;"	e	enum:__anon120
FMOD_DSP_RESETCALLBACK	include/fmod/fmod_dsp.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_DSP_RESETCALLBACK)      (FMOD_DSP_STATE *dsp_state);$/;"	t
FMOD_DSP_SETPARAMCALLBACK	include/fmod/fmod_dsp.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_DSP_SETPARAMCALLBACK)   (FMOD_DSP_STATE *dsp_state, int index, float value);$/;"	t
FMOD_DSP_SETPOSITIONCALLBACK	include/fmod/fmod_dsp.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_DSP_SETPOSITIONCALLBACK)(FMOD_DSP_STATE *dsp_state, unsigned int pos);$/;"	t
FMOD_DSP_SFXREVERB	include/fmod/fmod_dsp.h	/^} FMOD_DSP_SFXREVERB;$/;"	t	typeref:enum:__anon142
FMOD_DSP_SFXREVERB_DECAYHFRATIO	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SFXREVERB_DECAYHFRATIO,        \/* Decay HF Ratio : High-frequency to low-frequency decay time ratio.  Ranges from 0.1 to 2.0. Default is 0.5. *\/$/;"	e	enum:__anon142
FMOD_DSP_SFXREVERB_DECAYTIME	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SFXREVERB_DECAYTIME,           \/* Decay Time     : Reverberation decay time at low-frequencies in seconds.  Ranges from 0.1 to 20.0. Default is 1.0. *\/$/;"	e	enum:__anon142
FMOD_DSP_SFXREVERB_DENSITY	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SFXREVERB_DENSITY,             \/* Density        : Reverberation density (modal density) in percent.  Ranges from 0.0 to 100.0.  Default is 100.0. *\/$/;"	e	enum:__anon142
FMOD_DSP_SFXREVERB_DIFFUSION	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SFXREVERB_DIFFUSION,           \/* Diffusion      : Reverberation diffusion (echo density) in percent.  Ranges from 0.0 to 100.0.  Default is 100.0. *\/$/;"	e	enum:__anon142
FMOD_DSP_SFXREVERB_DRYLEVEL	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SFXREVERB_DRYLEVEL,            \/* Dry Level      : Mix level of dry signal in output in mB.  Ranges from -10000.0 to 0.0.  Default is 0. *\/$/;"	e	enum:__anon142
FMOD_DSP_SFXREVERB_HFREFERENCE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SFXREVERB_HFREFERENCE,         \/* HF Reference   : Reference high frequency in Hz.  Ranges from 20.0 to 20000.0. Default is 5000.0. *\/$/;"	e	enum:__anon142
FMOD_DSP_SFXREVERB_LFREFERENCE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SFXREVERB_LFREFERENCE          \/* LF Reference   : Reference low-frequency in Hz.  Ranges from 20.0 to 1000.0. Default is 250.0. *\/$/;"	e	enum:__anon142
FMOD_DSP_SFXREVERB_REFLECTIONSDELAY	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SFXREVERB_REFLECTIONSDELAY,    \/* Reflect Delay  : Delay time of first reflection in seconds.  Ranges from 0.0 to 0.3.  Default is 0.02. *\/$/;"	e	enum:__anon142
FMOD_DSP_SFXREVERB_REFLECTIONSLEVEL	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SFXREVERB_REFLECTIONSLEVEL,    \/* Reflections    : Early reflections level relative to room effect in mB.  Ranges from -10000.0 to 1000.0.  Default is -10000.0. *\/$/;"	e	enum:__anon142
FMOD_DSP_SFXREVERB_REVERBDELAY	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SFXREVERB_REVERBDELAY,         \/* Reverb Delay   : Late reverberation delay time relative to first reflection in seconds.  Ranges from 0.0 to 0.1.  Default is 0.04. *\/$/;"	e	enum:__anon142
FMOD_DSP_SFXREVERB_REVERBLEVEL	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SFXREVERB_REVERBLEVEL,         \/* Reverb         : Late reverberation level relative to room effect in mB.  Ranges from -10000.0 to 2000.0.  Default is 0.0. *\/$/;"	e	enum:__anon142
FMOD_DSP_SFXREVERB_ROOM	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SFXREVERB_ROOM,                \/* Room           : Room effect level at low frequencies in mB.  Ranges from -10000.0 to 0.0.  Default is -10000.0. *\/$/;"	e	enum:__anon142
FMOD_DSP_SFXREVERB_ROOMHF	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SFXREVERB_ROOMHF,              \/* Room HF        : Room effect high-frequency level re. low frequency level in mB.  Ranges from -10000.0 to 0.0.  Default is 0.0. *\/$/;"	e	enum:__anon142
FMOD_DSP_SFXREVERB_ROOMLF	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SFXREVERB_ROOMLF,              \/* Room LF        : Room effect low-frequency level in mB.  Ranges from -10000.0 to 0.0.  Default is 0.0. *\/$/;"	e	enum:__anon142
FMOD_DSP_STATE	include/fmod/fmod_dsp.h	/^struct FMOD_DSP_STATE$/;"	s
FMOD_DSP_STATE	include/fmod/fmod_dsp.h	/^typedef struct FMOD_DSP_STATE FMOD_DSP_STATE;$/;"	t	typeref:struct:FMOD_DSP_STATE
FMOD_DSP_TREMOLO	include/fmod/fmod_dsp.h	/^} FMOD_DSP_TREMOLO;$/;"	t	typeref:enum:__anon134
FMOD_DSP_TREMOLO_DEPTH	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TREMOLO_DEPTH,         \/* Tremolo depth.  0 to 1.  Default = 0. *\/$/;"	e	enum:__anon134
FMOD_DSP_TREMOLO_DUTY	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TREMOLO_DUTY,          \/* LFO on-time.  0 to 1.  Default = 0.5. *\/$/;"	e	enum:__anon134
FMOD_DSP_TREMOLO_FREQUENCY	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TREMOLO_FREQUENCY,     \/* LFO frequency in Hz.  0.1 to 20.  Default = 4. *\/$/;"	e	enum:__anon134
FMOD_DSP_TREMOLO_PHASE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TREMOLO_PHASE,         \/* Instantaneous LFO phase.  0 to 1.  Default = 0. *\/$/;"	e	enum:__anon134
FMOD_DSP_TREMOLO_SHAPE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TREMOLO_SHAPE,         \/* LFO shape morph between triangle and sine.  0 to 1.  Default = 0. *\/$/;"	e	enum:__anon134
FMOD_DSP_TREMOLO_SKEW	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TREMOLO_SKEW,          \/* Time-skewing of LFO cycle.  -1 to 1.  Default = 0. *\/$/;"	e	enum:__anon134
FMOD_DSP_TREMOLO_SPREAD	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TREMOLO_SPREAD         \/* Rotation \/ auto-pan effect.  -1 to 1.  Default = 0. *\/$/;"	e	enum:__anon134
FMOD_DSP_TREMOLO_SQUARE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TREMOLO_SQUARE,        \/* Flatness of the LFO shape.  0 to 1.  Default = 0. *\/$/;"	e	enum:__anon134
FMOD_DSP_TYPE	include/fmod/fmod_dsp.h	/^} FMOD_DSP_TYPE;$/;"	t	typeref:enum:__anon126
FMOD_DSP_TYPE_CHORUS	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_CHORUS,             \/* This unit produces a chorus effect on the sound. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_COMPRESSOR	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_COMPRESSOR,         \/* This unit implements dynamic compression (linked multichannel, wideband) *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_DELAY	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_DELAY,              \/* This unit produces different delays on individual channels of the sound. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_DISTORTION	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_DISTORTION,         \/* This unit distorts the sound. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_ECHO	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_ECHO,               \/* This unit produces an echo on the sound and fades out at the desired rate. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_FLANGE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_FLANGE,             \/* This unit produces a flange effect on the sound. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_FORCEINT	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_FORCEINT = 65536    \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_HIGHPASS	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_HIGHPASS,           \/* This unit filters sound using a resonant highpass filter algorithm. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_HIGHPASS_SIMPLE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_HIGHPASS_SIMPLE,    \/* This unit filters sound using a simple highpass with no resonance, but has flexible cutoff and is fast. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_ITECHO	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_ITECHO,             \/* This unit produces an echo on the sound and fades out at the desired rate as is used in Impulse Tracker. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_ITLOWPASS	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_ITLOWPASS,          \/* This unit filters sound using a resonant lowpass filter algorithm that is used in Impulse Tracker, but with limited cutoff range (0 to 8060hz). *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_LADSPAPLUGIN	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_LADSPAPLUGIN,       \/* This unit allows the use of LADSPA standard plugins. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_LOWPASS	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_LOWPASS,            \/* This unit filters sound using a high quality, resonant lowpass filter algorithm but consumes more CPU time. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_LOWPASS_SIMPLE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_LOWPASS_SIMPLE,     \/* This unit filters sound using a simple lowpass with no resonance, but has flexible cutoff and is fast. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_MIXER	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_MIXER,              \/* This unit does nothing but take inputs and mix them together then feed the result to the soundcard unit. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_NORMALIZE	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_NORMALIZE,          \/* This unit normalizes or amplifies the sound to a certain level. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_OSCILLATOR	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_OSCILLATOR,         \/* This unit generates sine\/square\/saw\/triangle or noise tones. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_PARAMEQ	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_PARAMEQ,            \/* This unit attenuates or amplifies a selected frequency range. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_PITCHSHIFT	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_PITCHSHIFT,         \/* This unit bends the pitch of a sound without changing the speed of playback. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_SFXREVERB	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_SFXREVERB,          \/* This unit implements SFX reverb *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_TREMOLO	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_TREMOLO,            \/* This unit produces a tremolo \/ chopper effect on the sound. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_UNKNOWN	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_UNKNOWN,            \/* This unit was created via a non FMOD plugin so has an unknown purpose. *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_VSTPLUGIN	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_VSTPLUGIN,          \/* This unit allows the use of Steinberg VST plugins *\/$/;"	e	enum:__anon126
FMOD_DSP_TYPE_WINAMPPLUGIN	include/fmod/fmod_dsp.h	/^    FMOD_DSP_TYPE_WINAMPPLUGIN,       \/* This unit allows the use of Nullsoft Winamp plugins *\/$/;"	e	enum:__anon126
FMOD_ERR_ALREADYLOCKED	include/fmod/fmod.h	/^    FMOD_ERR_ALREADYLOCKED,         \/* Tried to call lock a second time before unlock was called. *\/$/;"	e	enum:__anon105
FMOD_ERR_BADCOMMAND	include/fmod/fmod.h	/^    FMOD_ERR_BADCOMMAND,            \/* Tried to call a function on a data type that does not allow this type of functionality (ie calling Sound::lock on a streaming sound). *\/$/;"	e	enum:__anon105
FMOD_ERR_CDDA_DRIVERS	include/fmod/fmod.h	/^    FMOD_ERR_CDDA_DRIVERS,          \/* Neither NTSCSI nor ASPI could be initialised. *\/$/;"	e	enum:__anon105
FMOD_ERR_CDDA_INIT	include/fmod/fmod.h	/^    FMOD_ERR_CDDA_INIT,             \/* An error occurred while initialising the CDDA subsystem. *\/$/;"	e	enum:__anon105
FMOD_ERR_CDDA_INVALID_DEVICE	include/fmod/fmod.h	/^    FMOD_ERR_CDDA_INVALID_DEVICE,   \/* Couldn't find the specified device. *\/$/;"	e	enum:__anon105
FMOD_ERR_CDDA_NOAUDIO	include/fmod/fmod.h	/^    FMOD_ERR_CDDA_NOAUDIO,          \/* No audio tracks on the specified disc. *\/$/;"	e	enum:__anon105
FMOD_ERR_CDDA_NODEVICES	include/fmod/fmod.h	/^    FMOD_ERR_CDDA_NODEVICES,        \/* No CD\/DVD devices were found. *\/ $/;"	e	enum:__anon105
FMOD_ERR_CDDA_NODISC	include/fmod/fmod.h	/^    FMOD_ERR_CDDA_NODISC,           \/* No disc present in the specified drive. *\/$/;"	e	enum:__anon105
FMOD_ERR_CDDA_READ	include/fmod/fmod.h	/^    FMOD_ERR_CDDA_READ,             \/* A CDDA read error occurred. *\/$/;"	e	enum:__anon105
FMOD_ERR_CHANNEL_ALLOC	include/fmod/fmod.h	/^    FMOD_ERR_CHANNEL_ALLOC,         \/* Error trying to allocate a channel. *\/$/;"	e	enum:__anon105
FMOD_ERR_CHANNEL_STOLEN	include/fmod/fmod.h	/^    FMOD_ERR_CHANNEL_STOLEN,        \/* The specified channel has been reused to play another sound. *\/$/;"	e	enum:__anon105
FMOD_ERR_COM	include/fmod/fmod.h	/^    FMOD_ERR_COM,                   \/* A Win32 COM related error occured. COM failed to initialize or a QueryInterface failed meaning a Windows codec or driver was not installed properly. *\/$/;"	e	enum:__anon105
FMOD_ERR_DMA	include/fmod/fmod.h	/^    FMOD_ERR_DMA,                   \/* DMA Failure.  See debug output for more information. *\/$/;"	e	enum:__anon105
FMOD_ERR_DSP_CONNECTION	include/fmod/fmod.h	/^    FMOD_ERR_DSP_CONNECTION,        \/* DSP connection error.  Connection possibly caused a cyclic dependancy.  Or tried to connect a tree too many units deep (more than 128). *\/$/;"	e	enum:__anon105
FMOD_ERR_DSP_FORMAT	include/fmod/fmod.h	/^    FMOD_ERR_DSP_FORMAT,            \/* DSP Format error.  A DSP unit may have attempted to connect to this network with the wrong format. *\/$/;"	e	enum:__anon105
FMOD_ERR_DSP_NOTFOUND	include/fmod/fmod.h	/^    FMOD_ERR_DSP_NOTFOUND,          \/* DSP connection error.  Couldn't find the DSP unit specified. *\/$/;"	e	enum:__anon105
FMOD_ERR_DSP_RUNNING	include/fmod/fmod.h	/^    FMOD_ERR_DSP_RUNNING,           \/* DSP error.  Cannot perform this operation while the network is in the middle of running.  This will most likely happen if a connection or disconnection is attempted in a DSP callback. *\/$/;"	e	enum:__anon105
FMOD_ERR_DSP_TOOMANYCONNECTIONS	include/fmod/fmod.h	/^    FMOD_ERR_DSP_TOOMANYCONNECTIONS,\/* DSP connection error.  The unit being connected to or disconnected should only have 1 input or output. *\/$/;"	e	enum:__anon105
FMOD_ERR_EVENT_ALREADY_LOADED	include/fmod/fmod.h	/^    FMOD_ERR_EVENT_ALREADY_LOADED,  \/* The specified project has already been loaded. Having multiple copies of the same project loaded simultaneously is forbidden. *\/$/;"	e	enum:__anon105
FMOD_ERR_EVENT_FAILED	include/fmod/fmod.h	/^    FMOD_ERR_EVENT_FAILED,          \/* An Event failed to be retrieved, most likely due to 'just fail' being specified as the max playbacks behavior. *\/$/;"	e	enum:__anon105
FMOD_ERR_EVENT_GUIDCONFLICT	include/fmod/fmod.h	/^    FMOD_ERR_EVENT_GUIDCONFLICT,    \/* An event with the same GUID already exists. *\/$/;"	e	enum:__anon105
FMOD_ERR_EVENT_INFOONLY	include/fmod/fmod.h	/^    FMOD_ERR_EVENT_INFOONLY,        \/* Can't execute this command on an EVENT_INFOONLY event. *\/$/;"	e	enum:__anon105
FMOD_ERR_EVENT_INTERNAL	include/fmod/fmod.h	/^    FMOD_ERR_EVENT_INTERNAL,        \/* An error occured that wasn't supposed to.  See debug log for reason. *\/$/;"	e	enum:__anon105
FMOD_ERR_EVENT_MAXSTREAMS	include/fmod/fmod.h	/^    FMOD_ERR_EVENT_MAXSTREAMS,      \/* Event failed because 'Max streams' was hit when FMOD_EVENT_INIT_FAIL_ON_MAXSTREAMS was specified. *\/$/;"	e	enum:__anon105
FMOD_ERR_EVENT_MISMATCH	include/fmod/fmod.h	/^    FMOD_ERR_EVENT_MISMATCH,        \/* FSB mismatches the FEV it was compiled with, the stream\/sample mode it was meant to be created with was different, or the FEV was built for a different platform. *\/$/;"	e	enum:__anon105
FMOD_ERR_EVENT_NAMECONFLICT	include/fmod/fmod.h	/^    FMOD_ERR_EVENT_NAMECONFLICT,    \/* A category with the same name already exists. *\/$/;"	e	enum:__anon105
FMOD_ERR_EVENT_NEEDSSIMPLE	include/fmod/fmod.h	/^    FMOD_ERR_EVENT_NEEDSSIMPLE,     \/* Tried to call a function on a complex event that's only supported by simple events. *\/$/;"	e	enum:__anon105
FMOD_ERR_EVENT_NOTFOUND	include/fmod/fmod.h	/^    FMOD_ERR_EVENT_NOTFOUND,        \/* The requested event, event group, event category or event property could not be found. *\/$/;"	e	enum:__anon105
FMOD_ERR_FILE_BAD	include/fmod/fmod.h	/^    FMOD_ERR_FILE_BAD,              \/* Error loading file. *\/$/;"	e	enum:__anon105
FMOD_ERR_FILE_COULDNOTSEEK	include/fmod/fmod.h	/^    FMOD_ERR_FILE_COULDNOTSEEK,     \/* Couldn't perform seek operation.  This is a limitation of the medium (ie netstreams) or the file format. *\/$/;"	e	enum:__anon105
FMOD_ERR_FILE_DISKEJECTED	include/fmod/fmod.h	/^    FMOD_ERR_FILE_DISKEJECTED,      \/* Media was ejected while reading. *\/$/;"	e	enum:__anon105
FMOD_ERR_FILE_EOF	include/fmod/fmod.h	/^    FMOD_ERR_FILE_EOF,              \/* End of file unexpectedly reached while trying to read essential data (truncated data?). *\/$/;"	e	enum:__anon105
FMOD_ERR_FILE_NOTFOUND	include/fmod/fmod.h	/^    FMOD_ERR_FILE_NOTFOUND,         \/* File not found. *\/$/;"	e	enum:__anon105
FMOD_ERR_FILE_UNWANTED	include/fmod/fmod.h	/^    FMOD_ERR_FILE_UNWANTED,         \/* Unwanted file access occured. *\/$/;"	e	enum:__anon105
FMOD_ERR_FORMAT	include/fmod/fmod.h	/^    FMOD_ERR_FORMAT,                \/* Unsupported file or audio format. *\/$/;"	e	enum:__anon105
FMOD_ERR_HTTP	include/fmod/fmod.h	/^    FMOD_ERR_HTTP,                  \/* A HTTP error occurred. This is a catch-all for HTTP errors not listed elsewhere. *\/$/;"	e	enum:__anon105
FMOD_ERR_HTTP_ACCESS	include/fmod/fmod.h	/^    FMOD_ERR_HTTP_ACCESS,           \/* The specified resource requires authentication or is forbidden. *\/$/;"	e	enum:__anon105
FMOD_ERR_HTTP_PROXY_AUTH	include/fmod/fmod.h	/^    FMOD_ERR_HTTP_PROXY_AUTH,       \/* Proxy authentication is required to access the specified resource. *\/$/;"	e	enum:__anon105
FMOD_ERR_HTTP_SERVER_ERROR	include/fmod/fmod.h	/^    FMOD_ERR_HTTP_SERVER_ERROR,     \/* A HTTP server error occurred. *\/$/;"	e	enum:__anon105
FMOD_ERR_HTTP_TIMEOUT	include/fmod/fmod.h	/^    FMOD_ERR_HTTP_TIMEOUT,          \/* The HTTP request timed out. *\/$/;"	e	enum:__anon105
FMOD_ERR_INITIALIZATION	include/fmod/fmod.h	/^    FMOD_ERR_INITIALIZATION,        \/* FMOD was not initialized correctly to support this function. *\/$/;"	e	enum:__anon105
FMOD_ERR_INITIALIZED	include/fmod/fmod.h	/^    FMOD_ERR_INITIALIZED,           \/* Cannot call this command after System::init. *\/$/;"	e	enum:__anon105
FMOD_ERR_INTERNAL	include/fmod/fmod.h	/^    FMOD_ERR_INTERNAL,              \/* An error occured that wasn't supposed to.  Contact support. *\/$/;"	e	enum:__anon105
FMOD_ERR_INVALID_ADDRESS	include/fmod/fmod.h	/^    FMOD_ERR_INVALID_ADDRESS,       \/* On Xbox 360, this memory address passed to FMOD must be physical, (ie allocated with XPhysicalAlloc.) *\/$/;"	e	enum:__anon105
FMOD_ERR_INVALID_FLOAT	include/fmod/fmod.h	/^    FMOD_ERR_INVALID_FLOAT,         \/* Value passed in was a NaN, Inf or denormalized float. *\/$/;"	e	enum:__anon105
FMOD_ERR_INVALID_HANDLE	include/fmod/fmod.h	/^    FMOD_ERR_INVALID_HANDLE,        \/* An invalid object handle was used. *\/$/;"	e	enum:__anon105
FMOD_ERR_INVALID_PARAM	include/fmod/fmod.h	/^    FMOD_ERR_INVALID_PARAM,         \/* An invalid parameter was passed to this function. *\/$/;"	e	enum:__anon105
FMOD_ERR_INVALID_POSITION	include/fmod/fmod.h	/^    FMOD_ERR_INVALID_POSITION,      \/* An invalid seek position was passed to this function. *\/$/;"	e	enum:__anon105
FMOD_ERR_INVALID_SPEAKER	include/fmod/fmod.h	/^    FMOD_ERR_INVALID_SPEAKER,       \/* An invalid speaker was passed to this function based on the current speaker mode. *\/$/;"	e	enum:__anon105
FMOD_ERR_INVALID_SYNCPOINT	include/fmod/fmod.h	/^    FMOD_ERR_INVALID_SYNCPOINT,     \/* The syncpoint did not come from this sound handle. *\/$/;"	e	enum:__anon105
FMOD_ERR_INVALID_VECTOR	include/fmod/fmod.h	/^    FMOD_ERR_INVALID_VECTOR,        \/* The vectors passed in are not unit length, or perpendicular. *\/$/;"	e	enum:__anon105
FMOD_ERR_MAXAUDIBLE	include/fmod/fmod.h	/^    FMOD_ERR_MAXAUDIBLE,            \/* Reached maximum audible playback count for this sound's soundgroup. *\/$/;"	e	enum:__anon105
FMOD_ERR_MEMORY	include/fmod/fmod.h	/^    FMOD_ERR_MEMORY,                \/* Not enough memory or resources. *\/$/;"	e	enum:__anon105
FMOD_ERR_MEMORY_CANTPOINT	include/fmod/fmod.h	/^    FMOD_ERR_MEMORY_CANTPOINT,      \/* Can't use FMOD_OPENMEMORY_POINT on non PCM source data, or non mp3\/xma\/adpcm data if FMOD_CREATECOMPRESSEDSAMPLE was used. *\/$/;"	e	enum:__anon105
FMOD_ERR_MEMORY_SRAM	include/fmod/fmod.h	/^    FMOD_ERR_MEMORY_SRAM,           \/* Not enough memory or resources on console sound ram. *\/$/;"	e	enum:__anon105
FMOD_ERR_MUSIC_NOCALLBACK	include/fmod/fmod.h	/^    FMOD_ERR_MUSIC_NOCALLBACK,      \/* The music callback is required, but it has not been set. *\/$/;"	e	enum:__anon105
FMOD_ERR_MUSIC_NOTFOUND	include/fmod/fmod.h	/^    FMOD_ERR_MUSIC_NOTFOUND,        \/* The requested music entity could not be found. *\/$/;"	e	enum:__anon105
FMOD_ERR_MUSIC_UNINITIALIZED	include/fmod/fmod.h	/^    FMOD_ERR_MUSIC_UNINITIALIZED,   \/* Music system is not initialized probably because no music data is loaded. *\/$/;"	e	enum:__anon105
FMOD_ERR_NEEDS2D	include/fmod/fmod.h	/^    FMOD_ERR_NEEDS2D,               \/* Tried to call a command on a 3d sound when the command was meant for 2d sound. *\/$/;"	e	enum:__anon105
FMOD_ERR_NEEDS3D	include/fmod/fmod.h	/^    FMOD_ERR_NEEDS3D,               \/* Tried to call a command on a 2d sound when the command was meant for 3d sound. *\/$/;"	e	enum:__anon105
FMOD_ERR_NEEDSHARDWARE	include/fmod/fmod.h	/^    FMOD_ERR_NEEDSHARDWARE,         \/* Tried to use a feature that requires hardware support.  (ie trying to play a GCADPCM compressed sound in software on Wii). *\/$/;"	e	enum:__anon105
FMOD_ERR_NEEDSSOFTWARE	include/fmod/fmod.h	/^    FMOD_ERR_NEEDSSOFTWARE,         \/* Tried to use a feature that requires the software engine.  Software engine has either been turned off, or command was executed on a hardware channel which does not support this feature. *\/$/;"	e	enum:__anon105
FMOD_ERR_NET_CONNECT	include/fmod/fmod.h	/^    FMOD_ERR_NET_CONNECT,           \/* Couldn't connect to the specified host. *\/$/;"	e	enum:__anon105
FMOD_ERR_NET_SOCKET_ERROR	include/fmod/fmod.h	/^    FMOD_ERR_NET_SOCKET_ERROR,      \/* A socket error occurred.  This is a catch-all for socket-related errors not listed elsewhere. *\/$/;"	e	enum:__anon105
FMOD_ERR_NET_URL	include/fmod/fmod.h	/^    FMOD_ERR_NET_URL,               \/* The specified URL couldn't be resolved. *\/$/;"	e	enum:__anon105
FMOD_ERR_NET_WOULD_BLOCK	include/fmod/fmod.h	/^    FMOD_ERR_NET_WOULD_BLOCK,       \/* Operation on a non-blocking socket could not complete immediately. *\/$/;"	e	enum:__anon105
FMOD_ERR_NOTREADY	include/fmod/fmod.h	/^    FMOD_ERR_NOTREADY,              \/* Operation could not be performed because specified sound\/DSP connection is not ready. *\/$/;"	e	enum:__anon105
FMOD_ERR_OUTPUT_ALLOCATED	include/fmod/fmod.h	/^    FMOD_ERR_OUTPUT_ALLOCATED,      \/* Error initializing output device, but more specifically, the output device is already in use and cannot be reused. *\/$/;"	e	enum:__anon105
FMOD_ERR_OUTPUT_CREATEBUFFER	include/fmod/fmod.h	/^    FMOD_ERR_OUTPUT_CREATEBUFFER,   \/* Error creating hardware sound buffer. *\/$/;"	e	enum:__anon105
FMOD_ERR_OUTPUT_DRIVERCALL	include/fmod/fmod.h	/^    FMOD_ERR_OUTPUT_DRIVERCALL,     \/* A call to a standard soundcard driver failed, which could possibly mean a bug in the driver or resources were missing or exhausted. *\/$/;"	e	enum:__anon105
FMOD_ERR_OUTPUT_ENUMERATION	include/fmod/fmod.h	/^    FMOD_ERR_OUTPUT_ENUMERATION,    \/* Error enumerating the available driver list. List may be inconsistent due to a recent device addition or removal. *\/$/;"	e	enum:__anon105
FMOD_ERR_OUTPUT_FORMAT	include/fmod/fmod.h	/^    FMOD_ERR_OUTPUT_FORMAT,         \/* Soundcard does not support the minimum features needed for this soundsystem (16bit stereo output). *\/$/;"	e	enum:__anon105
FMOD_ERR_OUTPUT_INIT	include/fmod/fmod.h	/^    FMOD_ERR_OUTPUT_INIT,           \/* Error initializing output device. *\/$/;"	e	enum:__anon105
FMOD_ERR_OUTPUT_NOHARDWARE	include/fmod/fmod.h	/^    FMOD_ERR_OUTPUT_NOHARDWARE,     \/* FMOD_HARDWARE was specified but the sound card does not have the resources necessary to play it. *\/$/;"	e	enum:__anon105
FMOD_ERR_OUTPUT_NOSOFTWARE	include/fmod/fmod.h	/^    FMOD_ERR_OUTPUT_NOSOFTWARE,     \/* Attempted to create a software sound but no software channels were specified in System::init. *\/$/;"	e	enum:__anon105
FMOD_ERR_PAN	include/fmod/fmod.h	/^    FMOD_ERR_PAN,                   \/* Panning only works with mono or stereo sound sources. *\/$/;"	e	enum:__anon105
FMOD_ERR_PLUGIN	include/fmod/fmod.h	/^    FMOD_ERR_PLUGIN,                \/* An unspecified error has been returned from a 3rd party plugin. *\/$/;"	e	enum:__anon105
FMOD_ERR_PLUGIN_INSTANCES	include/fmod/fmod.h	/^    FMOD_ERR_PLUGIN_INSTANCES,      \/* The number of allowed instances of a plugin has been exceeded. *\/$/;"	e	enum:__anon105
FMOD_ERR_PLUGIN_MISSING	include/fmod/fmod.h	/^    FMOD_ERR_PLUGIN_MISSING,        \/* A requested output, dsp unit type or codec was not available. *\/$/;"	e	enum:__anon105
FMOD_ERR_PLUGIN_RESOURCE	include/fmod/fmod.h	/^    FMOD_ERR_PLUGIN_RESOURCE,       \/* A resource that the plugin requires cannot be found. (ie the DLS file for MIDI playback) *\/$/;"	e	enum:__anon105
FMOD_ERR_PRELOADED	include/fmod/fmod.h	/^    FMOD_ERR_PRELOADED,             \/* The specified sound is still in use by the event system, call EventSystem::unloadFSB before trying to release it. *\/$/;"	e	enum:__anon105
FMOD_ERR_PROGRAMMERSOUND	include/fmod/fmod.h	/^    FMOD_ERR_PROGRAMMERSOUND,       \/* The specified sound is still in use by the event system, wait for the event which is using it finish with it. *\/$/;"	e	enum:__anon105
FMOD_ERR_RECORD	include/fmod/fmod.h	/^    FMOD_ERR_RECORD,                \/* An error occured trying to initialize the recording device. *\/$/;"	e	enum:__anon105
FMOD_ERR_REVERB_INSTANCE	include/fmod/fmod.h	/^    FMOD_ERR_REVERB_INSTANCE,       \/* Specified instance in FMOD_REVERB_PROPERTIES couldn't be set. Most likely because it is an invalid instance number or the reverb doesnt exist. *\/$/;"	e	enum:__anon105
FMOD_ERR_SUBSOUNDS	include/fmod/fmod.h	/^    FMOD_ERR_SUBSOUNDS,             \/* The error occured because the sound referenced contains subsounds when it shouldn't have, or it doesn't contain subsounds when it should have.  The operation may also not be able to be performed on a parent sound, or a parent sound was played without setting up a sentence first. *\/$/;"	e	enum:__anon105
FMOD_ERR_SUBSOUND_ALLOCATED	include/fmod/fmod.h	/^    FMOD_ERR_SUBSOUND_ALLOCATED,    \/* This subsound is already being used by another sound, you cannot have more than one parent to a sound.  Null out the other parent's entry first. *\/$/;"	e	enum:__anon105
FMOD_ERR_SUBSOUND_CANTMOVE	include/fmod/fmod.h	/^    FMOD_ERR_SUBSOUND_CANTMOVE,     \/* Shared subsounds cannot be replaced or moved from their parent stream, such as when the parent stream is an FSB file. *\/$/;"	e	enum:__anon105
FMOD_ERR_SUBSOUND_MODE	include/fmod/fmod.h	/^    FMOD_ERR_SUBSOUND_MODE,         \/* The subsound's mode bits do not match with the parent sound's mode bits.  See documentation for function that it was called with. *\/$/;"	e	enum:__anon105
FMOD_ERR_TAGNOTFOUND	include/fmod/fmod.h	/^    FMOD_ERR_TAGNOTFOUND,           \/* The specified tag could not be found or there are no tags. *\/$/;"	e	enum:__anon105
FMOD_ERR_TOOMANYCHANNELS	include/fmod/fmod.h	/^    FMOD_ERR_TOOMANYCHANNELS,       \/* The sound created exceeds the allowable input channel count.  This can be increased using the maxinputchannels parameter in System::setSoftwareFormat. *\/$/;"	e	enum:__anon105
FMOD_ERR_UNIMPLEMENTED	include/fmod/fmod.h	/^    FMOD_ERR_UNIMPLEMENTED,         \/* Something in FMOD hasn't been implemented when it should be! contact support! *\/$/;"	e	enum:__anon105
FMOD_ERR_UNINITIALIZED	include/fmod/fmod.h	/^    FMOD_ERR_UNINITIALIZED,         \/* This command failed because System::init or System::setDriver was not called. *\/$/;"	e	enum:__anon105
FMOD_ERR_UNSUPPORTED	include/fmod/fmod.h	/^    FMOD_ERR_UNSUPPORTED,           \/* A command issued was not supported by this object.  Possibly a plugin without certain callbacks specified. *\/$/;"	e	enum:__anon105
FMOD_ERR_UPDATE	include/fmod/fmod.h	/^    FMOD_ERR_UPDATE,                \/* An error caused by System::update occured. *\/$/;"	e	enum:__anon105
FMOD_ERR_VERSION	include/fmod/fmod.h	/^    FMOD_ERR_VERSION,               \/* The version number of this file format is not supported. *\/$/;"	e	enum:__anon105
FMOD_EVENT_MEMBITS_ALL	include/fmod/fmod_memoryinfo.h	186;"	d
FMOD_EVENT_MEMBITS_EVENTCATEGORY	include/fmod/fmod_memoryinfo.h	183;"	d
FMOD_EVENT_MEMBITS_EVENTENVELOPE	include/fmod/fmod_memoryinfo.h	180;"	d
FMOD_EVENT_MEMBITS_EVENTENVELOPEDEF	include/fmod/fmod_memoryinfo.h	181;"	d
FMOD_EVENT_MEMBITS_EVENTENVELOPEPOINT	include/fmod/fmod_memoryinfo.h	184;"	d
FMOD_EVENT_MEMBITS_EVENTGROUPI	include/fmod/fmod_memoryinfo.h	165;"	d
FMOD_EVENT_MEMBITS_EVENTINSTANCE	include/fmod/fmod_memoryinfo.h	175;"	d
FMOD_EVENT_MEMBITS_EVENTINSTANCEPOOL	include/fmod/fmod_memoryinfo.h	185;"	d
FMOD_EVENT_MEMBITS_EVENTINSTANCE_COMPLEX	include/fmod/fmod_memoryinfo.h	176;"	d
FMOD_EVENT_MEMBITS_EVENTINSTANCE_GROUP	include/fmod/fmod_memoryinfo.h	189;"	d
FMOD_EVENT_MEMBITS_EVENTINSTANCE_LAYER	include/fmod/fmod_memoryinfo.h	178;"	d
FMOD_EVENT_MEMBITS_EVENTINSTANCE_SIMPLE	include/fmod/fmod_memoryinfo.h	177;"	d
FMOD_EVENT_MEMBITS_EVENTINSTANCE_SOUND	include/fmod/fmod_memoryinfo.h	179;"	d
FMOD_EVENT_MEMBITS_EVENTPARAMETER	include/fmod/fmod_memoryinfo.h	182;"	d
FMOD_EVENT_MEMBITS_EVENTPROJECT	include/fmod/fmod_memoryinfo.h	164;"	d
FMOD_EVENT_MEMBITS_EVENTREVERB	include/fmod/fmod_memoryinfo.h	173;"	d
FMOD_EVENT_MEMBITS_EVENTSYSTEM	include/fmod/fmod_memoryinfo.h	160;"	d
FMOD_EVENT_MEMBITS_FEV	include/fmod/fmod_memoryinfo.h	162;"	d
FMOD_EVENT_MEMBITS_MEMORYFSB	include/fmod/fmod_memoryinfo.h	163;"	d
FMOD_EVENT_MEMBITS_MUSICSYSTEM	include/fmod/fmod_memoryinfo.h	161;"	d
FMOD_EVENT_MEMBITS_REVERBDEF	include/fmod/fmod_memoryinfo.h	172;"	d
FMOD_EVENT_MEMBITS_SOUNDBANKCLASS	include/fmod/fmod_memoryinfo.h	166;"	d
FMOD_EVENT_MEMBITS_SOUNDBANKLIST	include/fmod/fmod_memoryinfo.h	167;"	d
FMOD_EVENT_MEMBITS_SOUNDDEFCLASS	include/fmod/fmod_memoryinfo.h	169;"	d
FMOD_EVENT_MEMBITS_SOUNDDEFDEFCLASS	include/fmod/fmod_memoryinfo.h	170;"	d
FMOD_EVENT_MEMBITS_SOUNDDEFPOOL	include/fmod/fmod_memoryinfo.h	171;"	d
FMOD_EVENT_MEMBITS_SOUNDDEF_GROUP	include/fmod/fmod_memoryinfo.h	196;"	d
FMOD_EVENT_MEMBITS_STREAMINSTANCE	include/fmod/fmod_memoryinfo.h	168;"	d
FMOD_EVENT_MEMBITS_USERPROPERTY	include/fmod/fmod_memoryinfo.h	174;"	d
FMOD_ErrorString	include/fmod/fmod_errors.h	/^static const char *FMOD_ErrorString(FMOD_RESULT errcode)$/;"	f
FMOD_FILE_ASYNCCANCELCALLBACK	include/fmod/fmod.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_FILE_ASYNCCANCELCALLBACK)(void *handle, void *userdata);$/;"	t
FMOD_FILE_ASYNCREADCALLBACK	include/fmod/fmod.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_FILE_ASYNCREADCALLBACK)(FMOD_ASYNCREADINFO *info, void *userdata);$/;"	t
FMOD_FILE_CLOSECALLBACK	include/fmod/fmod.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_FILE_CLOSECALLBACK)    (void *handle, void *userdata);$/;"	t
FMOD_FILE_OPENCALLBACK	include/fmod/fmod.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_FILE_OPENCALLBACK)     (const char *name, int unicode, unsigned int *filesize, void **handle, void **userdata);$/;"	t
FMOD_FILE_READCALLBACK	include/fmod/fmod.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_FILE_READCALLBACK)     (void *handle, void *buffer, unsigned int sizebytes, unsigned int *bytesread, void *userdata);$/;"	t
FMOD_FILE_SEEKCALLBACK	include/fmod/fmod.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_FILE_SEEKCALLBACK)     (void *handle, unsigned int pos, void *userdata);$/;"	t
FMOD_GEOMETRY	include/fmod/fmod.h	/^typedef struct FMOD_GEOMETRY	  FMOD_GEOMETRY;$/;"	t	typeref:struct:FMOD_GEOMETRY
FMOD_GUID	include/fmod/fmod.h	/^} FMOD_GUID;$/;"	t	typeref:struct:__anon107
FMOD_HARDWARE	include/fmod/fmod.h	873;"	d
FMOD_IGNORETAGS	include/fmod/fmod.h	895;"	d
FMOD_INITFLAGS	include/fmod/fmod.h	/^typedef unsigned int              FMOD_INITFLAGS;$/;"	t
FMOD_INIT_3D_RIGHTHANDED	include/fmod/fmod.h	715;"	d
FMOD_INIT_DISABLEDOLBY	include/fmod/fmod.h	726;"	d
FMOD_INIT_DISABLE_MYEARS_AUTODETECT	include/fmod/fmod.h	730;"	d
FMOD_INIT_DISTANCE_FILTERING	include/fmod/fmod.h	719;"	d
FMOD_INIT_ENABLE_PROFILE	include/fmod/fmod.h	721;"	d
FMOD_INIT_GEOMETRY_USECLOSEST	include/fmod/fmod.h	729;"	d
FMOD_INIT_HRTF_LOWPASS	include/fmod/fmod.h	718;"	d
FMOD_INIT_NORMAL	include/fmod/fmod.h	713;"	d
FMOD_INIT_OCCLUSION_LOWPASS	include/fmod/fmod.h	717;"	d
FMOD_INIT_PS3_FORCE2CHLPCM	include/fmod/fmod.h	725;"	d
FMOD_INIT_PS3_PREFERDTS	include/fmod/fmod.h	724;"	d
FMOD_INIT_SOFTWARE_DISABLE	include/fmod/fmod.h	716;"	d
FMOD_INIT_SOFTWARE_REVERB_LOWMEM	include/fmod/fmod.h	720;"	d
FMOD_INIT_STREAM_FROM_UPDATE	include/fmod/fmod.h	714;"	d
FMOD_INIT_SYNCMIXERWITHUPDATE	include/fmod/fmod.h	728;"	d
FMOD_INIT_SYSTEM_MUSICMUTENOTPAUSE	include/fmod/fmod.h	727;"	d
FMOD_INIT_VOL0_BECOMES_VIRTUAL	include/fmod/fmod.h	722;"	d
FMOD_INIT_WASAPI_EXCLUSIVE	include/fmod/fmod.h	723;"	d
FMOD_LOADSECONDARYRAM	include/fmod/fmod.h	897;"	d
FMOD_LOOP_BIDI	include/fmod/fmod.h	870;"	d
FMOD_LOOP_NORMAL	include/fmod/fmod.h	869;"	d
FMOD_LOOP_OFF	include/fmod/fmod.h	868;"	d
FMOD_LOWMEM	include/fmod/fmod.h	896;"	d
FMOD_MEMBITS_ALL	include/fmod/fmod_memoryinfo.h	134;"	d
FMOD_MEMBITS_CHANNEL	include/fmod/fmod_memoryinfo.h	117;"	d
FMOD_MEMBITS_CHANNELGROUP	include/fmod/fmod_memoryinfo.h	118;"	d
FMOD_MEMBITS_CODEC	include/fmod/fmod_memoryinfo.h	119;"	d
FMOD_MEMBITS_DSP	include/fmod/fmod_memoryinfo.h	126;"	d
FMOD_MEMBITS_DSPCODEC	include/fmod/fmod_memoryinfo.h	127;"	d
FMOD_MEMBITS_DSPCONNECTION	include/fmod/fmod_memoryinfo.h	125;"	d
FMOD_MEMBITS_FILE	include/fmod/fmod_memoryinfo.h	120;"	d
FMOD_MEMBITS_GEOMETRY	include/fmod/fmod_memoryinfo.h	132;"	d
FMOD_MEMBITS_OTHER	include/fmod/fmod_memoryinfo.h	111;"	d
FMOD_MEMBITS_OUTPUT	include/fmod/fmod_memoryinfo.h	116;"	d
FMOD_MEMBITS_PLUGINS	include/fmod/fmod_memoryinfo.h	115;"	d
FMOD_MEMBITS_PROFILE	include/fmod/fmod_memoryinfo.h	128;"	d
FMOD_MEMBITS_RECORDBUFFER	include/fmod/fmod_memoryinfo.h	129;"	d
FMOD_MEMBITS_REVERB	include/fmod/fmod_memoryinfo.h	130;"	d
FMOD_MEMBITS_REVERBCHANNELPROPS	include/fmod/fmod_memoryinfo.h	131;"	d
FMOD_MEMBITS_SOUND	include/fmod/fmod_memoryinfo.h	121;"	d
FMOD_MEMBITS_SOUNDGROUP	include/fmod/fmod_memoryinfo.h	123;"	d
FMOD_MEMBITS_SOUND_SECONDARYRAM	include/fmod/fmod_memoryinfo.h	122;"	d
FMOD_MEMBITS_STREAMBUFFER	include/fmod/fmod_memoryinfo.h	124;"	d
FMOD_MEMBITS_STRING	include/fmod/fmod_memoryinfo.h	112;"	d
FMOD_MEMBITS_SYNCPOINT	include/fmod/fmod_memoryinfo.h	133;"	d
FMOD_MEMBITS_SYSTEM	include/fmod/fmod_memoryinfo.h	114;"	d
FMOD_MEMORY_ALL	include/fmod/fmod.h	482;"	d
FMOD_MEMORY_ALLOCCALLBACK	include/fmod/fmod.h	/^typedef void *      (F_CALLBACK *FMOD_MEMORY_ALLOCCALLBACK)  (unsigned int size, FMOD_MEMORY_TYPE type, const char *sourcestr);$/;"	t
FMOD_MEMORY_DSP_OUTPUTBUFFER	include/fmod/fmod.h	478;"	d
FMOD_MEMORY_FREECALLBACK	include/fmod/fmod.h	/^typedef void        (F_CALLBACK *FMOD_MEMORY_FREECALLBACK)   (void *ptr, FMOD_MEMORY_TYPE type, const char *sourcestr);$/;"	t
FMOD_MEMORY_NORMAL	include/fmod/fmod.h	474;"	d
FMOD_MEMORY_PERSISTENT	include/fmod/fmod.h	480;"	d
FMOD_MEMORY_REALLOCCALLBACK	include/fmod/fmod.h	/^typedef void *      (F_CALLBACK *FMOD_MEMORY_REALLOCCALLBACK)(void *ptr, unsigned int size, FMOD_MEMORY_TYPE type, const char *sourcestr);$/;"	t
FMOD_MEMORY_SAMPLEDATA	include/fmod/fmod.h	477;"	d
FMOD_MEMORY_SECONDARY	include/fmod/fmod.h	481;"	d
FMOD_MEMORY_STREAM_DECODE	include/fmod/fmod.h	476;"	d
FMOD_MEMORY_STREAM_FILE	include/fmod/fmod.h	475;"	d
FMOD_MEMORY_TYPE	include/fmod/fmod.h	/^typedef unsigned int              FMOD_MEMORY_TYPE;$/;"	t
FMOD_MEMORY_USAGE_DETAILS	include/fmod/fmod_memoryinfo.h	/^typedef struct FMOD_MEMORY_USAGE_DETAILS$/;"	s
FMOD_MEMORY_USAGE_DETAILS	include/fmod/fmod_memoryinfo.h	/^} FMOD_MEMORY_USAGE_DETAILS;$/;"	t	typeref:struct:FMOD_MEMORY_USAGE_DETAILS
FMOD_MEMORY_XBOX360_PHYSICAL	include/fmod/fmod.h	479;"	d
FMOD_MODE	include/fmod/fmod.h	/^typedef unsigned int              FMOD_MODE;$/;"	t
FMOD_MPEGSEARCH	include/fmod/fmod.h	884;"	d
FMOD_NONBLOCKING	include/fmod/fmod.h	885;"	d
FMOD_OK	include/fmod/fmod.h	/^    FMOD_OK,                        \/* No errors. *\/$/;"	e	enum:__anon105
FMOD_OPENMEMORY	include/fmod/fmod.h	879;"	d
FMOD_OPENMEMORY_POINT	include/fmod/fmod.h	880;"	d
FMOD_OPENONLY	include/fmod/fmod.h	882;"	d
FMOD_OPENRAW	include/fmod/fmod.h	881;"	d
FMOD_OPENSTATE	include/fmod/fmod.h	/^} FMOD_OPENSTATE;$/;"	t	typeref:enum:__anon115
FMOD_OPENSTATE_BUFFERING	include/fmod/fmod.h	/^    FMOD_OPENSTATE_BUFFERING,       \/* Buffering data. *\/$/;"	e	enum:__anon115
FMOD_OPENSTATE_CONNECTING	include/fmod/fmod.h	/^    FMOD_OPENSTATE_CONNECTING,      \/* Connecting to remote host (internet sounds only). *\/$/;"	e	enum:__anon115
FMOD_OPENSTATE_ERROR	include/fmod/fmod.h	/^    FMOD_OPENSTATE_ERROR,           \/* Failed to open - file not found, out of memory etc.  See return value of Sound::getOpenState for what happened. *\/$/;"	e	enum:__anon115
FMOD_OPENSTATE_FORCEINT	include/fmod/fmod.h	/^    FMOD_OPENSTATE_FORCEINT = 65536 \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon115
FMOD_OPENSTATE_LOADING	include/fmod/fmod.h	/^    FMOD_OPENSTATE_LOADING,         \/* Initial load in progress. *\/$/;"	e	enum:__anon115
FMOD_OPENSTATE_MAX	include/fmod/fmod.h	/^    FMOD_OPENSTATE_MAX,             \/* Maximum number of open state types. *\/$/;"	e	enum:__anon115
FMOD_OPENSTATE_PLAYING	include/fmod/fmod.h	/^    FMOD_OPENSTATE_PLAYING,         \/* Ready and playing, but not possible to release at this time without stalling the main thread. *\/$/;"	e	enum:__anon115
FMOD_OPENSTATE_READY	include/fmod/fmod.h	/^    FMOD_OPENSTATE_READY = 0,       \/* Opened and ready to play. *\/$/;"	e	enum:__anon115
FMOD_OPENSTATE_SEEKING	include/fmod/fmod.h	/^    FMOD_OPENSTATE_SEEKING,         \/* Seeking to subsound and re-flushing stream buffer. *\/$/;"	e	enum:__anon115
FMOD_OPENSTATE_SETPOSITION	include/fmod/fmod.h	/^    FMOD_OPENSTATE_SETPOSITION,     \/* Seeking within a stream to a different position. *\/$/;"	e	enum:__anon115
FMOD_OPENUSER	include/fmod/fmod.h	878;"	d
FMOD_OUTPUTTYPE	include/fmod/fmod.h	/^} FMOD_OUTPUTTYPE;$/;"	t	typeref:enum:__anon109
FMOD_OUTPUTTYPE_3DS	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_3DS,             \/* 3DS             - Native 3DS output                         (Default on 3DS) *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_ALSA	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_ALSA,            \/* Linux\/Linux64   - Advanced Linux Sound Architecture output. (Default on Linux, second preference if available) *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_ASIO	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_ASIO,            \/* Win32           - Low latency ASIO 2.0 driver. *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_AUDIOTRACK	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_AUDIOTRACK,      \/* Android         - Java Audio Track output.                  (Default on Android 2.2 and below) *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_AUTODETECT	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_AUTODETECT,      \/* Picks the best output mode for the platform.  This is the default. *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_COREAUDIO	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_COREAUDIO,       \/* Mac             - Macintosh CoreAudio output.               (Default on Mac) *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_DSOUND	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_DSOUND,          \/* Win32\/Win64     - DirectSound output.                       (Default on Windows XP and below) *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_ESD	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_ESD,             \/* Linux\/Linux64   - Enlightment Sound Daemon output. *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_FORCEINT	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_FORCEINT = 65536 \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_MAX	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_MAX,             \/* Maximum number of output types supported. *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_NACL	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_NACL,            \/* Native Client   - Native Client output.                     (Default on Native Client) *\/   $/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_NGP	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_NGP,             \/* NGP             - Native NGP output.                        (Default on NGP) *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_NOSOUND	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_NOSOUND,         \/* All             - All calls in this mode succeed but make no sound. *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_NOSOUND_NRT	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_NOSOUND_NRT,     \/* All             - Non-realtime version of FMOD_OUTPUTTYPE_NOSOUND.  User can drive mixer with System::update at whatever rate they want. *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_OPENSL	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_OPENSL,          \/* Android         - OpenSL ES output.                         (Default on Android 2.3 and above) *\/   $/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_OSS	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_OSS,             \/* Linux\/Linux64   - Open Sound System output.                 (Default on Linux, third preference) *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_PS3	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_PS3,             \/* PS3             - Native PS3 output.                        (Default on PS3) *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_PSP	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_PSP,             \/* PSP             - Native PSP output.                        (Default on PSP) *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_PULSEAUDIO	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_PULSEAUDIO,      \/* Linux\/Linux64   - PulseAudio output.                        (Default on Linux, first preference if available) *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_UNKNOWN	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_UNKNOWN,         \/* All             - 3rd party plugin, unknown.  This is for use with System::getOutput only. *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_WASAPI	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_WASAPI,          \/* Win32           - Windows Audio Session API.                (Default on Windows Vista and above) *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_WAVWRITER	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_WAVWRITER,       \/* All             - Writes output to fmodoutput.wav by default.  Use the 'extradriverdata' parameter in System::init, by simply passing the filename as a string, to set the wav filename. *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_WAVWRITER_NRT	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_WAVWRITER_NRT,   \/* All             - Non-realtime version of FMOD_OUTPUTTYPE_WAVWRITER.  User can drive mixer with System::update at whatever rate they want. *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_WII	include/fmod/fmod.h	/^	FMOD_OUTPUTTYPE_WII,			 \/* Wii			    - Native Wii output.                        (Default on Wii) *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_WINMM	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_WINMM,           \/* Win32\/Win64     - Windows Multimedia output. *\/$/;"	e	enum:__anon109
FMOD_OUTPUTTYPE_XBOX360	include/fmod/fmod.h	/^    FMOD_OUTPUTTYPE_XBOX360,         \/* Xbox 360        - Native Xbox360 output.                    (Default on Xbox 360) *\/$/;"	e	enum:__anon109
FMOD_OUTPUT_CLOSECALLBACK	include/fmod/fmod_output.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_OUTPUT_CLOSECALLBACK)        (FMOD_OUTPUT_STATE *output_state);$/;"	t
FMOD_OUTPUT_DESCRIPTION	include/fmod/fmod_output.h	/^typedef struct FMOD_OUTPUT_DESCRIPTION$/;"	s
FMOD_OUTPUT_DESCRIPTION	include/fmod/fmod_output.h	/^} FMOD_OUTPUT_DESCRIPTION;$/;"	t	typeref:struct:FMOD_OUTPUT_DESCRIPTION
FMOD_OUTPUT_GETDRIVERCAPSCALLBACK	include/fmod/fmod_output.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_OUTPUT_GETDRIVERCAPSCALLBACK)(FMOD_OUTPUT_STATE *output_state, int id, FMOD_CAPS *caps);$/;"	t
FMOD_OUTPUT_GETDRIVERNAMECALLBACK	include/fmod/fmod_output.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_OUTPUT_GETDRIVERNAMECALLBACK)(FMOD_OUTPUT_STATE *output_state, int id, char *name, int namelen);$/;"	t
FMOD_OUTPUT_GETHANDLECALLBACK	include/fmod/fmod_output.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_OUTPUT_GETHANDLECALLBACK)    (FMOD_OUTPUT_STATE *output_state, void **handle);$/;"	t
FMOD_OUTPUT_GETNUMDRIVERSCALLBACK	include/fmod/fmod_output.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_OUTPUT_GETNUMDRIVERSCALLBACK)(FMOD_OUTPUT_STATE *output_state, int *numdrivers);$/;"	t
FMOD_OUTPUT_GETPOSITIONCALLBACK	include/fmod/fmod_output.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_OUTPUT_GETPOSITIONCALLBACK)  (FMOD_OUTPUT_STATE *output_state, unsigned int *pcm);$/;"	t
FMOD_OUTPUT_INITCALLBACK	include/fmod/fmod_output.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_OUTPUT_INITCALLBACK)         (FMOD_OUTPUT_STATE *output_state, int selecteddriver, FMOD_INITFLAGS flags, int *outputrate, int outputchannels, FMOD_SOUND_FORMAT *outputformat, int dspbufferlength, int dspnumbuffers, void *extradriverdata);$/;"	t
FMOD_OUTPUT_LOCKCALLBACK	include/fmod/fmod_output.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_OUTPUT_LOCKCALLBACK)         (FMOD_OUTPUT_STATE *output_state, unsigned int offset, unsigned int length, void **ptr1, void **ptr2, unsigned int *len1, unsigned int *len2);$/;"	t
FMOD_OUTPUT_READFROMMIXER	include/fmod/fmod_output.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_OUTPUT_READFROMMIXER)        (FMOD_OUTPUT_STATE *output_state, void *buffer, unsigned int length);$/;"	t
FMOD_OUTPUT_STATE	include/fmod/fmod_output.h	/^struct FMOD_OUTPUT_STATE$/;"	s
FMOD_OUTPUT_STATE	include/fmod/fmod_output.h	/^typedef struct FMOD_OUTPUT_STATE FMOD_OUTPUT_STATE;$/;"	t	typeref:struct:FMOD_OUTPUT_STATE
FMOD_OUTPUT_UNLOCKCALLBACK	include/fmod/fmod_output.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_OUTPUT_UNLOCKCALLBACK)       (FMOD_OUTPUT_STATE *output_state, void *ptr1, void *ptr2, unsigned int len1, unsigned int len2);$/;"	t
FMOD_OUTPUT_UPDATECALLBACK	include/fmod/fmod_output.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_OUTPUT_UPDATECALLBACK)       (FMOD_OUTPUT_STATE *output_state);$/;"	t
FMOD_PLUGINTYPE	include/fmod/fmod.h	/^} FMOD_PLUGINTYPE;$/;"	t	typeref:enum:__anon112
FMOD_PLUGINTYPE_CODEC	include/fmod/fmod.h	/^    FMOD_PLUGINTYPE_CODEC,           \/* The plugin type is a file format codec.  FMOD will use these codecs to load file formats for playback. *\/$/;"	e	enum:__anon112
FMOD_PLUGINTYPE_DSP	include/fmod/fmod.h	/^    FMOD_PLUGINTYPE_DSP,             \/* The plugin type is a DSP unit.  FMOD will use these plugins as part of its DSP network to apply effects to output or generate sound in realtime. *\/$/;"	e	enum:__anon112
FMOD_PLUGINTYPE_FORCEINT	include/fmod/fmod.h	/^    FMOD_PLUGINTYPE_FORCEINT = 65536 \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon112
FMOD_PLUGINTYPE_MAX	include/fmod/fmod.h	/^    FMOD_PLUGINTYPE_MAX,             \/* Maximum number of plugin types supported. *\/$/;"	e	enum:__anon112
FMOD_PLUGINTYPE_OUTPUT	include/fmod/fmod.h	/^    FMOD_PLUGINTYPE_OUTPUT,          \/* The plugin type is an output module.  FMOD mixed audio will play through one of these devices *\/$/;"	e	enum:__anon112
FMOD_POLYGON	include/fmod/fmod.h	/^typedef struct FMOD_POLYGON		  FMOD_POLYGON;$/;"	t	typeref:struct:FMOD_POLYGON
FMOD_PRESET_ALLEY	include/fmod/fmod.h	1610;"	d
FMOD_PRESET_ARENA	include/fmod/fmod.h	1605;"	d
FMOD_PRESET_AUDITORIUM	include/fmod/fmod.h	1602;"	d
FMOD_PRESET_BATHROOM	include/fmod/fmod.h	1599;"	d
FMOD_PRESET_CARPETTEDHALLWAY	include/fmod/fmod.h	1607;"	d
FMOD_PRESET_CAVE	include/fmod/fmod.h	1604;"	d
FMOD_PRESET_CITY	include/fmod/fmod.h	1612;"	d
FMOD_PRESET_CONCERTHALL	include/fmod/fmod.h	1603;"	d
FMOD_PRESET_FOREST	include/fmod/fmod.h	1611;"	d
FMOD_PRESET_GENERIC	include/fmod/fmod.h	1596;"	d
FMOD_PRESET_HALLWAY	include/fmod/fmod.h	1608;"	d
FMOD_PRESET_HANGAR	include/fmod/fmod.h	1606;"	d
FMOD_PRESET_LIVINGROOM	include/fmod/fmod.h	1600;"	d
FMOD_PRESET_MOUNTAINS	include/fmod/fmod.h	1613;"	d
FMOD_PRESET_OFF	include/fmod/fmod.h	1595;"	d
FMOD_PRESET_PADDEDCELL	include/fmod/fmod.h	1597;"	d
FMOD_PRESET_PARKINGLOT	include/fmod/fmod.h	1616;"	d
FMOD_PRESET_PLAIN	include/fmod/fmod.h	1615;"	d
FMOD_PRESET_PSP_DELAY	include/fmod/fmod.h	1628;"	d
FMOD_PRESET_PSP_ECHO	include/fmod/fmod.h	1627;"	d
FMOD_PRESET_PSP_HALL	include/fmod/fmod.h	1625;"	d
FMOD_PRESET_PSP_PIPE	include/fmod/fmod.h	1629;"	d
FMOD_PRESET_PSP_ROOM	include/fmod/fmod.h	1621;"	d
FMOD_PRESET_PSP_SPACE	include/fmod/fmod.h	1626;"	d
FMOD_PRESET_PSP_STUDIO_A	include/fmod/fmod.h	1622;"	d
FMOD_PRESET_PSP_STUDIO_B	include/fmod/fmod.h	1623;"	d
FMOD_PRESET_PSP_STUDIO_C	include/fmod/fmod.h	1624;"	d
FMOD_PRESET_QUARRY	include/fmod/fmod.h	1614;"	d
FMOD_PRESET_ROOM	include/fmod/fmod.h	1598;"	d
FMOD_PRESET_SEWERPIPE	include/fmod/fmod.h	1617;"	d
FMOD_PRESET_STONECORRIDOR	include/fmod/fmod.h	1609;"	d
FMOD_PRESET_STONEROOM	include/fmod/fmod.h	1601;"	d
FMOD_PRESET_UNDERWATER	include/fmod/fmod.h	1618;"	d
FMOD_RESULT	include/fmod/fmod.h	/^} FMOD_RESULT;$/;"	t	typeref:enum:__anon105
FMOD_RESULT_FORCEINT	include/fmod/fmod.h	/^    FMOD_RESULT_FORCEINT = 65536    \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon105
FMOD_REVERB	include/fmod/fmod.h	/^typedef struct FMOD_REVERB        FMOD_REVERB;$/;"	t	typeref:struct:FMOD_REVERB
FMOD_REVERB_CHANNELFLAGS_DEFAULT	include/fmod/fmod.h	1710;"	d
FMOD_REVERB_CHANNELFLAGS_INSTANCE0	include/fmod/fmod.h	1705;"	d
FMOD_REVERB_CHANNELFLAGS_INSTANCE1	include/fmod/fmod.h	1706;"	d
FMOD_REVERB_CHANNELFLAGS_INSTANCE2	include/fmod/fmod.h	1707;"	d
FMOD_REVERB_CHANNELFLAGS_INSTANCE3	include/fmod/fmod.h	1708;"	d
FMOD_REVERB_CHANNELPROPERTIES	include/fmod/fmod.h	/^typedef struct FMOD_REVERB_CHANNELPROPERTIES$/;"	s
FMOD_REVERB_CHANNELPROPERTIES	include/fmod/fmod.h	/^} FMOD_REVERB_CHANNELPROPERTIES;$/;"	t	typeref:struct:FMOD_REVERB_CHANNELPROPERTIES
FMOD_REVERB_FLAGS_DEFAULT	include/fmod/fmod.h	1569;"	d
FMOD_REVERB_FLAGS_HIGHQUALITYDPL2REVERB	include/fmod/fmod.h	1568;"	d
FMOD_REVERB_FLAGS_HIGHQUALITYREVERB	include/fmod/fmod.h	1567;"	d
FMOD_REVERB_PROPERTIES	include/fmod/fmod.h	/^typedef struct FMOD_REVERB_PROPERTIES$/;"	s
FMOD_REVERB_PROPERTIES	include/fmod/fmod.h	/^} FMOD_REVERB_PROPERTIES;$/;"	t	typeref:struct:FMOD_REVERB_PROPERTIES
FMOD_SOFTWARE	include/fmod/fmod.h	874;"	d
FMOD_SOUND	include/fmod/fmod.h	/^typedef struct FMOD_SOUND         FMOD_SOUND;$/;"	t	typeref:struct:FMOD_SOUND
FMOD_SOUNDGROUP	include/fmod/fmod.h	/^typedef struct FMOD_SOUNDGROUP    FMOD_SOUNDGROUP;$/;"	t	typeref:struct:FMOD_SOUNDGROUP
FMOD_SOUNDGROUP_BEHAVIOR	include/fmod/fmod.h	/^} FMOD_SOUNDGROUP_BEHAVIOR;$/;"	t	typeref:enum:__anon116
FMOD_SOUNDGROUP_BEHAVIOR_FAIL	include/fmod/fmod.h	/^    FMOD_SOUNDGROUP_BEHAVIOR_FAIL,              \/* Any sound played that puts the sound count over the SoundGroup::setMaxAudible setting, will simply fail during System::playSound. *\/$/;"	e	enum:__anon116
FMOD_SOUNDGROUP_BEHAVIOR_FORCEINT	include/fmod/fmod.h	/^    FMOD_SOUNDGROUP_BEHAVIOR_FORCEINT = 65536   \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon116
FMOD_SOUNDGROUP_BEHAVIOR_MAX	include/fmod/fmod.h	/^    FMOD_SOUNDGROUP_BEHAVIOR_MAX,               \/* Maximum number of open state types. *\/$/;"	e	enum:__anon116
FMOD_SOUNDGROUP_BEHAVIOR_MUTE	include/fmod/fmod.h	/^    FMOD_SOUNDGROUP_BEHAVIOR_MUTE,              \/* Any sound played that puts the sound count over the SoundGroup::setMaxAudible setting, will be silent, then if another sound in the group stops the sound that was silent before becomes audible again. *\/$/;"	e	enum:__anon116
FMOD_SOUNDGROUP_BEHAVIOR_STEALLOWEST	include/fmod/fmod.h	/^    FMOD_SOUNDGROUP_BEHAVIOR_STEALLOWEST,       \/* Any sound played that puts the sound count over the SoundGroup::setMaxAudible setting, will steal the quietest \/ least important sound playing in the group. *\/$/;"	e	enum:__anon116
FMOD_SOUND_FORMAT	include/fmod/fmod.h	/^} FMOD_SOUND_FORMAT;$/;"	t	typeref:enum:__anon114
FMOD_SOUND_FORMAT_AT9	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_AT9,              \/* Compressed PSVita ATRAC9 data. *\/$/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_CELT	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_CELT,             \/* Compressed CELT data. *\/$/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_FORCEINT	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_FORCEINT = 65536  \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_GCADPCM	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_GCADPCM,          \/* Compressed Nintendo 3DS\/Wii DSP data. *\/$/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_HEVAG	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_HEVAG,            \/* Compressed PSVita ADPCM data. *\/$/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_IMAADPCM	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_IMAADPCM,         \/* Compressed IMA ADPCM data. *\/$/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_MAX	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_MAX,              \/* Maximum number of sound formats supported. *\/   $/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_MPEG	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_MPEG,             \/* Compressed MPEG layer 2 or 3 data. *\/$/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_NONE	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_NONE,             \/* Unitialized \/ unknown. *\/$/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_PCM16	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_PCM16,            \/* 16bit integer PCM data. *\/$/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_PCM24	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_PCM24,            \/* 24bit integer PCM data. *\/$/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_PCM32	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_PCM32,            \/* 32bit integer PCM data. *\/$/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_PCM8	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_PCM8,             \/* 8bit integer PCM data. *\/$/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_PCMFLOAT	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_PCMFLOAT,         \/* 32bit floating point PCM data. *\/$/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_VAG	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_VAG,              \/* Compressed PlayStation Portable ADPCM data. *\/$/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_XMA	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_XMA,              \/* Compressed Xbox360 XMA data. *\/$/;"	e	enum:__anon114
FMOD_SOUND_FORMAT_XWMA	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT_XWMA,             \/* Compressed Xbox360 xWMA data. *\/$/;"	e	enum:__anon114
FMOD_SOUND_NONBLOCKCALLBACK	include/fmod/fmod.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_SOUND_NONBLOCKCALLBACK)(FMOD_SOUND *sound, FMOD_RESULT result);$/;"	t
FMOD_SOUND_PCMREADCALLBACK	include/fmod/fmod.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_SOUND_PCMREADCALLBACK)(FMOD_SOUND *sound, void *data, unsigned int datalen);$/;"	t
FMOD_SOUND_PCMSETPOSCALLBACK	include/fmod/fmod.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_SOUND_PCMSETPOSCALLBACK)(FMOD_SOUND *sound, int subsound, unsigned int position, FMOD_TIMEUNIT postype);$/;"	t
FMOD_SOUND_TYPE	include/fmod/fmod.h	/^} FMOD_SOUND_TYPE;$/;"	t	typeref:enum:__anon113
FMOD_SOUND_TYPE_AIFF	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_AIFF,            \/* AIFF. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_ASF	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_ASF,             \/* Microsoft Advanced Systems Format (ie WMA\/ASF\/WMV). *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_AT3	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_AT3,             \/* Sony ATRAC 3 format *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_AT9	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_AT9,             \/* NGP ATRAC 9 format *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_AUDIOQUEUE	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_AUDIOQUEUE,      \/* iPhone hardware decoder, supports AAC, ALAC and MP3. extracodecdata is a pointer to an FMOD_AUDIOQUEUE_EXTRACODECDATA structure. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_BCWAV	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_BCWAV,           \/* 3DS BCWAV container format for DSP ADPCM and PCM *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_CDDA	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_CDDA,            \/* Digital CD audio. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_DLS	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_DLS,             \/* Sound font \/ downloadable sound bank. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_FLAC	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_FLAC,            \/* FLAC lossless codec. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_FORCEINT	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_FORCEINT = 65536 \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_FSB	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_FSB,             \/* FMOD Sample Bank. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_GCADPCM	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_GCADPCM,         \/* Nintendo GameCube\/Wii ADPCM *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_IT	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_IT,              \/* Impulse Tracker. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_MAX	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_MAX,             \/* Maximum number of sound types supported. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_MIDI	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_MIDI,            \/* MIDI. extracodecdata is a pointer to an FMOD_MIDI_EXTRACODECDATA structure. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_MOD	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_MOD,             \/* Protracker \/ Fasttracker MOD. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_MPEG	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_MPEG,            \/* MP2\/MP3 MPEG. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_OGGVORBIS	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_OGGVORBIS,       \/* Ogg vorbis. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_PLAYLIST	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_PLAYLIST,        \/* Information only from ASX\/PLS\/M3U\/WAX playlists *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_RAW	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_RAW,             \/* Raw PCM data. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_S3M	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_S3M,             \/* ScreamTracker 3. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_SF2	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_SF2,             \/* Sound font 2 format. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_UNKNOWN	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_UNKNOWN,         \/* 3rd party \/ unknown plugin format. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_USER	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_USER,            \/* User created sound. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_VAG	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_VAG,             \/* PlayStation Portable ADPCM VAG format. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_WAV	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_WAV,             \/* Microsoft WAV. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_XM	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_XM,              \/* FastTracker 2 XM. *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_XMA	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_XMA,             \/* Xbox360 XMA *\/$/;"	e	enum:__anon113
FMOD_SOUND_TYPE_XWMA	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE_XWMA,            \/* Xbox360 XWMA *\/$/;"	e	enum:__anon113
FMOD_SPEAKER	include/fmod/fmod.h	/^} FMOD_SPEAKER;$/;"	t	typeref:enum:__anon111
FMOD_SPEAKERMAPTYPE	include/fmod/fmod.h	/^} FMOD_SPEAKERMAPTYPE;$/;"	t	typeref:enum:__anon124
FMOD_SPEAKERMAPTYPE_51_PROTOOLS	include/fmod/fmod.h	/^    FMOD_SPEAKERMAPTYPE_51_PROTOOLS  \/* Map a 5.1 sound to use protools L C R Ls Rs LFE mapping.  Will return an error if not a 6 channel sound. *\/$/;"	e	enum:__anon124
FMOD_SPEAKERMAPTYPE_ALLMONO	include/fmod/fmod.h	/^    FMOD_SPEAKERMAPTYPE_ALLMONO,     \/* This means the sound is made up of all mono sounds.  All voices will be panned to the front center by default in this case.  *\/$/;"	e	enum:__anon124
FMOD_SPEAKERMAPTYPE_ALLSTEREO	include/fmod/fmod.h	/^    FMOD_SPEAKERMAPTYPE_ALLSTEREO,   \/* This means the sound is made up of all stereo sounds.  All voices will be panned to front left and front right alternating every second channel.  *\/$/;"	e	enum:__anon124
FMOD_SPEAKERMAPTYPE_DEFAULT	include/fmod/fmod.h	/^    FMOD_SPEAKERMAPTYPE_DEFAULT,     \/* This is the default, and just means FMOD decides which speakers it puts the source channels. *\/$/;"	e	enum:__anon124
FMOD_SPEAKERMODE	include/fmod/fmod.h	/^} FMOD_SPEAKERMODE;$/;"	t	typeref:enum:__anon110
FMOD_SPEAKERMODE_5POINT1	include/fmod/fmod.h	/^    FMOD_SPEAKERMODE_5POINT1,          \/* 5.1 speaker setup.  This includes front left, front right, center, rear left, rear right and a subwoofer. *\/$/;"	e	enum:__anon110
FMOD_SPEAKERMODE_7POINT1	include/fmod/fmod.h	/^    FMOD_SPEAKERMODE_7POINT1,          \/* 7.1 speaker setup.  This includes front left, front right, center, rear left, rear right, side left, side right and a subwoofer. *\/$/;"	e	enum:__anon110
FMOD_SPEAKERMODE_FORCEINT	include/fmod/fmod.h	/^    FMOD_SPEAKERMODE_FORCEINT = 65536  \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon110
FMOD_SPEAKERMODE_MAX	include/fmod/fmod.h	/^    FMOD_SPEAKERMODE_MAX,              \/* Maximum number of speaker modes supported. *\/$/;"	e	enum:__anon110
FMOD_SPEAKERMODE_MONO	include/fmod/fmod.h	/^    FMOD_SPEAKERMODE_MONO,             \/* The speakers are monaural. *\/$/;"	e	enum:__anon110
FMOD_SPEAKERMODE_MYEARS	include/fmod/fmod.h	/^    FMOD_SPEAKERMODE_MYEARS,           \/* Stereo output, but data is encoded using personalized HRTF algorithms.  See myears.net.au *\/$/;"	e	enum:__anon110
FMOD_SPEAKERMODE_PROLOGIC	include/fmod/fmod.h	/^    FMOD_SPEAKERMODE_PROLOGIC,         \/* Stereo output, but data is encoded to be played on a Prologic 2 \/ CircleSurround decoder in 5.1 via an analog connection.  See remarks about limitations. *\/$/;"	e	enum:__anon110
FMOD_SPEAKERMODE_QUAD	include/fmod/fmod.h	/^    FMOD_SPEAKERMODE_QUAD,             \/* 4 speaker setup.  This includes front left, front right, rear left, rear right.  *\/$/;"	e	enum:__anon110
FMOD_SPEAKERMODE_RAW	include/fmod/fmod.h	/^    FMOD_SPEAKERMODE_RAW,              \/* There is no specific speakermode.  Sound channels are mapped in order of input to output.  Use System::setSoftwareFormat to specify speaker count. See remarks for more information. *\/$/;"	e	enum:__anon110
FMOD_SPEAKERMODE_STEREO	include/fmod/fmod.h	/^    FMOD_SPEAKERMODE_STEREO,           \/* The speakers are stereo (DEFAULT). *\/$/;"	e	enum:__anon110
FMOD_SPEAKERMODE_SURROUND	include/fmod/fmod.h	/^    FMOD_SPEAKERMODE_SURROUND,         \/* 5 speaker setup.  This includes front left, front right, center, rear left, rear right. *\/$/;"	e	enum:__anon110
FMOD_SPEAKER_BACK_LEFT	include/fmod/fmod.h	/^    FMOD_SPEAKER_BACK_LEFT,$/;"	e	enum:__anon111
FMOD_SPEAKER_BACK_RIGHT	include/fmod/fmod.h	/^    FMOD_SPEAKER_BACK_RIGHT,$/;"	e	enum:__anon111
FMOD_SPEAKER_FORCEINT	include/fmod/fmod.h	/^    FMOD_SPEAKER_FORCEINT    = 65536                        \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon111
FMOD_SPEAKER_FRONT_CENTER	include/fmod/fmod.h	/^    FMOD_SPEAKER_FRONT_CENTER,$/;"	e	enum:__anon111
FMOD_SPEAKER_FRONT_LEFT	include/fmod/fmod.h	/^    FMOD_SPEAKER_FRONT_LEFT,$/;"	e	enum:__anon111
FMOD_SPEAKER_FRONT_RIGHT	include/fmod/fmod.h	/^    FMOD_SPEAKER_FRONT_RIGHT,$/;"	e	enum:__anon111
FMOD_SPEAKER_LOW_FREQUENCY	include/fmod/fmod.h	/^    FMOD_SPEAKER_LOW_FREQUENCY,$/;"	e	enum:__anon111
FMOD_SPEAKER_MAX	include/fmod/fmod.h	/^    FMOD_SPEAKER_MAX,                                       \/* Maximum number of speaker types supported. *\/$/;"	e	enum:__anon111
FMOD_SPEAKER_MONO	include/fmod/fmod.h	/^    FMOD_SPEAKER_MONO        = FMOD_SPEAKER_FRONT_LEFT,     \/* For use with FMOD_SPEAKERMODE_MONO and Channel::SetSpeakerLevels.  Mapped to same value as FMOD_SPEAKER_FRONT_LEFT. *\/$/;"	e	enum:__anon111
FMOD_SPEAKER_NULL	include/fmod/fmod.h	/^    FMOD_SPEAKER_NULL        = 65535,                       \/* A non speaker.  Use this with ASIO mapping to ignore a speaker. *\/$/;"	e	enum:__anon111
FMOD_SPEAKER_SBL	include/fmod/fmod.h	/^    FMOD_SPEAKER_SBL         = FMOD_SPEAKER_SIDE_LEFT,      \/* For use with FMOD_SPEAKERMODE_7POINT1 on PS3 where the extra speakers are surround back inside of side speakers. *\/$/;"	e	enum:__anon111
FMOD_SPEAKER_SBR	include/fmod/fmod.h	/^    FMOD_SPEAKER_SBR         = FMOD_SPEAKER_SIDE_RIGHT,     \/* For use with FMOD_SPEAKERMODE_7POINT1 on PS3 where the extra speakers are surround back inside of side speakers. *\/$/;"	e	enum:__anon111
FMOD_SPEAKER_SIDE_LEFT	include/fmod/fmod.h	/^    FMOD_SPEAKER_SIDE_LEFT,$/;"	e	enum:__anon111
FMOD_SPEAKER_SIDE_RIGHT	include/fmod/fmod.h	/^    FMOD_SPEAKER_SIDE_RIGHT,$/;"	e	enum:__anon111
FMOD_SYNCPOINT	include/fmod/fmod.h	/^typedef struct FMOD_SYNCPOINT	  FMOD_SYNCPOINT;$/;"	t	typeref:struct:FMOD_SYNCPOINT
FMOD_SYSTEM	include/fmod/fmod.h	/^typedef struct FMOD_SYSTEM        FMOD_SYSTEM;$/;"	t	typeref:struct:FMOD_SYSTEM
FMOD_SYSTEM_CALLBACK	include/fmod/fmod.h	/^typedef FMOD_RESULT (F_CALLBACK *FMOD_SYSTEM_CALLBACK)       (FMOD_SYSTEM *system, FMOD_SYSTEM_CALLBACKTYPE type, void *commanddata1, void *commanddata2);$/;"	t
FMOD_SYSTEM_CALLBACKTYPE	include/fmod/fmod.h	/^} FMOD_SYSTEM_CALLBACKTYPE;$/;"	t	typeref:enum:__anon118
FMOD_SYSTEM_CALLBACKTYPE_BADDSPCONNECTION	include/fmod/fmod.h	/^    FMOD_SYSTEM_CALLBACKTYPE_BADDSPCONNECTION,          \/* Called when a bad connection was made with DSP::addInput. Usually called from mixer thread because that is where the connections are made.  *\/$/;"	e	enum:__anon118
FMOD_SYSTEM_CALLBACKTYPE_BADDSPLEVEL	include/fmod/fmod.h	/^    FMOD_SYSTEM_CALLBACKTYPE_BADDSPLEVEL,               \/* Called when too many effects were added exceeding the maximum tree depth of 128.  This is most likely caused by accidentally adding too many DSP effects. Usually called from mixer thread because that is where the connections are made.  *\/$/;"	e	enum:__anon118
FMOD_SYSTEM_CALLBACKTYPE_DEVICELISTCHANGED	include/fmod/fmod.h	/^    FMOD_SYSTEM_CALLBACKTYPE_DEVICELISTCHANGED,         \/* Called from System::update when the enumerated list of devices has changed. *\/$/;"	e	enum:__anon118
FMOD_SYSTEM_CALLBACKTYPE_DEVICELOST	include/fmod/fmod.h	/^    FMOD_SYSTEM_CALLBACKTYPE_DEVICELOST,                \/* Called from System::update when an output device has been lost due to control panel parameter changes and FMOD cannot automatically recover. *\/$/;"	e	enum:__anon118
FMOD_SYSTEM_CALLBACKTYPE_FORCEINT	include/fmod/fmod.h	/^    FMOD_SYSTEM_CALLBACKTYPE_FORCEINT = 65536           \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon118
FMOD_SYSTEM_CALLBACKTYPE_MAX	include/fmod/fmod.h	/^    FMOD_SYSTEM_CALLBACKTYPE_MAX,                       \/* Maximum number of callback types supported. *\/$/;"	e	enum:__anon118
FMOD_SYSTEM_CALLBACKTYPE_MEMORYALLOCATIONFAILED	include/fmod/fmod.h	/^    FMOD_SYSTEM_CALLBACKTYPE_MEMORYALLOCATIONFAILED,    \/* Called directly when a memory allocation fails somewhere in FMOD.  (NOTE - 'system' will be NULL in this callback type.)*\/$/;"	e	enum:__anon118
FMOD_SYSTEM_CALLBACKTYPE_THREADCREATED	include/fmod/fmod.h	/^    FMOD_SYSTEM_CALLBACKTYPE_THREADCREATED,             \/* Called directly when a thread is created. (NOTE - 'system' will be NULL in this callback type.) *\/$/;"	e	enum:__anon118
FMOD_TAG	include/fmod/fmod.h	/^typedef struct FMOD_TAG$/;"	s
FMOD_TAG	include/fmod/fmod.h	/^} FMOD_TAG;$/;"	t	typeref:struct:FMOD_TAG
FMOD_TAGDATATYPE	include/fmod/fmod.h	/^} FMOD_TAGDATATYPE;$/;"	t	typeref:enum:__anon122
FMOD_TAGDATATYPE_BINARY	include/fmod/fmod.h	/^    FMOD_TAGDATATYPE_BINARY = 0,$/;"	e	enum:__anon122
FMOD_TAGDATATYPE_CDTOC	include/fmod/fmod.h	/^    FMOD_TAGDATATYPE_CDTOC,$/;"	e	enum:__anon122
FMOD_TAGDATATYPE_FLOAT	include/fmod/fmod.h	/^    FMOD_TAGDATATYPE_FLOAT,$/;"	e	enum:__anon122
FMOD_TAGDATATYPE_FORCEINT	include/fmod/fmod.h	/^    FMOD_TAGDATATYPE_FORCEINT = 65536   \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon122
FMOD_TAGDATATYPE_INT	include/fmod/fmod.h	/^    FMOD_TAGDATATYPE_INT,$/;"	e	enum:__anon122
FMOD_TAGDATATYPE_MAX	include/fmod/fmod.h	/^    FMOD_TAGDATATYPE_MAX,               \/* Maximum number of tag datatypes supported. *\/$/;"	e	enum:__anon122
FMOD_TAGDATATYPE_STRING	include/fmod/fmod.h	/^    FMOD_TAGDATATYPE_STRING,$/;"	e	enum:__anon122
FMOD_TAGDATATYPE_STRING_UTF16	include/fmod/fmod.h	/^    FMOD_TAGDATATYPE_STRING_UTF16,$/;"	e	enum:__anon122
FMOD_TAGDATATYPE_STRING_UTF16BE	include/fmod/fmod.h	/^    FMOD_TAGDATATYPE_STRING_UTF16BE,$/;"	e	enum:__anon122
FMOD_TAGDATATYPE_STRING_UTF8	include/fmod/fmod.h	/^    FMOD_TAGDATATYPE_STRING_UTF8,$/;"	e	enum:__anon122
FMOD_TAGTYPE	include/fmod/fmod.h	/^} FMOD_TAGTYPE;$/;"	t	typeref:enum:__anon121
FMOD_TAGTYPE_ASF	include/fmod/fmod.h	/^    FMOD_TAGTYPE_ASF,$/;"	e	enum:__anon121
FMOD_TAGTYPE_FMOD	include/fmod/fmod.h	/^    FMOD_TAGTYPE_FMOD,$/;"	e	enum:__anon121
FMOD_TAGTYPE_FORCEINT	include/fmod/fmod.h	/^    FMOD_TAGTYPE_FORCEINT = 65536   \/* Makes sure this enum is signed 32bit. *\/$/;"	e	enum:__anon121
FMOD_TAGTYPE_ICECAST	include/fmod/fmod.h	/^    FMOD_TAGTYPE_ICECAST,$/;"	e	enum:__anon121
FMOD_TAGTYPE_ID3V1	include/fmod/fmod.h	/^    FMOD_TAGTYPE_ID3V1,$/;"	e	enum:__anon121
FMOD_TAGTYPE_ID3V2	include/fmod/fmod.h	/^    FMOD_TAGTYPE_ID3V2,$/;"	e	enum:__anon121
FMOD_TAGTYPE_MAX	include/fmod/fmod.h	/^    FMOD_TAGTYPE_MAX,               \/* Maximum number of tag types supported. *\/$/;"	e	enum:__anon121
FMOD_TAGTYPE_MIDI	include/fmod/fmod.h	/^    FMOD_TAGTYPE_MIDI,$/;"	e	enum:__anon121
FMOD_TAGTYPE_PLAYLIST	include/fmod/fmod.h	/^    FMOD_TAGTYPE_PLAYLIST,$/;"	e	enum:__anon121
FMOD_TAGTYPE_SHOUTCAST	include/fmod/fmod.h	/^    FMOD_TAGTYPE_SHOUTCAST,$/;"	e	enum:__anon121
FMOD_TAGTYPE_UNKNOWN	include/fmod/fmod.h	/^    FMOD_TAGTYPE_UNKNOWN = 0,$/;"	e	enum:__anon121
FMOD_TAGTYPE_USER	include/fmod/fmod.h	/^    FMOD_TAGTYPE_USER,$/;"	e	enum:__anon121
FMOD_TAGTYPE_VORBISCOMMENT	include/fmod/fmod.h	/^    FMOD_TAGTYPE_VORBISCOMMENT,$/;"	e	enum:__anon121
FMOD_TIMEUNIT	include/fmod/fmod.h	/^typedef unsigned int              FMOD_TIMEUNIT;$/;"	t
FMOD_TIMEUNIT_BUFFERED	include/fmod/fmod.h	1330;"	d
FMOD_TIMEUNIT_MODORDER	include/fmod/fmod.h	1322;"	d
FMOD_TIMEUNIT_MODPATTERN	include/fmod/fmod.h	1324;"	d
FMOD_TIMEUNIT_MODROW	include/fmod/fmod.h	1323;"	d
FMOD_TIMEUNIT_MS	include/fmod/fmod.h	1317;"	d
FMOD_TIMEUNIT_PCM	include/fmod/fmod.h	1318;"	d
FMOD_TIMEUNIT_PCMBYTES	include/fmod/fmod.h	1319;"	d
FMOD_TIMEUNIT_PCMFRACTION	include/fmod/fmod.h	1321;"	d
FMOD_TIMEUNIT_RAWBYTES	include/fmod/fmod.h	1320;"	d
FMOD_TIMEUNIT_SENTENCE	include/fmod/fmod.h	1328;"	d
FMOD_TIMEUNIT_SENTENCE_MS	include/fmod/fmod.h	1325;"	d
FMOD_TIMEUNIT_SENTENCE_PCM	include/fmod/fmod.h	1326;"	d
FMOD_TIMEUNIT_SENTENCE_PCMBYTES	include/fmod/fmod.h	1327;"	d
FMOD_TIMEUNIT_SENTENCE_SUBSOUND	include/fmod/fmod.h	1329;"	d
FMOD_UNICODE	include/fmod/fmod.h	894;"	d
FMOD_UNIQUE	include/fmod/fmod.h	886;"	d
FMOD_VECTOR	include/fmod/fmod.h	/^} FMOD_VECTOR;$/;"	t	typeref:struct:__anon106
FMOD_VERSION	include/fmod/fmod.h	18;"	d
FMOD_VIRTUAL_PLAYFROMSTART	include/fmod/fmod.h	898;"	d
FOUND	src/breakpad/google_breakpad/processor/symbol_supplier.h	/^    FOUND,$/;"	e	enum:google_breakpad::SymbolSupplier::SymbolResult
FRAME_TRUST_CFI	src/breakpad/google_breakpad/processor/stack_frame.h	/^    FRAME_TRUST_CFI,      \/\/ Derived from call frame info$/;"	e	enum:google_breakpad::StackFrame::FrameTrust
FRAME_TRUST_CFI_SCAN	src/breakpad/google_breakpad/processor/stack_frame.h	/^    FRAME_TRUST_CFI_SCAN, \/\/ Scanned the stack using call frame info, found this$/;"	e	enum:google_breakpad::StackFrame::FrameTrust
FRAME_TRUST_CONTEXT	src/breakpad/google_breakpad/processor/stack_frame.h	/^    FRAME_TRUST_CONTEXT   \/\/ Given as instruction pointer in a context$/;"	e	enum:google_breakpad::StackFrame::FrameTrust
FRAME_TRUST_FP	src/breakpad/google_breakpad/processor/stack_frame.h	/^    FRAME_TRUST_FP,       \/\/ Derived from frame pointer$/;"	e	enum:google_breakpad::StackFrame::FrameTrust
FRAME_TRUST_NONE	src/breakpad/google_breakpad/processor/stack_frame.h	/^    FRAME_TRUST_NONE,     \/\/ Unknown$/;"	e	enum:google_breakpad::StackFrame::FrameTrust
FRAME_TRUST_SCAN	src/breakpad/google_breakpad/processor/stack_frame.h	/^    FRAME_TRUST_SCAN,     \/\/ Scanned the stack, found this$/;"	e	enum:google_breakpad::StackFrame::FrameTrust
FREELIST_REF	src/lua/lauxlib.c	28;"	d	file:
FREETYPE_MAJOR	include/freetype/freetype/freetype.h	3853;"	d
FREETYPE_MINOR	include/freetype/freetype/freetype.h	3854;"	d
FREETYPE_PATCH	include/freetype/freetype/freetype.h	3855;"	d
FTC_CMapCache	include/freetype/freetype/ftcache.h	/^  typedef struct FTC_CMapCacheRec_*  FTC_CMapCache;$/;"	t	typeref:struct:FTC_CMapCacheRec_
FTC_FACE_ID_HASH	include/freetype/freetype/ftcache.h	223;"	d
FTC_FONT_COMPARE	include/freetype/freetype/ftcache.h	1105;"	d
FTC_FONT_HASH	include/freetype/freetype/ftcache.h	1111;"	d
FTC_FaceID	include/freetype/freetype/ftcache.h	/^  typedef FT_Pointer  FTC_FaceID;$/;"	t
FTC_Face_Requester	include/freetype/freetype/ftcache.h	/^  (*FTC_Face_Requester)( FTC_FaceID  face_id,$/;"	t
FTC_Font	include/freetype/freetype/ftcache.h	/^  typedef FTC_FontRec*  FTC_Font;$/;"	t
FTC_FontRec	include/freetype/freetype/ftcache.h	/^  } FTC_FontRec;$/;"	t	typeref:struct:FTC_FontRec_
FTC_FontRec_	include/freetype/freetype/ftcache.h	/^  typedef struct  FTC_FontRec_$/;"	s
FTC_IMAGE_TYPE_COMPARE	include/freetype/freetype/ftcache.h	703;"	d
FTC_IMAGE_TYPE_HASH	include/freetype/freetype/ftcache.h	712;"	d
FTC_ImageCache	include/freetype/freetype/ftcache.h	/^  typedef struct FTC_ImageCacheRec_*  FTC_ImageCache;$/;"	t	typeref:struct:FTC_ImageCacheRec_
FTC_ImageType	include/freetype/freetype/ftcache.h	/^  typedef struct FTC_ImageTypeRec_*  FTC_ImageType;$/;"	t	typeref:struct:FTC_ImageTypeRec_
FTC_ImageTypeRec	include/freetype/freetype/ftcache.h	/^  } FTC_ImageTypeRec;$/;"	t	typeref:struct:FTC_ImageTypeRec_
FTC_ImageTypeRec_	include/freetype/freetype/ftcache.h	/^  typedef struct  FTC_ImageTypeRec_$/;"	s
FTC_Manager	include/freetype/freetype/ftcache.h	/^  typedef struct FTC_ManagerRec_*  FTC_Manager;$/;"	t	typeref:struct:FTC_ManagerRec_
FTC_Node	include/freetype/freetype/ftcache.h	/^  typedef struct FTC_NodeRec_*  FTC_Node;$/;"	t	typeref:struct:FTC_NodeRec_
FTC_SBit	include/freetype/freetype/ftcache.h	/^  typedef struct FTC_SBitRec_*  FTC_SBit;$/;"	t	typeref:struct:FTC_SBitRec_
FTC_SBitCache	include/freetype/freetype/ftcache.h	/^  typedef struct FTC_SBitCacheRec_*  FTC_SBitCache;$/;"	t	typeref:struct:FTC_SBitCacheRec_
FTC_SBitRec	include/freetype/freetype/ftcache.h	/^  } FTC_SBitRec;$/;"	t	typeref:struct:FTC_SBitRec_
FTC_SBitRec_	include/freetype/freetype/ftcache.h	/^  typedef struct  FTC_SBitRec_$/;"	s
FTC_Scaler	include/freetype/freetype/ftcache.h	/^  typedef struct FTC_ScalerRec_*  FTC_Scaler;$/;"	t	typeref:struct:FTC_ScalerRec_
FTC_ScalerRec	include/freetype/freetype/ftcache.h	/^  } FTC_ScalerRec;$/;"	t	typeref:struct:FTC_ScalerRec_
FTC_ScalerRec_	include/freetype/freetype/ftcache.h	/^  typedef struct  FTC_ScalerRec_$/;"	s
FTRenderer_getCBox	include/freetype/freetype/ftrender.h	114;"	d
FTRenderer_render	include/freetype/freetype/ftrender.h	112;"	d
FTRenderer_setMode	include/freetype/freetype/ftrender.h	115;"	d
FTRenderer_transform	include/freetype/freetype/ftrender.h	113;"	d
FT_ABS	include/freetype/freetype/internal/ftobjs.h	73;"	d
FT_ADVANCES_H	include/freetype/freetype/config/ftheader.h	754;"	d
FT_ADVANCE_FLAG_FAST_ONLY	include/freetype/freetype/ftadvanc.h	75;"	d
FT_ALLOC	include/freetype/freetype/internal/ftmemory.h	260;"	d
FT_ALLOC_MULT	include/freetype/freetype/internal/ftmemory.h	266;"	d
FT_ANGLE_2PI	include/freetype/freetype/fttrigon.h	76;"	d
FT_ANGLE_PI	include/freetype/freetype/fttrigon.h	64;"	d
FT_ANGLE_PI2	include/freetype/freetype/fttrigon.h	88;"	d
FT_ANGLE_PI4	include/freetype/freetype/fttrigon.h	100;"	d
FT_ARRAY_CHECK	include/freetype/freetype/internal/ftmemory.h	230;"	d
FT_ARRAY_COPY	include/freetype/freetype/internal/ftmemory.h	216;"	d
FT_ARRAY_MAX	include/freetype/freetype/internal/ftmemory.h	228;"	d
FT_ARRAY_MOVE	include/freetype/freetype/internal/ftmemory.h	219;"	d
FT_ARRAY_ZERO	include/freetype/freetype/internal/ftmemory.h	213;"	d
FT_ASSERT	include/freetype/freetype/internal/ftdebug.h	194;"	d
FT_ASSERT	include/freetype/freetype/internal/ftdebug.h	204;"	d
FT_ASSIGNP	include/freetype/freetype/internal/ftmemory.h	76;"	d
FT_ASSIGNP_INNER	include/freetype/freetype/internal/ftmemory.h	102;"	d
FT_ASSIGNP_INNER	include/freetype/freetype/internal/ftmemory.h	95;"	d
FT_Alloc_Func	include/freetype/freetype/ftsystem.h	/^  (*FT_Alloc_Func)( FT_Memory  memory,$/;"	t
FT_Angle	include/freetype/freetype/fttrigon.h	/^  typedef FT_Fixed  FT_Angle;$/;"	t
FT_AutoHinter	include/freetype/freetype/internal/autohint.h	/^  typedef struct FT_AutoHinterRec_  *FT_AutoHinter;$/;"	t	typeref:struct:FT_AutoHinterRec_
FT_AutoHinter_GlobalDoneFunc	include/freetype/freetype/internal/autohint.h	/^  (*FT_AutoHinter_GlobalDoneFunc)( FT_AutoHinter  hinter,$/;"	t
FT_AutoHinter_GlobalGetFunc	include/freetype/freetype/internal/autohint.h	/^  (*FT_AutoHinter_GlobalGetFunc)( FT_AutoHinter  hinter,$/;"	t
FT_AutoHinter_GlobalResetFunc	include/freetype/freetype/internal/autohint.h	/^  (*FT_AutoHinter_GlobalResetFunc)( FT_AutoHinter  hinter,$/;"	t
FT_AutoHinter_GlyphLoadFunc	include/freetype/freetype/internal/autohint.h	/^  (*FT_AutoHinter_GlyphLoadFunc)( FT_AutoHinter  hinter,$/;"	t
FT_AutoHinter_Service	include/freetype/freetype/internal/autohint.h	/^  } FT_AutoHinter_ServiceRec, *FT_AutoHinter_Service;$/;"	t	typeref:struct:FT_AutoHinter_ServiceRec_
FT_AutoHinter_ServiceRec	include/freetype/freetype/internal/autohint.h	/^  } FT_AutoHinter_ServiceRec, *FT_AutoHinter_Service;$/;"	t	typeref:struct:FT_AutoHinter_ServiceRec_
FT_AutoHinter_ServiceRec_	include/freetype/freetype/internal/autohint.h	/^  typedef struct  FT_AutoHinter_ServiceRec_$/;"	s
FT_BASE	include/freetype/freetype/config/ftconfig.h	464;"	d
FT_BASE	include/freetype/freetype/config/ftconfig.h	466;"	d
FT_BASE_DEF	include/freetype/freetype/config/ftconfig.h	475;"	d
FT_BASE_DEF	include/freetype/freetype/config/ftconfig.h	477;"	d
FT_BBOX_H	include/freetype/freetype/config/ftheader.h	489;"	d
FT_BBox	include/freetype/freetype/ftimage.h	/^  } FT_BBox;$/;"	t	typeref:struct:FT_BBox_
FT_BBox_	include/freetype/freetype/ftimage.h	/^  typedef struct  FT_BBox_$/;"	s
FT_BDF_GetCharsetIdFunc	include/freetype/freetype/internal/services/svbdf.h	/^  (*FT_BDF_GetCharsetIdFunc)( FT_Face       face,$/;"	t
FT_BDF_GetPropertyFunc	include/freetype/freetype/internal/services/svbdf.h	/^  (*FT_BDF_GetPropertyFunc)( FT_Face           face,$/;"	t
FT_BDF_H	include/freetype/freetype/config/ftheader.h	384;"	d
FT_BEGIN_HEADER	include/freetype/freetype/config/ftheader.h	34;"	d
FT_BEGIN_HEADER	include/freetype/freetype/config/ftheader.h	36;"	d
FT_BEGIN_STMNT	include/freetype/freetype/config/ftconfig.h	297;"	d
FT_BITMAP_GLYPH	include/freetype/freetype/internal/ftobjs.h	654;"	d
FT_BITMAP_H	include/freetype/freetype/config/ftheader.h	476;"	d
FT_BOOL	include/freetype/freetype/fttypes.h	581;"	d
FT_BYTE_	include/freetype/freetype/internal/ftstream.h	156;"	d
FT_BYTE_I16	include/freetype/freetype/internal/ftstream.h	164;"	d
FT_BYTE_I32	include/freetype/freetype/internal/ftstream.h	166;"	d
FT_BYTE_U16	include/freetype/freetype/internal/ftstream.h	165;"	d
FT_BYTE_U32	include/freetype/freetype/internal/ftstream.h	167;"	d
FT_BZIP2_H	include/freetype/freetype/config/ftheader.h	437;"	d
FT_Bitmap	include/freetype/freetype/ftimage.h	/^  } FT_Bitmap;$/;"	t	typeref:struct:FT_Bitmap_
FT_BitmapGlyph	include/freetype/freetype/ftglyph.h	/^  typedef struct FT_BitmapGlyphRec_*  FT_BitmapGlyph;$/;"	t	typeref:struct:FT_BitmapGlyphRec_
FT_BitmapGlyphRec	include/freetype/freetype/ftglyph.h	/^  } FT_BitmapGlyphRec;$/;"	t	typeref:struct:FT_BitmapGlyphRec_
FT_BitmapGlyphRec_	include/freetype/freetype/ftglyph.h	/^  typedef struct  FT_BitmapGlyphRec_$/;"	s
FT_Bitmap_	include/freetype/freetype/ftimage.h	/^  typedef struct  FT_Bitmap_$/;"	s
FT_Bitmap_LcdFilterFunc	include/freetype/freetype/internal/ftobjs.h	/^  typedef void  (*FT_Bitmap_LcdFilterFunc)( FT_Bitmap*      bitmap,$/;"	t
FT_Bitmap_Size	include/freetype/freetype/freetype.h	/^  } FT_Bitmap_Size;$/;"	t	typeref:struct:FT_Bitmap_Size_
FT_Bitmap_Size_	include/freetype/freetype/freetype.h	/^  typedef struct  FT_Bitmap_Size_$/;"	s
FT_Bool	include/freetype/freetype/fttypes.h	/^  typedef unsigned char  FT_Bool;$/;"	t
FT_Byte	include/freetype/freetype/fttypes.h	/^  typedef unsigned char  FT_Byte;$/;"	t
FT_Bytes	include/freetype/freetype/fttypes.h	/^  typedef const FT_Byte*  FT_Bytes;$/;"	t
FT_CACHE_CHARMAP_H	include/freetype/freetype/config/ftheader.h	559;"	d
FT_CACHE_H	include/freetype/freetype/config/ftheader.h	502;"	d
FT_CACHE_IMAGE_H	include/freetype/freetype/config/ftheader.h	522;"	d
FT_CACHE_INTERNAL_CACHE_H	include/freetype/freetype/config/ftheader.h	769;"	d
FT_CACHE_INTERNAL_GLYPH_H	include/freetype/freetype/config/ftheader.h	770;"	d
FT_CACHE_INTERNAL_IMAGE_H	include/freetype/freetype/config/ftheader.h	771;"	d
FT_CACHE_INTERNAL_MANAGER_H	include/freetype/freetype/config/ftheader.h	768;"	d
FT_CACHE_INTERNAL_MRU_H	include/freetype/freetype/config/ftheader.h	767;"	d
FT_CACHE_INTERNAL_SBITS_H	include/freetype/freetype/config/ftheader.h	772;"	d
FT_CACHE_MANAGER_H	include/freetype/freetype/config/ftheader.h	766;"	d
FT_CACHE_SMALL_BITMAPS_H	include/freetype/freetype/config/ftheader.h	543;"	d
FT_CALLBACK_DEF	include/freetype/freetype/config/ftconfig.h	540;"	d
FT_CALLBACK_DEF	include/freetype/freetype/config/ftconfig.h	542;"	d
FT_CALLBACK_TABLE	include/freetype/freetype/config/ftconfig.h	548;"	d
FT_CALLBACK_TABLE	include/freetype/freetype/config/ftconfig.h	551;"	d
FT_CALLBACK_TABLE_DEF	include/freetype/freetype/config/ftconfig.h	549;"	d
FT_CALLBACK_TABLE_DEF	include/freetype/freetype/config/ftconfig.h	552;"	d
FT_CHAR_BIT	include/freetype/freetype/config/ftconfig.h	70;"	d
FT_CHAR_BIT	include/freetype/freetype/config/ftstdlib.h	62;"	d
FT_CID_GetCIDFromGlyphIndexFunc	include/freetype/freetype/internal/services/svcid.h	/^  (*FT_CID_GetCIDFromGlyphIndexFunc)( FT_Face   face,$/;"	t
FT_CID_GetIsInternallyCIDKeyedFunc	include/freetype/freetype/internal/services/svcid.h	/^  (*FT_CID_GetIsInternallyCIDKeyedFunc)( FT_Face   face,$/;"	t
FT_CID_GetRegistryOrderingSupplementFunc	include/freetype/freetype/internal/services/svcid.h	/^  (*FT_CID_GetRegistryOrderingSupplementFunc)( FT_Face       face,$/;"	t
FT_CID_H	include/freetype/freetype/config/ftheader.h	398;"	d
FT_CMAP	include/freetype/freetype/internal/ftobjs.h	139;"	d
FT_CMAP_ENCODING	include/freetype/freetype/internal/ftobjs.h	144;"	d
FT_CMAP_ENCODING_ID	include/freetype/freetype/internal/ftobjs.h	143;"	d
FT_CMAP_FACE	include/freetype/freetype/internal/ftobjs.h	145;"	d
FT_CMAP_PLATFORM_ID	include/freetype/freetype/internal/ftobjs.h	142;"	d
FT_CMap	include/freetype/freetype/internal/ftobjs.h	/^  typedef struct FT_CMapRec_*              FT_CMap;$/;"	t	typeref:struct:FT_CMapRec_
FT_CMapRec	include/freetype/freetype/internal/ftobjs.h	/^  } FT_CMapRec;$/;"	t	typeref:struct:FT_CMapRec_
FT_CMapRec_	include/freetype/freetype/internal/ftobjs.h	/^  typedef struct  FT_CMapRec_$/;"	s
FT_CMap_CharIndexFunc	include/freetype/freetype/internal/ftobjs.h	/^  (*FT_CMap_CharIndexFunc)( FT_CMap    cmap,$/;"	t
FT_CMap_CharNextFunc	include/freetype/freetype/internal/ftobjs.h	/^  (*FT_CMap_CharNextFunc)( FT_CMap     cmap,$/;"	t
FT_CMap_CharVarIndexFunc	include/freetype/freetype/internal/ftobjs.h	/^  (*FT_CMap_CharVarIndexFunc)( FT_CMap    cmap,$/;"	t
FT_CMap_CharVarIsDefaultFunc	include/freetype/freetype/internal/ftobjs.h	/^  (*FT_CMap_CharVarIsDefaultFunc)( FT_CMap    cmap,$/;"	t
FT_CMap_CharVariantListFunc	include/freetype/freetype/internal/ftobjs.h	/^  (*FT_CMap_CharVariantListFunc)( FT_CMap    cmap,$/;"	t
FT_CMap_Class	include/freetype/freetype/internal/ftobjs.h	/^  typedef const struct FT_CMap_ClassRec_*  FT_CMap_Class;$/;"	t	typeref:struct:FT_CMap_ClassRec_
FT_CMap_ClassRec	include/freetype/freetype/internal/ftobjs.h	/^  } FT_CMap_ClassRec;$/;"	t	typeref:struct:FT_CMap_ClassRec_
FT_CMap_ClassRec_	include/freetype/freetype/internal/ftobjs.h	/^  typedef struct  FT_CMap_ClassRec_$/;"	s
FT_CMap_DoneFunc	include/freetype/freetype/internal/ftobjs.h	/^  (*FT_CMap_DoneFunc)( FT_CMap  cmap );$/;"	t
FT_CMap_InitFunc	include/freetype/freetype/internal/ftobjs.h	/^  (*FT_CMap_InitFunc)( FT_CMap     cmap,$/;"	t
FT_CMap_VariantCharListFunc	include/freetype/freetype/internal/ftobjs.h	/^  (*FT_CMap_VariantCharListFunc)( FT_CMap    cmap,$/;"	t
FT_CMap_VariantListFunc	include/freetype/freetype/internal/ftobjs.h	/^  (*FT_CMap_VariantListFunc)( FT_CMap    cmap,$/;"	t
FT_CONFIG_CONFIG_H	include/freetype/freetype/config/ftheader.h	110;"	d
FT_CONFIG_MODULES_H	include/freetype/freetype/config/ftheader.h	156;"	d
FT_CONFIG_OPTIONS_H	include/freetype/freetype/config/ftheader.h	140;"	d
FT_CONFIG_OPTION_ADOBE_GLYPH_LIST	include/freetype/freetype/config/ftoption.h	299;"	d
FT_CONFIG_OPTION_FORCE_INT64	include/freetype/freetype/config/ftoption.h	115;"	d
FT_CONFIG_OPTION_GUESSING_EMBEDDED_RFORK	include/freetype/freetype/config/ftoption.h	334;"	d
FT_CONFIG_OPTION_INCREMENTAL	include/freetype/freetype/config/ftoption.h	346;"	d
FT_CONFIG_OPTION_INLINE_MULFIX	include/freetype/freetype/config/ftoption.h	136;"	d
FT_CONFIG_OPTION_MAC_FONTS	include/freetype/freetype/config/ftoption.h	312;"	d
FT_CONFIG_OPTION_OLD_INTERNALS	include/freetype/freetype/config/ftoption.h	764;"	d
FT_CONFIG_OPTION_POSTSCRIPT_NAMES	include/freetype/freetype/config/ftoption.h	281;"	d
FT_CONFIG_OPTION_USE_LZW	include/freetype/freetype/config/ftoption.h	151;"	d
FT_CONFIG_OPTION_USE_MODULE_ERRORS	include/freetype/freetype/config/ftoption.h	457;"	d
FT_CONFIG_OPTION_USE_ZLIB	include/freetype/freetype/config/ftoption.h	166;"	d
FT_CONFIG_STANDARD_LIBRARY_H	include/freetype/freetype/config/ftheader.h	125;"	d
FT_CURVE_TAG	include/freetype/freetype/ftimage.h	514;"	d
FT_CURVE_TAG_CONIC	include/freetype/freetype/ftimage.h	517;"	d
FT_CURVE_TAG_CUBIC	include/freetype/freetype/ftimage.h	518;"	d
FT_CURVE_TAG_HAS_SCANMODE	include/freetype/freetype/ftimage.h	520;"	d
FT_CURVE_TAG_ON	include/freetype/freetype/ftimage.h	516;"	d
FT_CURVE_TAG_TOUCH_BOTH	include/freetype/freetype/ftimage.h	525;"	d
FT_CURVE_TAG_TOUCH_X	include/freetype/freetype/ftimage.h	522;"	d
FT_CURVE_TAG_TOUCH_Y	include/freetype/freetype/ftimage.h	523;"	d
FT_Char	include/freetype/freetype/fttypes.h	/^  typedef signed char  FT_Char;$/;"	t
FT_CharMap	include/freetype/freetype/freetype.h	/^  typedef struct FT_CharMapRec_*  FT_CharMap;$/;"	t	typeref:struct:FT_CharMapRec_
FT_CharMapRec	include/freetype/freetype/freetype.h	/^  } FT_CharMapRec;$/;"	t	typeref:struct:FT_CharMapRec_
FT_CharMapRec_	include/freetype/freetype/freetype.h	/^  typedef struct  FT_CharMapRec_$/;"	s
FT_CharMap_CharIndexFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_CharMap_CharIndexFunc)( FT_CharMap  charmap,$/;"	t
FT_CharMap_CharNextFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_CharMap_CharNextFunc)( FT_CharMap  charmap,$/;"	t
FT_Curve_Tag_Conic	include/freetype/freetype/ftimage.h	529;"	d
FT_Curve_Tag_Cubic	include/freetype/freetype/ftimage.h	530;"	d
FT_Curve_Tag_On	include/freetype/freetype/ftimage.h	528;"	d
FT_Curve_Tag_Touch_X	include/freetype/freetype/ftimage.h	531;"	d
FT_Curve_Tag_Touch_Y	include/freetype/freetype/ftimage.h	532;"	d
FT_DEBUG_HOOK_TRUETYPE	include/freetype/freetype/internal/ftobjs.h	740;"	d
FT_DEBUG_HOOK_UNPATENTED_HINTING	include/freetype/freetype/internal/ftobjs.h	747;"	d
FT_DEBUG_INNER	include/freetype/freetype/internal/ftmemory.h	101;"	d
FT_DEBUG_INNER	include/freetype/freetype/internal/ftmemory.h	91;"	d
FT_DEBUG_LEVEL_ERROR	include/freetype/freetype/internal/ftdebug.h	40;"	d
FT_DEBUG_LEVEL_ERROR	include/freetype/freetype/internal/ftdebug.h	41;"	d
FT_DECLARE_CMAP_CLASS	include/freetype/freetype/internal/ftobjs.h	211;"	d
FT_DECLARE_CMAP_CLASS	include/freetype/freetype/internal/ftobjs.h	225;"	d
FT_DECLARE_DRIVER	include/freetype/freetype/internal/ftdriver.h	287;"	d
FT_DECLARE_DRIVER	include/freetype/freetype/internal/ftdriver.h	341;"	d
FT_DECLARE_MODULE	include/freetype/freetype/internal/ftobjs.h	1296;"	d
FT_DECLARE_MODULE	include/freetype/freetype/internal/ftobjs.h	1339;"	d
FT_DECLARE_RENDERER	include/freetype/freetype/internal/ftobjs.h	1117;"	d
FT_DECLARE_RENDERER	include/freetype/freetype/internal/ftobjs.h	1142;"	d
FT_DEFINE_AUTOHINTER_SERVICE	include/freetype/freetype/internal/autohint.h	201;"	d
FT_DEFINE_AUTOHINTER_SERVICE	include/freetype/freetype/internal/autohint.h	211;"	d
FT_DEFINE_CMAP_CLASS	include/freetype/freetype/internal/ftobjs.h	214;"	d
FT_DEFINE_CMAP_CLASS	include/freetype/freetype/internal/ftobjs.h	228;"	d
FT_DEFINE_DRIVER	include/freetype/freetype/internal/ftdriver.h	291;"	d
FT_DEFINE_DRIVER	include/freetype/freetype/internal/ftdriver.h	343;"	d
FT_DEFINE_DRIVERS_OLD_INTERNAL	include/freetype/freetype/internal/sfnt.h	759;"	d
FT_DEFINE_DRIVERS_OLD_INTERNAL	include/freetype/freetype/internal/sfnt.h	762;"	d
FT_DEFINE_DRIVERS_OLD_INTERNAL	include/freetype/freetype/internal/sfnt.h	825;"	d
FT_DEFINE_DRIVERS_OLD_INTERNAL	include/freetype/freetype/internal/sfnt.h	828;"	d
FT_DEFINE_DRIVERS_OLD_INTERNALS	include/freetype/freetype/internal/ftdriver.h	281;"	d
FT_DEFINE_DRIVERS_OLD_INTERNALS	include/freetype/freetype/internal/ftdriver.h	284;"	d
FT_DEFINE_DRIVERS_OLD_INTERNALS	include/freetype/freetype/internal/ftdriver.h	334;"	d
FT_DEFINE_DRIVERS_OLD_INTERNALS	include/freetype/freetype/internal/ftdriver.h	338;"	d
FT_DEFINE_GLYPH	include/freetype/freetype/internal/ftobjs.h	1052;"	d
FT_DEFINE_GLYPH	include/freetype/freetype/internal/ftobjs.h	1062;"	d
FT_DEFINE_MODULE	include/freetype/freetype/internal/ftobjs.h	1317;"	d
FT_DEFINE_MODULE	include/freetype/freetype/internal/ftobjs.h	1359;"	d
FT_DEFINE_OUTLINE_FUNCS	include/freetype/freetype/internal/ftobjs.h	957;"	d
FT_DEFINE_OUTLINE_FUNCS	include/freetype/freetype/internal/ftobjs.h	966;"	d
FT_DEFINE_PSHINTER_INTERFACE	include/freetype/freetype/internal/pshints.h	684;"	d
FT_DEFINE_PSHINTER_INTERFACE	include/freetype/freetype/internal/pshints.h	693;"	d
FT_DEFINE_RASTER_FUNCS	include/freetype/freetype/internal/ftobjs.h	1008;"	d
FT_DEFINE_RASTER_FUNCS	include/freetype/freetype/internal/ftobjs.h	997;"	d
FT_DEFINE_RENDERER	include/freetype/freetype/internal/ftobjs.h	1120;"	d
FT_DEFINE_RENDERER	include/freetype/freetype/internal/ftobjs.h	1144;"	d
FT_DEFINE_ROOT_MODULE	include/freetype/freetype/internal/ftobjs.h	1300;"	d
FT_DEFINE_ROOT_MODULE	include/freetype/freetype/internal/ftobjs.h	1345;"	d
FT_DEFINE_SERVICE	include/freetype/freetype/internal/ftserv.h	650;"	d
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svbdf.h	/^  FT_DEFINE_SERVICE( BDF )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svcid.h	/^  FT_DEFINE_SERVICE( CID )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svgldict.h	/^  FT_DEFINE_SERVICE( GlyphDict )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svgxval.h	/^  FT_DEFINE_SERVICE( CKERNvalidate )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svgxval.h	/^  FT_DEFINE_SERVICE( GXvalidate )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svkern.h	/^  FT_DEFINE_SERVICE( Kerning )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svmm.h	/^  FT_DEFINE_SERVICE( MultiMasters )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svotval.h	/^  FT_DEFINE_SERVICE( OTvalidate )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svpfr.h	/^  FT_DEFINE_SERVICE( PfrMetrics )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svpostnm.h	/^  FT_DEFINE_SERVICE( PsFontName )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svpscmap.h	/^  FT_DEFINE_SERVICE( PsCMaps )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svpsinfo.h	/^  FT_DEFINE_SERVICE( PsInfo )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svsfnt.h	/^  FT_DEFINE_SERVICE( SFNT_Table )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svttcmap.h	/^  FT_DEFINE_SERVICE( TTCMaps )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svtteng.h	/^  FT_DEFINE_SERVICE( TrueTypeEngine )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svttglyf.h	/^  FT_DEFINE_SERVICE( TTGlyf )$/;"	f
FT_DEFINE_SERVICE	include/freetype/freetype/internal/services/svwinfnt.h	/^  FT_DEFINE_SERVICE( WinFnt )$/;"	f
FT_DEFINE_SERVICEDESCREC1	include/freetype/freetype/internal/ftserv.h	189;"	d
FT_DEFINE_SERVICEDESCREC1	include/freetype/freetype/internal/ftserv.h	269;"	d
FT_DEFINE_SERVICEDESCREC2	include/freetype/freetype/internal/ftserv.h	197;"	d
FT_DEFINE_SERVICEDESCREC2	include/freetype/freetype/internal/ftserv.h	304;"	d
FT_DEFINE_SERVICEDESCREC3	include/freetype/freetype/internal/ftserv.h	207;"	d
FT_DEFINE_SERVICEDESCREC3	include/freetype/freetype/internal/ftserv.h	342;"	d
FT_DEFINE_SERVICEDESCREC4	include/freetype/freetype/internal/ftserv.h	219;"	d
FT_DEFINE_SERVICEDESCREC4	include/freetype/freetype/internal/ftserv.h	383;"	d
FT_DEFINE_SERVICEDESCREC5	include/freetype/freetype/internal/ftserv.h	233;"	d
FT_DEFINE_SERVICEDESCREC5	include/freetype/freetype/internal/ftserv.h	427;"	d
FT_DEFINE_SERVICEDESCREC6	include/freetype/freetype/internal/ftserv.h	249;"	d
FT_DEFINE_SERVICEDESCREC6	include/freetype/freetype/internal/ftserv.h	474;"	d
FT_DEFINE_SERVICE_BDFRec	include/freetype/freetype/internal/services/svbdf.h	51;"	d
FT_DEFINE_SERVICE_BDFRec	include/freetype/freetype/internal/services/svbdf.h	61;"	d
FT_DEFINE_SERVICE_CIDREC	include/freetype/freetype/internal/services/svcid.h	52;"	d
FT_DEFINE_SERVICE_CIDREC	include/freetype/freetype/internal/services/svcid.h	63;"	d
FT_DEFINE_SERVICE_GLYPHDICTREC	include/freetype/freetype/internal/services/svgldict.h	57;"	d
FT_DEFINE_SERVICE_GLYPHDICTREC	include/freetype/freetype/internal/services/svgldict.h	67;"	d
FT_DEFINE_SERVICE_MULTIMASTERSREC	include/freetype/freetype/internal/services/svmm.h	74;"	d
FT_DEFINE_SERVICE_MULTIMASTERSREC	include/freetype/freetype/internal/services/svmm.h	87;"	d
FT_DEFINE_SERVICE_PSCMAPSREC	include/freetype/freetype/internal/services/svpscmap.h	123;"	d
FT_DEFINE_SERVICE_PSCMAPSREC	include/freetype/freetype/internal/services/svpscmap.h	141;"	d
FT_DEFINE_SERVICE_PSFONTNAMEREC	include/freetype/freetype/internal/services/svpostnm.h	52;"	d
FT_DEFINE_SERVICE_PSFONTNAMEREC	include/freetype/freetype/internal/services/svpostnm.h	60;"	d
FT_DEFINE_SERVICE_PSINFOREC	include/freetype/freetype/internal/services/svpsinfo.h	67;"	d
FT_DEFINE_SERVICE_PSINFOREC	include/freetype/freetype/internal/services/svpsinfo.h	81;"	d
FT_DEFINE_SERVICE_SFNT_TABLEREC	include/freetype/freetype/internal/services/svsfnt.h	75;"	d
FT_DEFINE_SERVICE_SFNT_TABLEREC	include/freetype/freetype/internal/services/svsfnt.h	83;"	d
FT_DEFINE_SERVICE_TTCMAPSREC	include/freetype/freetype/internal/services/svttcmap.h	79;"	d
FT_DEFINE_SERVICE_TTCMAPSREC	include/freetype/freetype/internal/services/svttcmap.h	87;"	d
FT_DEFINE_SERVICE_TTGLYFREC	include/freetype/freetype/internal/services/svttglyf.h	43;"	d
FT_DEFINE_SERVICE_TTGLYFREC	include/freetype/freetype/internal/services/svttglyf.h	51;"	d
FT_DEFINE_SFNT_INTERFACE	include/freetype/freetype/internal/sfnt.h	767;"	d
FT_DEFINE_SFNT_INTERFACE	include/freetype/freetype/internal/sfnt.h	833;"	d
FT_DEPRECATED_ATTRIBUTE	include/freetype/freetype/ftmac.h	42;"	d
FT_DRIVER	include/freetype/freetype/internal/ftobjs.h	686;"	d
FT_DRIVER_CLASS	include/freetype/freetype/internal/ftobjs.h	689;"	d
FT_DRIVER_HAS_HINTER	include/freetype/freetype/internal/ftobjs.h	473;"	d
FT_DRIVER_IS_SCALABLE	include/freetype/freetype/internal/ftobjs.h	467;"	d
FT_DRIVER_USES_OUTLINES	include/freetype/freetype/internal/ftobjs.h	470;"	d
FT_DUMMY_STMNT	include/freetype/freetype/config/ftconfig.h	299;"	d
FT_DUP	include/freetype/freetype/internal/ftmemory.h	357;"	d
FT_Data	include/freetype/freetype/fttypes.h	/^  } FT_Data;$/;"	t	typeref:struct:FT_Data_
FT_Data_	include/freetype/freetype/fttypes.h	/^  typedef struct  FT_Data_$/;"	s
FT_DebugHook_Func	include/freetype/freetype/ftmodapi.h	/^  (*FT_DebugHook_Func)( void*  arg );$/;"	t
FT_Driver	include/freetype/freetype/freetype.h	/^  typedef struct FT_DriverRec_*  FT_Driver;$/;"	t	typeref:struct:FT_DriverRec_
FT_DriverRec	include/freetype/freetype/internal/ftobjs.h	/^  } FT_DriverRec;$/;"	t	typeref:struct:FT_DriverRec_
FT_DriverRec_	include/freetype/freetype/internal/ftobjs.h	/^  typedef struct  FT_DriverRec_$/;"	s
FT_Driver_Class	include/freetype/freetype/internal/ftdriver.h	/^  } FT_Driver_ClassRec, *FT_Driver_Class;$/;"	t	typeref:struct:FT_Driver_ClassRec_
FT_Driver_ClassRec	include/freetype/freetype/internal/ftdriver.h	/^  } FT_Driver_ClassRec, *FT_Driver_Class;$/;"	t	typeref:struct:FT_Driver_ClassRec_
FT_Driver_ClassRec_	include/freetype/freetype/internal/ftdriver.h	/^  typedef struct  FT_Driver_ClassRec_$/;"	s
FT_ENCODING_MS_BIG5	include/freetype/freetype/freetype.h	/^    FT_ENCODING_MS_BIG5    = FT_ENCODING_BIG5,$/;"	e	enum:FT_Encoding_
FT_ENCODING_MS_GB2312	include/freetype/freetype/freetype.h	/^    FT_ENCODING_MS_GB2312  = FT_ENCODING_GB2312,$/;"	e	enum:FT_Encoding_
FT_ENCODING_MS_JOHAB	include/freetype/freetype/freetype.h	/^    FT_ENCODING_MS_JOHAB   = FT_ENCODING_JOHAB,$/;"	e	enum:FT_Encoding_
FT_ENCODING_MS_SJIS	include/freetype/freetype/freetype.h	/^    FT_ENCODING_MS_SJIS    = FT_ENCODING_SJIS,$/;"	e	enum:FT_Encoding_
FT_ENCODING_MS_WANSUNG	include/freetype/freetype/freetype.h	/^    FT_ENCODING_MS_WANSUNG = FT_ENCODING_WANSUNG,$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	include/freetype/freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_ADOBE_CUSTOM,   'A', 'D', 'B', 'C' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	include/freetype/freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_ADOBE_EXPERT,   'A', 'D', 'B', 'E' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	include/freetype/freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_ADOBE_LATIN_1,  'l', 'a', 't', '1' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	include/freetype/freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_ADOBE_STANDARD, 'A', 'D', 'O', 'B' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	include/freetype/freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_APPLE_ROMAN, 'a', 'r', 'm', 'n' )$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	include/freetype/freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_BIG5,    'b', 'i', 'g', '5' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	include/freetype/freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_GB2312,  'g', 'b', ' ', ' ' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	include/freetype/freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_JOHAB,   'j', 'o', 'h', 'a' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	include/freetype/freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_MS_SYMBOL, 's', 'y', 'm', 'b' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	include/freetype/freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_NONE, 0, 0, 0, 0 ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	include/freetype/freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_OLD_LATIN_2, 'l', 'a', 't', '2' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	include/freetype/freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_SJIS,    's', 'j', 'i', 's' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	include/freetype/freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_UNICODE,   'u', 'n', 'i', 'c' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	include/freetype/freetype/freetype.h	/^    FT_ENC_TAG( FT_ENCODING_WANSUNG, 'w', 'a', 'n', 's' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	include/freetype/freetype/freetype.h	511;"	d
FT_END_HEADER	include/freetype/freetype/config/ftheader.h	52;"	d
FT_END_HEADER	include/freetype/freetype/config/ftheader.h	54;"	d
FT_END_STMNT	include/freetype/freetype/config/ftconfig.h	298;"	d
FT_ERROR	include/freetype/freetype/internal/ftdebug.h	177;"	d
FT_ERROR	include/freetype/freetype/internal/ftdebug.h	181;"	d
FT_ERRORDEF	include/freetype/freetype/fterrors.h	140;"	d
FT_ERRORDEF	include/freetype/freetype/fterrors.h	190;"	d
FT_ERRORDEF_	include/freetype/freetype/fterrors.h	153;"	d
FT_ERRORDEF_	include/freetype/freetype/fterrors.h	191;"	d
FT_ERRORS_H	include/freetype/freetype/config/ftheader.h	188;"	d
FT_ERROR_BASE	include/freetype/freetype/fttypes.h	576;"	d
FT_ERROR_DEFINITIONS_H	include/freetype/freetype/config/ftheader.h	759;"	d
FT_ERROR_END_LIST	include/freetype/freetype/fterrors.h	142;"	d
FT_ERROR_END_LIST	include/freetype/freetype/fterrors.h	188;"	d
FT_ERROR_MODULE	include/freetype/freetype/fttypes.h	579;"	d
FT_ERROR_START_LIST	include/freetype/freetype/fterrors.h	141;"	d
FT_ERROR_START_LIST	include/freetype/freetype/fterrors.h	187;"	d
FT_ERR_BASE	include/freetype/freetype/fterrors.h	124;"	d
FT_ERR_BASE	include/freetype/freetype/fterrors.h	129;"	d
FT_ERR_BASE	include/freetype/freetype/fterrors.h	130;"	d
FT_ERR_BASE	include/freetype/freetype/fterrors.h	195;"	d
FT_ERR_CAT	include/freetype/freetype/fterrors.h	105;"	d
FT_ERR_CAT	include/freetype/freetype/fterrors.h	108;"	d
FT_ERR_PREFIX	include/freetype/freetype/fterrors.h	115;"	d
FT_ERR_PREFIX	include/freetype/freetype/fterrors.h	199;"	d
FT_ERR_XCAT	include/freetype/freetype/fterrors.h	104;"	d
FT_ERR_XCAT	include/freetype/freetype/fterrors.h	107;"	d
FT_EXPORT	include/freetype/freetype/config/ftconfig.h	486;"	d
FT_EXPORT	include/freetype/freetype/config/ftconfig.h	488;"	d
FT_EXPORT_DEF	include/freetype/freetype/config/ftconfig.h	497;"	d
FT_EXPORT_DEF	include/freetype/freetype/config/ftconfig.h	499;"	d
FT_EXPORT_VAR	include/freetype/freetype/config/ftconfig.h	508;"	d
FT_EXPORT_VAR	include/freetype/freetype/config/ftconfig.h	510;"	d
FT_Encoding	include/freetype/freetype/freetype.h	/^  } FT_Encoding;$/;"	t	typeref:enum:FT_Encoding_
FT_Encoding_	include/freetype/freetype/freetype.h	/^  typedef enum  FT_Encoding_$/;"	g
FT_Error	include/freetype/freetype/fttypes.h	/^  typedef int  FT_Error;$/;"	t
FT_F26Dot6	include/freetype/freetype/fttypes.h	/^  typedef signed long  FT_F26Dot6;$/;"	t
FT_F2Dot14	include/freetype/freetype/fttypes.h	/^  typedef signed short  FT_F2Dot14;$/;"	t
FT_FACE	include/freetype/freetype/internal/ftobjs.h	523;"	d
FT_FACE_DRIVER	include/freetype/freetype/internal/ftobjs.h	527;"	d
FT_FACE_FIND_GLOBAL_SERVICE	include/freetype/freetype/internal/ftserv.h	119;"	d
FT_FACE_FIND_SERVICE	include/freetype/freetype/internal/ftserv.h	69;"	d
FT_FACE_FLAG_CID_KEYED	include/freetype/freetype/freetype.h	1085;"	d
FT_FACE_FLAG_EXTERNAL_STREAM	include/freetype/freetype/freetype.h	1083;"	d
FT_FACE_FLAG_FAST_GLYPHS	include/freetype/freetype/freetype.h	1080;"	d
FT_FACE_FLAG_FIXED_SIZES	include/freetype/freetype/freetype.h	1074;"	d
FT_FACE_FLAG_FIXED_WIDTH	include/freetype/freetype/freetype.h	1075;"	d
FT_FACE_FLAG_GLYPH_NAMES	include/freetype/freetype/freetype.h	1082;"	d
FT_FACE_FLAG_HINTER	include/freetype/freetype/freetype.h	1084;"	d
FT_FACE_FLAG_HORIZONTAL	include/freetype/freetype/freetype.h	1077;"	d
FT_FACE_FLAG_KERNING	include/freetype/freetype/freetype.h	1079;"	d
FT_FACE_FLAG_MULTIPLE_MASTERS	include/freetype/freetype/freetype.h	1081;"	d
FT_FACE_FLAG_SCALABLE	include/freetype/freetype/freetype.h	1073;"	d
FT_FACE_FLAG_SFNT	include/freetype/freetype/freetype.h	1076;"	d
FT_FACE_FLAG_TRICKY	include/freetype/freetype/freetype.h	1086;"	d
FT_FACE_FLAG_VERTICAL	include/freetype/freetype/freetype.h	1078;"	d
FT_FACE_LIBRARY	include/freetype/freetype/internal/ftobjs.h	528;"	d
FT_FACE_LOOKUP_SERVICE	include/freetype/freetype/internal/ftserv.h	603;"	d
FT_FACE_LOOKUP_SERVICE	include/freetype/freetype/internal/ftserv.h	625;"	d
FT_FACE_MEMORY	include/freetype/freetype/internal/ftobjs.h	529;"	d
FT_FACE_SIZE	include/freetype/freetype/internal/ftobjs.h	536;"	d
FT_FACE_SLOT	include/freetype/freetype/internal/ftobjs.h	535;"	d
FT_FACE_STREAM	include/freetype/freetype/internal/ftobjs.h	530;"	d
FT_FIELD_OFFSET	include/freetype/freetype/internal/ftstream.h	105;"	d
FT_FIELD_SIZE	include/freetype/freetype/internal/ftstream.h	99;"	d
FT_FIELD_SIZE_DELTA	include/freetype/freetype/internal/ftstream.h	102;"	d
FT_FILE	include/freetype/freetype/config/ftstdlib.h	103;"	d
FT_FRAME_BYTE	include/freetype/freetype/internal/ftstream.h	126;"	d
FT_FRAME_BYTES	include/freetype/freetype/internal/ftstream.h	140;"	d
FT_FRAME_CHAR	include/freetype/freetype/internal/ftstream.h	127;"	d
FT_FRAME_END	include/freetype/freetype/internal/ftstream.h	118;"	d
FT_FRAME_ENTER	include/freetype/freetype/internal/ftstream.h	517;"	d
FT_FRAME_EXIT	include/freetype/freetype/internal/ftstream.h	521;"	d
FT_FRAME_EXTRACT	include/freetype/freetype/internal/ftstream.h	524;"	d
FT_FRAME_FIELD	include/freetype/freetype/internal/ftstream.h	108;"	d
FT_FRAME_LONG	include/freetype/freetype/internal/ftstream.h	120;"	d
FT_FRAME_LONG_LE	include/freetype/freetype/internal/ftstream.h	129;"	d
FT_FRAME_OFF3	include/freetype/freetype/internal/ftstream.h	124;"	d
FT_FRAME_OFF3_LE	include/freetype/freetype/internal/ftstream.h	133;"	d
FT_FRAME_OP_BYTE	include/freetype/freetype/internal/ftstream.h	50;"	d
FT_FRAME_OP_BYTES	include/freetype/freetype/internal/ftstream.h	54;"	d
FT_FRAME_OP_COMMAND	include/freetype/freetype/internal/ftstream.h	43;"	d
FT_FRAME_OP_END	include/freetype/freetype/internal/ftstream.h	48;"	d
FT_FRAME_OP_LITTLE	include/freetype/freetype/internal/ftstream.h	42;"	d
FT_FRAME_OP_LONG	include/freetype/freetype/internal/ftstream.h	52;"	d
FT_FRAME_OP_OFF3	include/freetype/freetype/internal/ftstream.h	53;"	d
FT_FRAME_OP_SHIFT	include/freetype/freetype/internal/ftstream.h	40;"	d
FT_FRAME_OP_SHORT	include/freetype/freetype/internal/ftstream.h	51;"	d
FT_FRAME_OP_SIGNED	include/freetype/freetype/internal/ftstream.h	41;"	d
FT_FRAME_OP_START	include/freetype/freetype/internal/ftstream.h	49;"	d
FT_FRAME_RELEASE	include/freetype/freetype/internal/ftstream.h	529;"	d
FT_FRAME_SHORT	include/freetype/freetype/internal/ftstream.h	122;"	d
FT_FRAME_SHORT_LE	include/freetype/freetype/internal/ftstream.h	131;"	d
FT_FRAME_SKIP_BYTE	include/freetype/freetype/internal/ftstream.h	138;"	d
FT_FRAME_SKIP_BYTES	include/freetype/freetype/internal/ftstream.h	147;"	d
FT_FRAME_SKIP_LONG	include/freetype/freetype/internal/ftstream.h	136;"	d
FT_FRAME_SKIP_SHORT	include/freetype/freetype/internal/ftstream.h	137;"	d
FT_FRAME_START	include/freetype/freetype/internal/ftstream.h	117;"	d
FT_FRAME_ULONG	include/freetype/freetype/internal/ftstream.h	121;"	d
FT_FRAME_ULONG_LE	include/freetype/freetype/internal/ftstream.h	130;"	d
FT_FRAME_UOFF3	include/freetype/freetype/internal/ftstream.h	125;"	d
FT_FRAME_UOFF3_LE	include/freetype/freetype/internal/ftstream.h	134;"	d
FT_FRAME_USHORT	include/freetype/freetype/internal/ftstream.h	123;"	d
FT_FRAME_USHORT_LE	include/freetype/freetype/internal/ftstream.h	132;"	d
FT_FREE	include/freetype/freetype/internal/ftmemory.h	286;"	d
FT_FREETYPE_H	include/freetype/freetype/config/ftheader.h	173;"	d
FT_FSTYPE_BITMAP_EMBEDDING_ONLY	include/freetype/freetype/freetype.h	3353;"	d
FT_FSTYPE_EDITABLE_EMBEDDING	include/freetype/freetype/freetype.h	3351;"	d
FT_FSTYPE_INSTALLABLE_EMBEDDING	include/freetype/freetype/freetype.h	3348;"	d
FT_FSTYPE_NO_SUBSETTING	include/freetype/freetype/freetype.h	3352;"	d
FT_FSTYPE_PREVIEW_AND_PRINT_EMBEDDING	include/freetype/freetype/freetype.h	3350;"	d
FT_FSTYPE_RESTRICTED_LICENSE_EMBEDDING	include/freetype/freetype/freetype.h	3349;"	d
FT_FWord	include/freetype/freetype/fttypes.h	/^  typedef signed short  FT_FWord;   \/* distance in FUnits *\/$/;"	t
FT_Face	include/freetype/freetype/freetype.h	/^  typedef struct FT_FaceRec_*  FT_Face;$/;"	t	typeref:struct:FT_FaceRec_
FT_FaceRec	include/freetype/freetype/freetype.h	/^  } FT_FaceRec;$/;"	t	typeref:struct:FT_FaceRec_
FT_FaceRec_	include/freetype/freetype/freetype.h	/^  typedef struct  FT_FaceRec_$/;"	s
FT_Face_AttachFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_Face_AttachFunc)( FT_Face    face,$/;"	t
FT_Face_DoneFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_Face_DoneFunc)( FT_Face  face );$/;"	t
FT_Face_GetAdvancesFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_Face_GetAdvancesFunc)( FT_Face    face,$/;"	t
FT_Face_GetGlyphNameFunc	include/freetype/freetype/internal/ftobjs.h	/^  (*FT_Face_GetGlyphNameFunc)( FT_Face     face,$/;"	t
FT_Face_GetGlyphNameIndexFunc	include/freetype/freetype/internal/ftobjs.h	/^  (*FT_Face_GetGlyphNameIndexFunc)( FT_Face     face,$/;"	t
FT_Face_GetKerningFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_Face_GetKerningFunc)( FT_Face     face,$/;"	t
FT_Face_GetPostscriptNameFunc	include/freetype/freetype/internal/ftobjs.h	/^  (*FT_Face_GetPostscriptNameFunc)( FT_Face  face );$/;"	t
FT_Face_InitFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_Face_InitFunc)( FT_Stream      stream,$/;"	t
FT_Face_Internal	include/freetype/freetype/freetype.h	/^  typedef struct FT_Face_InternalRec_*  FT_Face_Internal;$/;"	t	typeref:struct:FT_Face_InternalRec_
FT_Face_InternalRec	include/freetype/freetype/internal/ftobjs.h	/^  } FT_Face_InternalRec;$/;"	t	typeref:struct:FT_Face_InternalRec_
FT_Face_InternalRec_	include/freetype/freetype/internal/ftobjs.h	/^  typedef struct  FT_Face_InternalRec_$/;"	s
FT_Fast	include/freetype/freetype/config/ftconfig.h	/^  typedef int            FT_Fast;$/;"	t
FT_Fast	include/freetype/freetype/config/ftconfig.h	/^  typedef long           FT_Fast;$/;"	t
FT_Fixed	include/freetype/freetype/fttypes.h	/^  typedef signed long  FT_Fixed;$/;"	t
FT_Frame_Field	include/freetype/freetype/internal/ftstream.h	/^  } FT_Frame_Field;$/;"	t	typeref:struct:FT_Frame_Field_
FT_Frame_Field_	include/freetype/freetype/internal/ftstream.h	/^  typedef struct  FT_Frame_Field_$/;"	s
FT_Frame_Op	include/freetype/freetype/internal/ftstream.h	/^  } FT_Frame_Op;$/;"	t	typeref:enum:FT_Frame_Op_
FT_Frame_Op_	include/freetype/freetype/internal/ftstream.h	/^  typedef enum  FT_Frame_Op_$/;"	g
FT_Free_Func	include/freetype/freetype/ftsystem.h	/^  (*FT_Free_Func)( FT_Memory  memory,$/;"	t
FT_GASP_DO_GRAY	include/freetype/freetype/ftgasp.h	94;"	d
FT_GASP_DO_GRIDFIT	include/freetype/freetype/ftgasp.h	93;"	d
FT_GASP_H	include/freetype/freetype/config/ftheader.h	742;"	d
FT_GASP_NO_TABLE	include/freetype/freetype/ftgasp.h	92;"	d
FT_GASP_SYMMETRIC_GRIDFIT	include/freetype/freetype/ftgasp.h	96;"	d
FT_GASP_SYMMETRIC_SMOOTHING	include/freetype/freetype/ftgasp.h	95;"	d
FT_GET_BYTE	include/freetype/freetype/internal/ftstream.h	294;"	d
FT_GET_CHAR	include/freetype/freetype/internal/ftstream.h	293;"	d
FT_GET_LONG	include/freetype/freetype/internal/ftstream.h	299;"	d
FT_GET_LONG_LE	include/freetype/freetype/internal/ftstream.h	305;"	d
FT_GET_MACRO	include/freetype/freetype/internal/ftstream.h	291;"	d
FT_GET_OFF3	include/freetype/freetype/internal/ftstream.h	297;"	d
FT_GET_SHORT	include/freetype/freetype/internal/ftstream.h	295;"	d
FT_GET_SHORT_LE	include/freetype/freetype/internal/ftstream.h	303;"	d
FT_GET_TAG4	include/freetype/freetype/internal/ftstream.h	301;"	d
FT_GET_ULONG	include/freetype/freetype/internal/ftstream.h	300;"	d
FT_GET_ULONG_LE	include/freetype/freetype/internal/ftstream.h	306;"	d
FT_GET_UOFF3	include/freetype/freetype/internal/ftstream.h	298;"	d
FT_GET_USHORT	include/freetype/freetype/internal/ftstream.h	296;"	d
FT_GET_USHORT_LE	include/freetype/freetype/internal/ftstream.h	304;"	d
FT_GLYPH	include/freetype/freetype/internal/ftobjs.h	653;"	d
FT_GLYPHLOADER_CHECK_C	include/freetype/freetype/internal/ftgloadr.h	129;"	d
FT_GLYPHLOADER_CHECK_P	include/freetype/freetype/internal/ftgloadr.h	124;"	d
FT_GLYPHLOADER_CHECK_POINTS	include/freetype/freetype/internal/ftgloadr.h	134;"	d
FT_GLYPH_BBOX_GRIDFIT	include/freetype/freetype/ftglyph.h	/^    FT_GLYPH_BBOX_GRIDFIT   = 1,$/;"	e	enum:FT_Glyph_BBox_Mode_
FT_GLYPH_BBOX_PIXELS	include/freetype/freetype/ftglyph.h	/^    FT_GLYPH_BBOX_PIXELS    = 3$/;"	e	enum:FT_Glyph_BBox_Mode_
FT_GLYPH_BBOX_SUBPIXELS	include/freetype/freetype/ftglyph.h	/^    FT_GLYPH_BBOX_SUBPIXELS = 0,$/;"	e	enum:FT_Glyph_BBox_Mode_
FT_GLYPH_BBOX_TRUNCATE	include/freetype/freetype/ftglyph.h	/^    FT_GLYPH_BBOX_TRUNCATE  = 2,$/;"	e	enum:FT_Glyph_BBox_Mode_
FT_GLYPH_BBOX_UNSCALED	include/freetype/freetype/ftglyph.h	/^    FT_GLYPH_BBOX_UNSCALED  = 0,$/;"	e	enum:FT_Glyph_BBox_Mode_
FT_GLYPH_H	include/freetype/freetype/config/ftheader.h	463;"	d
FT_GLYPH_OWN_BITMAP	include/freetype/freetype/internal/ftobjs.h	376;"	d
FT_GX_VALIDATE_H	include/freetype/freetype/config/ftheader.h	631;"	d
FT_GZIP_H	include/freetype/freetype/config/ftheader.h	411;"	d
FT_Generic	include/freetype/freetype/fttypes.h	/^  } FT_Generic;$/;"	t	typeref:struct:FT_Generic_
FT_Generic_	include/freetype/freetype/fttypes.h	/^  typedef struct  FT_Generic_$/;"	s
FT_Generic_Finalizer	include/freetype/freetype/fttypes.h	/^  typedef void  (*FT_Generic_Finalizer)(void*  object);$/;"	t
FT_Get_MM_Func	include/freetype/freetype/internal/services/svmm.h	/^  (*FT_Get_MM_Func)( FT_Face           face,$/;"	t
FT_Get_MM_Var_Func	include/freetype/freetype/internal/services/svmm.h	/^  (*FT_Get_MM_Var_Func)( FT_Face      face,$/;"	t
FT_Glyph	include/freetype/freetype/ftglyph.h	/^  typedef struct FT_GlyphRec_*  FT_Glyph;$/;"	t	typeref:struct:FT_GlyphRec_
FT_GlyphDict_GetNameFunc	include/freetype/freetype/internal/services/svgldict.h	/^  (*FT_GlyphDict_GetNameFunc)( FT_Face     face,$/;"	t
FT_GlyphDict_NameIndexFunc	include/freetype/freetype/internal/services/svgldict.h	/^  (*FT_GlyphDict_NameIndexFunc)( FT_Face     face,$/;"	t
FT_GlyphLoad	include/freetype/freetype/internal/ftgloadr.h	/^  } FT_GlyphLoadRec, *FT_GlyphLoad;$/;"	t	typeref:struct:FT_GlyphLoadRec_
FT_GlyphLoadRec	include/freetype/freetype/internal/ftgloadr.h	/^  } FT_GlyphLoadRec, *FT_GlyphLoad;$/;"	t	typeref:struct:FT_GlyphLoadRec_
FT_GlyphLoadRec_	include/freetype/freetype/internal/ftgloadr.h	/^  typedef struct  FT_GlyphLoadRec_$/;"	s
FT_GlyphLoader	include/freetype/freetype/internal/ftgloadr.h	/^  typedef struct FT_GlyphLoaderRec_*  FT_GlyphLoader ;$/;"	t	typeref:struct:FT_GlyphLoaderRec_
FT_GlyphLoaderRec	include/freetype/freetype/internal/ftgloadr.h	/^  } FT_GlyphLoaderRec;$/;"	t	typeref:struct:FT_GlyphLoaderRec_
FT_GlyphLoaderRec_	include/freetype/freetype/internal/ftgloadr.h	/^  typedef struct  FT_GlyphLoaderRec_$/;"	s
FT_GlyphRec	include/freetype/freetype/ftglyph.h	/^  } FT_GlyphRec;$/;"	t	typeref:struct:FT_GlyphRec_
FT_GlyphRec_	include/freetype/freetype/ftglyph.h	/^  typedef struct  FT_GlyphRec_$/;"	s
FT_GlyphSlot	include/freetype/freetype/freetype.h	/^  typedef struct FT_GlyphSlotRec_*  FT_GlyphSlot;$/;"	t	typeref:struct:FT_GlyphSlotRec_
FT_GlyphSlotRec	include/freetype/freetype/freetype.h	/^  } FT_GlyphSlotRec;$/;"	t	typeref:struct:FT_GlyphSlotRec_
FT_GlyphSlotRec_	include/freetype/freetype/freetype.h	/^  typedef struct  FT_GlyphSlotRec_$/;"	s
FT_GlyphSlot_InternalRec	include/freetype/freetype/internal/ftobjs.h	/^  } FT_GlyphSlot_InternalRec;$/;"	t	typeref:struct:FT_Slot_InternalRec_
FT_Glyph_BBox_Func	include/freetype/freetype/ftrender.h	69;"	d
FT_Glyph_BBox_Mode	include/freetype/freetype/ftglyph.h	/^  } FT_Glyph_BBox_Mode;$/;"	t	typeref:enum:FT_Glyph_BBox_Mode_
FT_Glyph_BBox_Mode_	include/freetype/freetype/ftglyph.h	/^  typedef enum  FT_Glyph_BBox_Mode_$/;"	g
FT_Glyph_Class	include/freetype/freetype/ftglyph.h	/^  typedef struct FT_Glyph_Class_  FT_Glyph_Class;$/;"	t	typeref:struct:FT_Glyph_Class_
FT_Glyph_Class_	include/freetype/freetype/ftrender.h	/^  struct  FT_Glyph_Class_$/;"	s
FT_Glyph_CopyFunc	include/freetype/freetype/ftrender.h	/^  (*FT_Glyph_CopyFunc)( FT_Glyph   source,$/;"	t
FT_Glyph_Copy_Func	include/freetype/freetype/ftrender.h	70;"	d
FT_Glyph_DoneFunc	include/freetype/freetype/ftrender.h	/^  (*FT_Glyph_DoneFunc)( FT_Glyph  glyph );$/;"	t
FT_Glyph_Done_Func	include/freetype/freetype/ftrender.h	67;"	d
FT_Glyph_Format	include/freetype/freetype/ftimage.h	/^  } FT_Glyph_Format;$/;"	t	typeref:enum:FT_Glyph_Format_
FT_Glyph_Format_	include/freetype/freetype/ftimage.h	/^  typedef enum  FT_Glyph_Format_$/;"	g
FT_Glyph_GetBBoxFunc	include/freetype/freetype/ftrender.h	/^  (*FT_Glyph_GetBBoxFunc)( FT_Glyph  glyph,$/;"	t
FT_Glyph_InitFunc	include/freetype/freetype/ftrender.h	/^  (*FT_Glyph_InitFunc)( FT_Glyph      glyph,$/;"	t
FT_Glyph_Init_Func	include/freetype/freetype/ftrender.h	66;"	d
FT_Glyph_Metrics	include/freetype/freetype/freetype.h	/^  } FT_Glyph_Metrics;$/;"	t	typeref:struct:FT_Glyph_Metrics_
FT_Glyph_Metrics_	include/freetype/freetype/freetype.h	/^  typedef struct  FT_Glyph_Metrics_$/;"	s
FT_Glyph_PrepareFunc	include/freetype/freetype/ftrender.h	/^  (*FT_Glyph_PrepareFunc)( FT_Glyph      glyph,$/;"	t
FT_Glyph_Prepare_Func	include/freetype/freetype/ftrender.h	71;"	d
FT_Glyph_TransformFunc	include/freetype/freetype/ftrender.h	/^  (*FT_Glyph_TransformFunc)( FT_Glyph          glyph,$/;"	t
FT_Glyph_Transform_Func	include/freetype/freetype/ftrender.h	68;"	d
FT_HAS_FAST_GLYPHS	include/freetype/freetype/freetype.h	1207;"	d
FT_HAS_FIXED_SIZES	include/freetype/freetype/freetype.h	1194;"	d
FT_HAS_GLYPH_NAMES	include/freetype/freetype/freetype.h	1220;"	d
FT_HAS_HORIZONTAL	include/freetype/freetype/freetype.h	1102;"	d
FT_HAS_KERNING	include/freetype/freetype/freetype.h	1130;"	d
FT_HAS_MULTIPLE_MASTERS	include/freetype/freetype/freetype.h	1235;"	d
FT_HAS_VERTICAL	include/freetype/freetype/freetype.h	1116;"	d
FT_IMAGE_H	include/freetype/freetype/config/ftheader.h	233;"	d
FT_IMAGE_TAG	include/freetype/freetype/ftimage.h	/^    FT_IMAGE_TAG( FT_GLYPH_FORMAT_BITMAP,    'b', 'i', 't', 's' ),$/;"	e	enum:FT_Glyph_Format_
FT_IMAGE_TAG	include/freetype/freetype/ftimage.h	/^    FT_IMAGE_TAG( FT_GLYPH_FORMAT_COMPOSITE, 'c', 'o', 'm', 'p' ),$/;"	e	enum:FT_Glyph_Format_
FT_IMAGE_TAG	include/freetype/freetype/ftimage.h	/^    FT_IMAGE_TAG( FT_GLYPH_FORMAT_NONE, 0, 0, 0, 0 ),$/;"	e	enum:FT_Glyph_Format_
FT_IMAGE_TAG	include/freetype/freetype/ftimage.h	/^    FT_IMAGE_TAG( FT_GLYPH_FORMAT_OUTLINE,   'o', 'u', 't', 'l' ),$/;"	e	enum:FT_Glyph_Format_
FT_IMAGE_TAG	include/freetype/freetype/ftimage.h	/^    FT_IMAGE_TAG( FT_GLYPH_FORMAT_PLOTTER,   'p', 'l', 'o', 't' )$/;"	e	enum:FT_Glyph_Format_
FT_IMAGE_TAG	include/freetype/freetype/ftimage.h	732;"	d
FT_INCREMENTAL_H	include/freetype/freetype/config/ftheader.h	730;"	d
FT_INCREMENTAL_H	include/freetype/freetype/config/ftheader.h	775;"	d
FT_INT16	include/freetype/freetype/internal/ftstream.h	159;"	d
FT_INT32	include/freetype/freetype/internal/ftstream.h	161;"	d
FT_INT64	include/freetype/freetype/config/ftconfig.h	242;"	d
FT_INT64	include/freetype/freetype/config/ftconfig.h	248;"	d
FT_INT64	include/freetype/freetype/config/ftconfig.h	257;"	d
FT_INT64	include/freetype/freetype/config/ftconfig.h	266;"	d
FT_INT64	include/freetype/freetype/config/ftconfig.h	272;"	d
FT_INT64	include/freetype/freetype/config/ftconfig.h	290;"	d
FT_INT8_	include/freetype/freetype/internal/ftstream.h	157;"	d
FT_INT8_I16	include/freetype/freetype/internal/ftstream.h	169;"	d
FT_INT8_I32	include/freetype/freetype/internal/ftstream.h	171;"	d
FT_INT8_U16	include/freetype/freetype/internal/ftstream.h	170;"	d
FT_INT8_U32	include/freetype/freetype/internal/ftstream.h	172;"	d
FT_INTERNAL	include/freetype/freetype/internal/sfnt.h	764;"	d
FT_INTERNAL	include/freetype/freetype/internal/sfnt.h	830;"	d
FT_INTERNAL_AUTOHINT_H	include/freetype/freetype/internal/internal.h	48;"	d
FT_INTERNAL_CALC_H	include/freetype/freetype/internal/internal.h	32;"	d
FT_INTERNAL_DEBUG_H	include/freetype/freetype/internal/internal.h	31;"	d
FT_INTERNAL_DRIVER_H	include/freetype/freetype/internal/internal.h	33;"	d
FT_INTERNAL_GLYPH_LOADER_H	include/freetype/freetype/internal/internal.h	35;"	d
FT_INTERNAL_INTERNAL_H	include/freetype/freetype/config/ftheader.h	785;"	d
FT_INTERNAL_MEMORY_H	include/freetype/freetype/internal/internal.h	30;"	d
FT_INTERNAL_OBJECTS_H	include/freetype/freetype/internal/internal.h	27;"	d
FT_INTERNAL_PIC_H	include/freetype/freetype/internal/internal.h	28;"	d
FT_INTERNAL_POSTSCRIPT_AUX_H	include/freetype/freetype/internal/internal.h	44;"	d
FT_INTERNAL_POSTSCRIPT_GLOBALS_H	include/freetype/freetype/internal/internal.h	46;"	d
FT_INTERNAL_POSTSCRIPT_HINTS_H	include/freetype/freetype/internal/internal.h	45;"	d
FT_INTERNAL_RFORK_H	include/freetype/freetype/internal/internal.h	38;"	d
FT_INTERNAL_SERVICE_H	include/freetype/freetype/internal/internal.h	37;"	d
FT_INTERNAL_SFNT_H	include/freetype/freetype/internal/internal.h	36;"	d
FT_INTERNAL_STREAM_H	include/freetype/freetype/internal/internal.h	29;"	d
FT_INTERNAL_TRACE_H	include/freetype/freetype/internal/internal.h	34;"	d
FT_INTERNAL_TRUETYPE_TYPES_H	include/freetype/freetype/internal/internal.h	41;"	d
FT_INTERNAL_TYPE1_TYPES_H	include/freetype/freetype/internal/internal.h	42;"	d
FT_INTERNAL_VALIDATE_H	include/freetype/freetype/internal/internal.h	39;"	d
FT_INT_MAX	include/freetype/freetype/config/ftstdlib.h	64;"	d
FT_INT_MIN	include/freetype/freetype/config/ftstdlib.h	65;"	d
FT_INVALID	include/freetype/freetype/internal/ftvalid.h	120;"	d
FT_INVALID_	include/freetype/freetype/internal/ftvalid.h	121;"	d
FT_INVALID_DATA	include/freetype/freetype/internal/ftvalid.h	141;"	d
FT_INVALID_FORMAT	include/freetype/freetype/internal/ftvalid.h	133;"	d
FT_INVALID_GLYPH_ID	include/freetype/freetype/internal/ftvalid.h	137;"	d
FT_INVALID_OFFSET	include/freetype/freetype/internal/ftvalid.h	129;"	d
FT_INVALID_TOO_SHORT	include/freetype/freetype/internal/ftvalid.h	125;"	d
FT_IS_CID_KEYED	include/freetype/freetype/freetype.h	1253;"	d
FT_IS_EMPTY	include/freetype/freetype/fttypes.h	573;"	d
FT_IS_FIXED_WIDTH	include/freetype/freetype/freetype.h	1179;"	d
FT_IS_SCALABLE	include/freetype/freetype/freetype.h	1145;"	d
FT_IS_SFNT	include/freetype/freetype/freetype.h	1164;"	d
FT_IS_TRICKY	include/freetype/freetype/freetype.h	1267;"	d
FT_Incremental	include/freetype/freetype/ftincrem.h	/^  typedef struct FT_IncrementalRec_*  FT_Incremental;$/;"	t	typeref:struct:FT_IncrementalRec_
FT_Incremental_FreeGlyphDataFunc	include/freetype/freetype/ftincrem.h	/^  (*FT_Incremental_FreeGlyphDataFunc)( FT_Incremental  incremental,$/;"	t
FT_Incremental_FuncsRec	include/freetype/freetype/ftincrem.h	/^  } FT_Incremental_FuncsRec;$/;"	t	typeref:struct:FT_Incremental_FuncsRec_
FT_Incremental_FuncsRec_	include/freetype/freetype/ftincrem.h	/^  typedef struct  FT_Incremental_FuncsRec_$/;"	s
FT_Incremental_GetGlyphDataFunc	include/freetype/freetype/ftincrem.h	/^  (*FT_Incremental_GetGlyphDataFunc)( FT_Incremental  incremental,$/;"	t
FT_Incremental_GetGlyphMetricsFunc	include/freetype/freetype/ftincrem.h	/^  (*FT_Incremental_GetGlyphMetricsFunc)$/;"	t
FT_Incremental_Interface	include/freetype/freetype/ftincrem.h	/^  typedef FT_Incremental_InterfaceRec*   FT_Incremental_Interface;$/;"	t
FT_Incremental_InterfaceRec	include/freetype/freetype/ftincrem.h	/^  } FT_Incremental_InterfaceRec;$/;"	t	typeref:struct:FT_Incremental_InterfaceRec_
FT_Incremental_InterfaceRec_	include/freetype/freetype/ftincrem.h	/^  typedef struct  FT_Incremental_InterfaceRec_$/;"	s
FT_Incremental_Metrics	include/freetype/freetype/ftincrem.h	/^   typedef struct FT_Incremental_MetricsRec_*  FT_Incremental_Metrics;$/;"	t	typeref:struct:FT_Incremental_MetricsRec_
FT_Incremental_MetricsRec	include/freetype/freetype/ftincrem.h	/^  } FT_Incremental_MetricsRec;$/;"	t	typeref:struct:FT_Incremental_MetricsRec_
FT_Incremental_MetricsRec_	include/freetype/freetype/ftincrem.h	/^  typedef struct  FT_Incremental_MetricsRec_$/;"	s
FT_Int	include/freetype/freetype/fttypes.h	/^  typedef signed int  FT_Int;$/;"	t
FT_Int16	include/freetype/freetype/config/ftconfig.h	/^  typedef signed short  FT_Int16;$/;"	t
FT_Int32	include/freetype/freetype/config/ftconfig.h	/^  typedef signed int      FT_Int32;$/;"	t
FT_Int32	include/freetype/freetype/config/ftconfig.h	/^  typedef signed long     FT_Int32;$/;"	t
FT_KEEP_ERR_PREFIX	include/freetype/freetype/fterrors.h	201;"	d
FT_KERNING_DEFAULT	include/freetype/freetype/freetype.h	/^    FT_KERNING_DEFAULT  = 0,$/;"	e	enum:FT_Kerning_Mode_
FT_KERNING_UNFITTED	include/freetype/freetype/freetype.h	/^    FT_KERNING_UNFITTED,$/;"	e	enum:FT_Kerning_Mode_
FT_KERNING_UNSCALED	include/freetype/freetype/freetype.h	/^    FT_KERNING_UNSCALED$/;"	e	enum:FT_Kerning_Mode_
FT_Kerning_Mode	include/freetype/freetype/freetype.h	/^  } FT_Kerning_Mode;$/;"	t	typeref:enum:FT_Kerning_Mode_
FT_Kerning_Mode_	include/freetype/freetype/freetype.h	/^  typedef enum  FT_Kerning_Mode_$/;"	g
FT_Kerning_TrackGetFunc	include/freetype/freetype/internal/services/svkern.h	/^  (*FT_Kerning_TrackGetFunc)( FT_Face    face,$/;"	t
FT_LCD_FILTER_DEFAULT	include/freetype/freetype/ftlcdfil.h	/^    FT_LCD_FILTER_DEFAULT = 1,$/;"	e	enum:FT_LcdFilter_
FT_LCD_FILTER_H	include/freetype/freetype/config/ftheader.h	706;"	d
FT_LCD_FILTER_LEGACY	include/freetype/freetype/ftlcdfil.h	/^    FT_LCD_FILTER_LEGACY  = 16,$/;"	e	enum:FT_LcdFilter_
FT_LCD_FILTER_LIGHT	include/freetype/freetype/ftlcdfil.h	/^    FT_LCD_FILTER_LIGHT   = 2,$/;"	e	enum:FT_LcdFilter_
FT_LCD_FILTER_MAX	include/freetype/freetype/ftlcdfil.h	/^    FT_LCD_FILTER_MAX   \/* do not remove *\/$/;"	e	enum:FT_LcdFilter_
FT_LCD_FILTER_NONE	include/freetype/freetype/ftlcdfil.h	/^    FT_LCD_FILTER_NONE    = 0,$/;"	e	enum:FT_LcdFilter_
FT_LIST_H	include/freetype/freetype/config/ftheader.h	263;"	d
FT_LOAD_ADVANCE_ONLY	include/freetype/freetype/freetype.h	2541;"	d
FT_LOAD_CROP_BITMAP	include/freetype/freetype/freetype.h	2529;"	d
FT_LOAD_DEFAULT	include/freetype/freetype/freetype.h	2522;"	d
FT_LOAD_FORCE_AUTOHINT	include/freetype/freetype/freetype.h	2528;"	d
FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH	include/freetype/freetype/freetype.h	2531;"	d
FT_LOAD_IGNORE_TRANSFORM	include/freetype/freetype/freetype.h	2533;"	d
FT_LOAD_LINEAR_DESIGN	include/freetype/freetype/freetype.h	2535;"	d
FT_LOAD_MONOCHROME	include/freetype/freetype/freetype.h	2534;"	d
FT_LOAD_NO_AUTOHINT	include/freetype/freetype/freetype.h	2536;"	d
FT_LOAD_NO_BITMAP	include/freetype/freetype/freetype.h	2526;"	d
FT_LOAD_NO_HINTING	include/freetype/freetype/freetype.h	2524;"	d
FT_LOAD_NO_RECURSE	include/freetype/freetype/freetype.h	2532;"	d
FT_LOAD_NO_SCALE	include/freetype/freetype/freetype.h	2523;"	d
FT_LOAD_PEDANTIC	include/freetype/freetype/freetype.h	2530;"	d
FT_LOAD_RENDER	include/freetype/freetype/freetype.h	2525;"	d
FT_LOAD_SBITS_ONLY	include/freetype/freetype/freetype.h	2542;"	d
FT_LOAD_TARGET_	include/freetype/freetype/freetype.h	2610;"	d
FT_LOAD_TARGET_LCD	include/freetype/freetype/freetype.h	2615;"	d
FT_LOAD_TARGET_LCD_V	include/freetype/freetype/freetype.h	2616;"	d
FT_LOAD_TARGET_LIGHT	include/freetype/freetype/freetype.h	2613;"	d
FT_LOAD_TARGET_MODE	include/freetype/freetype/freetype.h	2629;"	d
FT_LOAD_TARGET_MONO	include/freetype/freetype/freetype.h	2614;"	d
FT_LOAD_TARGET_NORMAL	include/freetype/freetype/freetype.h	2612;"	d
FT_LOAD_VERTICAL_LAYOUT	include/freetype/freetype/freetype.h	2527;"	d
FT_LOCAL	include/freetype/freetype/config/ftconfig.h	445;"	d
FT_LOCAL	include/freetype/freetype/config/ftconfig.h	451;"	d
FT_LOCAL	include/freetype/freetype/config/ftconfig.h	454;"	d
FT_LOCAL_DEF	include/freetype/freetype/config/ftconfig.h	446;"	d
FT_LOCAL_DEF	include/freetype/freetype/config/ftconfig.h	452;"	d
FT_LOCAL_DEF	include/freetype/freetype/config/ftconfig.h	455;"	d
FT_LONG64	include/freetype/freetype/config/ftconfig.h	241;"	d
FT_LONG64	include/freetype/freetype/config/ftconfig.h	247;"	d
FT_LONG64	include/freetype/freetype/config/ftconfig.h	256;"	d
FT_LONG64	include/freetype/freetype/config/ftconfig.h	265;"	d
FT_LONG64	include/freetype/freetype/config/ftconfig.h	271;"	d
FT_LONG64	include/freetype/freetype/config/ftconfig.h	289;"	d
FT_LZW_H	include/freetype/freetype/config/ftheader.h	424;"	d
FT_LcdFilter	include/freetype/freetype/ftlcdfil.h	/^  } FT_LcdFilter;$/;"	t	typeref:enum:FT_LcdFilter_
FT_LcdFilter_	include/freetype/freetype/ftlcdfil.h	/^  typedef enum  FT_LcdFilter_$/;"	g
FT_Library	include/freetype/freetype/freetype.h	/^  typedef struct FT_LibraryRec_  *FT_Library;$/;"	t	typeref:struct:FT_LibraryRec_
FT_LibraryRec	include/freetype/freetype/internal/ftobjs.h	/^  } FT_LibraryRec;$/;"	t	typeref:struct:FT_LibraryRec_
FT_LibraryRec_	include/freetype/freetype/internal/ftobjs.h	/^  typedef struct  FT_LibraryRec_$/;"	s
FT_List	include/freetype/freetype/fttypes.h	/^  typedef struct FT_ListRec_*  FT_List;$/;"	t	typeref:struct:FT_ListRec_
FT_ListNode	include/freetype/freetype/fttypes.h	/^  typedef struct FT_ListNodeRec_*  FT_ListNode;$/;"	t	typeref:struct:FT_ListNodeRec_
FT_ListNodeRec	include/freetype/freetype/fttypes.h	/^  } FT_ListNodeRec;$/;"	t	typeref:struct:FT_ListNodeRec_
FT_ListNodeRec_	include/freetype/freetype/fttypes.h	/^  typedef struct  FT_ListNodeRec_$/;"	s
FT_ListRec	include/freetype/freetype/fttypes.h	/^  } FT_ListRec;$/;"	t	typeref:struct:FT_ListRec_
FT_ListRec_	include/freetype/freetype/fttypes.h	/^  typedef struct  FT_ListRec_$/;"	s
FT_List_Destructor	include/freetype/freetype/ftlist.h	/^  (*FT_List_Destructor)( FT_Memory  memory,$/;"	t
FT_List_Iterator	include/freetype/freetype/ftlist.h	/^  (*FT_List_Iterator)( FT_ListNode  node,$/;"	t
FT_Long	include/freetype/freetype/fttypes.h	/^  typedef signed long  FT_Long;$/;"	t
FT_MACINTOSH	include/freetype/freetype/config/ftconfig.h	133;"	d
FT_MAC_H	include/freetype/freetype/config/ftheader.h	576;"	d
FT_MAKE_EMPTY_FIELD	include/freetype/freetype/internal/ftstream.h	115;"	d
FT_MAKE_FRAME_OP	include/freetype/freetype/internal/ftstream.h	45;"	d
FT_MAKE_TAG	include/freetype/freetype/fttypes.h	476;"	d
FT_MAX	include/freetype/freetype/internal/ftobjs.h	71;"	d
FT_MAX_CHARMAP_CACHEABLE	include/freetype/freetype/config/ftoption.h	784;"	d
FT_MAX_MODULES	include/freetype/freetype/config/ftoption.h	368;"	d
FT_MEM_ALLOC	include/freetype/freetype/internal/ftmemory.h	144;"	d
FT_MEM_ALLOC_MULT	include/freetype/freetype/internal/ftmemory.h	177;"	d
FT_MEM_COPY	include/freetype/freetype/internal/ftmemory.h	203;"	d
FT_MEM_DUP	include/freetype/freetype/internal/ftmemory.h	354;"	d
FT_MEM_FREE	include/freetype/freetype/internal/ftmemory.h	147;"	d
FT_MEM_MOVE	include/freetype/freetype/internal/ftmemory.h	205;"	d
FT_MEM_NEW	include/freetype/freetype/internal/ftmemory.h	153;"	d
FT_MEM_NEW_ARRAY	include/freetype/freetype/internal/ftmemory.h	239;"	d
FT_MEM_QALLOC	include/freetype/freetype/internal/ftmemory.h	161;"	d
FT_MEM_QALLOC_MULT	include/freetype/freetype/internal/ftmemory.h	187;"	d
FT_MEM_QNEW	include/freetype/freetype/internal/ftmemory.h	164;"	d
FT_MEM_QNEW_ARRAY	include/freetype/freetype/internal/ftmemory.h	249;"	d
FT_MEM_QREALLOC	include/freetype/freetype/internal/ftmemory.h	167;"	d
FT_MEM_QREALLOC_MULT	include/freetype/freetype/internal/ftmemory.h	192;"	d
FT_MEM_QRENEW_ARRAY	include/freetype/freetype/internal/ftmemory.h	172;"	d
FT_MEM_QRENEW_ARRAY	include/freetype/freetype/internal/ftmemory.h	254;"	d
FT_MEM_REALLOC	include/freetype/freetype/internal/ftmemory.h	156;"	d
FT_MEM_REALLOC_MULT	include/freetype/freetype/internal/ftmemory.h	182;"	d
FT_MEM_RENEW_ARRAY	include/freetype/freetype/internal/ftmemory.h	244;"	d
FT_MEM_SET	include/freetype/freetype/internal/ftmemory.h	201;"	d
FT_MEM_SET_ERROR	include/freetype/freetype/internal/ftmemory.h	198;"	d
FT_MEM_STRDUP	include/freetype/freetype/internal/ftmemory.h	348;"	d
FT_MEM_ZERO	include/freetype/freetype/internal/ftmemory.h	208;"	d
FT_MIN	include/freetype/freetype/internal/ftobjs.h	70;"	d
FT_MM_Axis	include/freetype/freetype/ftmm.h	/^  } FT_MM_Axis;$/;"	t	typeref:struct:FT_MM_Axis_
FT_MM_Axis_	include/freetype/freetype/ftmm.h	/^  typedef struct  FT_MM_Axis_$/;"	s
FT_MM_Var	include/freetype/freetype/ftmm.h	/^  } FT_MM_Var;$/;"	t	typeref:struct:FT_MM_Var_
FT_MM_Var_	include/freetype/freetype/ftmm.h	/^  typedef struct  FT_MM_Var_$/;"	s
FT_MODERRDEF	include/freetype/freetype/ftmoderr.h	149;"	d
FT_MODERRDEF	include/freetype/freetype/ftmoderr.h	75;"	d
FT_MODERRDEF	include/freetype/freetype/ftmoderr.h	77;"	d
FT_MODERR_END_LIST	include/freetype/freetype/ftmoderr.h	148;"	d
FT_MODERR_END_LIST	include/freetype/freetype/ftmoderr.h	81;"	d
FT_MODERR_START_LIST	include/freetype/freetype/ftmoderr.h	147;"	d
FT_MODERR_START_LIST	include/freetype/freetype/ftmoderr.h	80;"	d
FT_MODULE	include/freetype/freetype/internal/ftobjs.h	449;"	d
FT_MODULE_CLASS	include/freetype/freetype/internal/ftobjs.h	450;"	d
FT_MODULE_DRIVER_HAS_HINTER	include/freetype/freetype/ftmodapi.h	64;"	d
FT_MODULE_DRIVER_NO_OUTLINES	include/freetype/freetype/ftmodapi.h	62;"	d
FT_MODULE_DRIVER_SCALABLE	include/freetype/freetype/ftmodapi.h	60;"	d
FT_MODULE_ERRORS_H	include/freetype/freetype/config/ftheader.h	201;"	d
FT_MODULE_FONT_DRIVER	include/freetype/freetype/ftmodapi.h	55;"	d
FT_MODULE_H	include/freetype/freetype/config/ftheader.h	302;"	d
FT_MODULE_HINTER	include/freetype/freetype/ftmodapi.h	57;"	d
FT_MODULE_IS_DRIVER	include/freetype/freetype/internal/ftobjs.h	455;"	d
FT_MODULE_IS_HINTER	include/freetype/freetype/internal/ftobjs.h	461;"	d
FT_MODULE_IS_RENDERER	include/freetype/freetype/internal/ftobjs.h	458;"	d
FT_MODULE_IS_STYLER	include/freetype/freetype/internal/ftobjs.h	464;"	d
FT_MODULE_LIBRARY	include/freetype/freetype/internal/ftobjs.h	451;"	d
FT_MODULE_MEMORY	include/freetype/freetype/internal/ftobjs.h	452;"	d
FT_MODULE_RENDERER	include/freetype/freetype/ftmodapi.h	56;"	d
FT_MODULE_STYLER	include/freetype/freetype/ftmodapi.h	58;"	d
FT_MULFIX_ASSEMBLER	include/freetype/freetype/config/ftconfig.h	307;"	d
FT_MULFIX_ASSEMBLER	include/freetype/freetype/config/ftconfig.h	338;"	d
FT_MULFIX_ASSEMBLER	include/freetype/freetype/config/ftconfig.h	365;"	d
FT_MULFIX_ASSEMBLER	include/freetype/freetype/config/ftconfig.h	401;"	d
FT_MULFIX_INLINED	include/freetype/freetype/config/ftconfig.h	438;"	d
FT_MULTIPLE_MASTERS_H	include/freetype/freetype/config/ftheader.h	589;"	d
FT_Matrix	include/freetype/freetype/fttypes.h	/^  } FT_Matrix;$/;"	t	typeref:struct:FT_Matrix_
FT_Matrix_	include/freetype/freetype/fttypes.h	/^  typedef struct  FT_Matrix_$/;"	s
FT_Memory	include/freetype/freetype/ftsystem.h	/^  typedef struct FT_MemoryRec_*  FT_Memory;$/;"	t	typeref:struct:FT_MemoryRec_
FT_MemoryRec_	include/freetype/freetype/ftsystem.h	/^  struct  FT_MemoryRec_$/;"	s
FT_Module	include/freetype/freetype/freetype.h	/^  typedef struct FT_ModuleRec_*  FT_Module;$/;"	t	typeref:struct:FT_ModuleRec_
FT_ModuleRec	include/freetype/freetype/internal/ftobjs.h	/^  } FT_ModuleRec;$/;"	t	typeref:struct:FT_ModuleRec_
FT_ModuleRec_	include/freetype/freetype/internal/ftobjs.h	/^  typedef struct  FT_ModuleRec_$/;"	s
FT_Module_Class	include/freetype/freetype/ftmodapi.h	/^  } FT_Module_Class;$/;"	t	typeref:struct:FT_Module_Class_
FT_Module_Class_	include/freetype/freetype/ftmodapi.h	/^  typedef struct  FT_Module_Class_$/;"	s
FT_Module_Constructor	include/freetype/freetype/ftmodapi.h	/^  (*FT_Module_Constructor)( FT_Module  module );$/;"	t
FT_Module_Creator	include/freetype/freetype/internal/ftobjs.h	/^  (*FT_Module_Creator)( FT_Memory          memory,$/;"	t
FT_Module_Destroyer	include/freetype/freetype/internal/ftobjs.h	/^  (*FT_Module_Destroyer)( FT_Memory         memory,$/;"	t
FT_Module_Destructor	include/freetype/freetype/ftmodapi.h	/^  (*FT_Module_Destructor)( FT_Module  module );$/;"	t
FT_Module_Interface	include/freetype/freetype/ftmodapi.h	/^  typedef FT_Pointer  FT_Module_Interface;$/;"	t
FT_Module_Requester	include/freetype/freetype/ftmodapi.h	/^  (*FT_Module_Requester)( FT_Module    module,$/;"	t
FT_MulFix	include/freetype/freetype/freetype.h	3700;"	d
FT_MulFix_arm	include/freetype/freetype/config/ftconfig.h	/^  FT_MulFix_arm( FT_Int32  a,$/;"	f
FT_MulFix_i386	include/freetype/freetype/config/ftconfig.h	/^  FT_MulFix_i386( FT_Int32  a,$/;"	f
FT_Multi_Master	include/freetype/freetype/ftmm.h	/^  } FT_Multi_Master;$/;"	t	typeref:struct:FT_Multi_Master_
FT_Multi_Master_	include/freetype/freetype/ftmm.h	/^  typedef struct  FT_Multi_Master_$/;"	s
FT_NEED_EXTERN_C	include/freetype/freetype/fterrors.h	102;"	d
FT_NEED_EXTERN_C	include/freetype/freetype/fterrors.h	145;"	d
FT_NEED_EXTERN_C	include/freetype/freetype/fterrors.h	194;"	d
FT_NEED_EXTERN_C	include/freetype/freetype/ftmoderr.h	150;"	d
FT_NEED_EXTERN_C	include/freetype/freetype/ftmoderr.h	70;"	d
FT_NEED_EXTERN_C	include/freetype/freetype/ftmoderr.h	84;"	d
FT_NEW	include/freetype/freetype/internal/ftmemory.h	288;"	d
FT_NEW_ARRAY	include/freetype/freetype/internal/ftmemory.h	290;"	d
FT_NEXT_BYTE	include/freetype/freetype/internal/ftstream.h	227;"	d
FT_NEXT_CHAR	include/freetype/freetype/internal/ftstream.h	224;"	d
FT_NEXT_LONG	include/freetype/freetype/internal/ftstream.h	242;"	d
FT_NEXT_LONG_LE	include/freetype/freetype/internal/ftstream.h	261;"	d
FT_NEXT_OFF3	include/freetype/freetype/internal/ftstream.h	236;"	d
FT_NEXT_OFF3_LE	include/freetype/freetype/internal/ftstream.h	255;"	d
FT_NEXT_SHORT	include/freetype/freetype/internal/ftstream.h	230;"	d
FT_NEXT_SHORT_LE	include/freetype/freetype/internal/ftstream.h	249;"	d
FT_NEXT_ULONG	include/freetype/freetype/internal/ftstream.h	245;"	d
FT_NEXT_ULONG_LE	include/freetype/freetype/internal/ftstream.h	264;"	d
FT_NEXT_UOFF3	include/freetype/freetype/internal/ftstream.h	239;"	d
FT_NEXT_UOFF3_LE	include/freetype/freetype/internal/ftstream.h	258;"	d
FT_NEXT_USHORT	include/freetype/freetype/internal/ftstream.h	233;"	d
FT_NEXT_USHORT_LE	include/freetype/freetype/internal/ftstream.h	252;"	d
FT_NOERRORDEF_	include/freetype/freetype/fterrors.h	157;"	d
FT_NOERRORDEF_	include/freetype/freetype/fterrors.h	192;"	d
FT_OPENTYPE_VALIDATE_H	include/freetype/freetype/config/ftheader.h	617;"	d
FT_OPEN_DRIVER	include/freetype/freetype/freetype.h	1739;"	d
FT_OPEN_MEMORY	include/freetype/freetype/freetype.h	1736;"	d
FT_OPEN_PARAMS	include/freetype/freetype/freetype.h	1740;"	d
FT_OPEN_PATHNAME	include/freetype/freetype/freetype.h	1738;"	d
FT_OPEN_STREAM	include/freetype/freetype/freetype.h	1737;"	d
FT_ORIENTATION_FILL_LEFT	include/freetype/freetype/ftoutln.h	/^    FT_ORIENTATION_FILL_LEFT  = FT_ORIENTATION_POSTSCRIPT,$/;"	e	enum:FT_Orientation_
FT_ORIENTATION_FILL_RIGHT	include/freetype/freetype/ftoutln.h	/^    FT_ORIENTATION_FILL_RIGHT = FT_ORIENTATION_TRUETYPE,$/;"	e	enum:FT_Orientation_
FT_ORIENTATION_NONE	include/freetype/freetype/ftoutln.h	/^    FT_ORIENTATION_NONE$/;"	e	enum:FT_Orientation_
FT_ORIENTATION_POSTSCRIPT	include/freetype/freetype/ftoutln.h	/^    FT_ORIENTATION_POSTSCRIPT = 1,$/;"	e	enum:FT_Orientation_
FT_ORIENTATION_TRUETYPE	include/freetype/freetype/ftoutln.h	/^    FT_ORIENTATION_TRUETYPE   = 0,$/;"	e	enum:FT_Orientation_
FT_OUTLINE_CONTOURS_MAX	include/freetype/freetype/ftimage.h	398;"	d
FT_OUTLINE_EVEN_ODD_FILL	include/freetype/freetype/ftimage.h	476;"	d
FT_OUTLINE_GLYPH	include/freetype/freetype/internal/ftobjs.h	655;"	d
FT_OUTLINE_H	include/freetype/freetype/config/ftheader.h	276;"	d
FT_OUTLINE_HIGH_PRECISION	include/freetype/freetype/ftimage.h	482;"	d
FT_OUTLINE_IGNORE_DROPOUTS	include/freetype/freetype/ftimage.h	478;"	d
FT_OUTLINE_INCLUDE_STUBS	include/freetype/freetype/ftimage.h	480;"	d
FT_OUTLINE_NONE	include/freetype/freetype/ftimage.h	474;"	d
FT_OUTLINE_OWNER	include/freetype/freetype/ftimage.h	475;"	d
FT_OUTLINE_POINTS_MAX	include/freetype/freetype/ftimage.h	399;"	d
FT_OUTLINE_REVERSE_FILL	include/freetype/freetype/ftimage.h	477;"	d
FT_OUTLINE_SINGLE_PASS	include/freetype/freetype/ftimage.h	483;"	d
FT_OUTLINE_SMART_DROPOUTS	include/freetype/freetype/ftimage.h	479;"	d
FT_Offset	include/freetype/freetype/fttypes.h	/^  typedef size_t  FT_Offset;$/;"	t
FT_Open_Args	include/freetype/freetype/freetype.h	/^  } FT_Open_Args;$/;"	t	typeref:struct:FT_Open_Args_
FT_Open_Args_	include/freetype/freetype/freetype.h	/^  typedef struct  FT_Open_Args_$/;"	s
FT_Orientation	include/freetype/freetype/ftoutln.h	/^  } FT_Orientation;$/;"	t	typeref:enum:FT_Orientation_
FT_Orientation_	include/freetype/freetype/ftoutln.h	/^  typedef enum  FT_Orientation_$/;"	g
FT_Outline	include/freetype/freetype/ftimage.h	/^  } FT_Outline;$/;"	t	typeref:struct:FT_Outline_
FT_OutlineGlyph	include/freetype/freetype/ftglyph.h	/^  typedef struct FT_OutlineGlyphRec_*  FT_OutlineGlyph;$/;"	t	typeref:struct:FT_OutlineGlyphRec_
FT_OutlineGlyphRec	include/freetype/freetype/ftglyph.h	/^  } FT_OutlineGlyphRec;$/;"	t	typeref:struct:FT_OutlineGlyphRec_
FT_OutlineGlyphRec_	include/freetype/freetype/ftglyph.h	/^  typedef struct  FT_OutlineGlyphRec_$/;"	s
FT_Outline_	include/freetype/freetype/ftimage.h	/^  typedef struct  FT_Outline_$/;"	s
FT_Outline_ConicToFunc	include/freetype/freetype/ftimage.h	/^  (*FT_Outline_ConicToFunc)( const FT_Vector*  control,$/;"	t
FT_Outline_ConicTo_Func	include/freetype/freetype/ftimage.h	618;"	d
FT_Outline_CubicToFunc	include/freetype/freetype/ftimage.h	/^  (*FT_Outline_CubicToFunc)( const FT_Vector*  control1,$/;"	t
FT_Outline_CubicTo_Func	include/freetype/freetype/ftimage.h	651;"	d
FT_Outline_Funcs	include/freetype/freetype/ftimage.h	/^  } FT_Outline_Funcs;$/;"	t	typeref:struct:FT_Outline_Funcs_
FT_Outline_Funcs_	include/freetype/freetype/ftimage.h	/^  typedef struct  FT_Outline_Funcs_$/;"	s
FT_Outline_LineToFunc	include/freetype/freetype/ftimage.h	/^  (*FT_Outline_LineToFunc)( const FT_Vector*  to,$/;"	t
FT_Outline_LineTo_Func	include/freetype/freetype/ftimage.h	586;"	d
FT_Outline_MoveToFunc	include/freetype/freetype/ftimage.h	/^  (*FT_Outline_MoveToFunc)( const FT_Vector*  to,$/;"	t
FT_Outline_MoveTo_Func	include/freetype/freetype/ftimage.h	559;"	d
FT_PAD_CEIL	include/freetype/freetype/internal/ftobjs.h	78;"	d
FT_PAD_FLOOR	include/freetype/freetype/internal/ftobjs.h	76;"	d
FT_PAD_ROUND	include/freetype/freetype/internal/ftobjs.h	77;"	d
FT_PARAM_TAG_IGNORE_PREFERRED_FAMILY	include/freetype/freetype/ftsnames.h	175;"	d
FT_PARAM_TAG_IGNORE_PREFERRED_SUBFAMILY	include/freetype/freetype/ftsnames.h	190;"	d
FT_PARAM_TAG_INCREMENTAL	include/freetype/freetype/ftincrem.h	344;"	d
FT_PARAM_TAG_UNPATENTED_HINTING	include/freetype/freetype/ttunpat.h	49;"	d
FT_PEEK_LONG	include/freetype/freetype/internal/ftstream.h	181;"	d
FT_PEEK_LONG_LE	include/freetype/freetype/internal/ftstream.h	205;"	d
FT_PEEK_OFF3	include/freetype/freetype/internal/ftstream.h	191;"	d
FT_PEEK_OFF3_LE	include/freetype/freetype/internal/ftstream.h	215;"	d
FT_PEEK_SHORT	include/freetype/freetype/internal/ftstream.h	175;"	d
FT_PEEK_SHORT_LE	include/freetype/freetype/internal/ftstream.h	199;"	d
FT_PEEK_ULONG	include/freetype/freetype/internal/ftstream.h	186;"	d
FT_PEEK_ULONG_LE	include/freetype/freetype/internal/ftstream.h	210;"	d
FT_PEEK_UOFF3	include/freetype/freetype/internal/ftstream.h	195;"	d
FT_PEEK_UOFF3_LE	include/freetype/freetype/internal/ftstream.h	219;"	d
FT_PEEK_USHORT	include/freetype/freetype/internal/ftstream.h	178;"	d
FT_PEEK_USHORT_LE	include/freetype/freetype/internal/ftstream.h	202;"	d
FT_PFR_GetAdvanceFunc	include/freetype/freetype/internal/services/svpfr.h	/^  (*FT_PFR_GetAdvanceFunc)( FT_Face   face,$/;"	t
FT_PFR_GetKerningFunc	include/freetype/freetype/internal/services/svpfr.h	/^  (*FT_PFR_GetKerningFunc)( FT_Face     face,$/;"	t
FT_PFR_GetMetricsFunc	include/freetype/freetype/internal/services/svpfr.h	/^  (*FT_PFR_GetMetricsFunc)( FT_Face    face,$/;"	t
FT_PFR_H	include/freetype/freetype/config/ftheader.h	644;"	d
FT_PIC_Container	include/freetype/freetype/internal/ftpic.h	/^  } FT_PIC_Container;$/;"	t	typeref:struct:FT_PIC_Container_
FT_PIC_Container_	include/freetype/freetype/internal/ftpic.h	/^  typedef struct FT_PIC_Container_$/;"	s
FT_PIXEL_MODE_GRAY	include/freetype/freetype/ftimage.h	/^    FT_PIXEL_MODE_GRAY,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_GRAY2	include/freetype/freetype/ftimage.h	/^    FT_PIXEL_MODE_GRAY2,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_GRAY4	include/freetype/freetype/ftimage.h	/^    FT_PIXEL_MODE_GRAY4,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_LCD	include/freetype/freetype/ftimage.h	/^    FT_PIXEL_MODE_LCD,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_LCD_V	include/freetype/freetype/ftimage.h	/^    FT_PIXEL_MODE_LCD_V,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_MAX	include/freetype/freetype/ftimage.h	/^    FT_PIXEL_MODE_MAX      \/* do not remove *\/$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_MONO	include/freetype/freetype/ftimage.h	/^    FT_PIXEL_MODE_MONO,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_NONE	include/freetype/freetype/ftimage.h	/^    FT_PIXEL_MODE_NONE = 0,$/;"	e	enum:FT_Pixel_Mode_
FT_PIX_CEIL	include/freetype/freetype/internal/ftobjs.h	82;"	d
FT_PIX_FLOOR	include/freetype/freetype/internal/ftobjs.h	80;"	d
FT_PIX_ROUND	include/freetype/freetype/internal/ftobjs.h	81;"	d
FT_POINTER_TO_ULONG	include/freetype/freetype/ftcache.h	221;"	d
FT_Parameter	include/freetype/freetype/freetype.h	/^  } FT_Parameter;$/;"	t	typeref:struct:FT_Parameter_
FT_Parameter_	include/freetype/freetype/freetype.h	/^  typedef struct  FT_Parameter_$/;"	s
FT_Pixel_Mode	include/freetype/freetype/ftimage.h	/^  } FT_Pixel_Mode;$/;"	t	typeref:enum:FT_Pixel_Mode_
FT_Pixel_Mode_	include/freetype/freetype/ftimage.h	/^  typedef enum  FT_Pixel_Mode_$/;"	g
FT_Pointer	include/freetype/freetype/fttypes.h	/^  typedef void*  FT_Pointer;$/;"	t
FT_Pos	include/freetype/freetype/ftimage.h	/^  typedef signed long  FT_Pos;$/;"	t
FT_PsName_GetFunc	include/freetype/freetype/internal/services/svpostnm.h	/^  (*FT_PsName_GetFunc)( FT_Face  face );$/;"	t
FT_PtrDist	include/freetype/freetype/fttypes.h	/^  typedef ft_ptrdiff_t  FT_PtrDist;$/;"	t
FT_QALLOC	include/freetype/freetype/internal/ftmemory.h	273;"	d
FT_QALLOC_MULT	include/freetype/freetype/internal/ftmemory.h	279;"	d
FT_QNEW	include/freetype/freetype/internal/ftmemory.h	296;"	d
FT_QNEW_ARRAY	include/freetype/freetype/internal/ftmemory.h	299;"	d
FT_QREALLOC	include/freetype/freetype/internal/ftmemory.h	276;"	d
FT_QREALLOC_MULT	include/freetype/freetype/internal/ftmemory.h	282;"	d
FT_QRENEW_ARRAY	include/freetype/freetype/internal/ftmemory.h	302;"	d
FT_RACCESS_N_RULES	include/freetype/freetype/internal/ftrfork.h	37;"	d
FT_RASTER_FLAG_AA	include/freetype/freetype/ftimage.h	1043;"	d
FT_RASTER_FLAG_CLIP	include/freetype/freetype/ftimage.h	1045;"	d
FT_RASTER_FLAG_DEFAULT	include/freetype/freetype/ftimage.h	1042;"	d
FT_RASTER_FLAG_DIRECT	include/freetype/freetype/ftimage.h	1044;"	d
FT_READ_BYTE	include/freetype/freetype/internal/ftstream.h	313;"	d
FT_READ_CHAR	include/freetype/freetype/internal/ftstream.h	314;"	d
FT_READ_LONG	include/freetype/freetype/internal/ftstream.h	319;"	d
FT_READ_LONG_LE	include/freetype/freetype/internal/ftstream.h	324;"	d
FT_READ_MACRO	include/freetype/freetype/internal/ftstream.h	309;"	d
FT_READ_OFF3	include/freetype/freetype/internal/ftstream.h	317;"	d
FT_READ_SHORT	include/freetype/freetype/internal/ftstream.h	315;"	d
FT_READ_SHORT_LE	include/freetype/freetype/internal/ftstream.h	322;"	d
FT_READ_ULONG	include/freetype/freetype/internal/ftstream.h	320;"	d
FT_READ_ULONG_LE	include/freetype/freetype/internal/ftstream.h	325;"	d
FT_READ_UOFF3	include/freetype/freetype/internal/ftstream.h	318;"	d
FT_READ_USHORT	include/freetype/freetype/internal/ftstream.h	316;"	d
FT_READ_USHORT_LE	include/freetype/freetype/internal/ftstream.h	323;"	d
FT_REALLOC	include/freetype/freetype/internal/ftmemory.h	263;"	d
FT_REALLOC_MULT	include/freetype/freetype/internal/ftmemory.h	269;"	d
FT_RENDERER	include/freetype/freetype/internal/ftobjs.h	652;"	d
FT_RENDER_H	include/freetype/freetype/config/ftheader.h	315;"	d
FT_RENDER_MODE_LCD	include/freetype/freetype/freetype.h	/^    FT_RENDER_MODE_LCD,$/;"	e	enum:FT_Render_Mode_
FT_RENDER_MODE_LCD_V	include/freetype/freetype/freetype.h	/^    FT_RENDER_MODE_LCD_V,$/;"	e	enum:FT_Render_Mode_
FT_RENDER_MODE_LIGHT	include/freetype/freetype/freetype.h	/^    FT_RENDER_MODE_LIGHT,$/;"	e	enum:FT_Render_Mode_
FT_RENDER_MODE_MAX	include/freetype/freetype/freetype.h	/^    FT_RENDER_MODE_MAX$/;"	e	enum:FT_Render_Mode_
FT_RENDER_MODE_MONO	include/freetype/freetype/freetype.h	/^    FT_RENDER_MODE_MONO,$/;"	e	enum:FT_Render_Mode_
FT_RENDER_MODE_NORMAL	include/freetype/freetype/freetype.h	/^    FT_RENDER_MODE_NORMAL = 0,$/;"	e	enum:FT_Render_Mode_
FT_RENDER_POOL_SIZE	include/freetype/freetype/config/ftoption.h	358;"	d
FT_RENEW_ARRAY	include/freetype/freetype/internal/ftmemory.h	293;"	d
FT_REQUEST_HEIGHT	include/freetype/freetype/internal/ftobjs.h	587;"	d
FT_REQUEST_WIDTH	include/freetype/freetype/internal/ftobjs.h	582;"	d
FT_RFork_Ref	include/freetype/freetype/internal/ftrfork.h	/^  } FT_RFork_Ref;$/;"	t	typeref:struct:FT_RFork_Ref_
FT_RFork_Ref_	include/freetype/freetype/internal/ftrfork.h	/^  typedef struct  FT_RFork_Ref_$/;"	s
FT_RFork_Rule	include/freetype/freetype/internal/ftrfork.h	/^  } FT_RFork_Rule;$/;"	t	typeref:enum:FT_RFork_Rule_
FT_RFork_Rule_	include/freetype/freetype/internal/ftrfork.h	/^  typedef enum  FT_RFork_Rule_ {$/;"	g
FT_RFork_Rule_apple_double	include/freetype/freetype/internal/ftrfork.h	/^    FT_RFork_Rule_apple_double,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_apple_single	include/freetype/freetype/internal/ftrfork.h	/^    FT_RFork_Rule_apple_single,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_darwin_hfsplus	include/freetype/freetype/internal/ftrfork.h	/^    FT_RFork_Rule_darwin_hfsplus,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_darwin_newvfs	include/freetype/freetype/internal/ftrfork.h	/^    FT_RFork_Rule_darwin_newvfs,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_darwin_ufs_export	include/freetype/freetype/internal/ftrfork.h	/^    FT_RFork_Rule_darwin_ufs_export,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_invalid	include/freetype/freetype/internal/ftrfork.h	/^    FT_RFork_Rule_invalid = -2,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_linux_cap	include/freetype/freetype/internal/ftrfork.h	/^    FT_RFork_Rule_linux_cap,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_linux_double	include/freetype/freetype/internal/ftrfork.h	/^    FT_RFork_Rule_linux_double,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_linux_netatalk	include/freetype/freetype/internal/ftrfork.h	/^    FT_RFork_Rule_linux_netatalk$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_uknown	include/freetype/freetype/internal/ftrfork.h	/^    FT_RFork_Rule_uknown, \/* -1 *\/$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_vfat	include/freetype/freetype/internal/ftrfork.h	/^    FT_RFork_Rule_vfat,$/;"	e	enum:FT_RFork_Rule_
FT_Raster	include/freetype/freetype/ftimage.h	/^  typedef struct FT_RasterRec_*  FT_Raster;$/;"	t	typeref:struct:FT_RasterRec_
FT_Raster_BitSet_Func	include/freetype/freetype/ftimage.h	/^  (*FT_Raster_BitSet_Func)( int    y,$/;"	t
FT_Raster_BitTest_Func	include/freetype/freetype/ftimage.h	/^  (*FT_Raster_BitTest_Func)( int    y,$/;"	t
FT_Raster_DoneFunc	include/freetype/freetype/ftimage.h	/^  (*FT_Raster_DoneFunc)( FT_Raster  raster );$/;"	t
FT_Raster_Done_Func	include/freetype/freetype/ftimage.h	1164;"	d
FT_Raster_Funcs	include/freetype/freetype/ftimage.h	/^  } FT_Raster_Funcs;$/;"	t	typeref:struct:FT_Raster_Funcs_
FT_Raster_Funcs_	include/freetype/freetype/ftimage.h	/^  typedef struct  FT_Raster_Funcs_$/;"	s
FT_Raster_NewFunc	include/freetype/freetype/ftimage.h	/^  (*FT_Raster_NewFunc)( void*       memory,$/;"	t
FT_Raster_New_Func	include/freetype/freetype/ftimage.h	1147;"	d
FT_Raster_Params	include/freetype/freetype/ftimage.h	/^  } FT_Raster_Params;$/;"	t	typeref:struct:FT_Raster_Params_
FT_Raster_Params_	include/freetype/freetype/ftimage.h	/^  typedef struct  FT_Raster_Params_$/;"	s
FT_Raster_RenderFunc	include/freetype/freetype/ftimage.h	/^  (*FT_Raster_RenderFunc)( FT_Raster                raster,$/;"	t
FT_Raster_Render_Func	include/freetype/freetype/ftimage.h	1266;"	d
FT_Raster_ResetFunc	include/freetype/freetype/ftimage.h	/^  (*FT_Raster_ResetFunc)( FT_Raster       raster,$/;"	t
FT_Raster_Reset_Func	include/freetype/freetype/ftimage.h	1199;"	d
FT_Raster_SetModeFunc	include/freetype/freetype/ftimage.h	/^  (*FT_Raster_SetModeFunc)( FT_Raster      raster,$/;"	t
FT_Raster_Set_Mode_Func	include/freetype/freetype/ftimage.h	1225;"	d
FT_Raster_Span_Func	include/freetype/freetype/ftimage.h	942;"	d
FT_Realloc_Func	include/freetype/freetype/ftsystem.h	/^  (*FT_Realloc_Func)( FT_Memory  memory,$/;"	t
FT_Render_Mode	include/freetype/freetype/freetype.h	/^  } FT_Render_Mode;$/;"	t	typeref:enum:FT_Render_Mode_
FT_Render_Mode_	include/freetype/freetype/freetype.h	/^  typedef enum  FT_Render_Mode_$/;"	g
FT_Renderer	include/freetype/freetype/freetype.h	/^  typedef struct FT_RendererRec_*  FT_Renderer;$/;"	t	typeref:struct:FT_RendererRec_
FT_RendererRec	include/freetype/freetype/internal/ftobjs.h	/^  } FT_RendererRec;$/;"	t	typeref:struct:FT_RendererRec_
FT_RendererRec_	include/freetype/freetype/internal/ftobjs.h	/^  typedef struct  FT_RendererRec_$/;"	s
FT_Renderer_Class	include/freetype/freetype/ftrender.h	/^  } FT_Renderer_Class;$/;"	t	typeref:struct:FT_Renderer_Class_
FT_Renderer_Class_	include/freetype/freetype/ftrender.h	/^  typedef struct  FT_Renderer_Class_$/;"	s
FT_Renderer_GetCBoxFunc	include/freetype/freetype/ftrender.h	/^  (*FT_Renderer_GetCBoxFunc)( FT_Renderer   renderer,$/;"	t
FT_Renderer_RenderFunc	include/freetype/freetype/ftrender.h	/^  (*FT_Renderer_RenderFunc)( FT_Renderer       renderer,$/;"	t
FT_Renderer_SetModeFunc	include/freetype/freetype/ftrender.h	/^  (*FT_Renderer_SetModeFunc)( FT_Renderer  renderer,$/;"	t
FT_Renderer_TransformFunc	include/freetype/freetype/ftrender.h	/^  (*FT_Renderer_TransformFunc)( FT_Renderer       renderer,$/;"	t
FT_SERVICE_BDF_H	include/freetype/freetype/internal/ftserv.h	663;"	d
FT_SERVICE_CID_H	include/freetype/freetype/internal/ftserv.h	664;"	d
FT_SERVICE_GLYPH_DICT_H	include/freetype/freetype/internal/ftserv.h	665;"	d
FT_SERVICE_GX_VALIDATE_H	include/freetype/freetype/internal/ftserv.h	666;"	d
FT_SERVICE_ID_BDF	include/freetype/freetype/internal/services/svbdf.h	29;"	d
FT_SERVICE_ID_CID	include/freetype/freetype/internal/services/svcid.h	27;"	d
FT_SERVICE_ID_CLASSICKERN_VALIDATE	include/freetype/freetype/internal/services/svgxval.h	38;"	d
FT_SERVICE_ID_GLYPH_DICT	include/freetype/freetype/internal/services/svgldict.h	34;"	d
FT_SERVICE_ID_GX_VALIDATE	include/freetype/freetype/internal/services/svgxval.h	37;"	d
FT_SERVICE_ID_KERNING	include/freetype/freetype/internal/services/svkern.h	28;"	d
FT_SERVICE_ID_MULTI_MASTERS	include/freetype/freetype/internal/services/svmm.h	35;"	d
FT_SERVICE_ID_OPENTYPE_VALIDATE	include/freetype/freetype/internal/services/svotval.h	28;"	d
FT_SERVICE_ID_PFR_METRICS	include/freetype/freetype/internal/services/svpfr.h	29;"	d
FT_SERVICE_ID_POSTSCRIPT_CMAPS	include/freetype/freetype/internal/services/svpscmap.h	28;"	d
FT_SERVICE_ID_POSTSCRIPT_FONT_NAME	include/freetype/freetype/internal/services/svpostnm.h	37;"	d
FT_SERVICE_ID_POSTSCRIPT_INFO	include/freetype/freetype/internal/services/svpsinfo.h	29;"	d
FT_SERVICE_ID_SFNT_TABLE	include/freetype/freetype/internal/services/svsfnt.h	33;"	d
FT_SERVICE_ID_TRUETYPE_ENGINE	include/freetype/freetype/internal/services/svtteng.h	33;"	d
FT_SERVICE_ID_TT_CMAP	include/freetype/freetype/internal/services/svttcmap.h	34;"	d
FT_SERVICE_ID_TT_GLYF	include/freetype/freetype/internal/services/svttglyf.h	27;"	d
FT_SERVICE_ID_WINFNT	include/freetype/freetype/internal/services/svwinfnt.h	29;"	d
FT_SERVICE_ID_XF86_NAME	include/freetype/freetype/internal/services/svxf86nm.h	34;"	d
FT_SERVICE_KERNING_H	include/freetype/freetype/internal/ftserv.h	667;"	d
FT_SERVICE_MULTIPLE_MASTERS_H	include/freetype/freetype/internal/ftserv.h	668;"	d
FT_SERVICE_OPENTYPE_VALIDATE_H	include/freetype/freetype/internal/ftserv.h	669;"	d
FT_SERVICE_PFR_H	include/freetype/freetype/internal/ftserv.h	670;"	d
FT_SERVICE_POSTSCRIPT_CMAPS_H	include/freetype/freetype/internal/ftserv.h	671;"	d
FT_SERVICE_POSTSCRIPT_INFO_H	include/freetype/freetype/internal/ftserv.h	672;"	d
FT_SERVICE_POSTSCRIPT_NAME_H	include/freetype/freetype/internal/ftserv.h	673;"	d
FT_SERVICE_SFNT_H	include/freetype/freetype/internal/ftserv.h	674;"	d
FT_SERVICE_TRUETYPE_ENGINE_H	include/freetype/freetype/internal/ftserv.h	675;"	d
FT_SERVICE_TRUETYPE_GLYF_H	include/freetype/freetype/internal/ftserv.h	679;"	d
FT_SERVICE_TT_CMAP_H	include/freetype/freetype/internal/ftserv.h	676;"	d
FT_SERVICE_UNAVAILABLE	include/freetype/freetype/internal/ftserv.h	576;"	d
FT_SERVICE_WINFNT_H	include/freetype/freetype/internal/ftserv.h	677;"	d
FT_SERVICE_XFREE86_NAME_H	include/freetype/freetype/internal/ftserv.h	678;"	d
FT_SET_ERROR	include/freetype/freetype/internal/ftmemory.h	41;"	d
FT_SET_ERROR	include/freetype/freetype/internal/ftmemory.h	42;"	d
FT_SFNT_NAMES_H	include/freetype/freetype/config/ftheader.h	603;"	d
FT_SFNT_TableGetFunc	include/freetype/freetype/internal/services/svsfnt.h	/^  (*FT_SFNT_TableGetFunc)( FT_Face      face,$/;"	t
FT_SFNT_TableInfoFunc	include/freetype/freetype/internal/services/svsfnt.h	/^  (*FT_SFNT_TableInfoFunc)( FT_Face    face,$/;"	t
FT_SFNT_TableLoadFunc	include/freetype/freetype/internal/services/svsfnt.h	/^  (*FT_SFNT_TableLoadFunc)( FT_Face    face,$/;"	t
FT_SIZE	include/freetype/freetype/internal/ftobjs.h	524;"	d
FT_SIZEOF_INT	include/freetype/freetype/config/ftconfig.h	76;"	d
FT_SIZEOF_LONG	include/freetype/freetype/config/ftconfig.h	88;"	d
FT_SIZES_H	include/freetype/freetype/config/ftheader.h	289;"	d
FT_SIZE_FACE	include/freetype/freetype/internal/ftobjs.h	532;"	d
FT_SIZE_REQUEST_TYPE_BBOX	include/freetype/freetype/freetype.h	/^    FT_SIZE_REQUEST_TYPE_BBOX,$/;"	e	enum:FT_Size_Request_Type_
FT_SIZE_REQUEST_TYPE_CELL	include/freetype/freetype/freetype.h	/^    FT_SIZE_REQUEST_TYPE_CELL,$/;"	e	enum:FT_Size_Request_Type_
FT_SIZE_REQUEST_TYPE_MAX	include/freetype/freetype/freetype.h	/^    FT_SIZE_REQUEST_TYPE_MAX$/;"	e	enum:FT_Size_Request_Type_
FT_SIZE_REQUEST_TYPE_NOMINAL	include/freetype/freetype/freetype.h	/^    FT_SIZE_REQUEST_TYPE_NOMINAL,$/;"	e	enum:FT_Size_Request_Type_
FT_SIZE_REQUEST_TYPE_REAL_DIM	include/freetype/freetype/freetype.h	/^    FT_SIZE_REQUEST_TYPE_REAL_DIM,$/;"	e	enum:FT_Size_Request_Type_
FT_SIZE_REQUEST_TYPE_SCALES	include/freetype/freetype/freetype.h	/^    FT_SIZE_REQUEST_TYPE_SCALES,$/;"	e	enum:FT_Size_Request_Type_
FT_SLOT	include/freetype/freetype/internal/ftobjs.h	525;"	d
FT_SLOT_FACE	include/freetype/freetype/internal/ftobjs.h	533;"	d
FT_STRCPYN	include/freetype/freetype/internal/ftmemory.h	369;"	d
FT_STRDUP	include/freetype/freetype/internal/ftmemory.h	351;"	d
FT_STREAM_POS	include/freetype/freetype/internal/ftstream.h	493;"	d
FT_STREAM_READ	include/freetype/freetype/internal/ftstream.h	502;"	d
FT_STREAM_READ_AT	include/freetype/freetype/internal/ftstream.h	507;"	d
FT_STREAM_READ_FIELDS	include/freetype/freetype/internal/ftstream.h	513;"	d
FT_STREAM_SEEK	include/freetype/freetype/internal/ftstream.h	496;"	d
FT_STREAM_SKIP	include/freetype/freetype/internal/ftstream.h	499;"	d
FT_STROKER_BORDER_LEFT	include/freetype/freetype/ftstroke.h	/^    FT_STROKER_BORDER_LEFT = 0,$/;"	e	enum:FT_StrokerBorder_
FT_STROKER_BORDER_RIGHT	include/freetype/freetype/ftstroke.h	/^    FT_STROKER_BORDER_RIGHT$/;"	e	enum:FT_StrokerBorder_
FT_STROKER_H	include/freetype/freetype/config/ftheader.h	656;"	d
FT_STROKER_LINECAP_BUTT	include/freetype/freetype/ftstroke.h	/^    FT_STROKER_LINECAP_BUTT = 0,$/;"	e	enum:FT_Stroker_LineCap_
FT_STROKER_LINECAP_ROUND	include/freetype/freetype/ftstroke.h	/^    FT_STROKER_LINECAP_ROUND,$/;"	e	enum:FT_Stroker_LineCap_
FT_STROKER_LINECAP_SQUARE	include/freetype/freetype/ftstroke.h	/^    FT_STROKER_LINECAP_SQUARE$/;"	e	enum:FT_Stroker_LineCap_
FT_STROKER_LINEJOIN_BEVEL	include/freetype/freetype/ftstroke.h	/^    FT_STROKER_LINEJOIN_BEVEL          = 1,$/;"	e	enum:FT_Stroker_LineJoin_
FT_STROKER_LINEJOIN_MITER	include/freetype/freetype/ftstroke.h	/^    FT_STROKER_LINEJOIN_MITER          = FT_STROKER_LINEJOIN_MITER_VARIABLE,$/;"	e	enum:FT_Stroker_LineJoin_
FT_STROKER_LINEJOIN_MITER_FIXED	include/freetype/freetype/ftstroke.h	/^    FT_STROKER_LINEJOIN_MITER_FIXED    = 3$/;"	e	enum:FT_Stroker_LineJoin_
FT_STROKER_LINEJOIN_MITER_VARIABLE	include/freetype/freetype/ftstroke.h	/^    FT_STROKER_LINEJOIN_MITER_VARIABLE = 2,$/;"	e	enum:FT_Stroker_LineJoin_
FT_STROKER_LINEJOIN_ROUND	include/freetype/freetype/ftstroke.h	/^    FT_STROKER_LINEJOIN_ROUND          = 0,$/;"	e	enum:FT_Stroker_LineJoin_
FT_STYLE_FLAG_BOLD	include/freetype/freetype/freetype.h	1294;"	d
FT_STYLE_FLAG_ITALIC	include/freetype/freetype/freetype.h	1293;"	d
FT_SUBGLYPH_FLAG_2X2	include/freetype/freetype/freetype.h	3240;"	d
FT_SUBGLYPH_FLAG_ARGS_ARE_WORDS	include/freetype/freetype/freetype.h	3235;"	d
FT_SUBGLYPH_FLAG_ARGS_ARE_XY_VALUES	include/freetype/freetype/freetype.h	3236;"	d
FT_SUBGLYPH_FLAG_ROUND_XY_TO_GRID	include/freetype/freetype/freetype.h	3237;"	d
FT_SUBGLYPH_FLAG_SCALE	include/freetype/freetype/freetype.h	3238;"	d
FT_SUBGLYPH_FLAG_USE_MY_METRICS	include/freetype/freetype/freetype.h	3241;"	d
FT_SUBGLYPH_FLAG_XY_SCALE	include/freetype/freetype/freetype.h	3239;"	d
FT_SYNTHESIS_H	include/freetype/freetype/config/ftheader.h	668;"	d
FT_SYSTEM_H	include/freetype/freetype/config/ftheader.h	217;"	d
FT_ServiceCache	include/freetype/freetype/internal/ftserv.h	/^  } FT_ServiceCacheRec, *FT_ServiceCache;$/;"	t	typeref:struct:FT_ServiceCacheRec_
FT_ServiceCacheRec	include/freetype/freetype/internal/ftserv.h	/^  } FT_ServiceCacheRec, *FT_ServiceCache;$/;"	t	typeref:struct:FT_ServiceCacheRec_
FT_ServiceCacheRec_	include/freetype/freetype/internal/ftserv.h	/^  typedef struct  FT_ServiceCacheRec_$/;"	s
FT_ServiceDesc	include/freetype/freetype/internal/ftserv.h	/^  typedef const FT_ServiceDescRec*  FT_ServiceDesc;$/;"	t
FT_ServiceDescRec	include/freetype/freetype/internal/ftserv.h	/^  } FT_ServiceDescRec;$/;"	t	typeref:struct:FT_ServiceDescRec_
FT_ServiceDescRec_	include/freetype/freetype/internal/ftserv.h	/^  typedef struct  FT_ServiceDescRec_$/;"	s
FT_Set_MM_Blend_Func	include/freetype/freetype/internal/services/svmm.h	/^  (*FT_Set_MM_Blend_Func)( FT_Face   face,$/;"	t
FT_Set_MM_Design_Func	include/freetype/freetype/internal/services/svmm.h	/^  (*FT_Set_MM_Design_Func)( FT_Face   face,$/;"	t
FT_Set_Var_Design_Func	include/freetype/freetype/internal/services/svmm.h	/^  (*FT_Set_Var_Design_Func)( FT_Face    face,$/;"	t
FT_SfntName	include/freetype/freetype/ftsnames.h	/^  } FT_SfntName;$/;"	t	typeref:struct:FT_SfntName_
FT_SfntName_	include/freetype/freetype/ftsnames.h	/^  typedef struct  FT_SfntName_$/;"	s
FT_Sfnt_Tag	include/freetype/freetype/tttables.h	/^  } FT_Sfnt_Tag;$/;"	t	typeref:enum:FT_Sfnt_Tag_
FT_Sfnt_Tag_	include/freetype/freetype/tttables.h	/^  typedef enum  FT_Sfnt_Tag_$/;"	g
FT_Short	include/freetype/freetype/fttypes.h	/^  typedef signed short  FT_Short;$/;"	t
FT_Size	include/freetype/freetype/freetype.h	/^  typedef struct FT_SizeRec_*  FT_Size;$/;"	t	typeref:struct:FT_SizeRec_
FT_SizeRec	include/freetype/freetype/freetype.h	/^  } FT_SizeRec;$/;"	t	typeref:struct:FT_SizeRec_
FT_SizeRec_	include/freetype/freetype/freetype.h	/^  typedef struct  FT_SizeRec_$/;"	s
FT_Size_DoneFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_Size_DoneFunc)( FT_Size  size );$/;"	t
FT_Size_InitFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_Size_InitFunc)( FT_Size  size );$/;"	t
FT_Size_Internal	include/freetype/freetype/freetype.h	/^  typedef struct FT_Size_InternalRec_*  FT_Size_Internal;$/;"	t	typeref:struct:FT_Size_InternalRec_
FT_Size_Metrics	include/freetype/freetype/freetype.h	/^  } FT_Size_Metrics;$/;"	t	typeref:struct:FT_Size_Metrics_
FT_Size_Metrics_	include/freetype/freetype/freetype.h	/^  typedef struct  FT_Size_Metrics_$/;"	s
FT_Size_Request	include/freetype/freetype/freetype.h	/^  typedef struct FT_Size_RequestRec_  *FT_Size_Request;$/;"	t	typeref:struct:FT_Size_RequestRec_
FT_Size_RequestFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_Size_RequestFunc)( FT_Size          size,$/;"	t
FT_Size_RequestRec	include/freetype/freetype/freetype.h	/^  } FT_Size_RequestRec;$/;"	t	typeref:struct:FT_Size_RequestRec_
FT_Size_RequestRec_	include/freetype/freetype/freetype.h	/^  typedef struct  FT_Size_RequestRec_$/;"	s
FT_Size_Request_Type	include/freetype/freetype/freetype.h	/^  } FT_Size_Request_Type;$/;"	t	typeref:enum:FT_Size_Request_Type_
FT_Size_Request_Type_	include/freetype/freetype/freetype.h	/^  typedef enum  FT_Size_Request_Type_$/;"	g
FT_Size_ResetPixelsFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_Size_ResetPixelsFunc)( FT_Size  size,$/;"	t
FT_Size_ResetPointsFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_Size_ResetPointsFunc)( FT_Size     size,$/;"	t
FT_Size_SelectFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_Size_SelectFunc)( FT_Size   size,$/;"	t
FT_Slot_DoneFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_Slot_DoneFunc)( FT_GlyphSlot  slot );$/;"	t
FT_Slot_InitFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_Slot_InitFunc)( FT_GlyphSlot  slot );$/;"	t
FT_Slot_Internal	include/freetype/freetype/freetype.h	/^  typedef struct FT_Slot_InternalRec_*  FT_Slot_Internal;$/;"	t	typeref:struct:FT_Slot_InternalRec_
FT_Slot_InternalRec_	include/freetype/freetype/internal/ftobjs.h	/^  typedef struct  FT_Slot_InternalRec_$/;"	s
FT_Slot_LoadFunc	include/freetype/freetype/internal/ftdriver.h	/^  (*FT_Slot_LoadFunc)( FT_GlyphSlot  slot,$/;"	t
FT_Span	include/freetype/freetype/ftimage.h	/^  } FT_Span;$/;"	t	typeref:struct:FT_Span_
FT_SpanFunc	include/freetype/freetype/ftimage.h	/^  (*FT_SpanFunc)( int             y,$/;"	t
FT_Span_	include/freetype/freetype/ftimage.h	/^  typedef struct  FT_Span_$/;"	s
FT_Stream	include/freetype/freetype/ftsystem.h	/^  typedef struct FT_StreamRec_*  FT_Stream;$/;"	t	typeref:struct:FT_StreamRec_
FT_StreamDesc	include/freetype/freetype/ftsystem.h	/^  } FT_StreamDesc;$/;"	t	typeref:union:FT_StreamDesc_
FT_StreamDesc_	include/freetype/freetype/ftsystem.h	/^  typedef union  FT_StreamDesc_$/;"	u
FT_StreamRec	include/freetype/freetype/ftsystem.h	/^  } FT_StreamRec;$/;"	t	typeref:struct:FT_StreamRec_
FT_StreamRec_	include/freetype/freetype/ftsystem.h	/^  typedef struct  FT_StreamRec_$/;"	s
FT_Stream_CloseFunc	include/freetype/freetype/ftsystem.h	/^  (*FT_Stream_CloseFunc)( FT_Stream  stream );$/;"	t
FT_Stream_IoFunc	include/freetype/freetype/ftsystem.h	/^  (*FT_Stream_IoFunc)( FT_Stream       stream,$/;"	t
FT_String	include/freetype/freetype/fttypes.h	/^  typedef char  FT_String;$/;"	t
FT_Stroker	include/freetype/freetype/ftstroke.h	/^  typedef struct FT_StrokerRec_*  FT_Stroker;$/;"	t	typeref:struct:FT_StrokerRec_
FT_StrokerBorder	include/freetype/freetype/ftstroke.h	/^  } FT_StrokerBorder;$/;"	t	typeref:enum:FT_StrokerBorder_
FT_StrokerBorder_	include/freetype/freetype/ftstroke.h	/^  typedef enum  FT_StrokerBorder_$/;"	g
FT_Stroker_LineCap	include/freetype/freetype/ftstroke.h	/^  } FT_Stroker_LineCap;$/;"	t	typeref:enum:FT_Stroker_LineCap_
FT_Stroker_LineCap_	include/freetype/freetype/ftstroke.h	/^  typedef enum  FT_Stroker_LineCap_$/;"	g
FT_Stroker_LineJoin	include/freetype/freetype/ftstroke.h	/^  } FT_Stroker_LineJoin;$/;"	t	typeref:enum:FT_Stroker_LineJoin_
FT_Stroker_LineJoin_	include/freetype/freetype/ftstroke.h	/^  typedef enum  FT_Stroker_LineJoin_$/;"	g
FT_SubGlyph	include/freetype/freetype/freetype.h	/^  typedef struct FT_SubGlyphRec_*  FT_SubGlyph;$/;"	t	typeref:struct:FT_SubGlyphRec_
FT_SubGlyphRec	include/freetype/freetype/internal/ftgloadr.h	/^  } FT_SubGlyphRec;$/;"	t	typeref:struct:FT_SubGlyphRec_
FT_SubGlyphRec_	include/freetype/freetype/internal/ftgloadr.h	/^  typedef struct  FT_SubGlyphRec_$/;"	s
FT_TRACE	include/freetype/freetype/internal/ftdebug.h	86;"	d
FT_TRACE	include/freetype/freetype/internal/ftdebug.h	95;"	d
FT_TRACE0	include/freetype/freetype/internal/ftdebug.h	157;"	d
FT_TRACE1	include/freetype/freetype/internal/ftdebug.h	158;"	d
FT_TRACE2	include/freetype/freetype/internal/ftdebug.h	159;"	d
FT_TRACE3	include/freetype/freetype/internal/ftdebug.h	160;"	d
FT_TRACE4	include/freetype/freetype/internal/ftdebug.h	161;"	d
FT_TRACE5	include/freetype/freetype/internal/ftdebug.h	162;"	d
FT_TRACE6	include/freetype/freetype/internal/ftdebug.h	163;"	d
FT_TRACE7	include/freetype/freetype/internal/ftdebug.h	164;"	d
FT_TRACE_DEF	include/freetype/freetype/internal/ftdebug.h	54;"	d
FT_TRACE_DEF	include/freetype/freetype/internal/ftdebug.h	68;"	d
FT_TRIGONOMETRY_H	include/freetype/freetype/config/ftheader.h	694;"	d
FT_TRUETYPE_ENGINE_TYPE_NONE	include/freetype/freetype/ftmodapi.h	/^    FT_TRUETYPE_ENGINE_TYPE_NONE = 0,$/;"	e	enum:FT_TrueTypeEngineType_
FT_TRUETYPE_ENGINE_TYPE_PATENTED	include/freetype/freetype/ftmodapi.h	/^    FT_TRUETYPE_ENGINE_TYPE_PATENTED$/;"	e	enum:FT_TrueTypeEngineType_
FT_TRUETYPE_ENGINE_TYPE_UNPATENTED	include/freetype/freetype/ftmodapi.h	/^    FT_TRUETYPE_ENGINE_TYPE_UNPATENTED,$/;"	e	enum:FT_TrueTypeEngineType_
FT_TRUETYPE_IDS_H	include/freetype/freetype/config/ftheader.h	343;"	d
FT_TRUETYPE_TABLES_H	include/freetype/freetype/config/ftheader.h	356;"	d
FT_TRUETYPE_TAGS_H	include/freetype/freetype/config/ftheader.h	370;"	d
FT_TRUETYPE_UNPATENTED_H	include/freetype/freetype/config/ftheader.h	777;"	d
FT_TYPE1_TABLES_H	include/freetype/freetype/config/ftheader.h	328;"	d
FT_TYPES_H	include/freetype/freetype/config/ftheader.h	248;"	d
FT_Tag	include/freetype/freetype/fttypes.h	/^  typedef FT_UInt32  FT_Tag;$/;"	t
FT_Trace	include/freetype/freetype/internal/ftdebug.h	/^  } FT_Trace;$/;"	t	typeref:enum:FT_Trace_
FT_Trace_	include/freetype/freetype/internal/ftdebug.h	/^  typedef enum  FT_Trace_$/;"	g
FT_TrueTypeEngineType	include/freetype/freetype/ftmodapi.h	/^  } FT_TrueTypeEngineType;$/;"	t	typeref:enum:FT_TrueTypeEngineType_
FT_TrueTypeEngineType_	include/freetype/freetype/ftmodapi.h	/^  typedef enum  FT_TrueTypeEngineType_$/;"	g
FT_UFWord	include/freetype/freetype/fttypes.h	/^  typedef unsigned short  FT_UFWord;  \/* unsigned distance *\/$/;"	t
FT_UFast	include/freetype/freetype/config/ftconfig.h	/^  typedef unsigned int   FT_UFast;$/;"	t
FT_UFast	include/freetype/freetype/config/ftconfig.h	/^  typedef unsigned long  FT_UFast;$/;"	t
FT_UINT16	include/freetype/freetype/internal/ftstream.h	160;"	d
FT_UINT32	include/freetype/freetype/internal/ftstream.h	162;"	d
FT_UINT_MAX	include/freetype/freetype/config/ftstdlib.h	66;"	d
FT_UInt	include/freetype/freetype/fttypes.h	/^  typedef unsigned int  FT_UInt;$/;"	t
FT_UInt16	include/freetype/freetype/config/ftconfig.h	/^  typedef unsigned short  FT_UInt16;$/;"	t
FT_UInt32	include/freetype/freetype/config/ftconfig.h	/^  typedef unsigned int    FT_UInt32;$/;"	t
FT_UInt32	include/freetype/freetype/config/ftconfig.h	/^  typedef unsigned long   FT_UInt32;$/;"	t
FT_ULONG_MAX	include/freetype/freetype/config/ftstdlib.h	67;"	d
FT_ULong	include/freetype/freetype/fttypes.h	/^  typedef unsigned long  FT_ULong;$/;"	t
FT_UNPATENTED_HINTING_H	include/freetype/freetype/config/ftheader.h	718;"	d
FT_UNUSED	include/freetype/freetype/config/ftconfig.h	101;"	d
FT_USHORT_MAX	include/freetype/freetype/config/ftstdlib.h	63;"	d
FT_UShort	include/freetype/freetype/fttypes.h	/^  typedef unsigned short  FT_UShort;$/;"	t
FT_UnitVector	include/freetype/freetype/fttypes.h	/^  } FT_UnitVector;$/;"	t	typeref:struct:FT_UnitVector_
FT_UnitVector_	include/freetype/freetype/fttypes.h	/^  typedef struct  FT_UnitVector_$/;"	s
FT_VALIDATE_APPLE	include/freetype/freetype/ftgxval.h	275;"	d
FT_VALIDATE_BASE	include/freetype/freetype/ftotval.h	96;"	d
FT_VALIDATE_CKERN	include/freetype/freetype/ftgxval.h	277;"	d
FT_VALIDATE_DEFAULT	include/freetype/freetype/internal/ftvalid.h	/^    FT_VALIDATE_DEFAULT = 0,$/;"	e	enum:FT_ValidationLevel_
FT_VALIDATE_GDEF	include/freetype/freetype/ftotval.h	97;"	d
FT_VALIDATE_GPOS	include/freetype/freetype/ftotval.h	98;"	d
FT_VALIDATE_GSUB	include/freetype/freetype/ftotval.h	99;"	d
FT_VALIDATE_GX	include/freetype/freetype/ftgxval.h	162;"	d
FT_VALIDATE_GX_BITFIELD	include/freetype/freetype/ftgxval.h	101;"	d
FT_VALIDATE_GX_LAST_INDEX	include/freetype/freetype/ftgxval.h	82;"	d
FT_VALIDATE_GX_LENGTH	include/freetype/freetype/ftgxval.h	94;"	d
FT_VALIDATE_GX_START	include/freetype/freetype/ftgxval.h	100;"	d
FT_VALIDATE_JSTF	include/freetype/freetype/ftotval.h	100;"	d
FT_VALIDATE_MATH	include/freetype/freetype/ftotval.h	101;"	d
FT_VALIDATE_MS	include/freetype/freetype/ftgxval.h	274;"	d
FT_VALIDATE_OT	include/freetype/freetype/ftotval.h	103;"	d
FT_VALIDATE_PARANOID	include/freetype/freetype/internal/ftvalid.h	/^    FT_VALIDATE_PARANOID$/;"	e	enum:FT_ValidationLevel_
FT_VALIDATE_TIGHT	include/freetype/freetype/internal/ftvalid.h	/^    FT_VALIDATE_TIGHT,$/;"	e	enum:FT_ValidationLevel_
FT_VALIDATE_bsln	include/freetype/freetype/ftgxval.h	154;"	d
FT_VALIDATE_bsln_INDEX	include/freetype/freetype/ftgxval.h	75;"	d
FT_VALIDATE_feat	include/freetype/freetype/ftgxval.h	151;"	d
FT_VALIDATE_feat_INDEX	include/freetype/freetype/ftgxval.h	72;"	d
FT_VALIDATE_just	include/freetype/freetype/ftgxval.h	155;"	d
FT_VALIDATE_just_INDEX	include/freetype/freetype/ftgxval.h	76;"	d
FT_VALIDATE_kern	include/freetype/freetype/ftgxval.h	156;"	d
FT_VALIDATE_kern_INDEX	include/freetype/freetype/ftgxval.h	77;"	d
FT_VALIDATE_lcar	include/freetype/freetype/ftgxval.h	160;"	d
FT_VALIDATE_lcar_INDEX	include/freetype/freetype/ftgxval.h	81;"	d
FT_VALIDATE_mort	include/freetype/freetype/ftgxval.h	152;"	d
FT_VALIDATE_mort_INDEX	include/freetype/freetype/ftgxval.h	73;"	d
FT_VALIDATE_morx	include/freetype/freetype/ftgxval.h	153;"	d
FT_VALIDATE_morx_INDEX	include/freetype/freetype/ftgxval.h	74;"	d
FT_VALIDATE_opbd	include/freetype/freetype/ftgxval.h	157;"	d
FT_VALIDATE_opbd_INDEX	include/freetype/freetype/ftgxval.h	78;"	d
FT_VALIDATE_prop	include/freetype/freetype/ftgxval.h	159;"	d
FT_VALIDATE_prop_INDEX	include/freetype/freetype/ftgxval.h	80;"	d
FT_VALIDATE_trak	include/freetype/freetype/ftgxval.h	158;"	d
FT_VALIDATE_trak_INDEX	include/freetype/freetype/ftgxval.h	79;"	d
FT_VALIDATOR	include/freetype/freetype/internal/ftvalid.h	92;"	d
FT_ValidationLevel	include/freetype/freetype/internal/ftvalid.h	/^  } FT_ValidationLevel;$/;"	t	typeref:enum:FT_ValidationLevel_
FT_ValidationLevel_	include/freetype/freetype/internal/ftvalid.h	/^  typedef enum  FT_ValidationLevel_$/;"	g
FT_Validator	include/freetype/freetype/internal/ftvalid.h	/^  typedef struct FT_ValidatorRec_ volatile*  FT_Validator;$/;"	t
FT_ValidatorRec	include/freetype/freetype/internal/ftvalid.h	/^  } FT_ValidatorRec;$/;"	t	typeref:struct:FT_ValidatorRec_
FT_ValidatorRec_	include/freetype/freetype/internal/ftvalid.h	/^  typedef struct  FT_ValidatorRec_$/;"	s
FT_Var_Axis	include/freetype/freetype/ftmm.h	/^  } FT_Var_Axis;$/;"	t	typeref:struct:FT_Var_Axis_
FT_Var_Axis_	include/freetype/freetype/ftmm.h	/^  typedef struct  FT_Var_Axis_$/;"	s
FT_Var_Named_Style	include/freetype/freetype/ftmm.h	/^  } FT_Var_Named_Style;$/;"	t	typeref:struct:FT_Var_Named_Style_
FT_Var_Named_Style_	include/freetype/freetype/ftmm.h	/^  typedef struct  FT_Var_Named_Style_$/;"	s
FT_Vector	include/freetype/freetype/ftimage.h	/^  } FT_Vector;$/;"	t	typeref:struct:FT_Vector_
FT_Vector_	include/freetype/freetype/ftimage.h	/^  typedef struct  FT_Vector_$/;"	s
FT_WINFONTS_H	include/freetype/freetype/config/ftheader.h	450;"	d
FT_WinFNT_Header	include/freetype/freetype/ftwinfnt.h	/^  typedef struct FT_WinFNT_HeaderRec_*  FT_WinFNT_Header;$/;"	t	typeref:struct:FT_WinFNT_HeaderRec_
FT_WinFNT_HeaderRec	include/freetype/freetype/ftwinfnt.h	/^  } FT_WinFNT_HeaderRec;$/;"	t	typeref:struct:FT_WinFNT_HeaderRec_
FT_WinFNT_HeaderRec_	include/freetype/freetype/ftwinfnt.h	/^  typedef struct  FT_WinFNT_HeaderRec_$/;"	s
FT_WinFNT_ID_CP1250	include/freetype/freetype/ftwinfnt.h	171;"	d
FT_WinFNT_ID_CP1251	include/freetype/freetype/ftwinfnt.h	169;"	d
FT_WinFNT_ID_CP1252	include/freetype/freetype/ftwinfnt.h	154;"	d
FT_WinFNT_ID_CP1253	include/freetype/freetype/ftwinfnt.h	163;"	d
FT_WinFNT_ID_CP1254	include/freetype/freetype/ftwinfnt.h	164;"	d
FT_WinFNT_ID_CP1255	include/freetype/freetype/ftwinfnt.h	166;"	d
FT_WinFNT_ID_CP1256	include/freetype/freetype/ftwinfnt.h	167;"	d
FT_WinFNT_ID_CP1257	include/freetype/freetype/ftwinfnt.h	168;"	d
FT_WinFNT_ID_CP1258	include/freetype/freetype/ftwinfnt.h	165;"	d
FT_WinFNT_ID_CP1361	include/freetype/freetype/ftwinfnt.h	160;"	d
FT_WinFNT_ID_CP874	include/freetype/freetype/ftwinfnt.h	170;"	d
FT_WinFNT_ID_CP932	include/freetype/freetype/ftwinfnt.h	158;"	d
FT_WinFNT_ID_CP936	include/freetype/freetype/ftwinfnt.h	161;"	d
FT_WinFNT_ID_CP949	include/freetype/freetype/ftwinfnt.h	159;"	d
FT_WinFNT_ID_CP950	include/freetype/freetype/ftwinfnt.h	162;"	d
FT_WinFNT_ID_DEFAULT	include/freetype/freetype/ftwinfnt.h	155;"	d
FT_WinFNT_ID_MAC	include/freetype/freetype/ftwinfnt.h	157;"	d
FT_WinFNT_ID_OEM	include/freetype/freetype/ftwinfnt.h	172;"	d
FT_WinFNT_ID_SYMBOL	include/freetype/freetype/ftwinfnt.h	156;"	d
FT_WinFnt_GetHeaderFunc	include/freetype/freetype/internal/services/svwinfnt.h	/^  (*FT_WinFnt_GetHeaderFunc)( FT_Face               face,$/;"	t
FT_XF86_FORMAT_BDF	include/freetype/freetype/internal/services/svxf86nm.h	38;"	d
FT_XF86_FORMAT_CFF	include/freetype/freetype/internal/services/svxf86nm.h	42;"	d
FT_XF86_FORMAT_CID	include/freetype/freetype/internal/services/svxf86nm.h	41;"	d
FT_XF86_FORMAT_PCF	include/freetype/freetype/internal/services/svxf86nm.h	39;"	d
FT_XF86_FORMAT_PFR	include/freetype/freetype/internal/services/svxf86nm.h	43;"	d
FT_XF86_FORMAT_TRUETYPE	include/freetype/freetype/internal/services/svxf86nm.h	36;"	d
FT_XF86_FORMAT_TYPE_1	include/freetype/freetype/internal/services/svxf86nm.h	37;"	d
FT_XF86_FORMAT_TYPE_42	include/freetype/freetype/internal/services/svxf86nm.h	40;"	d
FT_XF86_FORMAT_WINFNT	include/freetype/freetype/internal/services/svxf86nm.h	44;"	d
FT_XFREE86_H	include/freetype/freetype/config/ftheader.h	681;"	d
FT_ZERO	include/freetype/freetype/internal/ftmemory.h	210;"	d
F_API	include/fmod/fmod.h	48;"	d
F_API	include/fmod/fmod.h	50;"	d
F_API	include/fmod/fmod.h	53;"	d
F_CALLBACK	include/fmod/fmod.h	56;"	d
F_CDECL	include/fmod/fmod.h	25;"	d
F_CDECL	include/fmod/fmod.h	30;"	d
F_CDECL	include/fmod/fmod.h	35;"	d
F_CDECL	include/fmod/fmod.h	41;"	d
F_DECLSPEC	include/fmod/fmod.h	27;"	d
F_DECLSPEC	include/fmod/fmod.h	32;"	d
F_DECLSPEC	include/fmod/fmod.h	37;"	d
F_DECLSPEC	include/fmod/fmod.h	42;"	d
F_DLLEXPORT	include/fmod/fmod.h	28;"	d
F_DLLEXPORT	include/fmod/fmod.h	33;"	d
F_DLLEXPORT	include/fmod/fmod.h	38;"	d
F_DLLEXPORT	include/fmod/fmod.h	43;"	d
F_STDCALL	include/fmod/fmod.h	26;"	d
F_STDCALL	include/fmod/fmod.h	31;"	d
F_STDCALL	include/fmod/fmod.h	36;"	d
F_STDCALL	include/fmod/fmod.h	40;"	d
FadeEffect	src/ui/sprite.cpp	/^FadeEffect::FadeEffect(bool stay, QObject *parent)$/;"	f	class:FadeEffect
FadeEffect	src/ui/sprite.h	/^class FadeEffect : public QAnimatedEffect$/;"	c
FakeMemoryRegion	src/breakpad/processor/postfix_evaluator_unittest.cc	/^class FakeMemoryRegion : public MemoryRegion {$/;"	c	namespace:__anon75	file:
Fan	src/package/maneuvering.cpp	/^Fan::Fan(Suit suit, int number):Weapon(suit, number, 4){$/;"	f	class:Fan
Fan	src/package/maneuvering.h	/^class Fan: public Weapon{$/;"	c
FanSkill	src/package/maneuvering.cpp	/^    FanSkill():OneCardViewAsSkill("Fan"){$/;"	f	class:FanSkill
FanSkill	src/package/maneuvering.cpp	/^class FanSkill: public OneCardViewAsSkill{$/;"	c	file:
Fancheng	src/scenario/fancheng-scenario.cpp	/^ADD_SCENARIO(Fancheng);$/;"	v
FanchengRule	src/scenario/fancheng-scenario.cpp	/^    FanchengRule(Scenario *scenario)$/;"	f	class:FanchengRule
FanchengRule	src/scenario/fancheng-scenario.cpp	/^class FanchengRule: public ScenarioRule{$/;"	c	file:
FanchengScenario	src/scenario/fancheng-scenario.cpp	/^FanchengScenario::FanchengScenario()$/;"	f	class:FanchengScenario
FanchengScenario	src/scenario/fancheng-scenario.h	/^class FanchengScenario: public Scenario{$/;"	c
Fangquan	src/package/mountainpackage.cpp	/^    Fangquan():TriggerSkill("fangquan"){$/;"	f	class:Fangquan
Fangquan	src/package/mountainpackage.cpp	/^class Fangquan: public TriggerSkill{$/;"	c	file:
FangquanGive	src/package/mountainpackage.cpp	/^    FangquanGive():PhaseChangeSkill("#fangquan-give"){$/;"	f	class:FangquanGive
FangquanGive	src/package/mountainpackage.cpp	/^class FangquanGive: public PhaseChangeSkill{$/;"	c	file:
Fangzhu	src/package/thicket.cpp	/^    Fangzhu():MasochismSkill("fangzhu"){$/;"	f	class:Fangzhu
Fangzhu	src/package/thicket.cpp	/^class Fangzhu: public MasochismSkill{$/;"	c	file:
FangzhuCard	src/package/thicket.cpp	/^FangzhuCard::FangzhuCard(){$/;"	f	class:FangzhuCard
FangzhuCard	src/package/thicket.h	/^class FangzhuCard: public SkillCard{$/;"	c
FangzhuViewAsSkill	src/package/thicket.cpp	/^    FangzhuViewAsSkill():ZeroCardViewAsSkill("fangzhu"){$/;"	f	class:FangzhuViewAsSkill
FangzhuViewAsSkill	src/package/thicket.cpp	/^class FangzhuViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
Fanjian	src/package/standard-generals.cpp	/^    Fanjian():ZeroCardViewAsSkill("fanjian"){$/;"	f	class:Fanjian
Fanjian	src/package/standard-generals.cpp	/^class Fanjian:public ZeroCardViewAsSkill{$/;"	c	file:
FanjianCard	src/package/standard-skillcards.cpp	/^FanjianCard::FanjianCard(){$/;"	f	class:FanjianCard
FanjianCard	src/package/standard-skillcards.h	/^class FanjianCard: public SkillCard{$/;"	c
Fankui	src/package/standard-generals.cpp	/^    Fankui():MasochismSkill("fankui"){$/;"	f	class:Fankui
Fankui	src/package/standard-generals.cpp	/^class Fankui:public MasochismSkill{$/;"	c	file:
FastFunc	src/breakpad/processor/module_comparer.h	/^  typedef FastSourceLineResolver::Function FastFunc;$/;"	t	class:google_breakpad::ModuleComparer
FastLine	src/breakpad/processor/module_comparer.h	/^  typedef FastSourceLineResolver::Line FastLine;$/;"	t	class:google_breakpad::ModuleComparer
FastModule	src/breakpad/processor/module_comparer.h	/^  typedef FastSourceLineResolver::Module FastModule;$/;"	t	class:google_breakpad::ModuleComparer
FastModuleFactory	src/breakpad/processor/module_factory.h	/^class FastModuleFactory : public ModuleFactory {$/;"	c	namespace:google_breakpad
FastPubSymbol	src/breakpad/processor/module_comparer.h	/^  typedef FastSourceLineResolver::PublicSymbol FastPubSymbol;$/;"	t	class:google_breakpad::ModuleComparer
FastSourceLineResolver	src/breakpad/google_breakpad/processor/fast_source_line_resolver.h	/^class FastSourceLineResolver : public SourceLineResolverBase {$/;"	c	namespace:google_breakpad
FastSourceLineResolver	src/breakpad/processor/fast_source_line_resolver.cc	/^FastSourceLineResolver::FastSourceLineResolver()$/;"	f	class:google_breakpad::FastSourceLineResolver
FastWriter	src/jsoncpp/include/json/writer.h	/^   class JSON_API FastWriter : public Writer$/;"	c	namespace:Json
FastWriter	src/jsoncpp/src/json_writer.cpp	/^FastWriter::FastWriter()$/;"	f	class:Json::FastWriter
Features	src/jsoncpp/include/json/features.h	/^   class JSON_API Features$/;"	c	namespace:Json
Features	src/jsoncpp/src/json_reader.cpp	/^Features::Features()$/;"	f	class:Json::Features
Feiying	src/package/god.cpp	/^    Feiying():DistanceSkill("feiying"){$/;"	f	class:Feiying
Feiying	src/package/god.cpp	/^class Feiying: public DistanceSkill{$/;"	c	file:
Female	src/core/general.h	/^    enum Gender {Male, Female, Neuter};$/;"	e	enum:General::Gender
File	src/breakpad/processor/pathname_stripper.cc	/^string PathnameStripper::File(const string &path) {$/;"	f	class:google_breakpad::PathnameStripper
FileFormat	src/breakpad/common/windows/pdb_source_line_writer.h	/^  enum FileFormat {$/;"	g	class:google_breakpad::PDBSourceLineWriter
FileIDIsCached	src/breakpad/common/windows/pdb_source_line_writer.h	/^  bool FileIDIsCached(const wstring &file) {$/;"	f	class:google_breakpad::PDBSourceLineWriter
FileMap	src/breakpad/processor/basic_source_line_resolver_types.h	/^  typedef std::map<int, string> FileMap;$/;"	t	class:google_breakpad::BasicSourceLineResolver::Module
FileMap	src/breakpad/processor/fast_source_line_resolver_types.h	/^  typedef StaticMap<int, char> FileMap;$/;"	t	class:google_breakpad::FastSourceLineResolver::Module
FileName	include/freetype/freetype/tttables.h	/^    FT_Char    FileName[6];$/;"	m	struct:TT_PCLT_
File_GetDiskBusy	include/fmod/fmod.hpp	/^    inline FMOD_RESULT File_GetDiskBusy(int *busy) { return FMOD_File_GetDiskBusy(busy); }$/;"	f	namespace:FMOD
File_SetDiskBusy	include/fmod/fmod.hpp	/^    inline FMOD_RESULT File_SetDiskBusy(int busy) { return FMOD_File_SetDiskBusy(busy); }$/;"	f	namespace:FMOD
FillPlayerNames	src/ui/roomscene.cpp	/^void RoomScene::FillPlayerNames(QComboBox *ComboBox, bool add_none){$/;"	f	class:RoomScene
FillSourceLineInfo	src/breakpad/processor/source_line_resolver_base.cc	/^void SourceLineResolverBase::FillSourceLineInfo(StackFrame *frame) {$/;"	f	class:google_breakpad::SourceLineResolverBase
FilterCallback	src/breakpad/client/windows/handler/exception_handler.h	/^  typedef bool (*FilterCallback)(void* context, EXCEPTION_POINTERS* exinfo,$/;"	t	class:google_breakpad::ExceptionHandler
FilterSkill	src/core/skill.cpp	/^FilterSkill::FilterSkill(const QString &name)$/;"	f	class:FilterSkill
FilterSkill	src/core/skill.h	/^class FilterSkill: public OneCardViewAsSkill{$/;"	c
FindCFIFrameInfo	src/breakpad/processor/basic_source_line_resolver.cc	/^CFIFrameInfo *BasicSourceLineResolver::Module::FindCFIFrameInfo($/;"	f	class:google_breakpad::BasicSourceLineResolver::Module
FindCFIFrameInfo	src/breakpad/processor/fast_source_line_resolver.cc	/^CFIFrameInfo *FastSourceLineResolver::Module::FindCFIFrameInfo($/;"	f	class:google_breakpad::FastSourceLineResolver::Module
FindCFIFrameInfo	src/breakpad/processor/source_line_resolver_base.cc	/^CFIFrameInfo *SourceLineResolverBase::FindCFIFrameInfo($/;"	f	class:google_breakpad::SourceLineResolverBase
FindCallerRegisters	src/breakpad/processor/cfi_frame_info-inl.h	/^bool SimpleCFIWalker<RegisterType, RawContextType>::FindCallerRegisters($/;"	f	class:google_breakpad::SimpleCFIWalker
FindCallerRegs	src/breakpad/processor/cfi_frame_info.cc	/^bool CFIFrameInfo::FindCallerRegs(const RegisterValueMap<V> &registers,$/;"	f	class:google_breakpad::CFIFrameInfo
FindItem	src/ui/carditem.cpp	/^CardItem *CardItem::FindItem(const QList<CardItem *> &items, int card_id){$/;"	f	class:CardItem
FindPEFile	src/breakpad/common/windows/pdb_source_line_writer.cc	/^bool PDBSourceLineWriter::FindPEFile() {$/;"	f	class:google_breakpad::PDBSourceLineWriter
FindTester	src/breakpad/processor/static_map_unittest.cc	/^  void FindTester(int test_case, const KeyType &key) {$/;"	f	class:TestValidMap
FindWindowsFrameInfo	src/breakpad/processor/basic_source_line_resolver.cc	/^WindowsFrameInfo *BasicSourceLineResolver::Module::FindWindowsFrameInfo($/;"	f	class:google_breakpad::BasicSourceLineResolver::Module
FindWindowsFrameInfo	src/breakpad/processor/fast_source_line_resolver.cc	/^WindowsFrameInfo *FastSourceLineResolver::Module::FindWindowsFrameInfo($/;"	f	class:google_breakpad::FastSourceLineResolver::Module
FindWindowsFrameInfo	src/breakpad/processor/source_line_resolver_base.cc	/^WindowsFrameInfo *SourceLineResolverBase::FindWindowsFrameInfo($/;"	f	class:google_breakpad::SourceLineResolverBase
Finish	src/breakpad/processor/synth_minidump.cc	/^void Dump::Finish() {$/;"	f	class:google_breakpad::SynthMinidump::Dump
Finish	src/breakpad/processor/synth_minidump.h	/^  virtual void Finish(const Label &offset) { $/;"	f	class:google_breakpad::SynthMinidump::Section
Finish	src/breakpad/processor/synth_minidump.h	/^  virtual void Finish(const Label &offset) {$/;"	f	class:google_breakpad::SynthMinidump::List
Finish	src/core/player.h	/^    enum Phase {RoundStart, Start, Judge, Draw, Play, Discard, Finish, NotActive, PhaseNone};$/;"	e	enum:Player::Phase
FinishJudge	src/core/structs.h	/^    FinishJudge,$/;"	e	enum:TriggerEvent
FinishRetrial	src/core/structs.h	/^    FinishRetrial,$/;"	e	enum:TriggerEvent
Fire	src/core/structs.h	/^        Fire,  \/\/ fire slash, fire attack and few damage skill (Yeyan, etc)$/;"	e	enum:DamageStruct::Nature
Fire	src/package/firepackage.cpp	/^ADD_PACKAGE(Fire);$/;"	v
FireAttack	src/package/maneuvering.cpp	/^FireAttack::FireAttack(Card::Suit suit, int number)$/;"	f	class:FireAttack
FireAttack	src/package/maneuvering.h	/^class FireAttack: public SingleTargetTrick{$/;"	c
FireFanSkill	src/package/maneuvering.cpp	/^    FireFanSkill():WeaponSkill("Fan"){$/;"	f	class:FireFanSkill
FireFanSkill	src/package/maneuvering.cpp	/^class FireFanSkill: public WeaponSkill{$/;"	c	file:
FirePackage	src/package/firepackage.cpp	/^FirePackage::FirePackage()$/;"	f	class:FirePackage
FirePackage	src/package/firepackage.h	/^class FirePackage : public Package{$/;"	c
FireSlash	src/package/maneuvering.cpp	/^FireSlash::FireSlash(Suit suit, int number)$/;"	f	class:FireSlash
FireSlash	src/package/maneuvering.h	/^class FireSlash: public NatureSlash{$/;"	c
FitView	src/dialog/mainwindow.cpp	/^    FitView(QGraphicsScene *scene) : QGraphicsView(scene) {$/;"	f	class:FitView
FitView	src/dialog/mainwindow.cpp	/^class FitView : public QGraphicsView$/;"	c	file:
Flags	include/fmod/fmod.h	/^    unsigned int Flags;                \/* [r\/w] FMOD_REVERB_CHANNELFLAGS - modifies the behavior of properties                (SUPPORTED:SFX) *\/$/;"	m	struct:FMOD_REVERB_CHANNELPROPERTIES
Flags	include/fmod/fmod.h	/^    unsigned int Flags;             \/* [r\/w] FMOD_REVERB_FLAGS - modifies the behavior of above properties                               (SUPPORTED:WII) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
Flags	include/freetype/freetype/tttables.h	/^    FT_UShort  Flags;$/;"	m	struct:TT_Header_
Flood	src/scenario/fancheng-scenario.cpp	/^    Flood():ViewAsSkill("flood"){$/;"	f	class:Flood
Flood	src/scenario/fancheng-scenario.cpp	/^class Flood: public ViewAsSkill{$/;"	c	file:
FloodCard	src/scenario/fancheng-scenario.cpp	/^FloodCard::FloodCard(){$/;"	f	class:FloodCard
FloodCard	src/scenario/fancheng-scenario.h	/^class FloodCard: public SkillCard{$/;"	c
FontBBox	include/freetype/freetype/internal/t1types.h	/^    FT_BBox        FontBBox;$/;"	m	struct:AFM_FontInfoRec_
FontInfo	include/freetype/freetype/internal/psaux.h	/^    AFM_FontInfo  FontInfo;$/;"	m	struct:AFM_ParserRec_
FontNumber	include/freetype/freetype/tttables.h	/^    FT_ULong   FontNumber;$/;"	m	struct:TT_PCLT_
Font_Direction	include/freetype/freetype/tttables.h	/^    FT_Short   Font_Direction;$/;"	m	struct:TT_Header_
Font_Revision	include/freetype/freetype/tttables.h	/^    FT_Fixed   Font_Revision;$/;"	m	struct:TT_Header_
ForbidSIMC	src/core/settings.h	/^    bool ForbidSIMC;$/;"	m	class:Settings
FormatTime	src/ui/roomscene.cpp	/^QString ReplayerControlBar::FormatTime(int secs){$/;"	f	class:ReplayerControlBar
FormatType	include/freetype/freetype/tttables.h	/^    FT_Fixed  FormatType;$/;"	m	struct:TT_Postscript_
FrameTrust	src/breakpad/google_breakpad/processor/stack_frame.h	/^  enum FrameTrust {$/;"	g	struct:google_breakpad::StackFrame
FrameType	src/ui/photo.h	/^    enum FrameType{$/;"	g	class:Photo
FreeAssignSelf	src/core/settings.h	/^    bool FreeAssignSelf;$/;"	m	class:Settings
FreeChoose	src/client/clientstruct.h	/^    bool FreeChoose;$/;"	m	struct:ServerInfoStruct
FreeChoose	src/core/settings.h	/^    bool FreeChoose;$/;"	m	class:Settings
FreeChooseDialog	src/dialog/choosegeneraldialog.cpp	/^FreeChooseDialog::FreeChooseDialog(QWidget *parent, bool pair_choose)$/;"	f	class:FreeChooseDialog
FreeChooseDialog	src/dialog/choosegeneraldialog.h	/^class FreeChooseDialog: public QDialog{$/;"	c
FreeContext	src/breakpad/processor/minidump.cc	/^void MinidumpContext::FreeContext() {$/;"	f	class:google_breakpad::MinidumpContext
FreeDiscardSkill	src/client/aux-skills.cpp	/^FreeDiscardSkill::FreeDiscardSkill(QObject *parent)$/;"	f	class:FreeDiscardSkill
FreeDiscardSkill	src/client/aux-skills.h	/^class FreeDiscardSkill: public ViewAsSkill{$/;"	c
FreeMemory	src/breakpad/processor/minidump.cc	/^void MinidumpMemoryRegion::FreeMemory() {$/;"	f	class:google_breakpad::MinidumpMemoryRegion
FreeSymbolData	src/breakpad/processor/exploitability_unittest.cc	/^  virtual void FreeSymbolData(const CodeModule *module) { }$/;"	f	class:__anon74::TestSymbolSupplier
FreeSymbolData	src/breakpad/processor/minidump_processor_unittest.cc	/^void TestSymbolSupplier::FreeSymbolData(const CodeModule *module) {$/;"	f	class:__anon77::TestSymbolSupplier
FreeSymbolData	src/breakpad/processor/simple_symbol_supplier.cc	/^void SimpleSymbolSupplier::FreeSymbolData(const CodeModule *module) {$/;"	f	class:google_breakpad::SimpleSymbolSupplier
Frequency	src/core/skill.h	/^    enum Frequency{$/;"	g	class:Skill
Frequent	src/core/skill.h	/^        Frequent,$/;"	e	enum:Skill::Frequency
Friend	src/server/ai.h	/^    enum Relation { Friend, Enemy, Neutrality };$/;"	e	enum:AI::Relation
Fuhun	src/package/yjcm2012-package.cpp	/^    Fuhun():PhaseChangeSkill("fuhun"){$/;"	f	class:Fuhun
Fuhun	src/package/yjcm2012-package.cpp	/^class Fuhun: public PhaseChangeSkill{$/;"	c	file:
Fuli	src/package/yjcm2012-package.cpp	/^    Fuli():TriggerSkill("fuli"){$/;"	f	class:Fuli
Fuli	src/package/yjcm2012-package.cpp	/^class Fuli: public TriggerSkill{$/;"	c	file:
FuncState	src/lua/lparser.h	/^typedef struct FuncState {$/;"	s
FuncState	src/lua/lparser.h	/^} FuncState;$/;"	t	typeref:struct:FuncState
Function	src/breakpad/processor/basic_source_line_resolver_types.h	/^  Function(const string &function_name,$/;"	f	struct:google_breakpad::BasicSourceLineResolver::Function
Function	src/breakpad/processor/basic_source_line_resolver_types.h	/^BasicSourceLineResolver::Function : public SourceLineResolverBase::Function {$/;"	s	class:google_breakpad::BasicSourceLineResolver
Function	src/breakpad/processor/fast_source_line_resolver_types.h	/^struct FastSourceLineResolver::Function :$/;"	s	class:google_breakpad::FastSourceLineResolver
Function	src/breakpad/processor/module_serializer.h	/^  typedef BasicSourceLineResolver::Function Function;$/;"	t	class:google_breakpad::ModuleSerializer
Function	src/breakpad/processor/simple_serializer-inl.h	/^  typedef BasicSourceLineResolver::Function Function;$/;"	t	class:google_breakpad::SimpleSerializer
Function	src/breakpad/processor/source_line_resolver_base_types.h	/^  Function() { }$/;"	f	struct:google_breakpad::SourceLineResolverBase::Function
Function	src/breakpad/processor/source_line_resolver_base_types.h	/^  Function(const string &function_name,$/;"	f	struct:google_breakpad::SourceLineResolverBase::Function
Function	src/breakpad/processor/source_line_resolver_base_types.h	/^struct SourceLineResolverBase::Function {$/;"	s	class:google_breakpad::SourceLineResolverBase
Fuzuo	src/package/wisdompackage.cpp	/^    Fuzuo():TriggerSkill("fuzuo"){$/;"	f	class:Fuzuo
Fuzuo	src/package/wisdompackage.cpp	/^class Fuzuo: public TriggerSkill{$/;"	c	file:
G	src/lua/lstate.h	130;"	d
GAMERULE_H	src/server/gamerule.h	2;"	d
GCC_HASCLASSVISIBILITY	swig/sanguosha_wrap.cxx	108;"	d	file:
GCFINALIZECOST	src/lua/lgc.c	29;"	d	file:
GCObject	src/lua/lobject.h	/^typedef union GCObject GCObject;$/;"	t	typeref:union:GCObject
GCObject	src/lua/lstate.h	/^union GCObject {$/;"	u
GCSTEPSIZE	src/lua/lgc.c	26;"	d	file:
GCSWEEPCOST	src/lua/lgc.c	28;"	d	file:
GCSWEEPMAX	src/lua/lgc.c	27;"	d	file:
GCSfinalize	src/lua/lgc.h	21;"	d
GCSpause	src/lua/lgc.h	17;"	d
GCSpropagate	src/lua/lgc.h	18;"	d
GCSsweep	src/lua/lgc.h	20;"	d
GCSsweepstring	src/lua/lgc.h	19;"	d
GCTM	src/lua/lgc.c	/^static void GCTM (lua_State *L) {$/;"	f	file:
GCheader	src/lua/lobject.h	/^typedef struct GCheader {$/;"	s
GCheader	src/lua/lobject.h	/^} GCheader;$/;"	t	typeref:struct:GCheader
GCthreshold	src/lua/lstate.h	/^  lu_mem GCthreshold;$/;"	m	struct:global_State
GENERALOVERVIEW_H	src/dialog/generaloverview.h	2;"	d
GENERALSELECTOR_H	src/server/generalselector.h	2;"	d
GENERAL_H	src/core/general.h	2;"	d
GETARG_A	src/lua/lopcodes.h	84;"	d
GETARG_B	src/lua/lopcodes.h	88;"	d
GETARG_Bx	src/lua/lopcodes.h	96;"	d
GETARG_C	src/lua/lopcodes.h	92;"	d
GETARG_sBx	src/lua/lopcodes.h	100;"	d
GET_OPCODE	src/lua/lopcodes.h	80;"	d
GOD_H	src/package/god.h	2;"	d
GOOGLE_BREAKPAD_COMMON_BREAKPAD_TYPES_H__	src/breakpad/google_breakpad/common/breakpad_types.h	41;"	d
GOOGLE_BREAKPAD_COMMON_MINIDUMP_CPU_AMD64_H__	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	74;"	d
GOOGLE_BREAKPAD_COMMON_MINIDUMP_CPU_ARM_H__	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	67;"	d
GOOGLE_BREAKPAD_COMMON_MINIDUMP_CPU_PPC64_H__	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	79;"	d
GOOGLE_BREAKPAD_COMMON_MINIDUMP_CPU_PPC_H__	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	79;"	d
GOOGLE_BREAKPAD_COMMON_MINIDUMP_CPU_SPARC_H__	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	78;"	d
GOOGLE_BREAKPAD_COMMON_MINIDUMP_CPU_X86_H__	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	73;"	d
GOOGLE_BREAKPAD_COMMON_MINIDUMP_EXCEPTION_LINUX_H__	src/breakpad/google_breakpad/common/minidump_exception_linux.h	40;"	d
GOOGLE_BREAKPAD_COMMON_MINIDUMP_EXCEPTION_MAC_H__	src/breakpad/google_breakpad/common/minidump_exception_mac.h	40;"	d
GOOGLE_BREAKPAD_COMMON_MINIDUMP_EXCEPTION_SOLARIS_H__	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	40;"	d
GOOGLE_BREAKPAD_COMMON_MINIDUMP_EXCEPTION_WIN32_H__	src/breakpad/google_breakpad/common/minidump_exception_win32.h	40;"	d
GOOGLE_BREAKPAD_COMMON_MINIDUMP_FORMAT_H__	src/breakpad/google_breakpad/common/minidump_format.h	62;"	d
GOOGLE_BREAKPAD_COMMON_MINIDUMP_SIZE_H__	src/breakpad/google_breakpad/common/minidump_size.h	36;"	d
GOOGLE_BREAKPAD_PROCESSOR_BASIC_SOURCE_LINE_RESOLVER_H__	src/breakpad/google_breakpad/processor/basic_source_line_resolver.h	39;"	d
GOOGLE_BREAKPAD_PROCESSOR_BINARYSTREAM_H_	src/breakpad/processor/binarystream.h	35;"	d
GOOGLE_BREAKPAD_PROCESSOR_CALL_STACK_H__	src/breakpad/google_breakpad/processor/call_stack.h	46;"	d
GOOGLE_BREAKPAD_PROCESSOR_CODE_MODULES_H__	src/breakpad/google_breakpad/processor/code_modules.h	36;"	d
GOOGLE_BREAKPAD_PROCESSOR_CODE_MODULE_H__	src/breakpad/google_breakpad/processor/code_module.h	36;"	d
GOOGLE_BREAKPAD_PROCESSOR_DISASSEMBLER_X86_H_	src/breakpad/processor/disassembler_x86.h	37;"	d
GOOGLE_BREAKPAD_PROCESSOR_EXPLOITABILITY_H_	src/breakpad/google_breakpad/processor/exploitability.h	41;"	d
GOOGLE_BREAKPAD_PROCESSOR_EXPLOITABILITY_WIN_H_	src/breakpad/processor/exploitability_win.h	38;"	d
GOOGLE_BREAKPAD_PROCESSOR_FAST_SOURCE_LINE_RESOLVER_H__	src/breakpad/google_breakpad/processor/fast_source_line_resolver.h	46;"	d
GOOGLE_BREAKPAD_PROCESSOR_MEMORY_REGION_H__	src/breakpad/google_breakpad/processor/memory_region.h	39;"	d
GOOGLE_BREAKPAD_PROCESSOR_MINIDUMP_H__	src/breakpad/google_breakpad/processor/minidump.h	80;"	d
GOOGLE_BREAKPAD_PROCESSOR_MINIDUMP_PROCESSOR_H__	src/breakpad/google_breakpad/processor/minidump_processor.h	31;"	d
GOOGLE_BREAKPAD_PROCESSOR_PROCESS_STATE_H__	src/breakpad/google_breakpad/processor/process_state.h	35;"	d
GOOGLE_BREAKPAD_PROCESSOR_SOURCE_LINE_RESOLVER_BASE_H__	src/breakpad/google_breakpad/processor/source_line_resolver_base.h	42;"	d
GOOGLE_BREAKPAD_PROCESSOR_SOURCE_LINE_RESOLVER_INTERFACE_H__	src/breakpad/google_breakpad/processor/source_line_resolver_interface.h	35;"	d
GOOGLE_BREAKPAD_PROCESSOR_STACKWALKER_H__	src/breakpad/google_breakpad/processor/stackwalker.h	42;"	d
GOOGLE_BREAKPAD_PROCESSOR_STACK_FRAME_CPU_H__	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	42;"	d
GOOGLE_BREAKPAD_PROCESSOR_STACK_FRAME_H__	src/breakpad/google_breakpad/processor/stack_frame.h	31;"	d
GOOGLE_BREAKPAD_PROCESSOR_SYMBOL_SUPPLIER_H__	src/breakpad/google_breakpad/processor/symbol_supplier.h	34;"	d
GOOGLE_BREAKPAD_PROCESSOR_SYSTEM_INFO_H__	src/breakpad/google_breakpad/processor/system_info.h	36;"	d
GOOGLE_BREAKPAD_PROCESSOR_TOKENIZE_H_	src/breakpad/processor/tokenize.h	33;"	d
GUANDUSCENARIO_H	src/scenario/guandu-scenario.h	2;"	d
GUIDString	src/breakpad/common/windows/guid_string.h	/^class GUIDString {$/;"	c	namespace:google_breakpad
GUIDToSymbolServerWString	src/breakpad/common/windows/guid_string.cc	/^wstring GUIDString::GUIDToSymbolServerWString(GUID *guid) {$/;"	f	class:google_breakpad::GUIDString
GUIDToWString	src/breakpad/common/windows/guid_string.cc	/^wstring GUIDString::GUIDToWString(GUID *guid) {$/;"	f	class:google_breakpad::GUIDString
GX_Blend	include/freetype/freetype/internal/tttypes.h	/^  typedef struct GX_BlendRec_  *GX_Blend;$/;"	t	typeref:struct:GX_BlendRec_
G_COMMON_LAYOUT	src/ui/SkinBank.h	412;"	d
G_DASHBOARD_LAYOUT	src/ui/SkinBank.h	409;"	d
G_PHOTO_LAYOUT	src/ui/SkinBank.h	411;"	d
G_ROOM_LAYOUT	src/ui/SkinBank.h	410;"	d
G_ROOM_SKIN	src/ui/SkinBank.h	408;"	d
GaleShell	src/package/joypackage.cpp	/^GaleShell::GaleShell(Suit suit, int number) :Armor(suit, number){$/;"	f	class:GaleShell
GaleShell	src/package/joypackage.h	/^class GaleShell:public Armor{$/;"	c
GaleShellSkill	src/package/joypackage.cpp	/^    GaleShellSkill():ArmorSkill("GaleShell"){$/;"	f	class:GaleShellSkill
GaleShellSkill	src/package/joypackage.cpp	/^class GaleShellSkill: public ArmorSkill{$/;"	c	file:
Game3v3Camp	src/core/protocol.h	/^    enum Game3v3Camp$/;"	g	namespace:QSanProtocol
Game3v3ChooseOrderCommand	src/core/protocol.h	/^    enum Game3v3ChooseOrderCommand$/;"	g	namespace:QSanProtocol
GameEventType	src/core/protocol.h	/^    enum GameEventType$/;"	g	namespace:QSanProtocol
GameFinished	src/core/structs.h	/^    GameFinished,$/;"	e	enum:TriggerEvent
GameMode	src/client/clientstruct.h	/^    QString GameMode;$/;"	m	struct:ServerInfoStruct
GameMode	src/core/settings.h	/^    QString GameMode;$/;"	m	class:Settings
GameOverJudge	src/core/structs.h	/^    GameOverJudge,$/;"	e	enum:TriggerEvent
GameRule	src/server/gamerule.cpp	/^GameRule::GameRule(QObject *)$/;"	f	class:GameRule
GameRule	src/server/gamerule.h	/^class GameRule : public TriggerSkill{$/;"	c
GameStart	src/core/structs.h	/^    GameStart,$/;"	e	enum:TriggerEvent
GameStartSkill	src/core/skill.cpp	/^GameStartSkill::GameStartSkill(const QString &name)$/;"	f	class:GameStartSkill
GameStartSkill	src/core/skill.h	/^class GameStartSkill: public TriggerSkill{$/;"	c
Ganglie	src/package/standard-generals.cpp	/^    Ganglie():MasochismSkill("ganglie"){$/;"	f	class:Ganglie
Ganglie	src/package/standard-generals.cpp	/^class Ganglie:public MasochismSkill{$/;"	c	file:
Ganlu	src/package/yjcm-package.cpp	/^    Ganlu():ZeroCardViewAsSkill("ganlu"){$/;"	f	class:Ganlu
Ganlu	src/package/yjcm-package.cpp	/^class Ganlu: public ZeroCardViewAsSkill{$/;"	c	file:
GanluCard	src/package/yjcm-package.cpp	/^GanluCard::GanluCard(){$/;"	f	class:GanluCard
GanluCard	src/package/yjcm-package.h	/^class GanluCard: public SkillCard{$/;"	c
Ganran	src/scenario/zombie-mode-scenario.cpp	/^    Ganran():FilterSkill("ganran"){$/;"	f	class:Ganran
Ganran	src/scenario/zombie-mode-scenario.cpp	/^class Ganran: public FilterSkill{$/;"	c	file:
GanranEquip	src/scenario/zombie-mode-scenario.cpp	/^GanranEquip::GanranEquip(Card::Suit suit, int number)$/;"	f	class:GanranEquip
GanranEquip	src/scenario/zombie-mode-scenario.h	/^class GanranEquip: public IronChain{$/;"	c
Gender	src/core/general.h	/^    enum Gender {Male, Female, Neuter};$/;"	g	class:General
General	src/core/general.cpp	/^General::General(Package *package, const QString &name, const QString &kingdom, int max_hp, bool male, bool hidden, bool never_shown)$/;"	f	class:General
General	src/core/general.h	/^class General : public QObject$/;"	c
GeneralAssignDialog	src/dialog/customassigndialog.cpp	/^GeneralAssignDialog::GeneralAssignDialog(QWidget *parent, bool can_ban)$/;"	f	class:GeneralAssignDialog
GeneralAssignDialog	src/dialog/customassigndialog.h	/^class GeneralAssignDialog: public QDialog{$/;"	c
GeneralIconSize	src/ui/SkinBank.h	/^    enum GeneralIconSize$/;"	g	class:QSanRoomSkin
GeneralOverview	src/dialog/generaloverview.cpp	/^GeneralOverview::GeneralOverview(QWidget *parent) :$/;"	f	class:GeneralOverview
GeneralOverview	src/dialog/generaloverview.h	/^class GeneralOverview : public QDialog {$/;"	c
GeneralPack	src/package/package.h	/^        GeneralPack,$/;"	e	enum:Package::Type
GeneralSelector	src/server/generalselector.cpp	/^GeneralSelector::GeneralSelector()$/;"	f	class:GeneralSelector
GeneralSelector	src/server/generalselector.h	/^class GeneralSelector: public QObject{$/;"	c
GenerateDump	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^bool CrashGenerationServer::GenerateDump(const ClientInfo& client,$/;"	f	class:google_breakpad::CrashGenerationServer
GenerateDumpFilePath	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^bool MinidumpGenerator::GenerateDumpFilePath(wstring* file_path) {$/;"	f	class:google_breakpad::MinidumpGenerator
GenerateMultipartBoundary	src/breakpad/common/windows/http_upload.cc	/^wstring HTTPUpload::GenerateMultipartBoundary() {$/;"	f	class:google_breakpad::HTTPUpload
GenerateRequestBody	src/breakpad/common/windows/http_upload.cc	/^bool HTTPUpload::GenerateRequestBody(const map<wstring, wstring> &parameters,$/;"	f	class:google_breakpad::HTTPUpload
GenerateRequestHeader	src/breakpad/common/windows/http_upload.cc	/^wstring HTTPUpload::GenerateRequestHeader(const wstring &boundary) {$/;"	f	class:google_breakpad::HTTPUpload
GenericCardContainer	src/ui/GenericCardContainerUI.h	/^    inline GenericCardContainer() { _m_highestZ = 10000; }$/;"	f	class:GenericCardContainer
GenericCardContainer	src/ui/GenericCardContainerUI.h	/^class GenericCardContainer: public QGraphicsObject$/;"	c
Geometry	include/fmod/fmod.hpp	/^    class Geometry$/;"	c	namespace:FMOD
GetAssertion	src/breakpad/processor/minidump.cc	/^MinidumpAssertion* Minidump::GetAssertion() {$/;"	f	class:google_breakpad::Minidump
GetAssertion	src/breakpad/processor/minidump_processor.cc	/^string MinidumpProcessor::GetAssertion(Minidump *dump) {$/;"	f	class:google_breakpad::MinidumpProcessor
GetAvailableGenerals	src/package/mountainpackage.cpp	/^    static QStringList GetAvailableGenerals(ServerPlayer *zuoci){$/;"	f	class:Huashen
GetBase	src/breakpad/google_breakpad/processor/minidump.h	/^  u_int64_t GetBase() const { return valid_ ? memory_info_.base_address : 0; }$/;"	f	class:google_breakpad::MinidumpMemoryInfo
GetBase	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  u_int64_t GetBase() const { return 0x10000; }$/;"	f	class:__anon71::MockMemoryRegion	file:
GetBase	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  u_int64_t GetBase() const { return 0x10000; }$/;"	f	class:__anon73::MockMemoryRegion	file:
GetBase	src/breakpad/processor/minidump.cc	/^u_int64_t MinidumpMemoryRegion::GetBase() const {$/;"	f	class:google_breakpad::MinidumpMemoryRegion
GetBase	src/breakpad/processor/postfix_evaluator_unittest.cc	/^  virtual u_int64_t GetBase() const { return 0; }$/;"	f	class:__anon75::FakeMemoryRegion
GetBase	src/breakpad/processor/stackwalker_selftest.cc	/^  virtual u_int64_t GetBase() { return 0; }$/;"	f	class:SelfMemoryRegion
GetBase	src/breakpad/processor/stackwalker_unittest_utils.h	/^  u_int64_t GetBase() const { return base_address_; }$/;"	f	class:MockMemoryRegion
GetBaseName	src/breakpad/common/windows/string_utils.cc	/^wstring WindowsStringUtils::GetBaseName(const wstring &filename) {$/;"	f	class:google_breakpad::WindowsStringUtils
GetBreakpadInfo	src/breakpad/processor/minidump.cc	/^MinidumpBreakpadInfo* Minidump::GetBreakpadInfo() {$/;"	f	class:google_breakpad::Minidump
GetCPU	src/breakpad/processor/minidump.cc	/^string MinidumpSystemInfo::GetCPU() {$/;"	f	class:google_breakpad::MinidumpSystemInfo
GetCPUInfo	src/breakpad/processor/minidump_processor.cc	/^bool MinidumpProcessor::GetCPUInfo(Minidump *dump, SystemInfo *info) {$/;"	f	class:google_breakpad::MinidumpProcessor
GetCPUVendor	src/breakpad/processor/minidump.cc	/^const string* MinidumpSystemInfo::GetCPUVendor() {$/;"	f	class:google_breakpad::MinidumpSystemInfo
GetCSDVersion	src/breakpad/processor/minidump.cc	/^const string* MinidumpSystemInfo::GetCSDVersion() {$/;"	f	class:google_breakpad::MinidumpSystemInfo
GetCStringSymbolData	src/breakpad/processor/exploitability_unittest.cc	/^SymbolSupplier::SymbolResult TestSymbolSupplier::GetCStringSymbolData($/;"	f	class:__anon74::TestSymbolSupplier
GetCStringSymbolData	src/breakpad/processor/minidump_processor_unittest.cc	/^SymbolSupplier::SymbolResult TestSymbolSupplier::GetCStringSymbolData($/;"	f	class:__anon77::TestSymbolSupplier
GetCStringSymbolData	src/breakpad/processor/simple_symbol_supplier.cc	/^SymbolSupplier::SymbolResult SimpleSymbolSupplier::GetCStringSymbolData($/;"	f	class:google_breakpad::SimpleSymbolSupplier
GetCVRecord	src/breakpad/processor/minidump.cc	/^const u_int8_t* MinidumpModule::GetCVRecord(u_int32_t* size) {$/;"	f	class:google_breakpad::MinidumpModule
GetCallerByCFIFrameInfo	src/breakpad/processor/stackwalker_amd64.cc	/^StackFrameAMD64 *StackwalkerAMD64::GetCallerByCFIFrameInfo($/;"	f	class:google_breakpad::StackwalkerAMD64
GetCallerByCFIFrameInfo	src/breakpad/processor/stackwalker_arm.cc	/^StackFrameARM *StackwalkerARM::GetCallerByCFIFrameInfo($/;"	f	class:google_breakpad::StackwalkerARM
GetCallerByCFIFrameInfo	src/breakpad/processor/stackwalker_x86.cc	/^StackFrameX86 *StackwalkerX86::GetCallerByCFIFrameInfo($/;"	f	class:google_breakpad::StackwalkerX86
GetCallerByEBPAtBase	src/breakpad/processor/stackwalker_x86.cc	/^StackFrameX86 *StackwalkerX86::GetCallerByEBPAtBase($/;"	f	class:google_breakpad::StackwalkerX86
GetCallerByFramePointer	src/breakpad/processor/stackwalker_arm.cc	/^StackFrameARM *StackwalkerARM::GetCallerByFramePointer($/;"	f	class:google_breakpad::StackwalkerARM
GetCallerByStackScan	src/breakpad/processor/stackwalker_amd64.cc	/^StackFrameAMD64 *StackwalkerAMD64::GetCallerByStackScan($/;"	f	class:google_breakpad::StackwalkerAMD64
GetCallerByStackScan	src/breakpad/processor/stackwalker_arm.cc	/^StackFrameARM *StackwalkerARM::GetCallerByStackScan($/;"	f	class:google_breakpad::StackwalkerARM
GetCallerByWindowsFrameInfo	src/breakpad/processor/stackwalker_x86.cc	/^StackFrameX86 *StackwalkerX86::GetCallerByWindowsFrameInfo($/;"	f	class:google_breakpad::StackwalkerX86
GetCallerFrame	src/breakpad/processor/stackwalker_amd64.cc	/^StackFrame* StackwalkerAMD64::GetCallerFrame(const CallStack *stack) {$/;"	f	class:google_breakpad::StackwalkerAMD64
GetCallerFrame	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^class GetCallerFrame: public StackwalkerAMD64Fixture, public Test { };$/;"	c	file:
GetCallerFrame	src/breakpad/processor/stackwalker_arm.cc	/^StackFrame* StackwalkerARM::GetCallerFrame(const CallStack *stack) {$/;"	f	class:google_breakpad::StackwalkerARM
GetCallerFrame	src/breakpad/processor/stackwalker_arm_unittest.cc	/^class GetCallerFrame: public StackwalkerARMFixture, public Test { };$/;"	c	file:
GetCallerFrame	src/breakpad/processor/stackwalker_ppc.cc	/^StackFrame* StackwalkerPPC::GetCallerFrame(const CallStack *stack) {$/;"	f	class:google_breakpad::StackwalkerPPC
GetCallerFrame	src/breakpad/processor/stackwalker_sparc.cc	/^StackFrame* StackwalkerSPARC::GetCallerFrame(const CallStack *stack) {$/;"	f	class:google_breakpad::StackwalkerSPARC
GetCallerFrame	src/breakpad/processor/stackwalker_x86.cc	/^StackFrame *StackwalkerX86::GetCallerFrame(const CallStack *stack) {$/;"	f	class:google_breakpad::StackwalkerX86
GetCallerFrame	src/breakpad/processor/stackwalker_x86_unittest.cc	/^class GetCallerFrame: public StackwalkerX86Fixture, public Test { };$/;"	c	file:
GetClientExceptionInfo	src/breakpad/client/windows/crash_generation/client_info.cc	/^bool ClientInfo::GetClientExceptionInfo(EXCEPTION_POINTERS** ex_info) const {$/;"	f	class:google_breakpad::ClientInfo
GetClientThreadId	src/breakpad/client/windows/crash_generation/client_info.cc	/^bool ClientInfo::GetClientThreadId(DWORD* thread_id) const {$/;"	f	class:google_breakpad::ClientInfo
GetConfig	swig/sanguosha_wrap.cxx	/^static int GetConfig(lua_State *lua){$/;"	f	file:
GetConfigFromLuaState	src/core/engine.cpp	/^static inline QVariant GetConfigFromLuaState(lua_State *L, const char *key){$/;"	f	file:
GetContext	src/breakpad/processor/minidump.cc	/^MinidumpContext* MinidumpException::GetContext() {$/;"	f	class:google_breakpad::MinidumpException
GetContext	src/breakpad/processor/minidump.cc	/^MinidumpContext* MinidumpThread::GetContext() {$/;"	f	class:google_breakpad::MinidumpThread
GetContextAMD64	src/breakpad/processor/minidump.cc	/^const MDRawContextAMD64* MinidumpContext::GetContextAMD64() const {$/;"	f	class:google_breakpad::MinidumpContext
GetContextARM	src/breakpad/processor/minidump.cc	/^const MDRawContextARM* MinidumpContext::GetContextARM() const {$/;"	f	class:google_breakpad::MinidumpContext
GetContextCPU	src/breakpad/processor/minidump.cc	/^u_int32_t MinidumpContext::GetContextCPU() const {$/;"	f	class:google_breakpad::MinidumpContext
GetContextFrame	src/breakpad/processor/stackwalker_amd64.cc	/^StackFrame* StackwalkerAMD64::GetContextFrame() {$/;"	f	class:google_breakpad::StackwalkerAMD64
GetContextFrame	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^class GetContextFrame: public StackwalkerAMD64Fixture, public Test { };$/;"	c	file:
GetContextFrame	src/breakpad/processor/stackwalker_arm.cc	/^StackFrame* StackwalkerARM::GetContextFrame() {$/;"	f	class:google_breakpad::StackwalkerARM
GetContextFrame	src/breakpad/processor/stackwalker_arm_unittest.cc	/^class GetContextFrame: public StackwalkerARMFixture, public Test { };$/;"	c	file:
GetContextFrame	src/breakpad/processor/stackwalker_ppc.cc	/^StackFrame* StackwalkerPPC::GetContextFrame() {$/;"	f	class:google_breakpad::StackwalkerPPC
GetContextFrame	src/breakpad/processor/stackwalker_sparc.cc	/^StackFrame* StackwalkerSPARC::GetContextFrame() {$/;"	f	class:google_breakpad::StackwalkerSPARC
GetContextFrame	src/breakpad/processor/stackwalker_x86.cc	/^StackFrame *StackwalkerX86::GetContextFrame() {$/;"	f	class:google_breakpad::StackwalkerX86
GetContextFrame	src/breakpad/processor/stackwalker_x86_unittest.cc	/^class GetContextFrame: public StackwalkerX86Fixture, public Test { };$/;"	c	file:
GetContextPPC	src/breakpad/processor/minidump.cc	/^const MDRawContextPPC* MinidumpContext::GetContextPPC() const {$/;"	f	class:google_breakpad::MinidumpContext
GetContextSPARC	src/breakpad/processor/minidump.cc	/^const MDRawContextSPARC* MinidumpContext::GetContextSPARC() const {$/;"	f	class:google_breakpad::MinidumpContext
GetContextX86	src/breakpad/processor/minidump.cc	/^const MDRawContextX86* MinidumpContext::GetContextX86() const {$/;"	f	class:google_breakpad::MinidumpContext
GetCount	src/breakpad/processor/range_map-inl.h	/^int RangeMap<AddressType, EntryType>::GetCount() const {$/;"	f	class:google_breakpad::RangeMap
GetCount	src/breakpad/processor/static_range_map.h	/^  inline unsigned int GetCount() const { return map_.size(); }$/;"	f	class:google_breakpad::StaticRangeMap
GetCrashReason	src/breakpad/processor/minidump_processor.cc	/^string MinidumpProcessor::GetCrashReason(Minidump *dump, u_int64_t *address) {$/;"	f	class:google_breakpad::MinidumpProcessor
GetCreateUuid	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^MinidumpGenerator::UuidCreateType MinidumpGenerator::GetCreateUuid() {$/;"	f	class:google_breakpad::MinidumpGenerator
GetCustomInfo	src/breakpad/client/windows/crash_generation/client_info.cc	/^CustomClientInfo ClientInfo::GetCustomInfo() const {$/;"	f	class:google_breakpad::ClientInfo
GetDbghelpModule	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^HMODULE MinidumpGenerator::GetDbghelpModule() {$/;"	f	class:google_breakpad::MinidumpGenerator
GetDirectoryEntryAtIndex	src/breakpad/processor/minidump.cc	/^const MDRawDirectory* Minidump::GetDirectoryEntryAtIndex(unsigned int index)$/;"	f	class:google_breakpad::Minidump
GetDirectoryEntryCount	src/breakpad/google_breakpad/processor/minidump.h	/^  unsigned int GetDirectoryEntryCount() const {$/;"	f	class:google_breakpad::Minidump
GetDumpThreadID	src/breakpad/processor/minidump.cc	/^bool MinidumpBreakpadInfo::GetDumpThreadID(u_int32_t *thread_id) const {$/;"	f	class:google_breakpad::MinidumpBreakpadInfo
GetEBP	src/breakpad/processor/stackwalker_selftest.cc	/^static u_int32_t GetEBP() {$/;"	f	file:
GetEIP	src/breakpad/processor/stackwalker_selftest.cc	/^static u_int32_t GetEIP() {$/;"	f	file:
GetESP	src/breakpad/processor/stackwalker_selftest.cc	/^static u_int32_t GetESP() {$/;"	f	file:
GetException	src/breakpad/processor/minidump.cc	/^MinidumpException* Minidump::GetException() {$/;"	f	class:google_breakpad::Minidump
GetFP	src/breakpad/processor/stackwalker_selftest.cc	/^static u_int32_t GetFP() {$/;"	f	file:
GetFileContents	src/breakpad/common/windows/http_upload.cc	/^bool HTTPUpload::GetFileContents(const wstring &filename,$/;"	f	class:google_breakpad::HTTPUpload
GetFileNames	swig/sanguosha_wrap.cxx	/^static int GetFileNames(lua_State *lua){$/;"	f	file:
GetFrameCount	src/ui/pixmapanimation.cpp	/^int PixmapAnimation::GetFrameCount(const QString &emotion){$/;"	f	class:PixmapAnimation
GetFrameFromCache	src/ui/pixmapanimation.cpp	/^QPixmap PixmapAnimation::GetFrameFromCache(const QString &filename){$/;"	f	class:PixmapAnimation
GetFramesByFramePointer	src/breakpad/processor/stackwalker_arm_unittest.cc	/^class GetFramesByFramePointer: public StackwalkerARMFixtureIOS, public Test { };$/;"	c	file:
GetFunctionStackParamSize	src/breakpad/common/windows/pdb_source_line_writer.cc	/^int PDBSourceLineWriter::GetFunctionStackParamSize(IDiaSymbol *function) {$/;"	f	class:google_breakpad::PDBSourceLineWriter
GetKey	src/breakpad/processor/static_map_iterator.h	/^  inline const Key GetKey() const { return *GetKeyPtr(); }$/;"	f	class:google_breakpad::StaticMapIterator
GetKeyAtIndex	src/breakpad/processor/static_map-inl.h	/^const Key StaticMap<Key, Value, Compare>::GetKeyAtIndex(int index) const {$/;"	f	class:google_breakpad::StaticMap
GetKeyPtr	src/breakpad/processor/static_map_iterator-inl.h	/^const Key* StaticMapIterator<Key, Value, Compare>::GetKeyPtr() const {$/;"	f	class:google_breakpad::StaticMapIterator
GetMainModule	src/breakpad/processor/basic_code_modules.cc	/^const CodeModule* BasicCodeModules::GetMainModule() const {$/;"	f	class:google_breakpad::BasicCodeModules
GetMainModule	src/breakpad/processor/minidump.cc	/^const MinidumpModule* MinidumpModuleList::GetMainModule() const {$/;"	f	class:google_breakpad::MinidumpModuleList
GetMainModule	src/breakpad/processor/stackwalker_unittest_utils.h	/^  const CodeModule *GetMainModule() const { return modules_[0]; }$/;"	f	class:MockCodeModules
GetMemory	src/breakpad/processor/minidump.cc	/^MinidumpMemoryRegion* MinidumpThread::GetMemory() {$/;"	f	class:google_breakpad::MinidumpThread
GetMemory	src/breakpad/processor/minidump.cc	/^const u_int8_t* MinidumpMemoryRegion::GetMemory() const {$/;"	f	class:google_breakpad::MinidumpMemoryRegion
GetMemoryAtAddress	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  bool GetMemoryAtAddress(u_int64_t address, u_int16_t *value) const {$/;"	f	class:__anon71::MockMemoryRegion	file:
GetMemoryAtAddress	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  bool GetMemoryAtAddress(u_int64_t address, u_int32_t *value) const {$/;"	f	class:__anon71::MockMemoryRegion	file:
GetMemoryAtAddress	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  bool GetMemoryAtAddress(u_int64_t address, u_int64_t *value) const {$/;"	f	class:__anon71::MockMemoryRegion	file:
GetMemoryAtAddress	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  bool GetMemoryAtAddress(u_int64_t address, u_int8_t *value) const {$/;"	f	class:__anon71::MockMemoryRegion	file:
GetMemoryAtAddress	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  bool GetMemoryAtAddress(u_int64_t address, u_int16_t *value) const {$/;"	f	class:__anon73::MockMemoryRegion	file:
GetMemoryAtAddress	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  bool GetMemoryAtAddress(u_int64_t address, u_int32_t *value) const {$/;"	f	class:__anon73::MockMemoryRegion	file:
GetMemoryAtAddress	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  bool GetMemoryAtAddress(u_int64_t address, u_int64_t *value) const {$/;"	f	class:__anon73::MockMemoryRegion	file:
GetMemoryAtAddress	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  bool GetMemoryAtAddress(u_int64_t address, u_int8_t *value) const {$/;"	f	class:__anon73::MockMemoryRegion	file:
GetMemoryAtAddress	src/breakpad/processor/minidump.cc	/^bool MinidumpMemoryRegion::GetMemoryAtAddress(u_int64_t  address,$/;"	f	class:google_breakpad::MinidumpMemoryRegion
GetMemoryAtAddress	src/breakpad/processor/postfix_evaluator_unittest.cc	/^  virtual bool GetMemoryAtAddress(u_int64_t address, u_int16_t *value) const {$/;"	f	class:__anon75::FakeMemoryRegion
GetMemoryAtAddress	src/breakpad/processor/postfix_evaluator_unittest.cc	/^  virtual bool GetMemoryAtAddress(u_int64_t address, u_int32_t *value) const {$/;"	f	class:__anon75::FakeMemoryRegion
GetMemoryAtAddress	src/breakpad/processor/postfix_evaluator_unittest.cc	/^  virtual bool GetMemoryAtAddress(u_int64_t address, u_int64_t *value) const {$/;"	f	class:__anon75::FakeMemoryRegion
GetMemoryAtAddress	src/breakpad/processor/postfix_evaluator_unittest.cc	/^  virtual bool GetMemoryAtAddress(u_int64_t address, u_int8_t  *value) const {$/;"	f	class:__anon75::FakeMemoryRegion
GetMemoryAtAddress	src/breakpad/processor/stackwalker_selftest.cc	/^  bool GetMemoryAtAddress(u_int64_t address, u_int16_t* value) {$/;"	f	class:SelfMemoryRegion
GetMemoryAtAddress	src/breakpad/processor/stackwalker_selftest.cc	/^  bool GetMemoryAtAddress(u_int64_t address, u_int32_t* value) {$/;"	f	class:SelfMemoryRegion
GetMemoryAtAddress	src/breakpad/processor/stackwalker_selftest.cc	/^  bool GetMemoryAtAddress(u_int64_t address, u_int64_t* value) {$/;"	f	class:SelfMemoryRegion
GetMemoryAtAddress	src/breakpad/processor/stackwalker_selftest.cc	/^  bool GetMemoryAtAddress(u_int64_t address, u_int8_t*  value) {$/;"	f	class:SelfMemoryRegion
GetMemoryAtAddress	src/breakpad/processor/stackwalker_unittest_utils.h	/^  bool GetMemoryAtAddress(u_int64_t address, u_int16_t *value) const {$/;"	f	class:MockMemoryRegion
GetMemoryAtAddress	src/breakpad/processor/stackwalker_unittest_utils.h	/^  bool GetMemoryAtAddress(u_int64_t address, u_int32_t *value) const {$/;"	f	class:MockMemoryRegion
GetMemoryAtAddress	src/breakpad/processor/stackwalker_unittest_utils.h	/^  bool GetMemoryAtAddress(u_int64_t address, u_int64_t *value) const {$/;"	f	class:MockMemoryRegion
GetMemoryAtAddress	src/breakpad/processor/stackwalker_unittest_utils.h	/^  bool GetMemoryAtAddress(u_int64_t address, u_int8_t  *value) const {$/;"	f	class:MockMemoryRegion
GetMemoryAtAddressInternal	src/breakpad/processor/minidump.cc	/^bool MinidumpMemoryRegion::GetMemoryAtAddressInternal(u_int64_t address,$/;"	f	class:google_breakpad::MinidumpMemoryRegion
GetMemoryAtAddressInternal	src/breakpad/processor/stackwalker_selftest.cc	/^  template<typename T> bool GetMemoryAtAddressInternal(u_int64_t address,$/;"	f	class:SelfMemoryRegion	file:
GetMemoryInfoAtIndex	src/breakpad/processor/minidump.cc	/^const MinidumpMemoryInfo* MinidumpMemoryInfoList::GetMemoryInfoAtIndex($/;"	f	class:google_breakpad::MinidumpMemoryInfoList
GetMemoryInfoForAddress	src/breakpad/processor/minidump.cc	/^const MinidumpMemoryInfo* MinidumpMemoryInfoList::GetMemoryInfoForAddress($/;"	f	class:google_breakpad::MinidumpMemoryInfoList
GetMemoryInfoList	src/breakpad/processor/minidump.cc	/^MinidumpMemoryInfoList* Minidump::GetMemoryInfoList() {$/;"	f	class:google_breakpad::Minidump
GetMemoryList	src/breakpad/processor/minidump.cc	/^MinidumpMemoryList* Minidump::GetMemoryList() {$/;"	f	class:google_breakpad::Minidump
GetMemoryLittleEndian	src/breakpad/processor/stackwalker_unittest_utils.h	/^  bool GetMemoryLittleEndian(u_int64_t address, ValueType *value) const {$/;"	f	class:MockMemoryRegion
GetMemoryRegionAtIndex	src/breakpad/processor/minidump.cc	/^MinidumpMemoryRegion* MinidumpMemoryList::GetMemoryRegionAtIndex($/;"	f	class:google_breakpad::MinidumpMemoryList
GetMemoryRegionForAddress	src/breakpad/processor/minidump.cc	/^MinidumpMemoryRegion* MinidumpMemoryList::GetMemoryRegionForAddress($/;"	f	class:google_breakpad::MinidumpMemoryList
GetMiscInfo	src/breakpad/processor/minidump.cc	/^MinidumpMiscInfo* Minidump::GetMiscInfo() {$/;"	f	class:google_breakpad::Minidump
GetMiscRecord	src/breakpad/processor/minidump.cc	/^const MDImageDebugMisc* MinidumpModule::GetMiscRecord(u_int32_t* size) {$/;"	f	class:google_breakpad::MinidumpModule
GetModuleAtIndex	src/breakpad/processor/basic_code_modules.cc	/^const CodeModule* BasicCodeModules::GetModuleAtIndex($/;"	f	class:google_breakpad::BasicCodeModules
GetModuleAtIndex	src/breakpad/processor/minidump.cc	/^const MinidumpModule* MinidumpModuleList::GetModuleAtIndex($/;"	f	class:google_breakpad::MinidumpModuleList
GetModuleAtIndex	src/breakpad/processor/stackwalker_unittest_utils.h	/^  const CodeModule *GetModuleAtIndex(unsigned int index) const {$/;"	f	class:MockCodeModules
GetModuleAtSequence	src/breakpad/processor/basic_code_modules.cc	/^const CodeModule* BasicCodeModules::GetModuleAtSequence($/;"	f	class:google_breakpad::BasicCodeModules
GetModuleAtSequence	src/breakpad/processor/minidump.cc	/^const MinidumpModule* MinidumpModuleList::GetModuleAtSequence($/;"	f	class:google_breakpad::MinidumpModuleList
GetModuleAtSequence	src/breakpad/processor/stackwalker_unittest_utils.h	/^  const CodeModule *GetModuleAtSequence(unsigned int sequence) const {$/;"	f	class:MockCodeModules
GetModuleForAddress	src/breakpad/processor/basic_code_modules.cc	/^const CodeModule* BasicCodeModules::GetModuleForAddress($/;"	f	class:google_breakpad::BasicCodeModules
GetModuleForAddress	src/breakpad/processor/minidump.cc	/^const MinidumpModule* MinidumpModuleList::GetModuleForAddress($/;"	f	class:google_breakpad::MinidumpModuleList
GetModuleForAddress	src/breakpad/processor/stackwalker_unittest_utils.h	/^  const CodeModule *GetModuleForAddress(u_int64_t address) const {$/;"	f	class:MockCodeModules
GetModuleInfo	src/breakpad/common/windows/pdb_source_line_writer.cc	/^bool PDBSourceLineWriter::GetModuleInfo(PDBModuleInfo *info) {$/;"	f	class:google_breakpad::PDBSourceLineWriter
GetModuleList	src/breakpad/processor/minidump.cc	/^MinidumpModuleList* Minidump::GetModuleList() {$/;"	f	class:google_breakpad::Minidump
GetOS	src/breakpad/processor/minidump.cc	/^string MinidumpSystemInfo::GetOS() {$/;"	f	class:google_breakpad::MinidumpSystemInfo
GetOSInfo	src/breakpad/processor/minidump_processor.cc	/^bool MinidumpProcessor::GetOSInfo(Minidump *dump, SystemInfo *info) {$/;"	f	class:google_breakpad::MinidumpProcessor
GetPC	src/breakpad/processor/stackwalker_selftest.cc	/^static u_int32_t GetPC() {$/;"	f	file:
GetPEInfo	src/breakpad/common/windows/pdb_source_line_writer.cc	/^bool PDBSourceLineWriter::GetPEInfo(PEModuleInfo *info) {$/;"	f	class:google_breakpad::PDBSourceLineWriter
GetPixmapAnimation	src/ui/pixmapanimation.cpp	/^PixmapAnimation* PixmapAnimation::GetPixmapAnimation(QGraphicsItem *parent, const QString &emotion)$/;"	f	class:PixmapAnimation
GetProperty	swig/sanguosha_wrap.cxx	/^static int GetProperty(lua_State *lua){$/;"	f	file:
GetRealFileID	src/breakpad/common/windows/pdb_source_line_writer.h	/^  DWORD GetRealFileID(DWORD id) {$/;"	f	class:google_breakpad::PDBSourceLineWriter
GetRelation	src/server/ai.cpp	/^AI::Relation AI::GetRelation(const ServerPlayer *a, const ServerPlayer *b){$/;"	f	class:AI
GetRelation3v3	src/server/ai.cpp	/^AI::Relation AI::GetRelation3v3(const ServerPlayer *a, const ServerPlayer *b){$/;"	f	class:AI
GetRelationHegemony	src/server/ai.cpp	/^AI::Relation AI::GetRelationHegemony(const ServerPlayer *a, const ServerPlayer *b){$/;"	f	class:AI
GetRequestingThreadID	src/breakpad/processor/minidump.cc	/^bool MinidumpBreakpadInfo::GetRequestingThreadID(u_int32_t *thread_id)$/;"	f	class:google_breakpad::MinidumpBreakpadInfo
GetRpcrt4Module	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^HMODULE MinidumpGenerator::GetRpcrt4Module() {$/;"	f	class:google_breakpad::MinidumpGenerator
GetSP	src/breakpad/processor/stackwalker_selftest.cc	/^static u_int32_t GetSP() {$/;"	f	file:
GetSize	src/breakpad/google_breakpad/processor/minidump.h	/^  u_int32_t GetSize() const { return valid_ ? memory_info_.region_size : 0; }$/;"	f	class:google_breakpad::MinidumpMemoryInfo
GetSize	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  u_int32_t GetSize() const { return 0x01000; }$/;"	f	class:__anon71::MockMemoryRegion	file:
GetSize	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  u_int32_t GetSize() const { return 0x01000; }$/;"	f	class:__anon73::MockMemoryRegion	file:
GetSize	src/breakpad/processor/minidump.cc	/^u_int32_t MinidumpMemoryRegion::GetSize() const {$/;"	f	class:google_breakpad::MinidumpMemoryRegion
GetSize	src/breakpad/processor/postfix_evaluator_unittest.cc	/^  virtual u_int32_t GetSize() const { return 0; }$/;"	f	class:__anon75::FakeMemoryRegion
GetSize	src/breakpad/processor/stackwalker_selftest.cc	/^  virtual u_int32_t GetSize() { return 0xffffffff; }$/;"	f	class:SelfMemoryRegion
GetSize	src/breakpad/processor/stackwalker_unittest_utils.h	/^  u_int32_t GetSize() const { return contents_.size(); }$/;"	f	class:MockMemoryRegion
GetStream	src/breakpad/processor/minidump.cc	/^T* Minidump::GetStream(T** stream) {$/;"	f	class:google_breakpad::Minidump
GetSymbolFile	src/breakpad/processor/exploitability_unittest.cc	/^SymbolSupplier::SymbolResult TestSymbolSupplier::GetSymbolFile($/;"	f	class:__anon74::TestSymbolSupplier
GetSymbolFile	src/breakpad/processor/minidump_processor_unittest.cc	/^SymbolSupplier::SymbolResult TestSymbolSupplier::GetSymbolFile($/;"	f	class:__anon77::TestSymbolSupplier
GetSymbolFile	src/breakpad/processor/simple_symbol_supplier.cc	/^SymbolSupplier::SymbolResult SimpleSymbolSupplier::GetSymbolFile($/;"	f	class:google_breakpad::SimpleSymbolSupplier
GetSymbolFileAtPathFromRoot	src/breakpad/processor/simple_symbol_supplier.cc	/^SymbolSupplier::SymbolResult SimpleSymbolSupplier::GetSymbolFileAtPathFromRoot($/;"	f	class:google_breakpad::SimpleSymbolSupplier
GetSymbolFunctionName	src/breakpad/common/windows/pdb_source_line_writer.cc	/^bool PDBSourceLineWriter::GetSymbolFunctionName(IDiaSymbol *function,$/;"	f	class:google_breakpad::PDBSourceLineWriter
GetSystemInfo	src/breakpad/processor/minidump.cc	/^MinidumpSystemInfo* Minidump::GetSystemInfo() {$/;"	f	class:google_breakpad::Minidump
GetSystemInfo	src/breakpad/processor/minidump_processor.cc	/^static const MDRawSystemInfo* GetSystemInfo(Minidump *dump,$/;"	f	namespace:google_breakpad
GetThreadAtIndex	src/breakpad/processor/minidump.cc	/^MinidumpThread* MinidumpThreadList::GetThreadAtIndex(unsigned int index)$/;"	f	class:google_breakpad::MinidumpThreadList
GetThreadByID	src/breakpad/processor/minidump.cc	/^MinidumpThread* MinidumpThreadList::GetThreadByID(u_int32_t thread_id) {$/;"	f	class:google_breakpad::MinidumpThreadList
GetThreadID	src/breakpad/processor/minidump.cc	/^bool MinidumpException::GetThreadID(u_int32_t *thread_id) const {$/;"	f	class:google_breakpad::MinidumpException
GetThreadID	src/breakpad/processor/minidump.cc	/^bool MinidumpThread::GetThreadID(u_int32_t *thread_id) const {$/;"	f	class:google_breakpad::MinidumpThread
GetThreadList	src/breakpad/processor/minidump.cc	/^MinidumpThreadList* Minidump::GetThreadList() {$/;"	f	class:google_breakpad::Minidump
GetUserStream	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^bool HandleTraceData::GetUserStream(MINIDUMP_USER_STREAM* user_stream) {$/;"	f	class:__anon67::HandleTraceData
GetValueFromLuaState	src/core/util.cpp	/^QVariant GetValueFromLuaState(lua_State *L, const char *table_name, const char *key){$/;"	f
GetValuePtr	src/breakpad/processor/static_map_iterator.h	/^  inline const Value* GetValuePtr() const {$/;"	f	class:google_breakpad::StaticMapIterator
GetValueRawPtr	src/breakpad/processor/static_map_iterator-inl.h	/^const char* StaticMapIterator<Key, Value, Compare>::GetValueRawPtr() const {$/;"	f	class:google_breakpad::StaticMapIterator
GetWriteDump	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^MinidumpGenerator::MiniDumpWriteDumpType MinidumpGenerator::GetWriteDump() {$/;"	f	class:google_breakpad::MinidumpGenerator
GlobalEffect	src/package/standard.h	/^    Q_INVOKABLE GlobalEffect(Card::Suit suit, int number):TrickCard(suit, number, false){ target_fixed = true;}$/;"	f	class:GlobalEffect
GlobalEffect	src/package/standard.h	/^class GlobalEffect:public TrickCard{$/;"	c
Glyph_Data_Format	include/freetype/freetype/tttables.h	/^    FT_Short   Glyph_Data_Format;$/;"	m	struct:TT_Header_
GodPackage	src/package/god.cpp	/^GodPackage::GodPackage()$/;"	f	class:GodPackage
GodPackage	src/package/god.h	/^class GodPackage : public Package{$/;"	c
GodSalvation	src/package/standard-cards.cpp	/^GodSalvation::GodSalvation(Suit suit, int number)$/;"	f	class:GodSalvation
GodSalvation	src/package/standard.h	/^class GodSalvation:public GlobalEffect{$/;"	c
Gongmou	src/package/yitianpackage.cpp	/^    Gongmou():PhaseChangeSkill("gongmou"){$/;"	f	class:Gongmou
Gongmou	src/package/yitianpackage.cpp	/^class Gongmou: public PhaseChangeSkill{$/;"	c	file:
GongmouExchange	src/package/yitianpackage.cpp	/^    GongmouExchange():PhaseChangeSkill("#gongmou-exchange"){$/;"	f	class:GongmouExchange
GongmouExchange	src/package/yitianpackage.cpp	/^class GongmouExchange:public PhaseChangeSkill{$/;"	c	file:
Gongqi	src/package/yjcm2012-package.cpp	/^    Gongqi():OneCardViewAsSkill("gongqi"){$/;"	f	class:Gongqi
Gongqi	src/package/yjcm2012-package.cpp	/^class Gongqi : public OneCardViewAsSkill{$/;"	c	file:
Gongxin	src/package/god.cpp	/^    Gongxin():ZeroCardViewAsSkill("gongxin"){$/;"	f	class:Gongxin
Gongxin	src/package/god.cpp	/^class Gongxin: public ZeroCardViewAsSkill{$/;"	c	file:
GongxinCard	src/package/god.cpp	/^GongxinCard::GongxinCard(){$/;"	f	class:GongxinCard
GongxinCard	src/package/god.h	/^class GongxinCard: public SkillCard{$/;"	c
GrabPeach	src/package/joypackage.cpp	/^    GrabPeach():TriggerSkill("grab_peach"){$/;"	f	class:GrabPeach
GrabPeach	src/package/joypackage.cpp	/^class GrabPeach: public TriggerSkill{$/;"	c	file:
GreatYeyanCard	src/package/god.cpp	/^GreatYeyanCard::GreatYeyanCard(){$/;"	f	class:GreatYeyanCard
GreatYeyanCard	src/package/god.h	/^class GreatYeyanCard: public YeyanCard{$/;"	c
GreatYiji	src/scenario/guandu-scenario.cpp	/^    GreatYiji():MasochismSkill("greatyiji"){$/;"	f	class:GreatYiji
GreatYiji	src/scenario/guandu-scenario.cpp	/^class GreatYiji: public MasochismSkill{$/;"	c	file:
Guagu	src/scenario/fancheng-scenario.cpp	/^    Guagu():TriggerSkill("guagu"){$/;"	f	class:Guagu
Guagu	src/scenario/fancheng-scenario.cpp	/^class Guagu: public TriggerSkill{$/;"	c	file:
GuanXing	lua/ai/guanxing-ai.lua	/^local function GuanXing(self, cards)$/;"	f
Guandu	src/scenario/guandu-scenario.cpp	/^ADD_SCENARIO(Guandu);$/;"	v
GuanduRule	src/scenario/guandu-scenario.cpp	/^    GuanduRule(Scenario *scenario)$/;"	f	class:GuanduRule
GuanduRule	src/scenario/guandu-scenario.cpp	/^class GuanduRule: public ScenarioRule{$/;"	c	file:
GuanduScenario	src/scenario/guandu-scenario.cpp	/^GuanduScenario::GuanduScenario()$/;"	f	class:GuanduScenario
GuanduScenario	src/scenario/guandu-scenario.h	/^class GuanduScenario : public Scenario{$/;"	c
Guanxing	src/package/standard-generals.cpp	/^    Guanxing():PhaseChangeSkill("guanxing"){$/;"	f	class:Guanxing
Guanxing	src/package/standard-generals.cpp	/^class Guanxing:public PhaseChangeSkill{$/;"	c	file:
GuanxingBox	src/ui/cardcontainer.cpp	/^GuanxingBox::GuanxingBox()$/;"	f	class:GuanxingBox
GuanxingBox	src/ui/cardcontainer.h	/^class GuanxingBox: public QSanSelectableItem{$/;"	c
GudingBlade	src/package/maneuvering.cpp	/^GudingBlade::GudingBlade(Suit suit, int number):Weapon(suit, number, 2){$/;"	f	class:GudingBlade
GudingBlade	src/package/maneuvering.h	/^class GudingBlade: public Weapon{$/;"	c
GudingBladeSkill	src/package/maneuvering.cpp	/^    GudingBladeSkill():WeaponSkill("GudingBlade"){$/;"	f	class:GudingBladeSkill
GudingBladeSkill	src/package/maneuvering.cpp	/^class GudingBladeSkill: public WeaponSkill{$/;"	c	file:
Guhuo	src/package/wind.cpp	/^    Guhuo():OneCardViewAsSkill("guhuo"){$/;"	f	class:Guhuo
Guhuo	src/package/wind.cpp	/^class Guhuo: public OneCardViewAsSkill{$/;"	c	file:
GuhuoCard	src/package/wind.cpp	/^GuhuoCard::GuhuoCard(){$/;"	f	class:GuhuoCard
GuhuoCard	src/package/wind.h	/^class GuhuoCard: public SkillCard{$/;"	c
GuhuoDialog	src/package/wind.cpp	/^GuhuoDialog::GuhuoDialog(const QString &object, bool left, bool right):object_name(object)$/;"	f	class:GuhuoDialog
GuhuoDialog	src/package/wind.h	/^class GuhuoDialog: public QDialog{$/;"	c
Guicai	src/package/standard-generals.cpp	/^    Guicai():TriggerSkill("guicai"){$/;"	f	class:Guicai
Guicai	src/package/standard-generals.cpp	/^class Guicai: public TriggerSkill{$/;"	c	file:
GuicaiCard	src/package/standard-skillcards.cpp	/^GuicaiCard::GuicaiCard(){$/;"	f	class:GuicaiCard
GuicaiCard	src/package/standard-skillcards.h	/^class GuicaiCard: public SkillCard{$/;"	c
GuicaiViewAsSkill	src/package/standard-generals.cpp	/^    GuicaiViewAsSkill():OneCardViewAsSkill(""){$/;"	f	class:GuicaiViewAsSkill
GuicaiViewAsSkill	src/package/standard-generals.cpp	/^class GuicaiViewAsSkill:public OneCardViewAsSkill{$/;"	c	file:
Guidao	src/package/wind.cpp	/^    Guidao():TriggerSkill("guidao"){$/;"	f	class:Guidao
Guidao	src/package/wind.cpp	/^class Guidao: public TriggerSkill{$/;"	c	file:
GuidaoCard	src/package/wind.cpp	/^GuidaoCard::GuidaoCard(){$/;"	f	class:GuidaoCard
GuidaoCard	src/package/wind.h	/^class GuidaoCard: public SkillCard{$/;"	c
GuidaoViewAsSkill	src/package/wind.cpp	/^    GuidaoViewAsSkill():OneCardViewAsSkill(""){$/;"	f	class:GuidaoViewAsSkill
GuidaoViewAsSkill	src/package/wind.cpp	/^class GuidaoViewAsSkill:public OneCardViewAsSkill{$/;"	c	file:
Guihan	src/package/yitianpackage.cpp	/^    Guihan():ViewAsSkill("guihan"){$/;"	f	class:Guihan
Guihan	src/package/yitianpackage.cpp	/^class Guihan: public ViewAsSkill{$/;"	c	file:
GuihanCard	src/package/yitianpackage.cpp	/^GuihanCard::GuihanCard(){$/;"	f	class:GuihanCard
GuihanCard	src/package/yitianpackage.h	/^class GuihanCard: public SkillCard{$/;"	c
Guixin	src/package/god.cpp	/^    Guixin():MasochismSkill("guixin"){$/;"	f	class:Guixin
Guixin	src/package/god.cpp	/^class Guixin: public MasochismSkill{$/;"	c	file:
Guose	src/package/standard-generals.cpp	/^    Guose():OneCardViewAsSkill("guose"){$/;"	f	class:Guose
Guose	src/package/standard-generals.cpp	/^class Guose: public OneCardViewAsSkill{$/;"	c	file:
Gushou	src/package/wisdompackage.cpp	/^    Gushou():TriggerSkill("gushou"){$/;"	f	class:Gushou
Gushou	src/package/wisdompackage.cpp	/^class Gushou:public TriggerSkill{$/;"	c	file:
Guzhan	src/scenario/boss-mode-scenario.cpp	/^    Guzhan():TriggerSkill("guzhan"){$/;"	f	class:Guzhan
Guzhan	src/scenario/boss-mode-scenario.cpp	/^class Guzhan: public TriggerSkill{$/;"	c	file:
Guzheng	src/package/mountainpackage.cpp	/^    Guzheng():TriggerSkill("guzheng"){$/;"	f	class:Guzheng
Guzheng	src/package/mountainpackage.cpp	/^class Guzheng: public TriggerSkill{$/;"	c	file:
GuzhengGet	src/package/mountainpackage.cpp	/^    GuzhengGet():TriggerSkill("#guzheng-get"){$/;"	f	class:GuzhengGet
GuzhengGet	src/package/mountainpackage.cpp	/^class GuzhengGet: public TriggerSkill{$/;"	c	file:
HALLDIALOG_H	src/dialog/halldialog.h	2;"	d
HANDLER_ALL	src/breakpad/client/windows/handler/exception_handler.h	/^    HANDLER_ALL = HANDLER_EXCEPTION |$/;"	e	enum:google_breakpad::ExceptionHandler::HandlerType
HANDLER_EXCEPTION	src/breakpad/client/windows/handler/exception_handler.h	/^    HANDLER_EXCEPTION = 1 << 0,          \/\/ SetUnhandledExceptionFilter$/;"	e	enum:google_breakpad::ExceptionHandler::HandlerType
HANDLER_INVALID_PARAMETER	src/breakpad/client/windows/handler/exception_handler.h	/^    HANDLER_INVALID_PARAMETER = 1 << 1,  \/\/ _set_invalid_parameter_handler$/;"	e	enum:google_breakpad::ExceptionHandler::HandlerType
HANDLER_NONE	src/breakpad/client/windows/handler/exception_handler.h	/^    HANDLER_NONE = 0,$/;"	e	enum:google_breakpad::ExceptionHandler::HandlerType
HANDLER_PURECALL	src/breakpad/client/windows/handler/exception_handler.h	/^    HANDLER_PURECALL = 1 << 2,           \/\/ _set_purecall_handler$/;"	e	enum:google_breakpad::ExceptionHandler::HandlerType
HAVE_LIMIT_ON_IDENTS	include/freetype/freetype/ttnameid.h	1210;"	d
HFReference	include/fmod/fmod.h	/^    float        HFReference;       \/* [r\/w] 1000.0 20000  5000.0  Reference high frequency (hz)                                         (SUPPORTED:SFX) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
HLay	src/dialog/customassigndialog.cpp	/^static QLayout *HLay(QWidget *left, QWidget *right, QWidget *mid = NULL,$/;"	f	file:
HLay	src/server/server.cpp	/^static QLayout *HLay(QWidget *left, QWidget *right){$/;"	f	file:
HRTFFreq	include/fmod/fmod.h	/^    float           HRTFFreq;                   \/* [r\/w] Optional. Specify 0 to ignore. For use with FMOD_INIT_HRTF_LOWPASS.  The cutoff frequency of the HRTF's lowpass filter function when at maximum effect. (i.e. at HRTFMaxAngle).  Default = 4000.0. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
HRTFMaxAngle	include/fmod/fmod.h	/^    float           HRTFMaxAngle;               \/* [r\/w] Optional. Specify 0 to ignore. For use with FMOD_INIT_HRTF_LOWPASS.  The angle range (0-360) of a 3D sound in relation to the listener, at which the HRTF function has maximum effect. 0 = front of the listener. 180 = from 90 degrees to the left of the listener to 90 degrees to the right. 360 = behind the listener. Default = 360.0. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
HRTFMinAngle	include/fmod/fmod.h	/^    float           HRTFMinAngle;               \/* [r\/w] Optional. Specify 0 to ignore. For use with FMOD_INIT_HRTF_LOWPASS.  The angle range (0-360) of a 3D sound in relation to the listener, at which the HRTF function begins to have an effect. 0 = in front of the listener. 180 = from 90 degrees to the left of the listener to 90 degrees to the right. 360 = behind the listener. Default = 180.0. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
HTTPUpload	src/breakpad/common/windows/http_upload.h	/^class HTTPUpload {$/;"	c	namespace:google_breakpad
Halberd	src/package/standard-cards.cpp	/^Halberd::Halberd(Suit suit, int number)$/;"	f	class:Halberd
Halberd	src/package/standard-equips.h	/^class Halberd:public Weapon{$/;"	c
HallDialog	src/dialog/halldialog.cpp	/^HallDialog::HallDialog(MainWindow *main_window)$/;"	f	class:HallDialog
HallDialog	src/dialog/halldialog.h	/^class HallDialog : public QDialog$/;"	c
HallDialogInstance	src/dialog/halldialog.cpp	/^static HallDialog *HallDialogInstance;$/;"	v	file:
HandleConnectedState	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::HandleConnectedState() {$/;"	f	class:google_breakpad::CrashGenerationServer
HandleConnectingState	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::HandleConnectingState() {$/;"	f	class:google_breakpad::CrashGenerationServer
HandleConnectionRequest	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::HandleConnectionRequest() {$/;"	f	class:google_breakpad::CrashGenerationServer
HandleDisconnectingState	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::HandleDisconnectingState() {$/;"	f	class:google_breakpad::CrashGenerationServer
HandleDumpRequest	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::HandleDumpRequest(const ClientInfo& client_info) {$/;"	f	class:google_breakpad::CrashGenerationServer
HandleErrorState	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::HandleErrorState() {$/;"	f	class:google_breakpad::CrashGenerationServer
HandleException	src/breakpad/client/windows/handler/exception_handler.cc	/^LONG ExceptionHandler::HandleException(EXCEPTION_POINTERS* exinfo) {$/;"	f	class:google_breakpad::ExceptionHandler
HandleInitialState	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::HandleInitialState() {$/;"	f	class:google_breakpad::CrashGenerationServer
HandleInvalidParameter	src/breakpad/client/windows/handler/exception_handler.cc	/^void ExceptionHandler::HandleInvalidParameter(const wchar_t* expression,$/;"	f	class:google_breakpad::ExceptionHandler
HandlePureVirtualCall	src/breakpad/client/windows/handler/exception_handler.cc	/^void ExceptionHandler::HandlePureVirtualCall() {$/;"	f	class:google_breakpad::ExceptionHandler
HandleReadDoneState	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::HandleReadDoneState() {$/;"	f	class:google_breakpad::CrashGenerationServer
HandleReadingAckState	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::HandleReadingAckState() {$/;"	f	class:google_breakpad::CrashGenerationServer
HandleReadingState	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::HandleReadingState() {$/;"	f	class:google_breakpad::CrashGenerationServer
HandleTraceData	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^HandleTraceData::HandleTraceData()$/;"	f	class:__anon67::HandleTraceData
HandleTraceData	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^class HandleTraceData {$/;"	c	namespace:__anon67	file:
HandleWriteDoneState	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::HandleWriteDoneState() {$/;"	f	class:google_breakpad::CrashGenerationServer
HandleWritingState	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CrashGenerationServer::HandleWritingState() {$/;"	f	class:google_breakpad::CrashGenerationServer
Handler	src/breakpad/processor/cfi_frame_info.h	/^    Handler() { }$/;"	f	class:google_breakpad::CFIRuleParser::Handler
Handler	src/breakpad/processor/cfi_frame_info.h	/^  class Handler {$/;"	c	class:google_breakpad::CFIRuleParser
HandlerType	src/breakpad/client/windows/handler/exception_handler.h	/^  enum HandlerType {$/;"	g	class:google_breakpad::ExceptionHandler
Haoshi	src/package/thicket.cpp	/^    Haoshi():DrawCardsSkill("#haoshi"){$/;"	f	class:Haoshi
Haoshi	src/package/thicket.cpp	/^class Haoshi: public DrawCardsSkill{$/;"	c	file:
HaoshiCard	src/package/thicket.cpp	/^HaoshiCard::HaoshiCard(){$/;"	f	class:HaoshiCard
HaoshiCard	src/package/thicket.h	/^class HaoshiCard: public SkillCard{$/;"	c
HaoshiGive	src/package/thicket.cpp	/^    HaoshiGive():PhaseChangeSkill("#haoshi-give"){$/;"	f	class:HaoshiGive
HaoshiGive	src/package/thicket.cpp	/^class HaoshiGive: public PhaseChangeSkill{$/;"	c	file:
HaoshiViewAsSkill	src/package/thicket.cpp	/^    HaoshiViewAsSkill():ViewAsSkill("haoshi"){$/;"	f	class:HaoshiViewAsSkill
HaoshiViewAsSkill	src/package/thicket.cpp	/^class HaoshiViewAsSkill: public ViewAsSkill{$/;"	c	file:
HasModule	src/breakpad/processor/source_line_resolver_base.cc	/^bool SourceLineResolverBase::HasModule(const CodeModule *module) {$/;"	f	class:google_breakpad::SourceLineResolverBase
HashKey	src/jsoncpp/include/json/value.h	/^      typedef unsigned int HashKey;$/;"	t	class:Json::ValueInternalMap
Heart	src/core/card.h	/^    enum Suit {Spade, Club, Heart, Diamond, NoSuit};$/;"	e	enum:Card::Suit
HexString	src/breakpad/processor/logging.cc	/^string HexString(int number) {$/;"	f	namespace:google_breakpad
HexString	src/breakpad/processor/logging.cc	/^string HexString(u_int32_t number) {$/;"	f	namespace:google_breakpad
HexString	src/breakpad/processor/logging.cc	/^string HexString(u_int64_t number) {$/;"	f	namespace:google_breakpad
HistoryIPs	src/core/settings.h	/^    QStringList HistoryIPs;$/;"	m	class:Settings
Hongyan	src/package/wind.cpp	/^    Hongyan():FilterSkill("hongyan"){$/;"	f	class:Hongyan
Hongyan	src/package/wind.cpp	/^class Hongyan: public FilterSkill{$/;"	c	file:
Hongyuan	src/package/special3v3-package.cpp	/^    Hongyuan():DrawCardsSkill("hongyuan"){$/;"	f	class:Hongyuan
Hongyuan	src/package/special3v3-package.cpp	/^class Hongyuan:public DrawCardsSkill{$/;"	c	file:
HongyuanAct	src/package/special3v3-package.cpp	/^    HongyuanAct():TriggerSkill("#hongyuan"){$/;"	f	class:HongyuanAct
HongyuanAct	src/package/special3v3-package.cpp	/^class HongyuanAct: public TriggerSkill{$/;"	c	file:
HongyuanCard	src/package/special3v3-package.cpp	/^HongyuanCard::HongyuanCard(){$/;"	f	class:HongyuanCard
HongyuanCard	src/package/special3v3-package.h	/^class HongyuanCard: public SkillCard{$/;"	c
HongyuanViewAsSkill	src/package/special3v3-package.cpp	/^    HongyuanViewAsSkill():ZeroCardViewAsSkill("hongyuan"){$/;"	f	class:HongyuanViewAsSkill
HongyuanViewAsSkill	src/package/special3v3-package.cpp	/^class HongyuanViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
Horse	src/package/standard.cpp	/^Horse::Horse(Suit suit, int number, int correct)$/;"	f	class:Horse
Horse	src/package/standard.h	/^class Horse:public EquipCard{$/;"	c
HorseSkill	src/package/standard-cards.cpp	/^    HorseSkill():DistanceSkill("Horse"){$/;"	f	class:HorseSkill
HorseSkill	src/package/standard-cards.cpp	/^class HorseSkill: public DistanceSkill{$/;"	c	file:
HostAddress	src/core/settings.h	/^    QString HostAddress;$/;"	m	class:Settings
Houyuan	src/package/wisdompackage.cpp	/^    Houyuan():ViewAsSkill("houyuan"){$/;"	f	class:Houyuan
Houyuan	src/package/wisdompackage.cpp	/^class Houyuan: public ViewAsSkill{$/;"	c	file:
HouyuanCard	src/package/wisdompackage.cpp	/^HouyuanCard::HouyuanCard(){$/;"	f	class:HouyuanCard
HouyuanCard	src/package/wisdompackage.h	/^class HouyuanCard: public SkillCard{$/;"	c
HpChanged	src/core/structs.h	/^    HpChanged,$/;"	e	enum:TriggerEvent
HpLost	src/core/structs.h	/^    HpLost,$/;"	e	enum:TriggerEvent
HpRecover	src/core/structs.h	/^    HpRecover,$/;"	e	enum:TriggerEvent
Huangtian	src/package/wind.cpp	/^    Huangtian():TriggerSkill("huangtian$"){$/;"	f	class:Huangtian
Huangtian	src/package/wind.cpp	/^class Huangtian: public TriggerSkill{$/;"	c	file:
HuangtianCard	src/package/wind.cpp	/^HuangtianCard::HuangtianCard(){$/;"	f	class:HuangtianCard
HuangtianCard	src/package/wind.h	/^class HuangtianCard: public SkillCard{$/;"	c
HuangtianViewAsSkill	src/package/wind.cpp	/^    HuangtianViewAsSkill():OneCardViewAsSkill("huangtianv"){$/;"	f	class:HuangtianViewAsSkill
HuangtianViewAsSkill	src/package/wind.cpp	/^class HuangtianViewAsSkill: public OneCardViewAsSkill{$/;"	c	file:
Huanshi	src/package/special3v3-package.cpp	/^    Huanshi():TriggerSkill("huanshi"){$/;"	f	class:Huanshi
Huanshi	src/package/special3v3-package.cpp	/^class Huanshi: public TriggerSkill{$/;"	c	file:
HuanshiCard	src/package/special3v3-package.cpp	/^HuanshiCard::HuanshiCard(){$/;"	f	class:HuanshiCard
HuanshiCard	src/package/special3v3-package.h	/^class HuanshiCard: public SkillCard{$/;"	c
HuanshiViewAsSkill	src/package/special3v3-package.cpp	/^    HuanshiViewAsSkill():OneCardViewAsSkill("huanshi"){$/;"	f	class:HuanshiViewAsSkill
HuanshiViewAsSkill	src/package/special3v3-package.cpp	/^class HuanshiViewAsSkill:public OneCardViewAsSkill{$/;"	c	file:
Huashen	src/package/mountainpackage.cpp	/^    Huashen():GameStartSkill("huashen"){$/;"	f	class:Huashen
Huashen	src/package/mountainpackage.cpp	/^class Huashen: public GameStartSkill{$/;"	c	file:
HuashenBegin	src/package/mountainpackage.cpp	/^    HuashenBegin():PhaseChangeSkill("#huashen-begin"){$/;"	f	class:HuashenBegin
HuashenBegin	src/package/mountainpackage.cpp	/^class HuashenBegin: public PhaseChangeSkill{$/;"	c	file:
HuashenDialog	src/package/mountainpackage.cpp	/^HuashenDialog::HuashenDialog()$/;"	f	class:HuashenDialog
HuashenDialog	src/package/mountainpackage.h	/^class HuashenDialog: public GeneralOverview{$/;"	c
HuashenEnd	src/package/mountainpackage.cpp	/^    HuashenEnd():TriggerSkill("#huashen-end"){$/;"	f	class:HuashenEnd
HuashenEnd	src/package/mountainpackage.cpp	/^class HuashenEnd: public TriggerSkill{$/;"	c	file:
Huilei	src/package/yjcm-package.cpp	/^    Huilei():TriggerSkill("huilei"){$/;"	f	class:Huilei
Huilei	src/package/yjcm-package.cpp	/^class Huilei: public TriggerSkill{$/;"	c	file:
Hujia	src/package/standard-generals.cpp	/^    Hujia():TriggerSkill("hujia$"){$/;"	f	class:Hujia
Hujia	src/package/standard-generals.cpp	/^class Hujia:public TriggerSkill{$/;"	c	file:
HulaoPassMode	src/server/gamerule.cpp	/^HulaoPassMode::HulaoPassMode(QObject *parent)$/;"	f	class:HulaoPassMode
HulaoPassMode	src/server/gamerule.h	/^class HulaoPassMode: public GameRule{$/;"	c
Hunzi	src/package/mountainpackage.cpp	/^    Hunzi():PhaseChangeSkill("hunzi"){$/;"	f	class:Hunzi
Hunzi	src/package/mountainpackage.cpp	/^class Hunzi: public PhaseChangeSkill{$/;"	c	file:
Huoji	src/package/firepackage.cpp	/^    Huoji():OneCardViewAsSkill("huoji"){$/;"	f	class:Huoji
Huoji	src/package/firepackage.cpp	/^class Huoji: public OneCardViewAsSkill{$/;"	c	file:
Huoshou	src/package/thicket.cpp	/^    Huoshou():TriggerSkill("huoshou"){$/;"	f	class:Huoshou
Huoshou	src/package/thicket.cpp	/^class Huoshou: public TriggerSkill{$/;"	c	file:
IDToThreadMap	src/breakpad/google_breakpad/processor/minidump.h	/^  typedef map<u_int32_t, MinidumpThread*> IDToThreadMap;$/;"	t	class:google_breakpad::MinidumpThreadList
IF	src/lua/lundump.c	31;"	d	file:
IF	src/lua/lundump.c	34;"	d	file:
INDEXK	src/lua/lopcodes.h	125;"	d
INDICATORITEM_H	src/ui/indicatoritem.h	2;"	d
INTERRUPT	src/breakpad/google_breakpad/processor/symbol_supplier.h	/^    INTERRUPT$/;"	e	enum:google_breakpad::SymbolSupplier::SymbolResult
INT_TO_F26DOT6	include/freetype/freetype/internal/ftcalc.h	163;"	d
INT_TO_F2DOT14	include/freetype/freetype/internal/ftcalc.h	164;"	d
INT_TO_FIXED	include/freetype/freetype/internal/ftcalc.h	165;"	d
IO_INPUT	src/lua/liolib.c	23;"	d	file:
IO_OUTPUT	src/lua/liolib.c	24;"	d	file:
IPCServerState	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  enum IPCServerState {$/;"	g	class:google_breakpad::CrashGenerationServer
IPC_SERVER_STATE_CONNECTED	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^    IPC_SERVER_STATE_CONNECTED,$/;"	e	enum:google_breakpad::CrashGenerationServer::IPCServerState
IPC_SERVER_STATE_CONNECTING	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^    IPC_SERVER_STATE_CONNECTING,$/;"	e	enum:google_breakpad::CrashGenerationServer::IPCServerState
IPC_SERVER_STATE_DISCONNECTING	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^    IPC_SERVER_STATE_DISCONNECTING$/;"	e	enum:google_breakpad::CrashGenerationServer::IPCServerState
IPC_SERVER_STATE_ERROR	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^    IPC_SERVER_STATE_ERROR,$/;"	e	enum:google_breakpad::CrashGenerationServer::IPCServerState
IPC_SERVER_STATE_INITIAL	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^    IPC_SERVER_STATE_INITIAL,$/;"	e	enum:google_breakpad::CrashGenerationServer::IPCServerState
IPC_SERVER_STATE_READING	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^    IPC_SERVER_STATE_READING,$/;"	e	enum:google_breakpad::CrashGenerationServer::IPCServerState
IPC_SERVER_STATE_READING_ACK	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^    IPC_SERVER_STATE_READING_ACK,$/;"	e	enum:google_breakpad::CrashGenerationServer::IPCServerState
IPC_SERVER_STATE_READ_DONE	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^    IPC_SERVER_STATE_READ_DONE,$/;"	e	enum:google_breakpad::CrashGenerationServer::IPCServerState
IPC_SERVER_STATE_UNINITIALIZED	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^    IPC_SERVER_STATE_UNINITIALIZED,$/;"	e	enum:google_breakpad::CrashGenerationServer::IPCServerState
IPC_SERVER_STATE_WRITE_DONE	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^    IPC_SERVER_STATE_WRITE_DONE,$/;"	e	enum:google_breakpad::CrashGenerationServer::IPCServerState
IPC_SERVER_STATE_WRITING	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^    IPC_SERVER_STATE_WRITING,$/;"	e	enum:google_breakpad::CrashGenerationServer::IPCServerState
IQSanComponentSkin	src/ui/SkinBank.h	/^class IQSanComponentSkin \/\/ interface class$/;"	c
ISK	src/lua/lopcodes.h	122;"	d
IS_PS_BASE85	include/freetype/freetype/internal/psaux.h	857;"	d
IS_PS_DELIM	include/freetype/freetype/internal/psaux.h	845;"	d
IS_PS_DIGIT	include/freetype/freetype/internal/psaux.h	849;"	d
IS_PS_NEWLINE	include/freetype/freetype/internal/psaux.h	826;"	d
IS_PS_SPACE	include/freetype/freetype/internal/psaux.h	830;"	d
IS_PS_SPECIAL	include/freetype/freetype/internal/psaux.h	837;"	d
IS_PS_TOKEN	include/freetype/freetype/internal/psaux.h	860;"	d
IS_PS_XDIGIT	include/freetype/freetype/internal/psaux.h	852;"	d
IceSword	src/package/standard-cards.cpp	/^IceSword::IceSword(Suit suit, int number)$/;"	f	class:IceSword
IceSword	src/package/standard-equips.h	/^class IceSword: public Weapon{$/;"	c
IceSwordSkill	src/package/standard-cards.cpp	/^    IceSwordSkill():WeaponSkill("IceSword"){$/;"	f	class:IceSwordSkill
IceSwordSkill	src/package/standard-cards.cpp	/^class IceSwordSkill: public WeaponSkill{$/;"	c	file:
IdsToStrings	src/core/card.cpp	/^QStringList Card::IdsToStrings(const QList<int> &ids){$/;"	f	class:Card
Impasse	src/scenario/boss-mode-scenario.cpp	/^ADD_SCENARIO(Impasse);$/;"	v
ImpasseRule	src/scenario/boss-mode-scenario.cpp	/^    ImpasseRule(Scenario *scenario)$/;"	f	class:ImpasseRule
ImpasseRule	src/scenario/boss-mode-scenario.cpp	/^class ImpasseRule: public ScenarioRule{$/;"	c	file:
ImpasseScenario	src/scenario/boss-mode-scenario.cpp	/^ImpasseScenario::ImpasseScenario()$/;"	f	class:ImpasseScenario
ImpasseScenario	src/scenario/boss-mode-scenario.h	/^class ImpasseScenario : public Scenario{$/;"	c
InArgs	src/jsoncpp/include/json/value.h	/^      typedef std::vector<const PathArgument *> InArgs;$/;"	t	class:Json::Path
InRange	src/jsoncpp/src/json_value.cpp	/^static inline bool InRange(double d, T min, U max) {$/;"	f	namespace:Json
Index_To_Loc_Format	include/freetype/freetype/tttables.h	/^    FT_Short   Index_To_Loc_Format;$/;"	m	struct:TT_Header_
IndicatorItem	src/ui/indicatoritem.cpp	/^IndicatorItem::IndicatorItem(const QPointF &start, const QPointF &real_finish, Player *player)$/;"	f	class:IndicatorItem
IndicatorItem	src/ui/indicatoritem.h	/^class IndicatorItem: public QGraphicsObject{$/;"	c
Indulgence	src/package/standard-cards.cpp	/^Indulgence::Indulgence(Suit suit, int number)$/;"	f	class:Indulgence
Indulgence	src/package/standard.h	/^class Indulgence:public DelayedTrick{$/;"	c
Init	src/breakpad/processor/stackwalker_unittest_utils.h	/^  void Init(u_int64_t base_address, const string &contents) {$/;"	f	class:MockMemoryRegion
Initialize	src/breakpad/client/windows/crash_generation/client_info.cc	/^bool ClientInfo::Initialize() {$/;"	f	class:google_breakpad::ClientInfo
Initialize	src/breakpad/client/windows/handler/exception_handler.cc	/^void ExceptionHandler::Initialize(const wstring& dump_path,$/;"	f	class:google_breakpad::ExceptionHandler
Instance	include/fmod/fmod.h	/^    int          Instance;          \/* [w]   0      3      0       Environment Instance.                                                 (SUPPORTED:SFX(4 instances) and Wii (3 instances)) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
Instruction	src/lua/llimits.h	/^typedef lu_int32 Instruction;$/;"	t
InstructionAddressSeemsValid	src/breakpad/processor/stackwalker.cc	/^bool Stackwalker::InstructionAddressSeemsValid(u_int64_t address) {$/;"	f	class:google_breakpad::Stackwalker
Int	src/jsoncpp/include/json/config.h	/^   typedef int Int;$/;"	t	namespace:Json
Int	src/jsoncpp/include/json/value.h	/^      typedef Json::Int Int;$/;"	t	class:Json::Value
Int64	src/jsoncpp/include/json/config.h	/^   typedef __int64 Int64;$/;"	t	namespace:Json
Int64	src/jsoncpp/include/json/config.h	/^   typedef long long int Int64;$/;"	t	namespace:Json
Int64	src/jsoncpp/include/json/value.h	/^      typedef Json::Int64 Int64;$/;"	t	class:Json::Value
IntPoint	src/lua/llimits.h	42;"	d
InternalFlags	src/jsoncpp/include/json/value.h	/^      enum InternalFlags { $/;"	g	class:Json::ValueInternalLink
IronChain	src/package/maneuvering.cpp	/^IronChain::IronChain(Card::Suit suit, int number)$/;"	f	class:IronChain
IronChain	src/package/maneuvering.h	/^class IronChain: public TrickCard{$/;"	c
IsAvailable	src/package/maneuvering.cpp	/^bool Analeptic::IsAvailable(const Player *player){$/;"	f	class:Analeptic
IsAvailable	src/package/standard-cards.cpp	/^bool Slash::IsAvailable(const Player *player){$/;"	f	class:Slash
IsCIDFont	include/freetype/freetype/internal/t1types.h	/^    FT_Bool        IsCIDFont;$/;"	m	struct:AFM_FontInfoRec_
IsClientRequestValid	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^static bool IsClientRequestValid(const ProtocolMessage& msg) {$/;"	f	namespace:google_breakpad
IsErrorUnrecoverable	src/breakpad/google_breakpad/processor/minidump_processor.h	/^  static bool IsErrorUnrecoverable(ProcessResult p) {$/;"	f	class:google_breakpad::MinidumpProcessor
IsExecutable	src/breakpad/processor/minidump.cc	/^bool MinidumpMemoryInfo::IsExecutable() const {$/;"	f	class:google_breakpad::MinidumpMemoryInfo
IsIntegral	src/jsoncpp/src/json_value.cpp	/^static bool IsIntegral(double d) {$/;"	f	namespace:Json
IsOutOfProcess	src/breakpad/client/windows/handler/exception_handler.h	/^  bool IsOutOfProcess() const { return crash_generation_client_.get() != NULL; }$/;"	f	class:google_breakpad::ExceptionHandler
IsRegistered	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^bool CrashGenerationClient::IsRegistered() const {$/;"	f	class:google_breakpad::CrashGenerationClient
IsValid	src/breakpad/processor/static_map_iterator-inl.h	/^bool StaticMapIterator<Key, Value, Compare>::IsValid() const {$/;"	f	class:google_breakpad::StaticMapIterator
IsWritable	src/breakpad/processor/minidump.cc	/^bool MinidumpMemoryInfo::IsWritable() const {$/;"	f	class:google_breakpad::MinidumpMemoryInfo
IteratorAtIndex	src/breakpad/processor/static_map.h	/^  inline iterator IteratorAtIndex(int index) const {$/;"	f	class:google_breakpad::StaticMap
IteratorState	src/jsoncpp/include/json/value.h	/^         IteratorState() $/;"	f	struct:Json::ValueInternalArray::IteratorState
IteratorState	src/jsoncpp/include/json/value.h	/^         IteratorState() $/;"	f	struct:Json::ValueInternalMap::IteratorState
IteratorState	src/jsoncpp/include/json/value.h	/^      struct IteratorState \/\/ Must be a POD$/;"	s	class:Json::ValueInternalArray
IteratorState	src/jsoncpp/include/json/value.h	/^      struct IteratorState$/;"	s	class:Json::ValueInternalMap
IteratorTester	src/breakpad/processor/static_map_unittest.cc	/^  void IteratorTester(int test_case) {$/;"	f	class:TestValidMap
JOYPACKAGE_H	src/package/joypackage.h	2;"	d
JOYSTICK_H	src/ui/joystick.h	2;"	d
JSONCPP_BATCHALLOCATOR_H_INCLUDED	src/jsoncpp/src/json_batchallocator.h	7;"	d
JSONCPP_DEPRECATED	src/jsoncpp/include/json/config.h	68;"	d
JSONCPP_DEPRECATED	src/jsoncpp/include/json/config.h	72;"	d
JSON_API	src/jsoncpp/include/json/config.h	47;"	d
JSON_API	src/jsoncpp/include/json/config.h	49;"	d
JSON_API	src/jsoncpp/include/json/config.h	51;"	d
JSON_API	src/jsoncpp/include/json/config.h	53;"	d
JSON_ASSERT	src/jsoncpp/include/json/assertions.h	16;"	d
JSON_ASSERT	src/jsoncpp/include/json/assertions.h	19;"	d
JSON_ASSERT_MESSAGE	src/jsoncpp/include/json/assertions.h	29;"	d
JSON_ASSERT_UNREACHABLE	src/jsoncpp/src/json_value.cpp	25;"	d	file:
JSON_AUTOLINK_H_INCLUDED	src/jsoncpp/include/json/autolink.h	7;"	d
JSON_CONFIG_H_INCLUDED	src/jsoncpp/include/json/config.h	7;"	d
JSON_FAIL_MESSAGE	src/jsoncpp/include/json/assertions.h	17;"	d
JSON_FAIL_MESSAGE	src/jsoncpp/include/json/assertions.h	25;"	d
JSON_FORWARDS_H_INCLUDED	src/jsoncpp/include/json/forwards.h	7;"	d
JSON_HAS_INT64	src/jsoncpp/include/json/config.h	81;"	d
JSON_HAS_INT64	src/jsoncpp/include/json/config.h	93;"	d
JSON_JSON_H_INCLUDED	src/jsoncpp/include/json/json.h	7;"	d
JSON_USE_CPPTL	src/jsoncpp/include/json/config.h	42;"	d
JSON_USE_EXCEPTION	src/jsoncpp/include/json/config.h	30;"	d
JSON_USE_INT64_DOUBLE_CONVERSION	src/jsoncpp/include/json/config.h	63;"	d
JSON_WRITER_H_INCLUDED	src/jsoncpp/include/json/writer.h	7;"	d
JS_FALSE	include/js.h	39;"	d
JS_NEW	include/js.h	26;"	d
JS_TRUE	include/js.h	38;"	d
Jiang	src/package/mountainpackage.cpp	/^    Jiang():TriggerSkill("jiang"){$/;"	f	class:Jiang
Jiang	src/package/mountainpackage.cpp	/^class Jiang: public TriggerSkill{$/;"	c	file:
Jiangchi	src/package/yjcm2012-package.cpp	/^    Jiangchi():DrawCardsSkill("jiangchi"){$/;"	f	class:Jiangchi
Jiangchi	src/package/yjcm2012-package.cpp	/^class Jiangchi:public DrawCardsSkill{$/;"	c	file:
JiangchiClear	src/package/yjcm2012-package.cpp	/^    JiangchiClear():PhaseChangeSkill("#jiangchi-clear"){$/;"	f	class:JiangchiClear
JiangchiClear	src/package/yjcm2012-package.cpp	/^class JiangchiClear: public PhaseChangeSkill{$/;"	c	file:
Jianxiong	src/package/standard-generals.cpp	/^    Jianxiong():MasochismSkill("jianxiong"){$/;"	f	class:Jianxiong
Jianxiong	src/package/standard-generals.cpp	/^class Jianxiong:public MasochismSkill{$/;"	c	file:
Jie	src/package/bgm-package.cpp	/^    Jie():TriggerSkill("jie"){$/;"	f	class:Jie
Jie	src/package/bgm-package.cpp	/^class Jie: public TriggerSkill{$/;"	c	file:
Jiefan	src/package/yjcm2012-package.cpp	/^    Jiefan():TriggerSkill("jiefan"){$/;"	f	class:Jiefan
Jiefan	src/package/yjcm2012-package.cpp	/^class Jiefan : public TriggerSkill{$/;"	c	file:
Jiehuo	src/package/wisdompackage.cpp	/^    Jiehuo():TriggerSkill("jiehuo"){$/;"	f	class:Jiehuo
Jiehuo	src/package/wisdompackage.cpp	/^class Jiehuo: public TriggerSkill{$/;"	c	file:
Jieming	src/package/firepackage.cpp	/^    Jieming():MasochismSkill("jieming"){$/;"	f	class:Jieming
Jieming	src/package/firepackage.cpp	/^class Jieming: public MasochismSkill{$/;"	c	file:
JiemingCard	src/package/firepackage.cpp	/^JiemingCard::JiemingCard(){$/;"	f	class:JiemingCard
JiemingCard	src/package/firepackage.h	/^class JiemingCard: public SkillCard{$/;"	c
JiemingViewAsSkill	src/package/firepackage.cpp	/^    JiemingViewAsSkill():ZeroCardViewAsSkill("jieming"){$/;"	f	class:JiemingViewAsSkill
JiemingViewAsSkill	src/package/firepackage.cpp	/^class JiemingViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
Jieyin	src/package/standard-generals.cpp	/^    Jieyin():ViewAsSkill("jieyin"){$/;"	f	class:Jieyin
Jieyin	src/package/standard-generals.cpp	/^class Jieyin: public ViewAsSkill{$/;"	c	file:
JieyinCard	src/package/standard-skillcards.cpp	/^JieyinCard::JieyinCard(){$/;"	f	class:JieyinCard
JieyinCard	src/package/standard-skillcards.h	/^class JieyinCard:public SkillCard{$/;"	c
Jijiang	src/package/standard-generals.cpp	/^    Jijiang():TriggerSkill("jijiang$"){$/;"	f	class:Jijiang
Jijiang	src/package/standard-generals.cpp	/^class Jijiang: public TriggerSkill{$/;"	c	file:
JijiangCard	src/package/standard-skillcards.cpp	/^JijiangCard::JijiangCard(){$/;"	f	class:JijiangCard
JijiangCard	src/package/standard-skillcards.h	/^class JijiangCard: public SkillCard{$/;"	c
JijiangViewAsSkill	src/package/standard-generals.cpp	/^    JijiangViewAsSkill():ZeroCardViewAsSkill("jijiang$"){$/;"	f	class:JijiangViewAsSkill
JijiangViewAsSkill	src/package/standard-generals.cpp	/^class JijiangViewAsSkill:public ZeroCardViewAsSkill{$/;"	c	file:
Jijiu	src/package/standard-generals.cpp	/^    Jijiu():OneCardViewAsSkill("jijiu"){$/;"	f	class:Jijiu
Jijiu	src/package/standard-generals.cpp	/^class Jijiu: public OneCardViewAsSkill{$/;"	c	file:
Jilei	src/package/sp-package.cpp	/^    Jilei():TriggerSkill("jilei"){$/;"	f	class:Jilei
Jilei	src/package/sp-package.cpp	/^class Jilei: public TriggerSkill{$/;"	c	file:
JileiClear	src/package/sp-package.cpp	/^    JileiClear():PhaseChangeSkill("#jilei-clear"){$/;"	f	class:JileiClear
JileiClear	src/package/sp-package.cpp	/^class JileiClear: public PhaseChangeSkill{$/;"	c	file:
Jilve	src/package/god.cpp	/^    Jilve():TriggerSkill("jilve"){$/;"	f	class:Jilve
Jilve	src/package/god.cpp	/^class Jilve: public TriggerSkill{$/;"	c	file:
JilveCard	src/package/god.cpp	/^JilveCard::JilveCard(){$/;"	f	class:JilveCard
JilveCard	src/package/god.h	/^class JilveCard: public SkillCard{$/;"	c
JilveClear	src/package/god.cpp	/^    JilveClear():PhaseChangeSkill("#jilve-clear"){$/;"	f	class:JilveClear
JilveClear	src/package/god.cpp	/^class JilveClear: public PhaseChangeSkill{$/;"	c	file:
JilveViewAsSkill	src/package/god.cpp	/^    JilveViewAsSkill():ZeroCardViewAsSkill(""){$/;"	f	class:JilveViewAsSkill
JilveViewAsSkill	src/package/god.cpp	/^class JilveViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
Jincui	src/package/wisdompackage.cpp	/^    Jincui():TriggerSkill("jincui"){$/;"	f	class:Jincui
Jincui	src/package/wisdompackage.cpp	/^class Jincui: public TriggerSkill{$/;"	c	file:
Jinjiu	src/package/yjcm-package.cpp	/^    Jinjiu():FilterSkill("jinjiu"){$/;"	f	class:Jinjiu
Jinjiu	src/package/yjcm-package.cpp	/^class Jinjiu: public FilterSkill{$/;"	c	file:
Jink	src/package/standard-cards.cpp	/^Jink::Jink(Suit suit, int number):BasicCard(suit, number){$/;"	f	class:Jink
Jink	src/package/standard.h	/^class Jink: public BasicCard{$/;"	c
Jinshen	src/package/yitianpackage.cpp	/^    Jinshen():ProhibitSkill("jinshen"){$/;"	f	class:Jinshen
Jinshen	src/package/yitianpackage.cpp	/^class Jinshen: public ProhibitSkill{$/;"	c	file:
Jishi	src/scenario/boss-mode-scenario.cpp	/^    Jishi():PhaseChangeSkill("jishi"){$/;"	f	class:Jishi
Jishi	src/scenario/boss-mode-scenario.cpp	/^class Jishi: public PhaseChangeSkill{$/;"	c	file:
Jiuchi	src/package/thicket.cpp	/^    Jiuchi():OneCardViewAsSkill("jiuchi"){$/;"	f	class:Jiuchi
Jiuchi	src/package/thicket.cpp	/^class Jiuchi: public OneCardViewAsSkill{$/;"	c	file:
Jiushi	src/package/yjcm-package.cpp	/^    Jiushi():ZeroCardViewAsSkill("jiushi"){$/;"	f	class:Jiushi
Jiushi	src/package/yjcm-package.cpp	/^class Jiushi: public ZeroCardViewAsSkill{$/;"	c	file:
JiushiFlip	src/package/yjcm-package.cpp	/^    JiushiFlip():TriggerSkill("#jiushi-flip"){$/;"	f	class:JiushiFlip
JiushiFlip	src/package/yjcm-package.cpp	/^class JiushiFlip: public TriggerSkill{$/;"	c	file:
Jiuyuan	src/package/standard-generals.cpp	/^    Jiuyuan():TriggerSkill("jiuyuan$"){$/;"	f	class:Jiuyuan
Jiuyuan	src/package/standard-generals.cpp	/^class Jiuyuan: public TriggerSkill{$/;"	c	file:
Jixi	src/package/mountainpackage.cpp	/^    Jixi():ZeroCardViewAsSkill("jixi"){$/;"	f	class:Jixi
Jixi	src/package/mountainpackage.cpp	/^class Jixi:public ZeroCardViewAsSkill{$/;"	c	file:
JixiCard	src/package/mountainpackage.cpp	/^JixiCard::JixiCard(){$/;"	f	class:JixiCard
JixiCard	src/package/mountainpackage.h	/^class JixiCard: public SkillCard{$/;"	c
Jizhan	src/scenario/boss-mode-scenario.cpp	/^    Jizhan():TriggerSkill("jizhan"){$/;"	f	class:Jizhan
Jizhan	src/scenario/boss-mode-scenario.cpp	/^class Jizhan: public TriggerSkill{$/;"	c	file:
Jizhi	src/package/standard-generals.cpp	/^    Jizhi():TriggerSkill("jizhi"){$/;"	f	class:Jizhi
Jizhi	src/package/standard-generals.cpp	/^class Jizhi:public TriggerSkill{$/;"	c	file:
JoyEquipPackage	src/package/joypackage.cpp	/^JoyEquipPackage::JoyEquipPackage()$/;"	f	class:JoyEquipPackage
JoyEquipPackage	src/package/joypackage.h	/^class JoyEquipPackage: public Package{$/;"	c
JoyPackage	src/package/joypackage.h	/^class JoyPackage: public Package{$/;"	c
Joystick	src/ui/joystick.cpp	/^Joystick::Joystick(QObject *parent)$/;"	f	class:Joystick
Joystick	src/ui/joystick.h	/^class Joystick : public QThread$/;"	c
Json	src/jsoncpp/include/json/config.h	/^namespace Json {$/;"	n
Json	src/jsoncpp/include/json/features.h	/^namespace Json {$/;"	n
Json	src/jsoncpp/include/json/forwards.h	/^namespace Json {$/;"	n
Json	src/jsoncpp/include/json/reader.h	/^namespace Json {$/;"	n
Json	src/jsoncpp/include/json/value.h	/^namespace Json {$/;"	n
Json	src/jsoncpp/include/json/writer.h	/^namespace Json {$/;"	n
Json	src/jsoncpp/src/json_batchallocator.h	/^namespace Json {$/;"	n
Json	src/jsoncpp/src/json_reader.cpp	/^namespace Json {$/;"	n	file:
Json	src/jsoncpp/src/json_tool.h	/^namespace Json {$/;"	n
Json	src/jsoncpp/src/json_value.cpp	/^namespace Json {$/;"	n	file:
Json	src/jsoncpp/src/json_writer.cpp	/^namespace Json {$/;"	n	file:
Juao	src/package/wisdompackage.cpp	/^    Juao():PhaseChangeSkill("juao"){$/;"	f	class:Juao
Juao	src/package/wisdompackage.cpp	/^class Juao: public PhaseChangeSkill{$/;"	c	file:
JuaoCard	src/package/wisdompackage.cpp	/^JuaoCard::JuaoCard(){$/;"	f	class:JuaoCard
JuaoCard	src/package/wisdompackage.h	/^class JuaoCard:public SkillCard{$/;"	c
JuaoViewAsSkill	src/package/wisdompackage.cpp	/^    JuaoViewAsSkill():ViewAsSkill("juao"){$/;"	f	class:JuaoViewAsSkill
JuaoViewAsSkill	src/package/wisdompackage.cpp	/^class JuaoViewAsSkill: public ViewAsSkill{$/;"	c	file:
Judge	src/core/player.h	/^    enum Phase {RoundStart, Start, Judge, Draw, Play, Discard, Finish, NotActive, PhaseNone};$/;"	e	enum:Player::Phase
JudgeStar	src/core/structs.h	/^typedef JudgeStruct *JudgeStar;$/;"	t
JudgeStruct	src/core/structs.h	/^struct JudgeStruct{$/;"	s
JudgeStruct	src/server/roomthread.cpp	/^JudgeStruct::JudgeStruct()$/;"	f	class:JudgeStruct
JudgeStructPattern	src/core/structs.h	/^class JudgeStructPattern{$/;"	c
JudgeStructPattern	src/server/roomthread.cpp	/^JudgeStructPattern::JudgeStructPattern(){$/;"	f	class:JudgeStructPattern
Jueji	src/package/yitianpackage.cpp	/^    Jueji():OneCardViewAsSkill("jueji"){$/;"	f	class:Jueji
Jueji	src/package/yitianpackage.cpp	/^class Jueji: public OneCardViewAsSkill{$/;"	c	file:
JuejiCard	src/package/yitianpackage.cpp	/^JuejiCard::JuejiCard(){$/;"	f	class:JuejiCard
JuejiCard	src/package/yitianpackage.h	/^class JuejiCard: public SkillCard{$/;"	c
JuejiGet	src/package/yitianpackage.cpp	/^    JuejiGet():TriggerSkill("#jueji-get"){$/;"	f	class:JuejiGet
JuejiGet	src/package/yitianpackage.cpp	/^class JuejiGet: public TriggerSkill{$/;"	c	file:
Juejing	src/package/god.cpp	/^    Juejing():DrawCardsSkill("#juejing-draw"){$/;"	f	class:Juejing
Juejing	src/package/god.cpp	/^class Juejing: public DrawCardsSkill{$/;"	c	file:
JuejingKeep	src/package/god.cpp	/^    JuejingKeep():MaxCardsSkill("juejing"){$/;"	f	class:JuejingKeep
JuejingKeep	src/package/god.cpp	/^class JuejingKeep: public MaxCardsSkill{$/;"	c	file:
Jueqing	src/package/yjcm-package.cpp	/^    Jueqing():TriggerSkill("jueqing")$/;"	f	class:Jueqing
Jueqing	src/package/yjcm-package.cpp	/^class Jueqing: public TriggerSkill{$/;"	c	file:
Jujian	src/package/yjcm-package.cpp	/^    Jujian():PhaseChangeSkill("jujian"){$/;"	f	class:Jujian
Jujian	src/package/yjcm-package.cpp	/^class Jujian:public PhaseChangeSkill{$/;"	c	file:
JujianCard	src/package/yjcm-package.cpp	/^JujianCard::JujianCard(){$/;"	f	class:JujianCard
JujianCard	src/package/yjcm-package.h	/^class JujianCard: public SkillCard{$/;"	c
JujianViewAsSkill	src/package/yjcm-package.cpp	/^    JujianViewAsSkill():OneCardViewAsSkill("jujian"){$/;"	f	class:JujianViewAsSkill
JujianViewAsSkill	src/package/yjcm-package.cpp	/^class JujianViewAsSkill: public OneCardViewAsSkill{$/;"	c	file:
Jushou	src/package/wind.cpp	/^    Jushou():PhaseChangeSkill("jushou"){$/;"	f	class:Jushou
Jushou	src/package/wind.cpp	/^class Jushou: public PhaseChangeSkill{$/;"	c	file:
Juxiang	src/package/thicket.cpp	/^    Juxiang():TriggerSkill("juxiang"){$/;"	f	class:Juxiang
Juxiang	src/package/thicket.cpp	/^class Juxiang: public TriggerSkill{$/;"	c	file:
KBx	src/lua/lvm.c	351;"	d	file:
KEYWEAK	src/lua/lgc.c	47;"	d	file:
KEYWEAKBIT	src/lua/lgc.h	58;"	d
KEY_HOOK	src/lua/ldblib.c	/^static const char KEY_HOOK = 'h';$/;"	v	file:
KOFOrderBox	src/ui/roomscene.cpp	/^KOFOrderBox::KOFOrderBox(bool self, QGraphicsScene *scene)$/;"	f	class:KOFOrderBox
KOFOrderBox	src/ui/roomscene.h	/^class KOFOrderBox: public QGraphicsPixmapItem{$/;"	c
Kanpo	src/package/firepackage.cpp	/^    Kanpo():OneCardViewAsSkill("kanpo"){$/;"	f	class:Kanpo
Kanpo	src/package/firepackage.cpp	/^class Kanpo: public OneCardViewAsSkill{$/;"	c	file:
Kedi	src/scenario/boss-mode-scenario.cpp	/^    Kedi():MasochismSkill("kedi"){$/;"	f	class:Kedi
Kedi	src/scenario/boss-mode-scenario.cpp	/^class Kedi: public MasochismSkill{$/;"	c	file:
Kegou	src/package/yitianpackage.cpp	/^    Kegou():PhaseChangeSkill("kegou"){$/;"	f	class:Kegou
Kegou	src/package/yitianpackage.cpp	/^class Kegou: public PhaseChangeSkill{$/;"	c	file:
Keji	src/package/standard-generals.cpp	/^    Keji():TriggerSkill("keji"){$/;"	f	class:Keji
Keji	src/package/standard-generals.cpp	/^class Keji: public TriggerSkill{$/;"	c	file:
KernPairs	include/freetype/freetype/internal/t1types.h	/^    AFM_KernPair   KernPairs;    \/* free if non-NULL *\/$/;"	m	struct:AFM_FontInfoRec_
KeyType	src/breakpad/processor/static_map_unittest.cc	/^typedef int KeyType;$/;"	t	file:
Kind	src/jsoncpp/include/json/value.h	/^      enum Kind$/;"	g	class:Json::PathArgument
Kongcheng	src/package/standard-generals.cpp	/^    Kongcheng():ProhibitSkill("kongcheng"){$/;"	f	class:Kongcheng
Kongcheng	src/package/standard-generals.cpp	/^class Kongcheng: public ProhibitSkill{$/;"	c	file:
KongchengEffect	src/package/standard-generals.cpp	/^    KongchengEffect():TriggerSkill("#kongcheng-effect"){$/;"	f	class:KongchengEffect
KongchengEffect	src/package/standard-generals.cpp	/^class KongchengEffect: public TriggerSkill{$/;"	c	file:
Kuangbao	src/package/god.cpp	/^    Kuangbao():TriggerSkill("kuangbao"){$/;"	f	class:Kuangbao
Kuangbao	src/package/god.cpp	/^class Kuangbao: public TriggerSkill{$/;"	c	file:
Kuangfeng	src/package/god.cpp	/^    Kuangfeng():TriggerSkill("kuangfeng"){$/;"	f	class:Kuangfeng
Kuangfeng	src/package/god.cpp	/^class Kuangfeng: public TriggerSkill{$/;"	c	file:
KuangfengCard	src/package/god.cpp	/^KuangfengCard::KuangfengCard(){$/;"	f	class:KuangfengCard
KuangfengCard	src/package/god.h	/^class KuangfengCard: public SkillCard{$/;"	c
KuangfengViewAsSkill	src/package/god.cpp	/^    KuangfengViewAsSkill():ZeroCardViewAsSkill("kuangfeng"){$/;"	f	class:KuangfengViewAsSkill
KuangfengViewAsSkill	src/package/god.cpp	/^class KuangfengViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
Kuanggu	src/package/wind.cpp	/^    Kuanggu():TriggerSkill("kuanggu"){$/;"	f	class:Kuanggu
Kuanggu	src/package/wind.cpp	/^class Kuanggu: public TriggerSkill{$/;"	c	file:
Kuiwei	src/package/bgm-package.cpp	/^    Kuiwei(): TriggerSkill("kuiwei"){$/;"	f	class:Kuiwei
Kuiwei	src/package/bgm-package.cpp	/^class Kuiwei: public TriggerSkill{$/;"	c	file:
Kurou	src/package/standard-generals.cpp	/^    Kurou():ZeroCardViewAsSkill("kurou"){$/;"	f	class:Kurou
Kurou	src/package/standard-generals.cpp	/^class Kurou: public ZeroCardViewAsSkill{$/;"	c	file:
KurouCard	src/package/standard-skillcards.cpp	/^KurouCard::KurouCard(){$/;"	f	class:KurouCard
KurouCard	src/package/standard-skillcards.h	/^class KurouCard: public SkillCard{$/;"	c
KylinBow	src/package/standard-cards.cpp	/^KylinBow::KylinBow(Suit suit, int number)$/;"	f	class:KylinBow
KylinBow	src/package/standard-equips.h	/^class KylinBow:public Weapon{$/;"	c
KylinBowSkill	src/package/standard-cards.cpp	/^    KylinBowSkill():WeaponSkill("KylinBow"){$/;"	f	class:KylinBowSkill
KylinBowSkill	src/package/standard-cards.cpp	/^class KylinBowSkill: public WeaponSkill{$/;"	c	file:
L	src/lua/lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer
L	src/lua/ldump.c	/^ lua_State* L;$/;"	m	struct:__anon87	file:
L	src/lua/llex.h	/^  struct lua_State *L;$/;"	m	struct:LexState	typeref:struct:LexState::lua_State
L	src/lua/lparser.h	/^  struct lua_State *L;  \/* copy of the Lua state *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::lua_State
L	src/lua/lstrlib.c	/^  lua_State *L;$/;"	m	struct:MatchState	file:
L	src/lua/lundump.c	/^ lua_State* L;$/;"	m	struct:__anon102	file:
L	src/lua/lzio.h	/^  lua_State *L;			\/* Lua state (for reader) *\/$/;"	m	struct:Zio
L	src/server/room.h	/^    lua_State *L;$/;"	m	class:Room
LANGUAGE_OBJ	swig/sanguosha_wrap.cxx	/^typedef struct{} LANGUAGE_OBJ;$/;"	t	namespace:swig	typeref:struct:swig::__anon151	file:
LAST_TAG	src/lua/lobject.h	20;"	d
LClosure	src/lua/lobject.h	/^typedef struct LClosure {$/;"	s
LClosure	src/lua/lobject.h	/^} LClosure;$/;"	t	typeref:struct:LClosure
LEVELS1	src/lua/ldblib.c	318;"	d	file:
LEVELS2	src/lua/ldblib.c	319;"	d	file:
LFIELDS_PER_FLUSH	src/lua/lopcodes.h	265;"	d
LFReference	include/fmod/fmod.h	/^    float        LFReference;       \/* [r\/w] 20.0   1000.0 250.0   Reference low frequency (hz)                                          (SUPPORTED:SFX) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
LG	src/lua/lstate.c	/^typedef struct LG {$/;"	s	file:
LG	src/lua/lstate.c	/^} LG;$/;"	t	typeref:struct:LG	file:
LHS_assign	src/lua/lparser.c	/^struct LHS_assign {$/;"	s	file:
LIBPREFIX	src/lua/loadlib.c	32;"	d	file:
LIB_FAIL	src/lua/loadlib.c	232;"	d	file:
LIB_FAIL	src/lua/loadlib.c	233;"	d	file:
LIB_FAIL	src/lua/loadlib.c	35;"	d	file:
LIB_JSONCPP_JSON_TOOL_H_INCLUDED	src/jsoncpp/src/json_tool.h	7;"	d
LIMIT	src/lua/lauxlib.c	395;"	d	file:
LINGPACKAGE_H	src/package/lingpackage.h	2;"	d
LRO_STRVAL	swig/sanguosha_wrap.cxx	774;"	d	file:
LSTRVAL	swig/sanguosha_wrap.cxx	775;"	d	file:
LUAC_FORMAT	src/lua/lundump.h	31;"	d
LUAC_HEADERSIZE	src/lua/lundump.h	34;"	d
LUAC_VERSION	src/lua/lundump.h	28;"	d
LUAI_BITSINT	src/lua/luaconf.h	392;"	d
LUAI_BITSINT	src/lua/luaconf.h	395;"	d
LUAI_DATA	src/lua/luaconf.h	183;"	d
LUAI_DATA	src/lua/luaconf.h	188;"	d
LUAI_DATA	src/lua/luaconf.h	192;"	d
LUAI_EXTRASPACE	src/lua/luaconf.h	715;"	d
LUAI_FUNC	src/lua/luaconf.h	182;"	d
LUAI_FUNC	src/lua/luaconf.h	187;"	d
LUAI_FUNC	src/lua/luaconf.h	191;"	d
LUAI_GCMUL	src/lua/luaconf.h	313;"	d
LUAI_GCPAUSE	src/lua/luaconf.h	302;"	d
LUAI_INT32	src/lua/luaconf.h	415;"	d
LUAI_INT32	src/lua/luaconf.h	422;"	d
LUAI_MAXCALLS	src/lua/luaconf.h	435;"	d
LUAI_MAXCCALLS	src/lua/luaconf.h	468;"	d
LUAI_MAXCSTACK	src/lua/luaconf.h	446;"	d
LUAI_MAXINT32	src/lua/luaconf.h	416;"	d
LUAI_MAXINT32	src/lua/luaconf.h	423;"	d
LUAI_MAXNUMBER2STR	src/lua/luaconf.h	524;"	d
LUAI_MAXUPVALUES	src/lua/luaconf.h	482;"	d
LUAI_MAXVARS	src/lua/luaconf.h	475;"	d
LUAI_MEM	src/lua/luaconf.h	418;"	d
LUAI_MEM	src/lua/luaconf.h	425;"	d
LUAI_THROW	src/lua/luaconf.h	608;"	d
LUAI_THROW	src/lua/luaconf.h	615;"	d
LUAI_THROW	src/lua/luaconf.h	621;"	d
LUAI_TRY	src/lua/luaconf.h	609;"	d
LUAI_TRY	src/lua/luaconf.h	616;"	d
LUAI_TRY	src/lua/luaconf.h	622;"	d
LUAI_UACNUMBER	src/lua/luaconf.h	511;"	d
LUAI_UINT32	src/lua/luaconf.h	414;"	d
LUAI_UINT32	src/lua/luaconf.h	421;"	d
LUAI_UMEM	src/lua/luaconf.h	417;"	d
LUAI_UMEM	src/lua/luaconf.h	424;"	d
LUAI_USER_ALIGNMENT_T	src/lua/luaconf.h	595;"	d
LUALIB_API	src/lua/luaconf.h	169;"	d
LUAL_BUFFERSIZE	src/lua/luaconf.h	488;"	d
LUAWRAPPER_H	src/core/lua-wrapper.h	2;"	d
LUA_ANSI	src/lua/luaconf.h	28;"	d
LUA_API	src/lua/luaconf.h	157;"	d
LUA_API	src/lua/luaconf.h	159;"	d
LUA_API	src/lua/luaconf.h	164;"	d
LUA_AUTHORS	src/lua/lua.h	23;"	d
LUA_CDIR	src/lua/luaconf.h	89;"	d
LUA_CDIR	src/lua/luaconf.h	99;"	d
LUA_COLIBNAME	src/lua/lualib.h	18;"	d
LUA_COMPAT_GETN	src/lua/luaconf.h	322;"	d
LUA_COMPAT_GFIND	src/lua/luaconf.h	358;"	d
LUA_COMPAT_LOADLIB	src/lua/luaconf.h	329;"	d
LUA_COMPAT_LSTR	src/lua/luaconf.h	351;"	d
LUA_COMPAT_MOD	src/lua/luaconf.h	343;"	d
LUA_COMPAT_OPENLIB	src/lua/luaconf.h	366;"	d
LUA_COMPAT_VARARG	src/lua/luaconf.h	336;"	d
LUA_COPYRIGHT	src/lua/lua.h	22;"	d
LUA_CORE	src/lua/lapi.c	14;"	d	file:
LUA_CORE	src/lua/lcode.c	11;"	d	file:
LUA_CORE	src/lua/ldebug.c	14;"	d	file:
LUA_CORE	src/lua/ldo.c	13;"	d	file:
LUA_CORE	src/lua/ldump.c	10;"	d	file:
LUA_CORE	src/lua/lfunc.c	11;"	d	file:
LUA_CORE	src/lua/lgc.c	10;"	d	file:
LUA_CORE	src/lua/llex.c	13;"	d	file:
LUA_CORE	src/lua/lmem.c	11;"	d	file:
LUA_CORE	src/lua/lobject.c	14;"	d	file:
LUA_CORE	src/lua/lopcodes.c	8;"	d	file:
LUA_CORE	src/lua/lparser.c	11;"	d	file:
LUA_CORE	src/lua/lstate.c	11;"	d	file:
LUA_CORE	src/lua/lstring.c	11;"	d	file:
LUA_CORE	src/lua/ltable.c	25;"	d	file:
LUA_CORE	src/lua/ltm.c	11;"	d	file:
LUA_CORE	src/lua/lundump.c	10;"	d	file:
LUA_CORE	src/lua/lvm.c	13;"	d	file:
LUA_CORE	src/lua/lzio.c	11;"	d	file:
LUA_CORE	src/lua/print.c	11;"	d	file:
LUA_CPATH	src/lua/luaconf.h	70;"	d
LUA_CPATH_DEFAULT	src/lua/luaconf.h	103;"	d
LUA_CPATH_DEFAULT	src/lua/luaconf.h	93;"	d
LUA_DBLIBNAME	src/lua/lualib.h	36;"	d
LUA_DIRSEP	src/lua/luaconf.h	114;"	d
LUA_DIRSEP	src/lua/luaconf.h	116;"	d
LUA_DL_DLL	src/lua/luaconf.h	705;"	d
LUA_DL_DLOPEN	src/lua/luaconf.h	701;"	d
LUA_DL_DYLD	src/lua/luaconf.h	44;"	d
LUA_ENVIRONINDEX	src/lua/lua.h	37;"	d
LUA_ERRERR	src/lua/lua.h	47;"	d
LUA_ERRFILE	src/lua/lauxlib.h	32;"	d
LUA_ERRMEM	src/lua/lua.h	46;"	d
LUA_ERRRUN	src/lua/lua.h	44;"	d
LUA_ERRSYNTAX	src/lua/lua.h	45;"	d
LUA_EXECDIR	src/lua/luaconf.h	134;"	d
LUA_FILEHANDLE	src/lua/lualib.h	15;"	d
LUA_GCCOLLECT	src/lua/lua.h	223;"	d
LUA_GCCOUNT	src/lua/lua.h	224;"	d
LUA_GCCOUNTB	src/lua/lua.h	225;"	d
LUA_GCRESTART	src/lua/lua.h	222;"	d
LUA_GCSETPAUSE	src/lua/lua.h	227;"	d
LUA_GCSETSTEPMUL	src/lua/lua.h	228;"	d
LUA_GCSTEP	src/lua/lua.h	226;"	d
LUA_GCSTOP	src/lua/lua.h	221;"	d
LUA_GLOBALSINDEX	src/lua/lua.h	38;"	d
LUA_HOOKCALL	src/lua/lua.h	311;"	d
LUA_HOOKCOUNT	src/lua/lua.h	314;"	d
LUA_HOOKLINE	src/lua/lua.h	313;"	d
LUA_HOOKRET	src/lua/lua.h	312;"	d
LUA_HOOKTAILRET	src/lua/lua.h	315;"	d
LUA_IDSIZE	src/lua/luaconf.h	210;"	d
LUA_IGMARK	src/lua/luaconf.h	135;"	d
LUA_INIT	src/lua/luaconf.h	71;"	d
LUA_INTEGER	src/lua/luaconf.h	143;"	d
LUA_INTFRMLEN	src/lua/luaconf.h	741;"	d
LUA_INTFRMLEN	src/lua/luaconf.h	746;"	d
LUA_INTFRM_T	src/lua/luaconf.h	742;"	d
LUA_INTFRM_T	src/lua/luaconf.h	747;"	d
LUA_IOLIBNAME	src/lua/lualib.h	24;"	d
LUA_LDIR	src/lua/luaconf.h	88;"	d
LUA_LDIR	src/lua/luaconf.h	98;"	d
LUA_LIB	src/lua/lauxlib.c	21;"	d	file:
LUA_LIB	src/lua/lbaselib.c	15;"	d	file:
LUA_LIB	src/lua/ldblib.c	13;"	d	file:
LUA_LIB	src/lua/linit.c	9;"	d	file:
LUA_LIB	src/lua/liolib.c	14;"	d	file:
LUA_LIB	src/lua/lmathlib.c	12;"	d	file:
LUA_LIB	src/lua/loadlib.c	17;"	d	file:
LUA_LIB	src/lua/loslib.c	15;"	d	file:
LUA_LIB	src/lua/lstrlib.c	15;"	d	file:
LUA_LIB	src/lua/ltablib.c	11;"	d	file:
LUA_LOADLIBNAME	src/lua/lualib.h	39;"	d
LUA_MASKCALL	src/lua/lua.h	321;"	d
LUA_MASKCOUNT	src/lua/lua.h	324;"	d
LUA_MASKLINE	src/lua/lua.h	323;"	d
LUA_MASKRET	src/lua/lua.h	322;"	d
LUA_MATHLIBNAME	src/lua/lualib.h	33;"	d
LUA_MAXCAPTURES	src/lua/luaconf.h	633;"	d
LUA_MAXINPUT	src/lua/luaconf.h	262;"	d
LUA_MINBUFFER	src/lua/llimits.h	105;"	d
LUA_MINSTACK	src/lua/lua.h	87;"	d
LUA_MULTRET	src/lua/lua.h	30;"	d
LUA_NOREF	src/lua/lauxlib.h	159;"	d
LUA_NUMBER	src/lua/luaconf.h	505;"	d
LUA_NUMBER_DOUBLE	src/lua/luaconf.h	504;"	d
LUA_NUMBER_FMT	src/lua/luaconf.h	522;"	d
LUA_NUMBER_SCAN	src/lua/luaconf.h	521;"	d
LUA_OFSEP	src/lua/loadlib.c	29;"	d	file:
LUA_OSLIBNAME	src/lua/lualib.h	27;"	d
LUA_PATH	src/lua/luaconf.h	69;"	d
LUA_PATHSEP	src/lua/luaconf.h	132;"	d
LUA_PATH_DEFAULT	src/lua/luaconf.h	100;"	d
LUA_PATH_DEFAULT	src/lua/luaconf.h	90;"	d
LUA_PATH_MARK	src/lua/luaconf.h	133;"	d
LUA_POF	src/lua/loadlib.c	26;"	d	file:
LUA_PROGNAME	src/lua/luaconf.h	254;"	d
LUA_PROMPT	src/lua/luaconf.h	245;"	d
LUA_PROMPT2	src/lua/luaconf.h	246;"	d
LUA_QL	src/lua/luaconf.h	201;"	d
LUA_QS	src/lua/luaconf.h	202;"	d
LUA_REFNIL	src/lua/lauxlib.h	160;"	d
LUA_REGISTRYINDEX	src/lua/lua.h	36;"	d
LUA_RELEASE	src/lua/lua.h	20;"	d
LUA_ROOT	src/lua/luaconf.h	97;"	d
LUA_SIGNATURE	src/lua/lua.h	27;"	d
LUA_STRLIBNAME	src/lua/lualib.h	30;"	d
LUA_TABLIBNAME	src/lua/lualib.h	21;"	d
LUA_TBOOLEAN	src/lua/lua.h	75;"	d
LUA_TDEADKEY	src/lua/lobject.h	30;"	d
LUA_TFUNCTION	src/lua/lua.h	80;"	d
LUA_TLIGHTUSERDATA	src/lua/lua.h	76;"	d
LUA_TMPNAMBUFSIZE	src/lua/luaconf.h	648;"	d
LUA_TMPNAMBUFSIZE	src/lua/luaconf.h	656;"	d
LUA_TNIL	src/lua/lua.h	74;"	d
LUA_TNONE	src/lua/lua.h	72;"	d
LUA_TNUMBER	src/lua/lua.h	77;"	d
LUA_TPROTO	src/lua/lobject.h	28;"	d
LUA_TSTRING	src/lua/lua.h	78;"	d
LUA_TTABLE	src/lua/lua.h	79;"	d
LUA_TTHREAD	src/lua/lua.h	82;"	d
LUA_TUPVAL	src/lua/lobject.h	29;"	d
LUA_TUSERDATA	src/lua/lua.h	81;"	d
LUA_USE_DLOPEN	src/lua/luaconf.h	38;"	d
LUA_USE_ISATTY	src/lua/luaconf.h	56;"	d
LUA_USE_MKSTEMP	src/lua/luaconf.h	55;"	d
LUA_USE_POPEN	src/lua/luaconf.h	57;"	d
LUA_USE_POSIX	src/lua/luaconf.h	37;"	d
LUA_USE_POSIX	src/lua/luaconf.h	43;"	d
LUA_USE_READLINE	src/lua/luaconf.h	39;"	d
LUA_USE_ULONGJMP	src/lua/luaconf.h	58;"	d
LUA_VERSION	src/lua/lua.h	19;"	d
LUA_VERSION_NUM	src/lua/lua.h	21;"	d
LUA_WIN	src/lua/luaconf.h	33;"	d
LUA_YIELD	src/lua/lua.h	43;"	d
L_ESC	src/lua/lstrlib.c	182;"	d	file:
L_Umaxalign	src/lua/llimits.h	/^typedef LUAI_USER_ALIGNMENT_T L_Umaxalign;$/;"	t
LabelButton	src/dialog/customassigndialog.h	/^    LabelButton()$/;"	f	class:LabelButton
LabelButton	src/dialog/customassigndialog.h	/^class LabelButton : public QLabel {$/;"	c
LargestInt	src/jsoncpp/include/json/config.h	/^   typedef Int64 LargestInt;$/;"	t	namespace:Json
LargestInt	src/jsoncpp/include/json/config.h	/^   typedef int LargestInt;$/;"	t	namespace:Json
LargestInt	src/jsoncpp/include/json/value.h	/^      typedef Json::LargestInt LargestInt;$/;"	t	class:Json::Value
LargestUInt	src/jsoncpp/include/json/config.h	/^   typedef UInt64 LargestUInt;$/;"	t	namespace:Json
LargestUInt	src/jsoncpp/include/json/config.h	/^   typedef unsigned int LargestUInt;$/;"	t	namespace:Json
LargestUInt	src/jsoncpp/include/json/value.h	/^      typedef Json::LargestUInt LargestUInt;$/;"	t	class:Json::Value
Left	src/core/skill.h	/^        Left,$/;"	e	enum:Skill::Location
Left	src/ui/joystick.h	/^    static const int Left = 1;$/;"	m	class:Joystick
Leiji	src/package/wind.cpp	/^    Leiji():TriggerSkill("leiji"){$/;"	f	class:Leiji
Leiji	src/package/wind.cpp	/^class Leiji: public TriggerSkill{$/;"	c	file:
LeijiCard	src/package/wind.cpp	/^LeijiCard::LeijiCard(){$/;"	f	class:LeijiCard
LeijiCard	src/package/wind.h	/^class LeijiCard: public SkillCard{$/;"	c
LeijiViewAsSkill	src/package/wind.cpp	/^    LeijiViewAsSkill():ZeroCardViewAsSkill("leiji"){$/;"	f	class:LeijiViewAsSkill
LeijiViewAsSkill	src/package/wind.cpp	/^class LeijiViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
Length	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong  Length;     \/*      table length *\/$/;"	m	struct:TT_TableRec_
LexState	src/lua/llex.h	/^typedef struct LexState {$/;"	s
LexState	src/lua/llex.h	/^} LexState;$/;"	t	typeref:struct:LexState
Lexue	src/package/yitianpackage.cpp	/^    Lexue():ViewAsSkill("lexue"){$/;"	f	class:Lexue
Lexue	src/package/yitianpackage.cpp	/^class Lexue: public ViewAsSkill{$/;"	c	file:
LexueCard	src/package/yitianpackage.cpp	/^LexueCard::LexueCard(){$/;"	f	class:LexueCard
LexueCard	src/package/yitianpackage.h	/^class LexueCard: public SkillCard{$/;"	c
Lianhuan	src/package/firepackage.cpp	/^    Lianhuan():OneCardViewAsSkill("lianhuan"){$/;"	f	class:Lianhuan
Lianhuan	src/package/firepackage.cpp	/^class Lianhuan: public OneCardViewAsSkill{$/;"	c	file:
Lianli	src/package/yitianpackage.cpp	/^    Lianli():PhaseChangeSkill("lianli"){$/;"	f	class:Lianli
Lianli	src/package/yitianpackage.cpp	/^class Lianli: public PhaseChangeSkill{$/;"	c	file:
LianliCard	src/package/yitianpackage.cpp	/^LianliCard::LianliCard(){$/;"	f	class:LianliCard
LianliCard	src/package/yitianpackage.h	/^class LianliCard: public SkillCard{$/;"	c
LianliClear	src/package/yitianpackage.cpp	/^    LianliClear():TriggerSkill("#lianli-clear"){$/;"	f	class:LianliClear
LianliClear	src/package/yitianpackage.cpp	/^class LianliClear: public TriggerSkill{$/;"	c	file:
LianliJink	src/package/yitianpackage.cpp	/^    LianliJink():TriggerSkill("#lianli-jink"){$/;"	f	class:LianliJink
LianliJink	src/package/yitianpackage.cpp	/^class LianliJink: public TriggerSkill{$/;"	c	file:
LianliSlash	src/package/yitianpackage.cpp	/^    LianliSlash():TriggerSkill("#lianli-slash"){$/;"	f	class:LianliSlash
LianliSlash	src/package/yitianpackage.cpp	/^class LianliSlash: public TriggerSkill{$/;"	c	file:
LianliSlashCard	src/package/yitianpackage.cpp	/^LianliSlashCard::LianliSlashCard(){$/;"	f	class:LianliSlashCard
LianliSlashCard	src/package/yitianpackage.h	/^class LianliSlashCard: public SkillCard{$/;"	c
LianliSlashViewAsSkill	src/package/yitianpackage.cpp	/^    LianliSlashViewAsSkill():ZeroCardViewAsSkill("lianli-slash"){$/;"	f	class:LianliSlashViewAsSkill
LianliSlashViewAsSkill	src/package/yitianpackage.cpp	/^class LianliSlashViewAsSkill:public ZeroCardViewAsSkill{$/;"	c	file:
LianliStart	src/package/yitianpackage.cpp	/^    LianliStart():GameStartSkill("#lianli-start") {$/;"	f	class:LianliStart
LianliStart	src/package/yitianpackage.cpp	/^class LianliStart: public GameStartSkill{$/;"	c	file:
LianliViewAsSkill	src/package/yitianpackage.cpp	/^    LianliViewAsSkill():ZeroCardViewAsSkill(""){$/;"	f	class:LianliViewAsSkill
LianliViewAsSkill	src/package/yitianpackage.cpp	/^class LianliViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
Lianpo	src/package/god.cpp	/^    Lianpo():PhaseChangeSkill("lianpo"){$/;"	f	class:Lianpo
Lianpo	src/package/god.cpp	/^class Lianpo: public PhaseChangeSkill{$/;"	c	file:
LianpoCount	src/package/god.cpp	/^    LianpoCount():TriggerSkill("#lianpo-count"){$/;"	f	class:LianpoCount
LianpoCount	src/package/god.cpp	/^class LianpoCount: public TriggerSkill{$/;"	c	file:
LianpoDo	src/package/god.cpp	/^    LianpoDo():PhaseChangeSkill("#lianpo-do"){$/;"	f	class:LianpoDo
LianpoDo	src/package/god.cpp	/^class LianpoDo: public PhaseChangeSkill{$/;"	c	file:
Lianying	src/package/standard-generals.cpp	/^    Lianying():TriggerSkill("lianying"){$/;"	f	class:Lianying
Lianying	src/package/standard-generals.cpp	/^class Lianying: public TriggerSkill{$/;"	c	file:
Liegong	src/package/wind.cpp	/^    Liegong():TriggerSkill("liegong"){$/;"	f	class:Liegong
Liegong	src/package/wind.cpp	/^class Liegong:public TriggerSkill{$/;"	c	file:
Lieren	src/package/thicket.cpp	/^    Lieren():TriggerSkill("lieren"){$/;"	f	class:Lieren
Lieren	src/package/thicket.cpp	/^class Lieren: public TriggerSkill{$/;"	c	file:
Lightning	src/package/standard-cards.cpp	/^Lightning::Lightning(Suit suit, int number):Disaster(suit, number){$/;"	f	class:Lightning
Lightning	src/package/standard.h	/^class Lightning: public Disaster{$/;"	c
Lihun	src/package/bgm-package.cpp	/^    Lihun():TriggerSkill("lihun"){$/;"	f	class:Lihun
Lihun	src/package/bgm-package.cpp	/^class Lihun: public TriggerSkill{$/;"	c	file:
LihunCard	src/package/bgm-package.cpp	/^LihunCard::LihunCard(){$/;"	f	class:LihunCard
LihunCard	src/package/bgm-package.h	/^class LihunCard: public SkillCard{$/;"	c
LihunSelect	src/package/bgm-package.cpp	/^    LihunSelect():OneCardViewAsSkill("lihun"){$/;"	f	class:LihunSelect
LihunSelect	src/package/bgm-package.cpp	/^class LihunSelect: public OneCardViewAsSkill{$/;"	c	file:
Lihuo	src/package/yjcm2012-package.cpp	/^    Lihuo():TriggerSkill("lihuo"){$/;"	f	class:Lihuo
Lihuo	src/package/yjcm2012-package.cpp	/^class Lihuo: public TriggerSkill{$/;"	c	file:
LihuoViewAsSkill	src/package/yjcm2012-package.cpp	/^    LihuoViewAsSkill():OneCardViewAsSkill("lihuo"){$/;"	f	class:LihuoViewAsSkill
LihuoViewAsSkill	src/package/yjcm2012-package.cpp	/^class LihuoViewAsSkill:public OneCardViewAsSkill{$/;"	c	file:
Lijian	src/package/standard-generals.cpp	/^    Lijian():OneCardViewAsSkill("lijian"){$/;"	f	class:Lijian
Lijian	src/package/standard-generals.cpp	/^class Lijian: public OneCardViewAsSkill{$/;"	c	file:
LijianCard	src/package/standard-skillcards.cpp	/^LijianCard::LijianCard(){$/;"	f	class:LijianCard
LijianCard	src/package/standard-skillcards.h	/^class LijianCard: public SkillCard{$/;"	c
Limited	src/core/skill.h	/^        Limited,$/;"	e	enum:Skill::Frequency
Line	src/breakpad/processor/fast_source_line_resolver_types.h	/^struct FastSourceLineResolver::Line : public SourceLineResolverBase::Line {$/;"	s	class:google_breakpad::FastSourceLineResolver
Line	src/breakpad/processor/module_serializer.h	/^  typedef BasicSourceLineResolver::Line Line;$/;"	t	class:google_breakpad::ModuleSerializer
Line	src/breakpad/processor/simple_serializer-inl.h	/^  typedef BasicSourceLineResolver::Line Line;$/;"	t	class:google_breakpad::SimpleSerializer
Line	src/breakpad/processor/source_line_resolver_base_types.h	/^  Line() { }$/;"	f	struct:google_breakpad::SourceLineResolverBase::Line
Line	src/breakpad/processor/source_line_resolver_base_types.h	/^  Line(MemAddr addr, MemAddr code_size, int file_id, int source_line)$/;"	f	struct:google_breakpad::SourceLineResolverBase::Line
Line	src/breakpad/processor/source_line_resolver_base_types.h	/^struct SourceLineResolverBase::Line {$/;"	s	class:google_breakpad::SourceLineResolverBase
Line_Gap	include/freetype/freetype/tttables.h	/^    FT_Short   Line_Gap;$/;"	m	struct:TT_HoriHeader_
Line_Gap	include/freetype/freetype/tttables.h	/^    FT_Short   Line_Gap;$/;"	m	struct:TT_VertHeader_
LingPackage	src/package/lingpackage.cpp	/^LingPackage::LingPackage()$/;"	f	class:LingPackage
LingPackage	src/package/lingpackage.h	/^class LingPackage : public Package{$/;"	c
List	src/breakpad/processor/synth_minidump.h	/^  List(const Dump &dump, u_int32_t type) : Stream(dump, type), count_(0) {$/;"	f	class:google_breakpad::SynthMinidump::List
List	src/breakpad/processor/synth_minidump.h	/^class List: public Stream {$/;"	c	namespace:google_breakpad::SynthMinidump
Liuli	src/package/standard-generals.cpp	/^    Liuli():TriggerSkill("liuli"){$/;"	f	class:Liuli
Liuli	src/package/standard-generals.cpp	/^class Liuli: public TriggerSkill{$/;"	c	file:
LiuliCard	src/package/standard-skillcards.cpp	/^LiuliCard::LiuliCard()$/;"	f	class:LiuliCard
LiuliCard	src/package/standard-skillcards.h	/^class LiuliCard: public SkillCard{$/;"	c
LiuliViewAsSkill	src/package/standard-generals.cpp	/^    LiuliViewAsSkill():OneCardViewAsSkill("liuli"){$/;"	f	class:LiuliViewAsSkill
LiuliViewAsSkill	src/package/standard-generals.cpp	/^class LiuliViewAsSkill: public OneCardViewAsSkill{$/;"	c	file:
LoadBlock	src/lua/lundump.c	/^static void LoadBlock(LoadState* S, void* b, size_t size)$/;"	f	file:
LoadByte	src/lua/lundump.c	44;"	d	file:
LoadChar	src/lua/lundump.c	/^static int LoadChar(LoadState* S)$/;"	f	file:
LoadCode	src/lua/lundump.c	/^static void LoadCode(LoadState* S, Proto* f)$/;"	f	file:
LoadConstants	src/lua/lundump.c	/^static void LoadConstants(LoadState* S, Proto* f)$/;"	f	file:
LoadDebug	src/lua/lundump.c	/^static void LoadDebug(LoadState* S, Proto* f)$/;"	f	file:
LoadF	src/lua/lauxlib.c	/^typedef struct LoadF {$/;"	s	file:
LoadF	src/lua/lauxlib.c	/^} LoadF;$/;"	t	typeref:struct:LoadF	file:
LoadFunction	src/lua/lundump.c	/^static Proto* LoadFunction(LoadState* S, TString* p)$/;"	f	file:
LoadHeader	src/lua/lundump.c	/^static void LoadHeader(LoadState* S)$/;"	f	file:
LoadInt	src/lua/lundump.c	/^static int LoadInt(LoadState* S)$/;"	f	file:
LoadMapFromMemory	src/breakpad/processor/basic_source_line_resolver.cc	/^bool BasicSourceLineResolver::Module::LoadMapFromMemory(char *memory_buffer) {$/;"	f	class:google_breakpad::BasicSourceLineResolver::Module
LoadMapFromMemory	src/breakpad/processor/fast_source_line_resolver.cc	/^bool FastSourceLineResolver::Module::LoadMapFromMemory(char *mem_buffer) {$/;"	f	class:google_breakpad::FastSourceLineResolver::Module
LoadMem	src/lua/lundump.c	43;"	d	file:
LoadModule	src/breakpad/processor/source_line_resolver_base.cc	/^bool SourceLineResolverBase::LoadModule(const CodeModule *module,$/;"	f	class:google_breakpad::SourceLineResolverBase
LoadModuleUsingMapBuffer	src/breakpad/processor/source_line_resolver_base.cc	/^bool SourceLineResolverBase::LoadModuleUsingMapBuffer($/;"	f	class:google_breakpad::SourceLineResolverBase
LoadModuleUsingMemoryBuffer	src/breakpad/processor/source_line_resolver_base.cc	/^bool SourceLineResolverBase::LoadModuleUsingMemoryBuffer($/;"	f	class:google_breakpad::SourceLineResolverBase
LoadNumber	src/lua/lundump.c	/^static lua_Number LoadNumber(LoadState* S)$/;"	f	file:
LoadS	src/lua/lauxlib.c	/^typedef struct LoadS {$/;"	s	file:
LoadS	src/lua/lauxlib.c	/^} LoadS;$/;"	t	typeref:struct:LoadS	file:
LoadState	src/lua/lundump.c	/^} LoadState;$/;"	t	typeref:struct:__anon102	file:
LoadString	src/lua/lundump.c	/^static TString* LoadString(LoadState* S)$/;"	f	file:
LoadVar	src/lua/lundump.c	45;"	d	file:
LoadVector	src/lua/lundump.c	46;"	d	file:
LoadedScenario	src/scenario/miniscenarios.h	/^    LoadedScenario(const QString &name)$/;"	f	class:LoadedScenario
LoadedScenario	src/scenario/miniscenarios.h	/^class LoadedScenario : public MiniScene$/;"	c
LocVar	src/lua/lobject.h	/^typedef struct LocVar {$/;"	s
LocVar	src/lua/lobject.h	/^} LocVar;$/;"	t	typeref:struct:LocVar
Location	src/core/skill.h	/^    enum Location{$/;"	g	class:Skill
Location	src/jsoncpp/include/json/reader.h	/^      typedef const Char *Location;$/;"	t	class:Json::Reader
Location	src/package/standard.h	/^    enum Location {$/;"	g	class:EquipCard
LogMessage	src/server/roomthread.cpp	/^LogMessage::LogMessage()$/;"	f	class:LogMessage
LogMessage	src/server/roomthread.h	/^struct LogMessage{$/;"	s
LogMessageVoidify	src/breakpad/processor/logging.h	/^  LogMessageVoidify() {}$/;"	f	class:google_breakpad::LogMessageVoidify
LogMessageVoidify	src/breakpad/processor/logging.h	/^class LogMessageVoidify {$/;"	c	namespace:google_breakpad
LogStream	src/breakpad/processor/logging.cc	/^LogStream::LogStream(std::ostream &stream, Severity severity,$/;"	f	class:google_breakpad::LogStream
LogStream	src/breakpad/processor/logging.h	/^class LogStream {$/;"	c	namespace:google_breakpad
Longdan	src/package/standard-generals.cpp	/^    Longdan():OneCardViewAsSkill("longdan"){$/;"	f	class:Longdan
Longdan	src/package/standard-generals.cpp	/^class Longdan:public OneCardViewAsSkill{$/;"	c	file:
Longhun	src/package/god.cpp	/^    Longhun():ViewAsSkill("longhun"){$/;"	f	class:Longhun
Longhun	src/package/god.cpp	/^class Longhun: public ViewAsSkill{$/;"	c	file:
Longluo	src/package/wisdompackage.cpp	/^    Longluo():TriggerSkill("longluo"){$/;"	f	class:Longluo
Longluo	src/package/wisdompackage.cpp	/^class Longluo: public TriggerSkill{$/;"	c	file:
Longnu	src/package/standard-generals.cpp	/^    Longnu():TriggerSkill("longnu"){$/;"	f	class:Longnu
Longnu	src/package/standard-generals.cpp	/^class Longnu: public TriggerSkill{$/;"	c	file:
LookupAddress	src/breakpad/processor/basic_source_line_resolver.cc	/^void BasicSourceLineResolver::Module::LookupAddress(StackFrame *frame) const {$/;"	f	class:google_breakpad::BasicSourceLineResolver::Module
LookupAddress	src/breakpad/processor/fast_source_line_resolver.cc	/^void FastSourceLineResolver::Module::LookupAddress(StackFrame *frame) const {$/;"	f	class:google_breakpad::FastSourceLineResolver::Module
LookupTester	src/breakpad/processor/static_map_unittest.cc	/^  void LookupTester(int test_case) {$/;"	f	class:TestValidMap
Lord	src/core/player.h	/^    enum Role {Lord, Loyalist, Rebel, Renegade};$/;"	e	enum:Player::Role
LowerBoundTester	src/breakpad/processor/static_map_unittest.cc	/^  void LowerBoundTester(int test_case, const KeyType &key) {$/;"	f	class:TestValidMap
Lowest_Rec_PPEM	include/freetype/freetype/tttables.h	/^    FT_UShort  Lowest_Rec_PPEM;$/;"	m	struct:TT_Header_
Loyalist	src/core/player.h	/^    enum Role {Lord, Loyalist, Rebel, Renegade};$/;"	e	enum:Player::Role
LuaAI	src/server/ai.cpp	/^LuaAI::LuaAI(ServerPlayer *player)$/;"	f	class:LuaAI
LuaAI	src/server/ai.h	/^class LuaAI: public TrustAI{$/;"	c
LuaDistanceSkill	src/core/lua-wrapper.cpp	/^LuaDistanceSkill::LuaDistanceSkill(const char *name)$/;"	f	class:LuaDistanceSkill
LuaDistanceSkill	src/core/lua-wrapper.h	/^class LuaDistanceSkill: public DistanceSkill{$/;"	c
LuaFilterSkill	src/core/lua-wrapper.cpp	/^LuaFilterSkill::LuaFilterSkill(const char *name)$/;"	f	class:LuaFilterSkill
LuaFilterSkill	src/core/lua-wrapper.h	/^class LuaFilterSkill: public FilterSkill{$/;"	c
LuaFunction	src/core/lua-wrapper.h	/^typedef int LuaFunction;$/;"	t
LuaFunction	src/server/ai.h	/^typedef int LuaFunction;$/;"	t
LuaMaxCardsSkill	src/core/lua-wrapper.cpp	/^LuaMaxCardsSkill::LuaMaxCardsSkill(const char *name)$/;"	f	class:LuaMaxCardsSkill
LuaMaxCardsSkill	src/core/lua-wrapper.h	/^class LuaMaxCardsSkill: public MaxCardsSkill{$/;"	c
LuaProhibitSkill	src/core/lua-wrapper.cpp	/^LuaProhibitSkill::LuaProhibitSkill(const char *name)$/;"	f	class:LuaProhibitSkill
LuaProhibitSkill	src/core/lua-wrapper.h	/^class LuaProhibitSkill: public ProhibitSkill{$/;"	c
LuaSkillCard	src/core/lua-wrapper.cpp	/^LuaSkillCard::LuaSkillCard(const char *name)$/;"	f	class:LuaSkillCard
LuaSkillCard	src/core/lua-wrapper.h	/^class LuaSkillCard: public SkillCard{$/;"	c
LuaSkillCards	src/core/lua-wrapper.cpp	/^static QHash<QString, const LuaSkillCard *> LuaSkillCards;$/;"	v	file:
LuaTriggerSkill	src/core/lua-wrapper.cpp	/^LuaTriggerSkill::LuaTriggerSkill(const char *name, Frequency frequency)$/;"	f	class:LuaTriggerSkill
LuaTriggerSkill	src/core/lua-wrapper.h	/^class LuaTriggerSkill: public TriggerSkill{$/;"	c
LuaViewAsSkill	src/core/lua-wrapper.cpp	/^LuaViewAsSkill::LuaViewAsSkill(const char *name)$/;"	f	class:LuaViewAsSkill
LuaViewAsSkill	src/core/lua-wrapper.h	/^class LuaViewAsSkill: public ViewAsSkill{$/;"	c
Luanji	src/package/firepackage.cpp	/^    Luanji():ViewAsSkill("luanji"){$/;"	f	class:Luanji
Luanji	src/package/firepackage.cpp	/^class Luanji:public ViewAsSkill{$/;"	c	file:
Luanwu	src/package/thicket.cpp	/^    Luanwu():ZeroCardViewAsSkill("luanwu"){$/;"	f	class:Luanwu
Luanwu	src/package/thicket.cpp	/^class Luanwu: public ZeroCardViewAsSkill{$/;"	c	file:
LuanwuCard	src/package/thicket.cpp	/^LuanwuCard::LuanwuCard(){$/;"	f	class:LuanwuCard
LuanwuCard	src/package/thicket.h	/^class LuanwuCard: public SkillCard{$/;"	c
LukangWeiyan	src/package/yitianpackage.cpp	/^    LukangWeiyan():TriggerSkill("lukang_weiyan"){$/;"	f	class:LukangWeiyan
LukangWeiyan	src/package/yitianpackage.cpp	/^class LukangWeiyan: public TriggerSkill{$/;"	c	file:
Luoshen	src/package/standard-generals.cpp	/^    Luoshen():TriggerSkill("luoshen"){$/;"	f	class:Luoshen
Luoshen	src/package/standard-generals.cpp	/^class Luoshen:public TriggerSkill{$/;"	c	file:
Luoyi	src/package/standard-generals.cpp	/^    Luoyi():DrawCardsSkill("luoyi"){$/;"	f	class:Luoyi
Luoyi	src/package/standard-generals.cpp	/^class Luoyi: public DrawCardsSkill{$/;"	c	file:
LuoyiBuff	src/package/standard-generals.cpp	/^    LuoyiBuff():TriggerSkill("#luoyi"){$/;"	f	class:LuoyiBuff
LuoyiBuff	src/package/standard-generals.cpp	/^class LuoyiBuff: public TriggerSkill{$/;"	c	file:
LuoyiCard	src/package/lingpackage.cpp	/^LuoyiCard::LuoyiCard(){$/;"	f	class:LuoyiCard
LuoyiCard	src/package/lingpackage.h	/^class LuoyiCard: public SkillCard{$/;"	c
Luoying	src/package/yjcm-package.cpp	/^    Luoying():TriggerSkill("luoying"){$/;"	f	class:Luoying
Luoying	src/package/yjcm-package.cpp	/^class Luoying: public TriggerSkill{$/;"	c	file:
MAINWINDOW_H	src/dialog/mainwindow.h	2;"	d
MANEUVERING_H	src/package/maneuvering.h	2;"	d
MASK0	src/lua/lopcodes.h	74;"	d
MASK1	src/lua/lopcodes.h	71;"	d
MAXARG_A	src/lua/lopcodes.h	65;"	d
MAXARG_B	src/lua/lopcodes.h	66;"	d
MAXARG_Bx	src/lua/lopcodes.h	57;"	d
MAXARG_Bx	src/lua/lopcodes.h	60;"	d
MAXARG_C	src/lua/lopcodes.h	67;"	d
MAXARG_sBx	src/lua/lopcodes.h	58;"	d
MAXARG_sBx	src/lua/lopcodes.h	61;"	d
MAXASIZE	src/lua/ltable.c	47;"	d	file:
MAXBITS	src/lua/ltable.c	42;"	d	file:
MAXBITS	src/lua/ltable.c	44;"	d	file:
MAXINDEXRK	src/lua/lopcodes.h	127;"	d
MAXSRC	src/lua/llex.c	75;"	d	file:
MAXSTACK	src/lua/llimits.h	93;"	d
MAXTAGLOOP	src/lua/lvm.c	32;"	d	file:
MAX_FORMAT	src/lua/lstrlib.c	693;"	d	file:
MAX_INT	src/lua/llimits.h	35;"	d
MAX_ITEM	src/lua/lstrlib.c	686;"	d	file:
MAX_LUMEM	src/lua/llimits.h	32;"	d
MAX_SIZET	src/lua/llimits.h	30;"	d
MDARMRegisterNumbers	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	/^enum MDARMRegisterNumbers {$/;"	g
MDAccessViolationTypeWin	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^} MDAccessViolationTypeWin;$/;"	t	typeref:enum:__anon54
MDAssertionInfoData	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDAssertionInfoData;$/;"	t	typeref:enum:__anon52
MDBreakpadInfoValidity	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDBreakpadInfoValidity;$/;"	t	typeref:enum:__anon50
MDCPUArchitecture	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDCPUArchitecture;$/;"	t	typeref:enum:__anon40
MDCPUInformation	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDCPUInformation;  \/* CPU_INFORMATION *\/$/;"	t	typeref:union:__anon36
MDCVHeader	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDCVHeader;$/;"	t	typeref:struct:__anon27
MDCVInfoELF	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDCVInfoELF;$/;"	t	typeref:struct:__anon30
MDCVInfoPDB20	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDCVInfoPDB20;$/;"	t	typeref:struct:__anon28
MDCVInfoPDB20_minsize	src/breakpad/google_breakpad/common/minidump_format.h	/^static const size_t MDCVInfoPDB20_minsize = offsetof(MDCVInfoPDB20,$/;"	v
MDCVInfoPDB70	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDCVInfoPDB70;$/;"	t	typeref:struct:__anon29
MDCVInfoPDB70_minsize	src/breakpad/google_breakpad/common/minidump_format.h	/^static const size_t MDCVInfoPDB70_minsize = offsetof(MDCVInfoPDB70,$/;"	v
MDException	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDException;  \/* MINIDUMP_EXCEPTION *\/$/;"	t	typeref:struct:__anon34
MDExceptionCodeLinux	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^} MDExceptionCodeLinux;$/;"	t	typeref:enum:__anon60
MDExceptionCodeMac	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^} MDExceptionCodeMac;$/;"	t	typeref:enum:__anon13
MDExceptionCodeSolaris	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^} MDExceptionCodeSolaris;$/;"	t	typeref:enum:__anon59
MDExceptionCodeWin	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^} MDExceptionCodeWin;$/;"	t	typeref:enum:__anon53
MDExceptionMac	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^} MDExceptionMac;$/;"	t	typeref:enum:__anon12
MDFloatingSaveAreaARM	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	/^} MDFloatingSaveAreaARM;$/;"	t	typeref:struct:__anon61
MDFloatingSaveAreaPPC	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^} MDFloatingSaveAreaPPC;  \/* Based on ppc_float_state *\/$/;"	t	typeref:struct:__anon9
MDFloatingSaveAreaPPC64	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	/^typedef MDFloatingSaveAreaPPC MDFloatingSaveAreaPPC64;$/;"	t
MDFloatingSaveAreaSPARC	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	/^} MDFloatingSaveAreaSPARC;  \/* FLOATING_SAVE_AREA *\/$/;"	t	typeref:struct:__anon63
MDFloatingSaveAreaX86	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^} MDFloatingSaveAreaX86;  \/* FLOATING_SAVE_AREA *\/$/;"	t	typeref:struct:__anon6
MDGUID	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDGUID;  \/* GUID *\/$/;"	t	typeref:struct:__anon14
MDImageDebugMisc	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDImageDebugMisc;  \/* IMAGE_DEBUG_MISC *\/$/;"	t	typeref:struct:__anon31
MDImageDebugMisc_minsize	src/breakpad/google_breakpad/common/minidump_format.h	/^static const size_t MDImageDebugMisc_minsize = offsetof(MDImageDebugMisc,$/;"	v
MDLocationDescriptor	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDLocationDescriptor;  \/* MINIDUMP_LOCATION_DESCRIPTOR *\/$/;"	t	typeref:struct:__anon17
MDMemoryDescriptor	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDMemoryDescriptor;  \/* MINIDUMP_MEMORY_DESCRIPTOR *\/$/;"	t	typeref:struct:__anon18
MDMemoryProtection	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDMemoryProtection;$/;"	t	typeref:enum:__anon47
MDMemoryState	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDMemoryState;$/;"	t	typeref:enum:__anon46
MDMemoryType	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDMemoryType;$/;"	t	typeref:enum:__anon48
MDMiscInfoFlags1	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDMiscInfoFlags1;$/;"	t	typeref:enum:__anon43
MDOSPlatform	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDOSPlatform;$/;"	t	typeref:enum:__anon41
MDRVA	src/breakpad/google_breakpad/common/minidump_format.h	/^typedef u_int32_t MDRVA;  \/* RVA *\/$/;"	t
MDRawAssertionInfo	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDRawAssertionInfo;$/;"	t	typeref:struct:__anon51
MDRawBreakpadInfo	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDRawBreakpadInfo;$/;"	t	typeref:struct:__anon49
MDRawContextAMD64	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^} MDRawContextAMD64;  \/* CONTEXT *\/$/;"	t	typeref:struct:__anon56
MDRawContextARM	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	/^} MDRawContextARM;$/;"	t	typeref:struct:__anon62
MDRawContextBase	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDRawContextBase;$/;"	t	typeref:struct:__anon15
MDRawContextPPC	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^} MDRawContextPPC;  \/* Based on ppc_thread_state *\/$/;"	t	typeref:struct:__anon11
MDRawContextPPC64	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	/^} MDRawContextPPC64;  \/* Based on ppc_thread_state *\/$/;"	t	typeref:struct:__anon8
MDRawContextSPARC	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	/^} MDRawContextSPARC;  \/* CONTEXT_SPARC *\/$/;"	t	typeref:struct:__anon64
MDRawContextX86	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^} MDRawContextX86;  \/* CONTEXT *\/$/;"	t	typeref:struct:__anon7
MDRawDirectory	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDRawDirectory;  \/* MINIDUMP_DIRECTORY *\/$/;"	t	typeref:struct:__anon21
MDRawExceptionStream	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDRawExceptionStream;  \/* MINIDUMP_EXCEPTION_STREAM *\/$/;"	t	typeref:struct:__anon35
MDRawHeader	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDRawHeader;  \/* MINIDUMP_HEADER *\/$/;"	t	typeref:struct:__anon19
MDRawMemoryInfo	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDRawMemoryInfo;  \/* MINIDUMP_MEMORY_INFO *\/$/;"	t	typeref:struct:__anon45
MDRawMemoryInfoList	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDRawMemoryInfoList;  \/* MINIDUMP_MEMORY_INFO_LIST *\/$/;"	t	typeref:struct:__anon44
MDRawMemoryList	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDRawMemoryList;  \/* MINIDUMP_MEMORY_LIST *\/$/;"	t	typeref:struct:__anon33
MDRawMemoryList_minsize	src/breakpad/google_breakpad/common/minidump_format.h	/^static const size_t MDRawMemoryList_minsize = offsetof(MDRawMemoryList,$/;"	v
MDRawMiscInfo	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDRawMiscInfo;  \/* MINIDUMP_MISC_INFO, MINIDUMP_MISC_INFO2 *\/$/;"	t	typeref:struct:__anon42
MDRawModule	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDRawModule;  \/* MINIDUMP_MODULE *\/$/;"	t	typeref:struct:__anon26
MDRawModuleList	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDRawModuleList;  \/* MINIDUMP_MODULE_LIST *\/$/;"	t	typeref:struct:__anon32
MDRawModuleList_minsize	src/breakpad/google_breakpad/common/minidump_format.h	/^static const size_t MDRawModuleList_minsize = offsetof(MDRawModuleList,$/;"	v
MDRawSystemInfo	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDRawSystemInfo;  \/* MINIDUMP_SYSTEM_INFO *\/$/;"	t	typeref:struct:__anon39
MDRawThread	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDRawThread;  \/* MINIDUMP_THREAD *\/$/;"	t	typeref:struct:__anon24
MDRawThreadList	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDRawThreadList;  \/* MINIDUMP_THREAD_LIST *\/$/;"	t	typeref:struct:__anon25
MDRawThreadList_minsize	src/breakpad/google_breakpad/common/minidump_format.h	/^static const size_t MDRawThreadList_minsize = offsetof(MDRawThreadList,$/;"	v
MDStreamType	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDStreamType;  \/* MINIDUMP_STREAM_TYPE *\/$/;"	t	typeref:enum:__anon22
MDString	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDString;  \/* MINIDUMP_STRING *\/$/;"	t	typeref:struct:__anon23
MDString_minsize	src/breakpad/google_breakpad/common/minidump_format.h	/^static const size_t MDString_minsize = offsetof(MDString, buffer[0]);$/;"	v
MDType	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDType;  \/* MINIDUMP_TYPE *\/$/;"	t	typeref:enum:__anon20
MDVSFixedFileInfo	src/breakpad/google_breakpad/common/minidump_format.h	/^} MDVSFixedFileInfo;  \/* VS_FIXEDFILEINFO *\/$/;"	t	typeref:struct:__anon16
MDVectorSaveAreaPPC	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^} MDVectorSaveAreaPPC;  \/* ppc_vector_state *\/$/;"	t	typeref:struct:__anon10
MDVectorSaveAreaPPC64	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	/^typedef MDVectorSaveAreaPPC MDVectorSaveAreaPPC64;$/;"	t
MDXmmSaveArea32AMD64	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^} MDXmmSaveArea32AMD64;  \/* XMM_SAVE_AREA32 *\/$/;"	t	typeref:struct:__anon55
MD_ACCESS_VIOLATION_WIN_EXEC	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_ACCESS_VIOLATION_WIN_EXEC  = 8$/;"	e	enum:__anon54
MD_ACCESS_VIOLATION_WIN_READ	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_ACCESS_VIOLATION_WIN_READ  = 0,$/;"	e	enum:__anon54
MD_ACCESS_VIOLATION_WIN_WRITE	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_ACCESS_VIOLATION_WIN_WRITE = 1,$/;"	e	enum:__anon54
MD_ASSERTION_INFO_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_ASSERTION_INFO_STREAM       = 0x47670002   \/* MDRawAssertionInfo *\/$/;"	e	enum:__anon22
MD_ASSERTION_INFO_TYPE_INVALID_PARAMETER	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_ASSERTION_INFO_TYPE_INVALID_PARAMETER,$/;"	e	enum:__anon52
MD_ASSERTION_INFO_TYPE_PURE_VIRTUAL_CALL	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_ASSERTION_INFO_TYPE_PURE_VIRTUAL_CALL$/;"	e	enum:__anon52
MD_ASSERTION_INFO_TYPE_UNKNOWN	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_ASSERTION_INFO_TYPE_UNKNOWN = 0,$/;"	e	enum:__anon52
MD_BREAKPAD_INFO_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_BREAKPAD_INFO_STREAM        = 0x47670001,  \/* MDRawBreakpadInfo *\/$/;"	e	enum:__anon22
MD_BREAKPAD_INFO_VALID_DUMP_THREAD_ID	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_BREAKPAD_INFO_VALID_DUMP_THREAD_ID       = 1 << 0,$/;"	e	enum:__anon50
MD_BREAKPAD_INFO_VALID_REQUESTING_THREAD_ID	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_BREAKPAD_INFO_VALID_REQUESTING_THREAD_ID = 1 << 1$/;"	e	enum:__anon50
MD_COMMENT_STREAM_A	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_COMMENT_STREAM_A            = 10,$/;"	e	enum:__anon22
MD_COMMENT_STREAM_W	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_COMMENT_STREAM_W            = 11,$/;"	e	enum:__anon22
MD_CONTEXT_ALPHA	src/breakpad/google_breakpad/common/minidump_format.h	101;"	d
MD_CONTEXT_AMD64	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	206;"	d
MD_CONTEXT_AMD64_ALL	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	229;"	d
MD_CONTEXT_AMD64_CONTROL	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	207;"	d
MD_CONTEXT_AMD64_DEBUG_REGISTERS	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	215;"	d
MD_CONTEXT_AMD64_FLOATING_POINT	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	213;"	d
MD_CONTEXT_AMD64_FULL	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	224;"	d
MD_CONTEXT_AMD64_INTEGER	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	209;"	d
MD_CONTEXT_AMD64_SEGMENTS	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	211;"	d
MD_CONTEXT_AMD64_VR_COUNT	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	100;"	d
MD_CONTEXT_AMD64_XSTATE	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	217;"	d
MD_CONTEXT_ARM	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	141;"	d
MD_CONTEXT_ARM_ALL	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	148;"	d
MD_CONTEXT_ARM_FLOATING_POINT	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	143;"	d
MD_CONTEXT_ARM_FULL	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	145;"	d
MD_CONTEXT_ARM_GPR_COUNT	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	89;"	d
MD_CONTEXT_ARM_INTEGER	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	142;"	d
MD_CONTEXT_ARM_OLD	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	138;"	d
MD_CONTEXT_ARM_REG_FP	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	/^  MD_CONTEXT_ARM_REG_FP     = 11,$/;"	e	enum:MDARMRegisterNumbers
MD_CONTEXT_ARM_REG_IOS_FP	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	/^  MD_CONTEXT_ARM_REG_IOS_FP = 7,$/;"	e	enum:MDARMRegisterNumbers
MD_CONTEXT_ARM_REG_LR	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	/^  MD_CONTEXT_ARM_REG_LR     = 14,$/;"	e	enum:MDARMRegisterNumbers
MD_CONTEXT_ARM_REG_PC	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	/^  MD_CONTEXT_ARM_REG_PC     = 15$/;"	e	enum:MDARMRegisterNumbers
MD_CONTEXT_ARM_REG_SP	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	/^  MD_CONTEXT_ARM_REG_SP     = 13,$/;"	e	enum:MDARMRegisterNumbers
MD_CONTEXT_CPU_MASK	src/breakpad/google_breakpad/common/minidump_format.h	106;"	d
MD_CONTEXT_IA64	src/breakpad/google_breakpad/common/minidump_format.h	97;"	d
MD_CONTEXT_MIPS	src/breakpad/google_breakpad/common/minidump_format.h	100;"	d
MD_CONTEXT_PPC	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	153;"	d
MD_CONTEXT_PPC	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	119;"	d
MD_CONTEXT_PPC64_GPR_COUNT	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	87;"	d
MD_CONTEXT_PPC_ALL	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	159;"	d
MD_CONTEXT_PPC_ALL	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	125;"	d
MD_CONTEXT_PPC_BASE	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	154;"	d
MD_CONTEXT_PPC_BASE	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	120;"	d
MD_CONTEXT_PPC_FLOATING_POINT	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	155;"	d
MD_CONTEXT_PPC_FLOATING_POINT	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	121;"	d
MD_CONTEXT_PPC_FULL	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	158;"	d
MD_CONTEXT_PPC_FULL	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	124;"	d
MD_CONTEXT_PPC_GPR_COUNT	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	105;"	d
MD_CONTEXT_PPC_VECTOR	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	156;"	d
MD_CONTEXT_PPC_VECTOR	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	122;"	d
MD_CONTEXT_SAPARC_EXTRA	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	149;"	d
MD_CONTEXT_SAPARC_FLOATING_POINT	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	148;"	d
MD_CONTEXT_SHX	src/breakpad/google_breakpad/common/minidump_format.h	99;"	d
MD_CONTEXT_SPARC	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	145;"	d
MD_CONTEXT_SPARC_ALL	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	154;"	d
MD_CONTEXT_SPARC_CONTROL	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	146;"	d
MD_CONTEXT_SPARC_FULL	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	151;"	d
MD_CONTEXT_SPARC_GPR_COUNT	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	91;"	d
MD_CONTEXT_SPARC_INTEGER	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	147;"	d
MD_CONTEXT_X86	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	146;"	d
MD_CONTEXT_X86_ALL	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	168;"	d
MD_CONTEXT_X86_CONTROL	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	148;"	d
MD_CONTEXT_X86_DEBUG_REGISTERS	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	156;"	d
MD_CONTEXT_X86_EXTENDED_REGISTERS	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	158;"	d
MD_CONTEXT_X86_EXTENDED_REGISTERS_SIZE	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	94;"	d
MD_CONTEXT_X86_FLOATING_POINT	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	154;"	d
MD_CONTEXT_X86_FULL	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	163;"	d
MD_CONTEXT_X86_INTEGER	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	150;"	d
MD_CONTEXT_X86_SEGMENTS	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	152;"	d
MD_CONTEXT_X86_XSTATE	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	160;"	d
MD_CPU_ARCHITECTURE_ALPHA	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_CPU_ARCHITECTURE_ALPHA     =  2,  \/* PROCESSOR_ARCHITECTURE_ALPHA *\/$/;"	e	enum:__anon40
MD_CPU_ARCHITECTURE_ALPHA64	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_CPU_ARCHITECTURE_ALPHA64   =  7,  \/* PROCESSOR_ARCHITECTURE_ALPHA64 *\/$/;"	e	enum:__anon40
MD_CPU_ARCHITECTURE_AMD64	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_CPU_ARCHITECTURE_AMD64     =  9,  \/* PROCESSOR_ARCHITECTURE_AMD64 *\/$/;"	e	enum:__anon40
MD_CPU_ARCHITECTURE_ARM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_CPU_ARCHITECTURE_ARM       =  5,  \/* PROCESSOR_ARCHITECTURE_ARM *\/$/;"	e	enum:__anon40
MD_CPU_ARCHITECTURE_IA64	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_CPU_ARCHITECTURE_IA64      =  6,  \/* PROCESSOR_ARCHITECTURE_IA64 *\/$/;"	e	enum:__anon40
MD_CPU_ARCHITECTURE_MIPS	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_CPU_ARCHITECTURE_MIPS      =  1,  \/* PROCESSOR_ARCHITECTURE_MIPS *\/$/;"	e	enum:__anon40
MD_CPU_ARCHITECTURE_MSIL	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_CPU_ARCHITECTURE_MSIL      =  8,  \/* PROCESSOR_ARCHITECTURE_MSIL$/;"	e	enum:__anon40
MD_CPU_ARCHITECTURE_PPC	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_CPU_ARCHITECTURE_PPC       =  3,  \/* PROCESSOR_ARCHITECTURE_PPC *\/$/;"	e	enum:__anon40
MD_CPU_ARCHITECTURE_SHX	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_CPU_ARCHITECTURE_SHX       =  4,  \/* PROCESSOR_ARCHITECTURE_SHX$/;"	e	enum:__anon40
MD_CPU_ARCHITECTURE_SPARC	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_CPU_ARCHITECTURE_SPARC     = 0x8001, \/* Breakpad-defined value for SPARC *\/$/;"	e	enum:__anon40
MD_CPU_ARCHITECTURE_UNKNOWN	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_CPU_ARCHITECTURE_UNKNOWN   = 0xffff  \/* PROCESSOR_ARCHITECTURE_UNKNOWN *\/$/;"	e	enum:__anon40
MD_CPU_ARCHITECTURE_X86	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_CPU_ARCHITECTURE_X86       =  0,  \/* PROCESSOR_ARCHITECTURE_INTEL *\/$/;"	e	enum:__anon40
MD_CPU_ARCHITECTURE_X86_WIN64	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_CPU_ARCHITECTURE_X86_WIN64 = 10,$/;"	e	enum:__anon40
MD_CVINFOCV41_SIGNATURE	src/breakpad/google_breakpad/common/minidump_format.h	461;"	d
MD_CVINFOCV50_SIGNATURE	src/breakpad/google_breakpad/common/minidump_format.h	462;"	d
MD_CVINFOPDB20_SIGNATURE	src/breakpad/google_breakpad/common/minidump_format.h	426;"	d
MD_CVINFOPDB70_SIGNATURE	src/breakpad/google_breakpad/common/minidump_format.h	439;"	d
MD_CVINFOUNKNOWN_SIGNATURE	src/breakpad/google_breakpad/common/minidump_format.h	465;"	d
MD_EXCEPTION_CODE_LIN_SIGABRT	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGABRT = 6,     \/* Abort (ANSI) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGALRM	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGALRM = 14,    \/* Alarm clock (POSIX) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGBUS	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGBUS = 7,      \/* BUS error (4.2 BSD) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGCHLD	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGCHLD = 17,    \/* Child status has changed (POSIX) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGCONT	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGCONT = 18,    \/* Continue (POSIX) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGFPE	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGFPE = 8,      \/* Floating-point exception (ANSI) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGHUP	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGHUP = 1,      \/* Hangup (POSIX) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGILL	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGILL = 4,      \/* Illegal instruction (ANSI) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGINT	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGINT = 2,      \/* Interrupt (ANSI) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGIO	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGIO = 29,      \/* I\/O now possible (4.2 BSD) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGKILL	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGKILL = 9,     \/* Kill, unblockable (POSIX) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGPIPE	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGPIPE = 13,    \/* Broken pipe (POSIX) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGPROF	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGPROF = 27,    \/* Profiling alarm clock (4.2 BSD) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGPWR	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGPWR = 30,     \/* Power failure restart (System V) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGQUIT	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGQUIT = 3,     \/* Quit (POSIX) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGSEGV	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGSEGV = 11,    \/* Segmentation violation (ANSI) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGSTKFLT	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGSTKFLT = 16,  \/* Stack faultd *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGSTOP	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGSTOP = 19,    \/* Stop, unblockable (POSIX) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGSYS	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGSYS = 31      \/* Bad system call *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGTERM	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGTERM = 15,    \/* Termination (ANSI) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGTRAP	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGTRAP = 5,     \/* Trace trap (POSIX) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGTSTP	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGTSTP = 20,    \/* Keyboard stop (POSIX) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGTTIN	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGTTIN = 21,    \/* Background read from tty (POSIX) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGTTOU	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGTTOU = 22,    \/* Background write to tty (POSIX) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGURG	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGURG = 23,$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGUSR1	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGUSR1 = 10,    \/* User-defined signal 1 (POSIX).  *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGUSR2	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGUSR2 = 12,    \/* User-defined signal 2 (POSIX) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGVTALRM	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGVTALRM = 26,  \/* Virtual alarm clock (4.2 BSD) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGWINCH	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGWINCH = 28,   \/* Window size change (4.3 BSD, Sun) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGXCPU	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGXCPU = 24,    \/* CPU limit exceeded (4.2 BSD) *\/$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_LIN_SIGXFSZ	src/breakpad/google_breakpad/common/minidump_exception_linux.h	/^  MD_EXCEPTION_CODE_LIN_SIGXFSZ = 25,$/;"	e	enum:__anon60
MD_EXCEPTION_CODE_MAC_ABORT	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_ABORT        = 0x00010002,  \/* Mach SIGABRT *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_BAD_PIPE	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_BAD_PIPE     = 0x00010001,  \/* Mach SIGPIPE *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_BAD_SYSCALL	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_BAD_SYSCALL  = 0x00010000,  \/* Mach SIGSYS *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_INVALID_ADDRESS	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_INVALID_ADDRESS    =  1,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_MEMORY_ERROR	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_MEMORY_ERROR       = 10,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_MEMORY_FAILURE	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_MEMORY_FAILURE     =  9,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_NO_ACCESS	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_NO_ACCESS          =  8,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_NS_EXCEPTION	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_NS_EXCEPTION = 0xDEADC0DE,  \/* uncaught NSException *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_ALTIVEC_ASSIST	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_ALTIVEC_ASSIST = 9,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_BADSPACE	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_BADSPACE     = 0x0102,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_BREAKPOINT	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_BREAKPOINT = 1,  \/* EXC_PPC_BREAKPOINT *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_FLOAT_INEXACT	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_FLOAT_INEXACT      = 3,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_FLOAT_NOT_A_NUMBER	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_FLOAT_NOT_A_NUMBER = 7,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_FLOAT_OVERFLOW	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_FLOAT_OVERFLOW     = 6,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_FLOAT_UNDERFLOW	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_FLOAT_UNDERFLOW    = 5,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_FLOAT_ZERO_DIVIDE	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_FLOAT_ZERO_DIVIDE  = 4,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_INVALID_SYSCALL	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_INVALID_SYSCALL           = 1,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_MIGRATE	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_MIGRATE = 0x00010100,  \/* EXC_PPC_MIGRATE *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_NO_EMULATION	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_NO_EMULATION   = 8,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_OVERFLOW	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_OVERFLOW           = 1,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_PERFORMANCE_MONITOR	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_PERFORMANCE_MONITOR       = 6,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_PRIVILEGED_INSTRUCTION	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_PRIVILEGED_INSTRUCTION    = 3,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_PRIVILEGED_REGISTER	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_PRIVILEGED_REGISTER       = 4,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_TRACE	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_TRACE                     = 5,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_TRAP	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_TRAP    = 0x00000001,  \/* EXC_PPC_TRAP *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_UNALIGNED	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_UNALIGNED    = 0x0103,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_UNIMPLEMENTED_INSTRUCTION	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_UNIMPLEMENTED_INSTRUCTION = 2,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_VM_PROT_READ	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_VM_PROT_READ = 0x0101,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PPC_ZERO_DIVIDE	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PPC_ZERO_DIVIDE        = 2,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_PROTECTION_FAILURE	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_PROTECTION_FAILURE =  2,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_ALIGNMENT_FAULT	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_ALIGNMENT_FAULT            = 17$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_BOUND	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_BOUND     = 7,  \/* EXC_I386_BOUND *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_BPT	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_BPT = 2,  \/* EXC_I386_BPT *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_DIV	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_DIV       = 1,  \/* EXC_I386_DIV *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_EMERR	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_EMERR     = 6,  \/* EXC_I386_EMERR *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_EXTERR	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_EXTERR    = 5,  \/* EXC_I386_EXTERR *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_EXTOVR	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_EXTOVR    = 4,  \/* EXC_I386_EXTOVR *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_GENERAL_PROTECTION_FAULT	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_GENERAL_PROTECTION_FAULT   = 13,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_INTO	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_INTO      = 2,  \/* EXC_I386_INTO *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_INVALID_OPERATION	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_INVALID_OPERATION = 1,  \/* EXC_I386_INVOP *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_INVALID_TASK_STATE_SEGMENT	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_INVALID_TASK_STATE_SEGMENT = 10,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_NOEXT	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_NOEXT     = 3,  \/* EXC_I386_NOEXT *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_SEGMENT_NOT_PRESENT	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_SEGMENT_NOT_PRESENT        = 11,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_SGL	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_SGL = 1,  \/* EXC_I386_SGL *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_SSEEXTERR	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_SSEEXTERR = 8,  \/* EXC_I386_SSEEXTERR *\/$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_MAC_X86_STACK_FAULT	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_CODE_MAC_X86_STACK_FAULT                = 12,$/;"	e	enum:__anon13
MD_EXCEPTION_CODE_SOL_SIGABRT	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGABRT = 6,     \/* used by abort, replace SIGIOT in the future *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGALRM	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGALRM = 14,    \/* alarm clock *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGBUS	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGBUS = 10,     \/* bus error *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGCANCEL	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGCANCEL = 36,  \/* reserved signal for thread cancellation *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGCHLD	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGCHLD = 18,    \/* child status change alias (POSIX) *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGCLD	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGCLD = 18,     \/* child status change *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGCONT	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGCONT = 25,    \/* stopped process has been continued *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGEMT	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGEMT = 7,      \/* EMT instruction *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGFPE	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGFPE = 8,      \/* floating point exception *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGFREEZE	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGFREEZE = 34,  \/* special signal used by CPR *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGHUP	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGHUP = 1,      \/* Hangup *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGILL	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGILL = 4,      \/* illegal instruction (not reset when caught) *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGINT	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGINT = 2,      \/* interrupt (rubout) *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGIO	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGIO = 22,      \/* socket I\/O possible (SIGPOLL alias) *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGIOT	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGIOT = 6,      \/* IOT instruction *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGJVM1	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGJVM1 = 39,    \/* reserved signal for Java Virtual Machine *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGJVM2	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGJVM2 = 40     \/* reserved signal for Java Virtual Machine *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGKILL	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGKILL = 9,     \/* kill (cannot be caught or ignored) *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGLOST	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGLOST = 37,    \/* resource lost (eg, record-lock lost) *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGLWP	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGLWP = 33,     \/* reserved signal no longer used by threading code *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGPIPE	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGPIPE = 13,    \/* write on a pipe with no one to read it *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGPOLL	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGPOLL = 22,    \/* pollable event occurred *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGPROF	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGPROF = 29,    \/* profiling timer expired *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGPWR	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGPWR = 19,     \/* power-fail restart *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGQUIT	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGQUIT = 3,     \/* quit (ASCII FS) *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGSEGV	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGSEGV = 11,    \/* segmentation violation *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGSTOP	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGSTOP = 23,    \/* stop (cannot be caught or ignored) *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGSYS	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGSYS = 12,     \/* bad argument to system call *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGTERM	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGTERM = 15,    \/* software termination signal from kill *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGTHAW	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGTHAW = 35,    \/* special signal used by CPR *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGTRAP	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGTRAP = 5,     \/* trace trap (not reset when caught) *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGTSTP	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGTSTP = 24,    \/* user stop requested from tty *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGTTIN	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGTTIN = 26,    \/* background tty read attempted *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGTTOU	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGTTOU = 27,    \/* background tty write attempted *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGURG	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGURG = 21,     \/* urgent socket condition *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGUSR1	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGUSR1 = 16,    \/* user defined signal 1 *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGUSR2	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGUSR2 = 17,    \/* user defined signal 2 *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGVTALRM	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGVTALRM = 28,  \/* virtual timer expired *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGWAITING	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGWAITING = 32, \/* reserved signal no longer used by threading code *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGWINCH	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGWINCH = 20,   \/* window size change *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGXCPU	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGXCPU = 30,    \/* exceeded cpu limit *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGXFSZ	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGXFSZ = 31,    \/* exceeded file size limit *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_SOL_SIGXRES	src/breakpad/google_breakpad/common/minidump_exception_solaris.h	/^  MD_EXCEPTION_CODE_SOL_SIGXRES = 38,    \/* resource control exceeded *\/$/;"	e	enum:__anon59
MD_EXCEPTION_CODE_WIN_ACCESS_VIOLATION	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_ACCESS_VIOLATION         = 0xc0000005,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_ARRAY_BOUNDS_EXCEEDED	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_ARRAY_BOUNDS_EXCEEDED    = 0xc000008c,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_BREAKPOINT	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_BREAKPOINT               = 0x80000003,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_CONTROL_C	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_CONTROL_C                = 0x40010005,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_DATATYPE_MISALIGNMENT	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_DATATYPE_MISALIGNMENT    = 0x80000002,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_FLOAT_DENORMAL_OPERAND	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_FLOAT_DENORMAL_OPERAND   = 0xc000008d,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_FLOAT_DIVIDE_BY_ZERO	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_FLOAT_DIVIDE_BY_ZERO     = 0xc000008e,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_FLOAT_INEXACT_RESULT	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_FLOAT_INEXACT_RESULT     = 0xc000008f,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_FLOAT_INVALID_OPERATION	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_FLOAT_INVALID_OPERATION  = 0xc0000090,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_FLOAT_OVERFLOW	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_FLOAT_OVERFLOW           = 0xc0000091,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_FLOAT_STACK_CHECK	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_FLOAT_STACK_CHECK        = 0xc0000092,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_FLOAT_UNDERFLOW	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_FLOAT_UNDERFLOW          = 0xc0000093,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_GUARD_PAGE_VIOLATION	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_GUARD_PAGE_VIOLATION     = 0x80000001,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_HEAP_CORRUPTION	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_HEAP_CORRUPTION          = 0xc0000374,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_ILLEGAL_INSTRUCTION	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_ILLEGAL_INSTRUCTION      = 0xc000001d,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_INTEGER_DIVIDE_BY_ZERO	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_INTEGER_DIVIDE_BY_ZERO   = 0xc0000094,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_INTEGER_OVERFLOW	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_INTEGER_OVERFLOW         = 0xc0000095,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_INVALID_DISPOSITION	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_INVALID_DISPOSITION      = 0xc0000026,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_INVALID_HANDLE	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_INVALID_HANDLE           = 0xc0000008,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_IN_PAGE_ERROR	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_IN_PAGE_ERROR            = 0xc0000006,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_NONCONTINUABLE_EXCEPTION	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_NONCONTINUABLE_EXCEPTION = 0xc0000025,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_POSSIBLE_DEADLOCK	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_POSSIBLE_DEADLOCK        = 0xc0000194,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_PRIVILEGED_INSTRUCTION	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_PRIVILEGED_INSTRUCTION   = 0xc0000096,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_SINGLE_STEP	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_SINGLE_STEP              = 0x80000004,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_STACK_BUFFER_OVERRUN	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_STACK_BUFFER_OVERRUN     = 0xc0000409,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_STACK_OVERFLOW	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_STACK_OVERFLOW           = 0xc00000fd,$/;"	e	enum:__anon53
MD_EXCEPTION_CODE_WIN_UNHANDLED_CPP_EXCEPTION	src/breakpad/google_breakpad/common/minidump_exception_win32.h	/^  MD_EXCEPTION_CODE_WIN_UNHANDLED_CPP_EXCEPTION  = 0xe06d7363$/;"	e	enum:__anon53
MD_EXCEPTION_MAC_ARITHMETIC	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_MAC_ARITHMETIC      = 3,  \/* code is CPU-specific *\/$/;"	e	enum:__anon12
MD_EXCEPTION_MAC_BAD_ACCESS	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_MAC_BAD_ACCESS      = 1,  \/* code can be a kern_return_t *\/$/;"	e	enum:__anon12
MD_EXCEPTION_MAC_BAD_INSTRUCTION	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_MAC_BAD_INSTRUCTION = 2,  \/* code is CPU-specific *\/$/;"	e	enum:__anon12
MD_EXCEPTION_MAC_BREAKPOINT	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_MAC_BREAKPOINT      = 6,  \/* code is CPU-specific *\/$/;"	e	enum:__anon12
MD_EXCEPTION_MAC_EMULATION	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_MAC_EMULATION       = 4,  \/* code is CPU-specific *\/$/;"	e	enum:__anon12
MD_EXCEPTION_MAC_MACH_SYSCALL	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_MAC_MACH_SYSCALL    = 8,$/;"	e	enum:__anon12
MD_EXCEPTION_MAC_RPC_ALERT	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_MAC_RPC_ALERT       = 9$/;"	e	enum:__anon12
MD_EXCEPTION_MAC_SOFTWARE	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_MAC_SOFTWARE        = 5,$/;"	e	enum:__anon12
MD_EXCEPTION_MAC_SYSCALL	src/breakpad/google_breakpad/common/minidump_exception_mac.h	/^  MD_EXCEPTION_MAC_SYSCALL         = 7,$/;"	e	enum:__anon12
MD_EXCEPTION_MAXIMUM_PARAMETERS	src/breakpad/google_breakpad/common/minidump_format.h	502;"	d
MD_EXCEPTION_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_EXCEPTION_STREAM            =  6,  \/* MDRawExceptionStream *\/$/;"	e	enum:__anon22
MD_FILTER_MEMORY	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_FILTER_MEMORY                     = 0x00000008,$/;"	e	enum:__anon20
MD_FILTER_MODULE_PATHS	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_FILTER_MODULE_PATHS               = 0x00000080,$/;"	e	enum:__anon20
MD_FLOATINGSAVEAREA_ARM_FPEXTRA_COUNT	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	70;"	d
MD_FLOATINGSAVEAREA_ARM_FPR_COUNT	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	69;"	d
MD_FLOATINGSAVEAREA_PPC_FPR_COUNT	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	81;"	d
MD_FLOATINGSAVEAREA_SPARC_FPR_COUNT	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	80;"	d
MD_FLOATINGSAVEAREA_X86_REGISTERAREA_SIZE	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	75;"	d
MD_FUNCTION_TABLE_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_FUNCTION_TABLE_STREAM       = 13,$/;"	e	enum:__anon22
MD_HANDLE_DATA_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_HANDLE_DATA_STREAM          = 12,$/;"	e	enum:__anon22
MD_HANDLE_OPERATION_LIST_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_HANDLE_OPERATION_LIST_STREAM = 18,$/;"	e	enum:__anon22
MD_HEADER_SIGNATURE	src/breakpad/google_breakpad/common/minidump_format.h	266;"	d
MD_HEADER_VERSION	src/breakpad/google_breakpad/common/minidump_format.h	268;"	d
MD_IGNORE_INACCESSIBLE_MEMORY	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_IGNORE_INACCESSIBLE_MEMORY        = 0x00020000,$/;"	e	enum:__anon20
MD_LAST_RESERVED_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_LAST_RESERVED_STREAM        = 0x0000ffff,$/;"	e	enum:__anon22
MD_MEMORY_64_LIST_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_64_LIST_STREAM       =  9,$/;"	e	enum:__anon22
MD_MEMORY_INFO_LIST_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_INFO_LIST_STREAM     = 16,  \/* MDRawMemoryInfoList *\/$/;"	e	enum:__anon22
MD_MEMORY_LIST_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_LIST_STREAM          =  5,  \/* MDRawMemoryList *\/$/;"	e	enum:__anon22
MD_MEMORY_PROTECTION_ACCESS_MASK	src/breakpad/google_breakpad/common/minidump_format.h	/^const u_int32_t MD_MEMORY_PROTECTION_ACCESS_MASK = 0xFF;$/;"	v
MD_MEMORY_PROTECT_EXECUTE	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_PROTECT_EXECUTE           = 0x10,  \/* PAGE_EXECUTE *\/$/;"	e	enum:__anon47
MD_MEMORY_PROTECT_EXECUTE_READ	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_PROTECT_EXECUTE_READ      = 0x20,  \/* PAGE_EXECUTE_READ *\/$/;"	e	enum:__anon47
MD_MEMORY_PROTECT_EXECUTE_READWRITE	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_PROTECT_EXECUTE_READWRITE = 0x40,  \/* PAGE_EXECUTE_READWRITE *\/$/;"	e	enum:__anon47
MD_MEMORY_PROTECT_EXECUTE_WRITECOPY	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_PROTECT_EXECUTE_WRITECOPY = 0x80,  \/* PAGE_EXECUTE_WRITECOPY *\/$/;"	e	enum:__anon47
MD_MEMORY_PROTECT_GUARD	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_PROTECT_GUARD             = 0x100,  \/* PAGE_GUARD *\/$/;"	e	enum:__anon47
MD_MEMORY_PROTECT_NOACCESS	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_PROTECT_NOACCESS          = 0x01,  \/* PAGE_NOACCESS *\/$/;"	e	enum:__anon47
MD_MEMORY_PROTECT_NOCACHE	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_PROTECT_NOCACHE           = 0x200,  \/* PAGE_NOCACHE *\/$/;"	e	enum:__anon47
MD_MEMORY_PROTECT_READONLY	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_PROTECT_READONLY          = 0x02,  \/* PAGE_READONLY *\/$/;"	e	enum:__anon47
MD_MEMORY_PROTECT_READWRITE	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_PROTECT_READWRITE         = 0x04,  \/* PAGE_READWRITE *\/$/;"	e	enum:__anon47
MD_MEMORY_PROTECT_WRITECOMBINE	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_PROTECT_WRITECOMBINE      = 0x400,  \/* PAGE_WRITECOMBINE *\/$/;"	e	enum:__anon47
MD_MEMORY_PROTECT_WRITECOPY	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_PROTECT_WRITECOPY         = 0x08,  \/* PAGE_WRITECOPY *\/$/;"	e	enum:__anon47
MD_MEMORY_STATE_COMMIT	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_STATE_COMMIT   = 0x1000,  \/* physical storage has been allocated *\/$/;"	e	enum:__anon46
MD_MEMORY_STATE_FREE	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_STATE_FREE     = 0x10000  \/* available to be allocated *\/$/;"	e	enum:__anon46
MD_MEMORY_STATE_RESERVE	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_STATE_RESERVE  = 0x2000,  \/* reserved, but no physical storage *\/$/;"	e	enum:__anon46
MD_MEMORY_TYPE_IMAGE	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_TYPE_IMAGE   = 0x1000000  \/* mapped into the view of an image *\/$/;"	e	enum:__anon48
MD_MEMORY_TYPE_MAPPED	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_TYPE_MAPPED  = 0x40000,   \/* mapped into the view of a section *\/$/;"	e	enum:__anon48
MD_MEMORY_TYPE_PRIVATE	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MEMORY_TYPE_PRIVATE = 0x20000,   \/* not shared by other processes *\/$/;"	e	enum:__anon48
MD_MISCINFO2_SIZE	src/breakpad/google_breakpad/common/minidump_format.h	646;"	d
MD_MISCINFO_FLAGS1_PROCESSOR_POWER_INFO	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MISCINFO_FLAGS1_PROCESSOR_POWER_INFO = 0x00000004$/;"	e	enum:__anon43
MD_MISCINFO_FLAGS1_PROCESS_ID	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MISCINFO_FLAGS1_PROCESS_ID           = 0x00000001,$/;"	e	enum:__anon43
MD_MISCINFO_FLAGS1_PROCESS_TIMES	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MISCINFO_FLAGS1_PROCESS_TIMES        = 0x00000002,$/;"	e	enum:__anon43
MD_MISCINFO_SIZE	src/breakpad/google_breakpad/common/minidump_format.h	645;"	d
MD_MISC_INFO_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MISC_INFO_STREAM            = 15,  \/* MDRawMiscInfo *\/$/;"	e	enum:__anon22
MD_MODULE_LIST_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_MODULE_LIST_STREAM          =  4,  \/* MDRawModuleList *\/$/;"	e	enum:__anon22
MD_MODULE_SIZE	src/breakpad/google_breakpad/common/minidump_format.h	404;"	d
MD_NORMAL	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_NORMAL                            = 0x00000000,$/;"	e	enum:__anon20
MD_OS_ANDROID	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_OS_ANDROID       = 0x8203   \/* Android *\/$/;"	e	enum:__anon41
MD_OS_IOS	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_OS_IOS           = 0x8102,  \/* iOS *\/$/;"	e	enum:__anon41
MD_OS_LINUX	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_OS_LINUX         = 0x8201,  \/* Linux *\/$/;"	e	enum:__anon41
MD_OS_MAC_OS_X	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_OS_MAC_OS_X      = 0x8101,  \/* Mac OS X\/Darwin *\/$/;"	e	enum:__anon41
MD_OS_SOLARIS	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_OS_SOLARIS       = 0x8202,  \/* Solaris *\/$/;"	e	enum:__anon41
MD_OS_UNIX	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_OS_UNIX          = 0x8000,  \/* Generic Unix-ish *\/$/;"	e	enum:__anon41
MD_OS_WIN32S	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_OS_WIN32S        = 0,  \/* VER_PLATFORM_WIN32s (Windows 3.1) *\/$/;"	e	enum:__anon41
MD_OS_WIN32_CE	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_OS_WIN32_CE      = 3,  \/* VER_PLATFORM_WIN32_CE, VER_PLATFORM_WIN32_HH$/;"	e	enum:__anon41
MD_OS_WIN32_NT	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_OS_WIN32_NT      = 2,  \/* VER_PLATFORM_WIN32_NT (Windows NT, 2000+) *\/$/;"	e	enum:__anon41
MD_OS_WIN32_WINDOWS	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_OS_WIN32_WINDOWS = 1,  \/* VER_PLATFORM_WIN32_WINDOWS (Windows 95-98-Me) *\/$/;"	e	enum:__anon41
MD_RESERVED_STREAM_0	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_RESERVED_STREAM_0           =  1,$/;"	e	enum:__anon22
MD_RESERVED_STREAM_1	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_RESERVED_STREAM_1           =  2,$/;"	e	enum:__anon22
MD_SCAN_MEMORY	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_SCAN_MEMORY                       = 0x00000010,$/;"	e	enum:__anon20
MD_SYSTEM_INFO_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_SYSTEM_INFO_STREAM          =  7,  \/* MDRawSystemInfo *\/$/;"	e	enum:__anon22
MD_THREAD_EX_LIST_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_THREAD_EX_LIST_STREAM       =  8,$/;"	e	enum:__anon22
MD_THREAD_INFO_LIST_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_THREAD_INFO_LIST_STREAM     = 17,$/;"	e	enum:__anon22
MD_THREAD_LIST_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_THREAD_LIST_STREAM          =  3,  \/* MDRawThreadList *\/$/;"	e	enum:__anon22
MD_UNLOADED_MODULE_LIST_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_UNLOADED_MODULE_LIST_STREAM = 14,$/;"	e	enum:__anon22
MD_UNUSED_STREAM	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_UNUSED_STREAM               =  0,$/;"	e	enum:__anon22
MD_VECTORSAVEAREA_PPC_VR_COUNT	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	92;"	d
MD_VSFIXEDFILEINFO_FILE_FLAGS_DEBUG	src/breakpad/google_breakpad/common/minidump_format.h	154;"	d
MD_VSFIXEDFILEINFO_FILE_FLAGS_INFOINFERRED	src/breakpad/google_breakpad/common/minidump_format.h	162;"	d
MD_VSFIXEDFILEINFO_FILE_FLAGS_PATCHED	src/breakpad/google_breakpad/common/minidump_format.h	158;"	d
MD_VSFIXEDFILEINFO_FILE_FLAGS_PRERELEASE	src/breakpad/google_breakpad/common/minidump_format.h	156;"	d
MD_VSFIXEDFILEINFO_FILE_FLAGS_PRIVATEBUILD	src/breakpad/google_breakpad/common/minidump_format.h	160;"	d
MD_VSFIXEDFILEINFO_FILE_FLAGS_SPECIALBUILD	src/breakpad/google_breakpad/common/minidump_format.h	164;"	d
MD_VSFIXEDFILEINFO_FILE_OS_DOS	src/breakpad/google_breakpad/common/minidump_format.h	169;"	d
MD_VSFIXEDFILEINFO_FILE_OS_NT	src/breakpad/google_breakpad/common/minidump_format.h	172;"	d
MD_VSFIXEDFILEINFO_FILE_OS_OS216	src/breakpad/google_breakpad/common/minidump_format.h	170;"	d
MD_VSFIXEDFILEINFO_FILE_OS_OS232	src/breakpad/google_breakpad/common/minidump_format.h	171;"	d
MD_VSFIXEDFILEINFO_FILE_OS_UNKNOWN	src/breakpad/google_breakpad/common/minidump_format.h	168;"	d
MD_VSFIXEDFILEINFO_FILE_OS_WINCE	src/breakpad/google_breakpad/common/minidump_format.h	173;"	d
MD_VSFIXEDFILEINFO_FILE_OS__BASE	src/breakpad/google_breakpad/common/minidump_format.h	175;"	d
MD_VSFIXEDFILEINFO_FILE_OS__PM16	src/breakpad/google_breakpad/common/minidump_format.h	177;"	d
MD_VSFIXEDFILEINFO_FILE_OS__PM32	src/breakpad/google_breakpad/common/minidump_format.h	178;"	d
MD_VSFIXEDFILEINFO_FILE_OS__WINDOWS16	src/breakpad/google_breakpad/common/minidump_format.h	176;"	d
MD_VSFIXEDFILEINFO_FILE_OS__WINDOWS32	src/breakpad/google_breakpad/common/minidump_format.h	179;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_COMM	src/breakpad/google_breakpad/common/minidump_format.h	212;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_DISPLAY	src/breakpad/google_breakpad/common/minidump_format.h	200;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_INPUTMETHOD	src/breakpad/google_breakpad/common/minidump_format.h	214;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_INSTALLABLE	src/breakpad/google_breakpad/common/minidump_format.h	208;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_KEYBOARD	src/breakpad/google_breakpad/common/minidump_format.h	196;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_LANGUAGE	src/breakpad/google_breakpad/common/minidump_format.h	198;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_MOUSE	src/breakpad/google_breakpad/common/minidump_format.h	202;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_NETWORK	src/breakpad/google_breakpad/common/minidump_format.h	204;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_PRINTER	src/breakpad/google_breakpad/common/minidump_format.h	194;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_SOUND	src/breakpad/google_breakpad/common/minidump_format.h	210;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_SYSTEM	src/breakpad/google_breakpad/common/minidump_format.h	206;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_DRV_VERSIONED_PRINTER	src/breakpad/google_breakpad/common/minidump_format.h	216;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_FONT_RASTER	src/breakpad/google_breakpad/common/minidump_format.h	219;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_FONT_TRUETYPE	src/breakpad/google_breakpad/common/minidump_format.h	223;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_FONT_VECTOR	src/breakpad/google_breakpad/common/minidump_format.h	221;"	d
MD_VSFIXEDFILEINFO_FILE_SUBTYPE_UNKNOWN	src/breakpad/google_breakpad/common/minidump_format.h	191;"	d
MD_VSFIXEDFILEINFO_FILE_TYPE_APP	src/breakpad/google_breakpad/common/minidump_format.h	183;"	d
MD_VSFIXEDFILEINFO_FILE_TYPE_DLL	src/breakpad/google_breakpad/common/minidump_format.h	184;"	d
MD_VSFIXEDFILEINFO_FILE_TYPE_DRV	src/breakpad/google_breakpad/common/minidump_format.h	185;"	d
MD_VSFIXEDFILEINFO_FILE_TYPE_FONT	src/breakpad/google_breakpad/common/minidump_format.h	186;"	d
MD_VSFIXEDFILEINFO_FILE_TYPE_STATIC_LIB	src/breakpad/google_breakpad/common/minidump_format.h	188;"	d
MD_VSFIXEDFILEINFO_FILE_TYPE_UNKNOWN	src/breakpad/google_breakpad/common/minidump_format.h	182;"	d
MD_VSFIXEDFILEINFO_FILE_TYPE_VXD	src/breakpad/google_breakpad/common/minidump_format.h	187;"	d
MD_VSFIXEDFILEINFO_SIGNATURE	src/breakpad/google_breakpad/common/minidump_format.h	145;"	d
MD_VSFIXEDFILEINFO_VERSION	src/breakpad/google_breakpad/common/minidump_format.h	149;"	d
MD_WITHOUT_AUXILLIARY_SEGS	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_WITHOUT_AUXILLIARY_SEGS           = 0x00004000,$/;"	e	enum:__anon20
MD_WITHOUT_OPTIONAL_DATA	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_WITHOUT_OPTIONAL_DATA             = 0x00000400,$/;"	e	enum:__anon20
MD_WITH_CODE_SEGS	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_WITH_CODE_SEGS                    = 0x00002000,$/;"	e	enum:__anon20
MD_WITH_DATA_SEGS	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_WITH_DATA_SEGS                    = 0x00000001,$/;"	e	enum:__anon20
MD_WITH_FULL_AUXILLIARY_STATE	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_WITH_FULL_AUXILLIARY_STATE        = 0x00008000,$/;"	e	enum:__anon20
MD_WITH_FULL_MEMORY	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_WITH_FULL_MEMORY                  = 0x00000002,$/;"	e	enum:__anon20
MD_WITH_FULL_MEMORY_INFO	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_WITH_FULL_MEMORY_INFO             = 0x00000800,$/;"	e	enum:__anon20
MD_WITH_HANDLE_DATA	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_WITH_HANDLE_DATA                  = 0x00000004,$/;"	e	enum:__anon20
MD_WITH_INDIRECTLY_REFERENCED_MEMORY	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_WITH_INDIRECTLY_REFERENCED_MEMORY = 0x00000040,$/;"	e	enum:__anon20
MD_WITH_PRIVATE_READ_WRITE_MEMORY	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_WITH_PRIVATE_READ_WRITE_MEMORY    = 0x00000200,$/;"	e	enum:__anon20
MD_WITH_PRIVATE_WRITE_COPY_MEMORY	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_WITH_PRIVATE_WRITE_COPY_MEMORY    = 0x00010000,$/;"	e	enum:__anon20
MD_WITH_PROCESS_THREAD_DATA	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_WITH_PROCESS_THREAD_DATA          = 0x00000100,$/;"	e	enum:__anon20
MD_WITH_THREAD_INFO	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_WITH_THREAD_INFO                  = 0x00001000,$/;"	e	enum:__anon20
MD_WITH_TOKEN_INFORMATION	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_WITH_TOKEN_INFORMATION            = 0x00040000$/;"	e	enum:__anon20
MD_WITH_UNLOADED_MODULES	src/breakpad/google_breakpad/common/minidump_format.h	/^  MD_WITH_UNLOADED_MODULES             = 0x00000020,$/;"	e	enum:__anon20
MEMERRMSG	src/lua/lmem.h	16;"	d
MESSAGE_TAG_NONE	src/breakpad/client/windows/common/ipc_protocol.h	/^  MESSAGE_TAG_NONE = 0,$/;"	e	enum:google_breakpad::MessageTag
MESSAGE_TAG_REGISTRATION_ACK	src/breakpad/client/windows/common/ipc_protocol.h	/^  MESSAGE_TAG_REGISTRATION_ACK = 3,$/;"	e	enum:google_breakpad::MessageTag
MESSAGE_TAG_REGISTRATION_REQUEST	src/breakpad/client/windows/common/ipc_protocol.h	/^  MESSAGE_TAG_REGISTRATION_REQUEST = 1,$/;"	e	enum:google_breakpad::MessageTag
MESSAGE_TAG_REGISTRATION_RESPONSE	src/breakpad/client/windows/common/ipc_protocol.h	/^  MESSAGE_TAG_REGISTRATION_RESPONSE = 2,$/;"	e	enum:google_breakpad::MessageTag
MESSAGE_TAG_UPLOAD_REQUEST	src/breakpad/client/windows/common/ipc_protocol.h	/^  MESSAGE_TAG_UPLOAD_REQUEST = 4$/;"	e	enum:google_breakpad::MessageTag
MINISCENARIOS_H	src/scenario/miniscenarios.h	2;"	d
MINSIZEARRAY	src/lua/lmem.c	43;"	d	file:
MINSTRTABSIZE	src/lua/llimits.h	99;"	d
MOUNTAINPACKAGE_H	src/package/mountainpackage.h	2;"	d
Mac_Style	include/freetype/freetype/tttables.h	/^    FT_UShort  Mac_Style;$/;"	m	struct:TT_Header_
MagatamaWidget	src/dialog/playercarddialog.h	/^class MagatamaWidget : public QWidget{$/;"	c
MagatamasBoxItem	src/ui/magatamasItem.cpp	/^MagatamasBoxItem::MagatamasBoxItem() : QGraphicsObject(NULL)$/;"	f	class:MagatamasBoxItem
MagatamasBoxItem	src/ui/magatamasItem.cpp	/^MagatamasBoxItem::MagatamasBoxItem(QGraphicsItem* parent)$/;"	f	class:MagatamasBoxItem
MagatamasBoxItem	src/ui/magatamasItem.h	/^class MagatamasBoxItem: public QGraphicsObject$/;"	c
Magic_Number	include/freetype/freetype/tttables.h	/^    FT_Long    Magic_Number;$/;"	m	struct:TT_Header_
MainWindow	src/dialog/mainwindow.cpp	/^MainWindow::MainWindow(QWidget *parent)$/;"	f	class:MainWindow
MainWindow	src/dialog/mainwindow.h	/^class MainWindow : public QMainWindow {$/;"	c
Male	src/core/general.h	/^    enum Gender {Male, Female, Neuter};$/;"	e	enum:General::Gender
ManeuveringPackage	src/package/maneuvering.cpp	/^ManeuveringPackage::ManeuveringPackage()$/;"	f	class:ManeuveringPackage
ManeuveringPackage	src/package/maneuvering.h	/^class ManeuveringPackage: public Package{$/;"	c
Manjuan	src/package/bgm-package.cpp	/^    Manjuan(): TriggerSkill("manjuan"){$/;"	f	class:Manjuan
Manjuan	src/package/bgm-package.cpp	/^class Manjuan: public TriggerSkill{$/;"	c	file:
Map	src/breakpad/processor/map_serializers.h	/^  typedef std::map<AddrType, ContainedRangeMap<AddrType, EntryType>*> Map;$/;"	t	class:google_breakpad::ContainedRangeMapSerializer
MapConstIterator	src/breakpad/processor/address_map.h	/^  typedef typename AddressToEntryMap::const_iterator MapConstIterator;$/;"	t	class:google_breakpad::AddressMap
MapConstIterator	src/breakpad/processor/contained_range_map.h	/^  typedef typename AddressToRangeMap::const_iterator MapConstIterator;$/;"	t	class:google_breakpad::ContainedRangeMap
MapConstIterator	src/breakpad/processor/range_map.h	/^  typedef typename AddressToRangeMap::const_iterator MapConstIterator;$/;"	t	class:google_breakpad::RangeMap
MapConstIterator	src/breakpad/processor/static_address_map.h	/^  typedef typename AddressToEntryMap::const_iterator MapConstIterator;$/;"	t	class:google_breakpad::StaticAddressMap
MapConstIterator	src/breakpad/processor/static_contained_range_map.h	/^  typedef typename AddressToRangeMap::const_iterator MapConstIterator;$/;"	t	class:google_breakpad::StaticContainedRangeMap
MapConstIterator	src/breakpad/processor/static_range_map.h	/^  typedef typename AddressToRangeMap::const_iterator MapConstIterator;$/;"	t	class:google_breakpad::StaticRangeMap
MapIterator	src/breakpad/processor/contained_range_map.h	/^  typedef typename AddressToRangeMap::iterator MapIterator;$/;"	t	class:google_breakpad::ContainedRangeMap
MapValue	src/breakpad/processor/address_map.h	/^  typedef typename AddressToEntryMap::value_type MapValue;$/;"	t	class:google_breakpad::AddressMap
MapValue	src/breakpad/processor/contained_range_map.h	/^  typedef typename AddressToRangeMap::value_type MapValue;$/;"	t	class:google_breakpad::ContainedRangeMap
MapValue	src/breakpad/processor/range_map.h	/^  typedef typename AddressToRangeMap::value_type MapValue;$/;"	t	class:google_breakpad::RangeMap
MarkAssignSkill	src/core/skill.cpp	/^MarkAssignSkill::MarkAssignSkill(const QString &mark, int n)$/;"	f	class:MarkAssignSkill
MarkAssignSkill	src/core/skill.h	/^class MarkAssignSkill: public GameStartSkill{$/;"	c
Mashu	src/package/standard-generals.cpp	/^    Mashu():DistanceSkill("mashu")$/;"	f	class:Mashu
Mashu	src/package/standard-generals.cpp	/^class Mashu: public DistanceSkill{$/;"	c	file:
MasochismSkill	src/core/skill.cpp	/^MasochismSkill::MasochismSkill(const QString &name)$/;"	f	class:MasochismSkill
MasochismSkill	src/core/skill.h	/^class MasochismSkill: public TriggerSkill{$/;"	c
MatchState	src/lua/lstrlib.c	/^typedef struct MatchState {$/;"	s	file:
MatchState	src/lua/lstrlib.c	/^} MatchState;$/;"	t	typeref:struct:MatchState	file:
MaxCards	src/core/settings.h	/^    int MaxCards;$/;"	m	class:Settings
MaxCardsSkill	src/core/skill.cpp	/^MaxCardsSkill::MaxCardsSkill(const QString &name)$/;"	f	class:MaxCardsSkill
MaxCardsSkill	src/core/skill.h	/^class MaxCardsSkill: public Skill{$/;"	c
MaxHPScheme	src/client/clientstruct.h	/^    int MaxHPScheme;$/;"	m	struct:ServerInfoStruct
MaxHpChanged	src/core/structs.h	/^    MaxHpChanged,$/;"	e	enum:TriggerEvent
MaxHpScheme	src/core/settings.h	/^    int MaxHpScheme;$/;"	m	class:Settings
Mbuffer	src/lua/lzio.h	/^typedef struct Mbuffer {$/;"	s
Mbuffer	src/lua/lzio.h	/^} Mbuffer;$/;"	t	typeref:struct:Mbuffer
MemAddr	src/breakpad/google_breakpad/processor/source_line_resolver_interface.h	/^  typedef u_int64_t MemAddr;$/;"	t	class:google_breakpad::SourceLineResolverInterface
MemAddr	src/breakpad/processor/simple_serializer.h	/^typedef u_int64_t MemAddr;$/;"	t	namespace:google_breakpad
Member	src/server/contestdb.h	/^    struct Member{$/;"	s	class:ContestDB
Members	src/jsoncpp/include/json/value.h	/^      typedef std::vector<std::string> Members;$/;"	t	class:Json::Value
Memory	src/breakpad/processor/synth_minidump.h	/^  Memory(const Dump &dump, u_int64_t address)$/;"	f	class:google_breakpad::SynthMinidump::Memory
Memory	src/breakpad/processor/synth_minidump.h	/^class Memory: public Section {$/;"	c	namespace:google_breakpad::SynthMinidump
MemoryDescriptors	src/breakpad/google_breakpad/processor/minidump.h	/^  typedef vector<MDMemoryDescriptor>   MemoryDescriptors;$/;"	t	class:google_breakpad::MinidumpMemoryList
MemoryMap	src/breakpad/google_breakpad/processor/source_line_resolver_base.h	/^  typedef std::map<string, char*, CompareString> MemoryMap;$/;"	t	class:google_breakpad::SourceLineResolverBase
MemoryRegion	src/breakpad/google_breakpad/processor/memory_region.h	/^class MemoryRegion {$/;"	c	namespace:google_breakpad
MemoryRegions	src/breakpad/google_breakpad/processor/minidump.h	/^  typedef vector<MinidumpMemoryRegion> MemoryRegions;$/;"	t	class:google_breakpad::MinidumpMemoryList
Memory_GetStats	include/fmod/fmod.hpp	/^    inline FMOD_RESULT Memory_GetStats  (int *currentalloced, int *maxalloced, bool blocking = true) { return FMOD_Memory_GetStats(currentalloced, maxalloced, blocking); }$/;"	f	namespace:FMOD
Memory_Initialize	include/fmod/fmod.hpp	/^    inline FMOD_RESULT Memory_Initialize(void *poolmem, int poollen, FMOD_MEMORY_ALLOCCALLBACK useralloc, FMOD_MEMORY_REALLOCCALLBACK userrealloc, FMOD_MEMORY_FREECALLBACK userfree, FMOD_MEMORY_TYPE memtypeflags = FMOD_MEMORY_ALL) { return FMOD_Memory_Initialize(poolmem, poollen, useralloc, userrealloc, userfree, memtypeflags); }$/;"	f	namespace:FMOD
Mengjin	src/package/firepackage.cpp	/^    Mengjin():TriggerSkill("mengjin"){$/;"	f	class:Mengjin
Mengjin	src/package/firepackage.cpp	/^class Mengjin: public TriggerSkill{$/;"	c	file:
MessageTag	src/breakpad/client/windows/common/ipc_protocol.h	/^enum MessageTag {$/;"	g	namespace:google_breakpad
MetaInfoWidget	src/dialog/packagingeditor.cpp	/^MetaInfoWidget::MetaInfoWidget(bool load_config){$/;"	f	class:MetaInfoWidget
MetaInfoWidget	src/dialog/packagingeditor.h	/^class MetaInfoWidget: public QGroupBox{$/;"	c
Miji	src/package/yjcm2012-package.cpp	/^    Miji():PhaseChangeSkill("miji"){$/;"	f	class:Miji
Miji	src/package/yjcm2012-package.cpp	/^class Miji: public PhaseChangeSkill{$/;"	c	file:
Mingce	src/package/yjcm-package.cpp	/^    Mingce():OneCardViewAsSkill("mingce"){$/;"	f	class:Mingce
Mingce	src/package/yjcm-package.cpp	/^class Mingce: public OneCardViewAsSkill{$/;"	c	file:
MingceCard	src/package/yjcm-package.cpp	/^MingceCard::MingceCard(){$/;"	f	class:MingceCard
MingceCard	src/package/yjcm-package.h	/^class MingceCard: public SkillCard{$/;"	c
Mingzhe	src/package/special3v3-package.cpp	/^    Mingzhe():TriggerSkill("mingzhe"){$/;"	f	class:Mingzhe
Mingzhe	src/package/special3v3-package.cpp	/^class Mingzhe: public TriggerSkill{$/;"	c	file:
MiniDumpWriteDumpType	src/breakpad/client/windows/crash_generation/minidump_generator.h	/^  typedef BOOL (WINAPI* MiniDumpWriteDumpType)($/;"	t	class:google_breakpad::MinidumpGenerator
MiniDumpWriteDump_type	src/breakpad/client/windows/handler/exception_handler.h	/^  typedef BOOL (WINAPI *MiniDumpWriteDump_type)($/;"	t	class:google_breakpad::ExceptionHandler
MiniScene	src/scenario/miniscenarios.cpp	/^MiniScene::MiniScene(const QString &name)$/;"	f	class:MiniScene
MiniScene	src/scenario/miniscenarios.h	/^class MiniScene : public Scenario$/;"	c
MiniSceneRule	src/scenario/miniscenarios.cpp	/^MiniSceneRule::MiniSceneRule(Scenario *scenario)$/;"	f	class:MiniSceneRule
MiniSceneRule	src/scenario/miniscenarios.h	/^class MiniSceneRule : public ScenarioRule$/;"	c
Minidump	src/breakpad/google_breakpad/processor/minidump.h	/^class Minidump {$/;"	c	namespace:google_breakpad
Minidump	src/breakpad/processor/minidump.cc	/^Minidump::Minidump(const string& path)$/;"	f	class:google_breakpad::Minidump
Minidump	src/breakpad/processor/minidump.cc	/^Minidump::Minidump(istream& stream)$/;"	f	class:google_breakpad::Minidump
MinidumpAssertion	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpAssertion : public MinidumpStream {$/;"	c	namespace:google_breakpad
MinidumpAssertion	src/breakpad/processor/minidump.cc	/^MinidumpAssertion::MinidumpAssertion(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpAssertion
MinidumpBreakpadInfo	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpBreakpadInfo : public MinidumpStream {$/;"	c	namespace:google_breakpad
MinidumpBreakpadInfo	src/breakpad/processor/minidump.cc	/^MinidumpBreakpadInfo::MinidumpBreakpadInfo(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpBreakpadInfo
MinidumpCallback	src/breakpad/client/windows/handler/exception_handler.h	/^  typedef bool (*MinidumpCallback)(const wchar_t* dump_path,$/;"	t	class:google_breakpad::ExceptionHandler
MinidumpCallbackContext	src/breakpad/client/windows/handler/exception_handler.cc	/^} MinidumpCallbackContext;$/;"	t	namespace:google_breakpad	typeref:struct:google_breakpad::__anon66	file:
MinidumpContext	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpContext : public MinidumpStream {$/;"	c	namespace:google_breakpad
MinidumpContext	src/breakpad/processor/minidump.cc	/^MinidumpContext::MinidumpContext(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpContext
MinidumpDirectoryEntries	src/breakpad/google_breakpad/processor/minidump.h	/^  typedef vector<MDRawDirectory> MinidumpDirectoryEntries;$/;"	t	class:google_breakpad::Minidump
MinidumpException	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpException : public MinidumpStream {$/;"	c	namespace:google_breakpad
MinidumpException	src/breakpad/processor/minidump.cc	/^MinidumpException::MinidumpException(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpException
MinidumpGenerator	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^MinidumpGenerator::MinidumpGenerator(const wstring& dump_path)$/;"	f	class:google_breakpad::MinidumpGenerator
MinidumpGenerator	src/breakpad/client/windows/crash_generation/minidump_generator.h	/^class MinidumpGenerator {$/;"	c	namespace:google_breakpad
MinidumpMemoryInfo	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpMemoryInfo : public MinidumpObject {$/;"	c	namespace:google_breakpad
MinidumpMemoryInfo	src/breakpad/processor/minidump.cc	/^MinidumpMemoryInfo::MinidumpMemoryInfo(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpMemoryInfo
MinidumpMemoryInfoList	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpMemoryInfoList : public MinidumpStream {$/;"	c	namespace:google_breakpad
MinidumpMemoryInfoList	src/breakpad/processor/minidump.cc	/^MinidumpMemoryInfoList::MinidumpMemoryInfoList(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpMemoryInfoList
MinidumpMemoryInfos	src/breakpad/google_breakpad/processor/minidump.h	/^  typedef vector<MinidumpMemoryInfo> MinidumpMemoryInfos;$/;"	t	class:google_breakpad::MinidumpMemoryInfoList
MinidumpMemoryList	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpMemoryList : public MinidumpStream {$/;"	c	namespace:google_breakpad
MinidumpMemoryList	src/breakpad/processor/minidump.cc	/^MinidumpMemoryList::MinidumpMemoryList(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpMemoryList
MinidumpMemoryRegion	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpMemoryRegion : public MinidumpObject,$/;"	c	namespace:google_breakpad
MinidumpMemoryRegion	src/breakpad/processor/minidump.cc	/^MinidumpMemoryRegion::MinidumpMemoryRegion(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpMemoryRegion
MinidumpMiscInfo	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpMiscInfo : public MinidumpStream {$/;"	c	namespace:google_breakpad
MinidumpMiscInfo	src/breakpad/processor/minidump.cc	/^MinidumpMiscInfo::MinidumpMiscInfo(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpMiscInfo
MinidumpModule	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpModule : public MinidumpObject,$/;"	c	namespace:google_breakpad
MinidumpModule	src/breakpad/processor/minidump.cc	/^MinidumpModule::MinidumpModule(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpModule
MinidumpModuleList	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpModuleList : public MinidumpStream,$/;"	c	namespace:google_breakpad
MinidumpModuleList	src/breakpad/processor/minidump.cc	/^MinidumpModuleList::MinidumpModuleList(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpModuleList
MinidumpModules	src/breakpad/google_breakpad/processor/minidump.h	/^  typedef vector<MinidumpModule> MinidumpModules;$/;"	t	class:google_breakpad::MinidumpModuleList
MinidumpObject	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpObject {$/;"	c	namespace:google_breakpad
MinidumpObject	src/breakpad/processor/minidump.cc	/^MinidumpObject::MinidumpObject(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpObject
MinidumpProcessor	src/breakpad/google_breakpad/processor/minidump_processor.h	/^class MinidumpProcessor {$/;"	c	namespace:google_breakpad
MinidumpProcessor	src/breakpad/processor/minidump_processor.cc	/^MinidumpProcessor::MinidumpProcessor(SymbolSupplier *supplier,$/;"	f	class:google_breakpad::MinidumpProcessor
MinidumpProcessorTest	src/breakpad/processor/minidump_processor_unittest.cc	/^class MinidumpProcessorTest : public ::testing::Test {$/;"	c	namespace:__anon77	file:
MinidumpStream	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpStream : public MinidumpObject {$/;"	c	namespace:google_breakpad
MinidumpStream	src/breakpad/processor/minidump.cc	/^MinidumpStream::MinidumpStream(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpStream
MinidumpStreamInfo	src/breakpad/google_breakpad/processor/minidump.h	/^    MinidumpStreamInfo() : stream_index(0), stream(NULL) {}$/;"	f	struct:google_breakpad::Minidump::MinidumpStreamInfo
MinidumpStreamInfo	src/breakpad/google_breakpad/processor/minidump.h	/^  struct MinidumpStreamInfo {$/;"	s	class:google_breakpad::Minidump
MinidumpStreamMap	src/breakpad/google_breakpad/processor/minidump.h	/^  typedef map<u_int32_t, MinidumpStreamInfo> MinidumpStreamMap;$/;"	t	class:google_breakpad::Minidump
MinidumpSystemInfo	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpSystemInfo : public MinidumpStream {$/;"	c	namespace:google_breakpad
MinidumpSystemInfo	src/breakpad/processor/minidump.cc	/^MinidumpSystemInfo::MinidumpSystemInfo(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpSystemInfo
MinidumpTest	src/breakpad/processor/minidump_unittest.cc	/^class MinidumpTest : public ::testing::Test {$/;"	c	namespace:__anon86	file:
MinidumpThread	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpThread : public MinidumpObject {$/;"	c	namespace:google_breakpad
MinidumpThread	src/breakpad/processor/minidump.cc	/^MinidumpThread::MinidumpThread(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpThread
MinidumpThreadList	src/breakpad/google_breakpad/processor/minidump.h	/^class MinidumpThreadList : public MinidumpStream {$/;"	c	namespace:google_breakpad
MinidumpThreadList	src/breakpad/processor/minidump.cc	/^MinidumpThreadList::MinidumpThreadList(Minidump* minidump)$/;"	f	class:google_breakpad::MinidumpThreadList
MinidumpThreads	src/breakpad/google_breakpad/processor/minidump.h	/^  typedef vector<MinidumpThread> MinidumpThreads;$/;"	t	class:google_breakpad::MinidumpThreadList
MinidumpWriteDumpCallback	src/breakpad/client/windows/handler/exception_handler.cc	/^BOOL CALLBACK ExceptionHandler::MinidumpWriteDumpCallback($/;"	f	class:google_breakpad::ExceptionHandler
MixedPack	src/package/package.h	/^        MixedPack,$/;"	e	enum:Package::Type
MockCFIRuleParserHandler	src/breakpad/processor/cfi_frame_info_unittest.cc	/^class MockCFIRuleParserHandler: public CFIRuleParser::Handler {$/;"	c	file:
MockCodeModule	src/breakpad/processor/stackwalker_unittest_utils.h	/^  MockCodeModule(u_int64_t base_address, u_int64_t size,$/;"	f	class:MockCodeModule
MockCodeModule	src/breakpad/processor/stackwalker_unittest_utils.h	/^class MockCodeModule: public google_breakpad::CodeModule {$/;"	c
MockCodeModules	src/breakpad/processor/stackwalker_unittest_utils.h	/^class MockCodeModules: public google_breakpad::CodeModules {$/;"	c
MockMemoryRegion	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^class MockMemoryRegion: public MemoryRegion {$/;"	c	namespace:__anon71	file:
MockMemoryRegion	src/breakpad/processor/cfi_frame_info_unittest.cc	/^class MockMemoryRegion: public MemoryRegion {$/;"	c	file:
MockMemoryRegion	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^class MockMemoryRegion: public MemoryRegion {$/;"	c	namespace:__anon73	file:
MockMemoryRegion	src/breakpad/processor/stackwalker_unittest_utils.h	/^  MockMemoryRegion(): base_address_(0) { }$/;"	f	class:MockMemoryRegion
MockMemoryRegion	src/breakpad/processor/stackwalker_unittest_utils.h	/^class MockMemoryRegion: public google_breakpad::MemoryRegion {$/;"	c
MockMinidump	src/breakpad/processor/exploitability_unittest.cc	/^  MockMinidump() : Minidump("") {$/;"	f	class:google_breakpad::MockMinidump
MockMinidump	src/breakpad/processor/exploitability_unittest.cc	/^class MockMinidump : public Minidump {$/;"	c	namespace:google_breakpad	file:
MockMinidump	src/breakpad/processor/minidump_processor_unittest.cc	/^  MockMinidump() : Minidump("") {$/;"	f	class:google_breakpad::MockMinidump
MockMinidump	src/breakpad/processor/minidump_processor_unittest.cc	/^class MockMinidump : public Minidump {$/;"	c	namespace:google_breakpad	file:
MockSymbolSupplier	src/breakpad/processor/minidump_processor_unittest.cc	/^  MockSymbolSupplier() { }$/;"	f	class:__anon77::MockSymbolSupplier
MockSymbolSupplier	src/breakpad/processor/minidump_processor_unittest.cc	/^class MockSymbolSupplier : public SymbolSupplier {$/;"	c	namespace:__anon77	file:
MockSymbolSupplier	src/breakpad/processor/stackwalker_unittest_utils.h	/^class MockSymbolSupplier: public google_breakpad::SymbolSupplier {$/;"	c
Modified	include/freetype/freetype/tttables.h	/^    FT_Long    Modified[2];$/;"	m	struct:TT_Header_
ModulationDepth	include/fmod/fmod.h	/^    float        ModulationDepth;   \/* [r\/w] 0.0    1.0    0.0     Modulation depth                                                      (SUPPORTED:WII) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
ModulationTime	include/fmod/fmod.h	/^    float        ModulationTime;    \/* [r\/w] 0.04   4.0    0.25    Modulation time                                                       (SUPPORTED:---) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
Module	src/breakpad/processor/basic_source_line_resolver_types.h	/^  explicit Module(const string &name) : name_(name) { }$/;"	f	class:google_breakpad::BasicSourceLineResolver::Module
Module	src/breakpad/processor/basic_source_line_resolver_types.h	/^class BasicSourceLineResolver::Module : public SourceLineResolverBase::Module {$/;"	c	class:google_breakpad::BasicSourceLineResolver
Module	src/breakpad/processor/fast_source_line_resolver_types.h	/^  explicit Module(const string &name) : name_(name) { }$/;"	f	class:google_breakpad::FastSourceLineResolver::Module
Module	src/breakpad/processor/fast_source_line_resolver_types.h	/^class FastSourceLineResolver::Module: public SourceLineResolverBase::Module {$/;"	c	class:google_breakpad::FastSourceLineResolver
Module	src/breakpad/processor/source_line_resolver_base_types.h	/^class SourceLineResolverBase::Module {$/;"	c	class:google_breakpad::SourceLineResolverBase
Module	src/breakpad/processor/synth_minidump.cc	/^Module::Module(const Dump &dump,$/;"	f	class:google_breakpad::SynthMinidump::Module
Module	src/breakpad/processor/synth_minidump.h	/^class Module: public Section {$/;"	c	namespace:google_breakpad::SynthMinidump
ModuleComparer	src/breakpad/processor/module_comparer.h	/^  ModuleComparer(): fast_resolver_(new FastSourceLineResolver),$/;"	f	class:google_breakpad::ModuleComparer
ModuleComparer	src/breakpad/processor/module_comparer.h	/^class ModuleComparer {$/;"	c	namespace:google_breakpad
ModuleFactory	src/breakpad/processor/module_factory.h	/^class ModuleFactory {$/;"	c	namespace:google_breakpad
ModuleMap	src/breakpad/google_breakpad/processor/source_line_resolver_base.h	/^  typedef map<string, Module*, CompareString> ModuleMap;$/;"	t	class:google_breakpad::SourceLineResolverBase
ModuleSerializer	src/breakpad/processor/module_serializer.h	/^class ModuleSerializer {$/;"	c	namespace:google_breakpad
ModuleVector	src/breakpad/processor/stackwalker_unittest_utils.h	/^  typedef std::vector<const MockCodeModule *> ModuleVector;$/;"	t	class:MockCodeModules
Monkey	src/package/joypackage.cpp	/^Monkey::Monkey(Card::Suit suit, int number)$/;"	f	class:Monkey
Monkey	src/package/joypackage.h	/^class Monkey: public OffensiveHorse{$/;"	c
MoonSpear	src/package/nostalgia.cpp	/^MoonSpear::MoonSpear(Suit suit, int number)$/;"	f	class:MoonSpear
MoonSpear	src/package/nostalgia.h	/^class MoonSpear:public Weapon{$/;"	c
MoonSpearSkill	src/package/nostalgia.cpp	/^    MoonSpearSkill():WeaponSkill("MoonSpear"){$/;"	f	class:MoonSpearSkill
MoonSpearSkill	src/package/nostalgia.cpp	/^class MoonSpearSkill: public WeaponSkill{$/;"	c	file:
Mouduan	src/package/bgm-package.cpp	/^    Mouduan():TriggerSkill("mouduan"){$/;"	f	class:Mouduan
Mouduan	src/package/bgm-package.cpp	/^class Mouduan: public TriggerSkill{$/;"	c	file:
MouduanStart	src/package/bgm-package.cpp	/^    MouduanStart():GameStartSkill("#mouduan"){$/;"	f	class:MouduanStart
MouduanStart	src/package/bgm-package.cpp	/^class MouduanStart: public GameStartSkill{$/;"	c	file:
MountainPackage	src/package/mountainpackage.cpp	/^MountainPackage::MountainPackage()$/;"	f	class:MountainPackage
MountainPackage	src/package/mountainpackage.h	/^class MountainPackage : public Package$/;"	c
MudSlide	src/package/joypackage.cpp	/^MudSlide::MudSlide(Card::Suit suit, int number)$/;"	f	class:MudSlide
MudSlide	src/package/joypackage.h	/^class MudSlide: public Disaster{$/;"	c
MyPixmapItem	src/ui/chatwidget.cpp	/^MyPixmapItem::MyPixmapItem(const QPixmap &pixmap, QGraphicsItem *parentItem)$/;"	f	class:MyPixmapItem
MyPixmapItem	src/ui/chatwidget.h	/^class MyPixmapItem : public QObject , public QGraphicsPixmapItem$/;"	c
NATIVESOCKET_H	src/util/nativesocket.h	2;"	d
NOSTALGIA_H	src/package/nostalgia.h	2;"	d
NOT_FOUND	src/breakpad/google_breakpad/processor/symbol_supplier.h	/^    NOT_FOUND,$/;"	e	enum:google_breakpad::SymbolSupplier::SymbolResult
NO_JUMP	src/lua/lcode.h	20;"	d
NO_REG	src/lua/lopcodes.h	136;"	d
NULL	include/freetype/freetype/internal/ftobjs.h	61;"	d
NUM_OPCODES	src/lua/lopcodes.h	211;"	d
NUM_RESERVED	src/lua/llex.h	36;"	d
NUM_TAGS	src/lua/lobject.h	22;"	d
Name	src/client/clientstruct.h	/^    QString Name;$/;"	m	struct:ServerInfoStruct
NativeClientSocket	src/util/nativesocket.cpp	/^NativeClientSocket::NativeClientSocket()    $/;"	f	class:NativeClientSocket
NativeClientSocket	src/util/nativesocket.cpp	/^NativeClientSocket::NativeClientSocket(QTcpSocket *socket)$/;"	f	class:NativeClientSocket
NativeClientSocket	src/util/nativesocket.h	/^class NativeClientSocket: public ClientSocket{$/;"	c
NativeServerSocket	src/util/nativesocket.cpp	/^NativeServerSocket::NativeServerSocket()$/;"	f	class:NativeServerSocket
NativeServerSocket	src/util/nativesocket.h	/^class NativeServerSocket: public ServerSocket{$/;"	c
Nature	src/core/structs.h	/^    enum Nature{$/;"	g	struct:DamageStruct
NatureSlash	src/package/maneuvering.cpp	/^NatureSlash::NatureSlash(Suit suit, int number, DamageStruct::Nature nature)$/;"	f	class:NatureSlash
NatureSlash	src/package/maneuvering.h	/^class NatureSlash: public Slash{$/;"	c
NeoFanjian	src/package/lingpackage.cpp	/^    NeoFanjian():ZeroCardViewAsSkill("neofanjian"){$/;"	f	class:NeoFanjian
NeoFanjian	src/package/lingpackage.cpp	/^class NeoFanjian:public ZeroCardViewAsSkill{$/;"	c	file:
NeoFanjianCard	src/package/lingpackage.cpp	/^NeoFanjianCard::NeoFanjianCard(){$/;"	f	class:NeoFanjianCard
NeoFanjianCard	src/package/lingpackage.h	/^class NeoFanjianCard: public SkillCard{$/;"	c
NeoGanglie	src/package/lingpackage.cpp	/^    NeoGanglie():MasochismSkill("neoganglie"){$/;"	f	class:NeoGanglie
NeoGanglie	src/package/lingpackage.cpp	/^class NeoGanglie:public MasochismSkill{$/;"	c	file:
NeoJushou	src/package/lingpackage.cpp	/^    NeoJushou():PhaseChangeSkill("neojushou"){$/;"	f	class:NeoJushou
NeoJushou	src/package/lingpackage.cpp	/^class NeoJushou: public PhaseChangeSkill{$/;"	c	file:
NeoLuoyi	src/package/lingpackage.cpp	/^    NeoLuoyi():ZeroCardViewAsSkill("neoluoyi"){$/;"	f	class:NeoLuoyi
NeoLuoyi	src/package/lingpackage.cpp	/^class NeoLuoyi: public ZeroCardViewAsSkill{$/;"	c	file:
Neuter	src/core/general.h	/^    enum Gender {Male, Female, Neuter};$/;"	e	enum:General::Gender
Neutrality	src/server/ai.h	/^    enum Relation { Friend, Enemy, Neutrality };$/;"	e	enum:AI::Relation
NeverNullifyMyTrick	src/core/settings.h	/^    bool NeverNullifyMyTrick;$/;"	m	class:Settings
New3v3CardPackage	src/package/special3v3-package.cpp	/^New3v3CardPackage::New3v3CardPackage()$/;"	f	class:New3v3CardPackage
New3v3CardPackage	src/package/special3v3-package.h	/^class New3v3CardPackage: public Package{$/;"	c
NextInstruction	src/breakpad/processor/disassembler_x86.cc	/^u_int32_t DisassemblerX86::NextInstruction() {$/;"	f	class:google_breakpad::DisassemblerX86
Niepan	src/package/firepackage.cpp	/^    Niepan():TriggerSkill("niepan"){$/;"	f	class:Niepan
Niepan	src/package/firepackage.cpp	/^class Niepan: public TriggerSkill{$/;"	c	file:
NoSuit	src/core/card.h	/^    enum Suit {Spade, Club, Heart, Diamond, NoSuit};$/;"	e	enum:Card::Suit
Node	src/lua/lobject.h	/^typedef struct Node {$/;"	s
Node	src/lua/lobject.h	/^} Node;$/;"	t	typeref:struct:Node
Nodes	src/jsoncpp/include/json/reader.h	/^      typedef std::stack<Value *> Nodes;$/;"	t	class:Json::Reader
NonTrigger	src/core/structs.h	/^    NonTrigger,$/;"	e	enum:TriggerEvent
Normal	src/core/structs.h	/^        Normal, \/\/ normal slash, duel and most damage caused by skill$/;"	e	enum:DamageStruct::Nature
Normalize128	src/breakpad/processor/minidump.cc	/^static void Normalize128(u_int128_t* value, bool is_big_endian) {$/;"	f	namespace:google_breakpad
NosEnyuan	src/package/nostalgia.cpp	/^    NosEnyuan():TriggerSkill("nosenyuan"){$/;"	f	class:NosEnyuan
NosEnyuan	src/package/nostalgia.cpp	/^class NosEnyuan: public TriggerSkill{$/;"	c	file:
NosJujian	src/package/nostalgia.cpp	/^    NosJujian():ViewAsSkill("nosjujian"){$/;"	f	class:NosJujian
NosJujian	src/package/nostalgia.cpp	/^class NosJujian: public ViewAsSkill{$/;"	c	file:
NosJujianCard	src/package/nostalgia.cpp	/^NosJujianCard::NosJujianCard(){$/;"	f	class:NosJujianCard
NosJujianCard	src/package/nostalgia.h	/^class NosJujianCard: public SkillCard{$/;"	c
NosShangshi	src/package/nostalgia.cpp	/^    NosShangshi():Shangshi("nosshangshi", 998)$/;"	f	class:NosShangshi
NosShangshi	src/package/nostalgia.cpp	/^class NosShangshi: public Shangshi{$/;"	c	file:
NosShangshiCardMove	src/package/nostalgia.cpp	/^    NosShangshiCardMove():Shangshi("#nosshangshi", 998)$/;"	f	class:NosShangshiCardMove
NosShangshiCardMove	src/package/nostalgia.cpp	/^class NosShangshiCardMove: public Shangshi{$/;"	c	file:
NosWuyan	src/package/nostalgia.cpp	/^    NosWuyan():TriggerSkill("noswuyan"){$/;"	f	class:NosWuyan
NosWuyan	src/package/nostalgia.cpp	/^class NosWuyan: public TriggerSkill{$/;"	c	file:
NosXuanfeng	src/package/nostalgia.cpp	/^    NosXuanfeng():TriggerSkill("nosxuanfeng"){$/;"	f	class:NosXuanfeng
NosXuanfeng	src/package/nostalgia.cpp	/^class NosXuanfeng: public TriggerSkill{$/;"	c	file:
NosXuanhuo	src/package/nostalgia.cpp	/^    NosXuanhuo():OneCardViewAsSkill("nosxuanhuo"){$/;"	f	class:NosXuanhuo
NosXuanhuo	src/package/nostalgia.cpp	/^class NosXuanhuo: public OneCardViewAsSkill{$/;"	c	file:
NosXuanhuoCard	src/package/nostalgia.cpp	/^NosXuanhuoCard::NosXuanhuoCard(){$/;"	f	class:NosXuanhuoCard
NosXuanhuoCard	src/package/nostalgia.h	/^class NosXuanhuoCard: public SkillCard{$/;"	c
NostalGeneralPackage	src/package/nostalgia.cpp	/^NostalGeneralPackage::NostalGeneralPackage()$/;"	f	class:NostalGeneralPackage
NostalGeneralPackage	src/package/nostalgia.h	/^class NostalGeneralPackage: public Package{$/;"	c
NostalgiaPackage	src/package/nostalgia.cpp	/^NostalgiaPackage::NostalgiaPackage()$/;"	f	class:NostalgiaPackage
NostalgiaPackage	src/package/nostalgia.h	/^class NostalgiaPackage: public Package{$/;"	c
NotActive	src/client/client.h	/^        NotActive,$/;"	e	enum:Client::Status
NotActive	src/core/player.h	/^    enum Phase {RoundStart, Start, Judge, Draw, Play, Discard, Finish, NotActive, PhaseNone};$/;"	e	enum:Player::Phase
NotFrequent	src/core/skill.h	/^        NotFrequent,$/;"	e	enum:Skill::Frequency
Nullification	src/package/standard-cards.cpp	/^Nullification::Nullification(Suit suit, int number)$/;"	f	class:Nullification
Nullification	src/package/standard.h	/^class Nullification:public SingleTargetTrick{$/;"	c
NullificationCountDown	src/core/settings.h	/^    int NullificationCountDown;$/;"	m	class:Settings
NumKernPair	include/freetype/freetype/internal/t1types.h	/^    FT_Int         NumKernPair;$/;"	m	struct:AFM_FontInfoRec_
NumOfEvents	src/core/structs.h	/^    NumOfEvents$/;"	e	enum:TriggerEvent
NumTrackKern	include/freetype/freetype/internal/t1types.h	/^    FT_Int         NumTrackKern;$/;"	m	struct:AFM_FontInfoRec_
Number2String	src/core/card.cpp	/^QString Card::Number2String(int number){$/;"	f	class:Card
OLDPWD	Makefile	/^OLDPWD:=$(PWD)$/;"	m
OLDPWD	linux.mk	/^OLDPWD:=$(PWD)$/;"	m
OPR_ADD	src/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_AND	src/lua/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_CONCAT	src/lua/lcode.h	/^  OPR_CONCAT,$/;"	e	enum:BinOpr
OPR_DIV	src/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_EQ	src/lua/lcode.h	/^  OPR_NE, OPR_EQ,$/;"	e	enum:BinOpr
OPR_GE	src/lua/lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_GT	src/lua/lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_LE	src/lua/lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_LEN	src/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_LT	src/lua/lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_MINUS	src/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_MOD	src/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_MUL	src/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_NE	src/lua/lcode.h	/^  OPR_NE, OPR_EQ,$/;"	e	enum:BinOpr
OPR_NOBINOPR	src/lua/lcode.h	/^  OPR_NOBINOPR$/;"	e	enum:BinOpr
OPR_NOT	src/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_NOUNOPR	src/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_OR	src/lua/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_POW	src/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_SUB	src/lua/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OP_ADD	src/lua/lopcodes.h	/^OP_ADD,\/*	A B C	R(A) := RK(B) + RK(C)				*\/$/;"	e	enum:__anon89
OP_CALL	src/lua/lopcodes.h	/^OP_CALL,\/*	A B C	R(A), ... ,R(A+C-2) := R(A)(R(A+1), ... ,R(A+B-1)) *\/$/;"	e	enum:__anon89
OP_CLOSE	src/lua/lopcodes.h	/^OP_CLOSE,\/*	A 	close all variables in the stack up to (>=) R(A)*\/$/;"	e	enum:__anon89
OP_CLOSURE	src/lua/lopcodes.h	/^OP_CLOSURE,\/*	A Bx	R(A) := closure(KPROTO[Bx], R(A), ... ,R(A+n))	*\/$/;"	e	enum:__anon89
OP_CONCAT	src/lua/lopcodes.h	/^OP_CONCAT,\/*	A B C	R(A) := R(B).. ... ..R(C)			*\/$/;"	e	enum:__anon89
OP_DIV	src/lua/lopcodes.h	/^OP_DIV,\/*	A B C	R(A) := RK(B) \/ RK(C)				*\/$/;"	e	enum:__anon89
OP_EQ	src/lua/lopcodes.h	/^OP_EQ,\/*	A B C	if ((RK(B) == RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon89
OP_FORLOOP	src/lua/lopcodes.h	/^OP_FORLOOP,\/*	A sBx	R(A)+=R(A+2);$/;"	e	enum:__anon89
OP_FORPREP	src/lua/lopcodes.h	/^OP_FORPREP,\/*	A sBx	R(A)-=R(A+2); pc+=sBx				*\/$/;"	e	enum:__anon89
OP_GETGLOBAL	src/lua/lopcodes.h	/^OP_GETGLOBAL,\/*	A Bx	R(A) := Gbl[Kst(Bx)]				*\/$/;"	e	enum:__anon89
OP_GETTABLE	src/lua/lopcodes.h	/^OP_GETTABLE,\/*	A B C	R(A) := R(B)[RK(C)]				*\/$/;"	e	enum:__anon89
OP_GETUPVAL	src/lua/lopcodes.h	/^OP_GETUPVAL,\/*	A B	R(A) := UpValue[B]				*\/$/;"	e	enum:__anon89
OP_JMP	src/lua/lopcodes.h	/^OP_JMP,\/*	sBx	pc+=sBx					*\/$/;"	e	enum:__anon89
OP_LE	src/lua/lopcodes.h	/^OP_LE,\/*	A B C	if ((RK(B) <= RK(C)) ~= A) then pc++  		*\/$/;"	e	enum:__anon89
OP_LEN	src/lua/lopcodes.h	/^OP_LEN,\/*	A B	R(A) := length of R(B)				*\/$/;"	e	enum:__anon89
OP_LOADBOOL	src/lua/lopcodes.h	/^OP_LOADBOOL,\/*	A B C	R(A) := (Bool)B; if (C) pc++			*\/$/;"	e	enum:__anon89
OP_LOADK	src/lua/lopcodes.h	/^OP_LOADK,\/*	A Bx	R(A) := Kst(Bx)					*\/$/;"	e	enum:__anon89
OP_LOADNIL	src/lua/lopcodes.h	/^OP_LOADNIL,\/*	A B	R(A) := ... := R(B) := nil			*\/$/;"	e	enum:__anon89
OP_LT	src/lua/lopcodes.h	/^OP_LT,\/*	A B C	if ((RK(B) <  RK(C)) ~= A) then pc++  		*\/$/;"	e	enum:__anon89
OP_MOD	src/lua/lopcodes.h	/^OP_MOD,\/*	A B C	R(A) := RK(B) % RK(C)				*\/$/;"	e	enum:__anon89
OP_MOVE	src/lua/lopcodes.h	/^OP_MOVE,\/*	A B	R(A) := R(B)					*\/$/;"	e	enum:__anon89
OP_MUL	src/lua/lopcodes.h	/^OP_MUL,\/*	A B C	R(A) := RK(B) * RK(C)				*\/$/;"	e	enum:__anon89
OP_NEWTABLE	src/lua/lopcodes.h	/^OP_NEWTABLE,\/*	A B C	R(A) := {} (size = B,C)				*\/$/;"	e	enum:__anon89
OP_NOT	src/lua/lopcodes.h	/^OP_NOT,\/*	A B	R(A) := not R(B)				*\/$/;"	e	enum:__anon89
OP_POW	src/lua/lopcodes.h	/^OP_POW,\/*	A B C	R(A) := RK(B) ^ RK(C)				*\/$/;"	e	enum:__anon89
OP_RETURN	src/lua/lopcodes.h	/^OP_RETURN,\/*	A B	return R(A), ... ,R(A+B-2)	(see note)	*\/$/;"	e	enum:__anon89
OP_SELF	src/lua/lopcodes.h	/^OP_SELF,\/*	A B C	R(A+1) := R(B); R(A) := R(B)[RK(C)]		*\/$/;"	e	enum:__anon89
OP_SETGLOBAL	src/lua/lopcodes.h	/^OP_SETGLOBAL,\/*	A Bx	Gbl[Kst(Bx)] := R(A)				*\/$/;"	e	enum:__anon89
OP_SETLIST	src/lua/lopcodes.h	/^OP_SETLIST,\/*	A B C	R(A)[(C-1)*FPF+i] := R(A+i), 1 <= i <= B	*\/$/;"	e	enum:__anon89
OP_SETTABLE	src/lua/lopcodes.h	/^OP_SETTABLE,\/*	A B C	R(A)[RK(B)] := RK(C)				*\/$/;"	e	enum:__anon89
OP_SETUPVAL	src/lua/lopcodes.h	/^OP_SETUPVAL,\/*	A B	UpValue[B] := R(A)				*\/$/;"	e	enum:__anon89
OP_SUB	src/lua/lopcodes.h	/^OP_SUB,\/*	A B C	R(A) := RK(B) - RK(C)				*\/$/;"	e	enum:__anon89
OP_TAILCALL	src/lua/lopcodes.h	/^OP_TAILCALL,\/*	A B C	return R(A)(R(A+1), ... ,R(A+B-1))		*\/$/;"	e	enum:__anon89
OP_TEST	src/lua/lopcodes.h	/^OP_TEST,\/*	A C	if not (R(A) <=> C) then pc++			*\/ $/;"	e	enum:__anon89
OP_TESTSET	src/lua/lopcodes.h	/^OP_TESTSET,\/*	A B C	if (R(B) <=> C) then R(A) := R(B) else pc++	*\/ $/;"	e	enum:__anon89
OP_TFORLOOP	src/lua/lopcodes.h	/^OP_TFORLOOP,\/*	A C	R(A+3), ... ,R(A+2+C) := R(A)(R(A+1), R(A+2)); $/;"	e	enum:__anon89
OP_UNM	src/lua/lopcodes.h	/^OP_UNM,\/*	A B	R(A) := -R(B)					*\/$/;"	e	enum:__anon89
OP_VARARG	src/lua/lopcodes.h	/^OP_VARARG\/*	A B	R(A), R(A+1), ..., R(A+B-1) = vararg		*\/$/;"	e	enum:__anon89
O_BINARY	src/breakpad/processor/minidump.cc	52;"	d	file:
Object.static:allocate	lua/lib/middleclass.lua	/^function Object.static:allocate()$/;"	f
Object.static:include	lua/lib/middleclass.lua	/^function Object.static:include( ... )$/;"	f
Object.static:new	lua/lib/middleclass.lua	/^function Object.static:new(...)$/;"	f
Object.static:subclass	lua/lib/middleclass.lua	/^function Object.static:subclass(name)$/;"	f
Object.static:subclassed	lua/lib/middleclass.lua	/^function Object.static:subclassed(other) end$/;"	f
Object:__tostring	lua/lib/middleclass.lua	/^function Object:__tostring() return "instance of " .. tostring(self.class) end$/;"	f
Object:initialize	lua/lib/middleclass.lua	/^function Object:initialize() end$/;"	f
ObjectValues	src/jsoncpp/include/json/value.h	/^      typedef CppTL::SmallMap<CZString, Value> ObjectValues;$/;"	t	class:Json::Value
ObjectValues	src/jsoncpp/include/json/value.h	/^      typedef std::map<CZString, Value> ObjectValues;$/;"	t	class:Json::Value
OffensiveHorse	src/package/standard.cpp	/^OffensiveHorse::OffensiveHorse(Card::Suit suit, int number, int correct)$/;"	f	class:OffensiveHorse
OffensiveHorse	src/package/standard.h	/^class OffensiveHorse: public Horse{$/;"	c
OffensiveHorseLocation	src/package/standard.h	/^        OffensiveHorseLocation = 3$/;"	e	enum:EquipCard::Location
Offset	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong  Offset;     \/* table file offset *\/$/;"	m	struct:TT_TableRec_
OnClientConnectedCallback	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  typedef void (*OnClientConnectedCallback)(void* context,$/;"	t	class:google_breakpad::CrashGenerationServer
OnClientDumpRequestCallback	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  typedef void (*OnClientDumpRequestCallback)(void* context,$/;"	t	class:google_breakpad::CrashGenerationServer
OnClientEnd	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CALLBACK CrashGenerationServer::OnClientEnd(void* context, BOOLEAN) {$/;"	f	class:google_breakpad::CrashGenerationServer
OnClientExitedCallback	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  typedef void (*OnClientExitedCallback)(void* context,$/;"	t	class:google_breakpad::CrashGenerationServer
OnClientUploadRequestCallback	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  typedef void (*OnClientUploadRequestCallback)(void* context,$/;"	t	class:google_breakpad::CrashGenerationServer
OnDumpRequest	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CALLBACK CrashGenerationServer::OnDumpRequest(void* context, BOOLEAN) {$/;"	f	class:google_breakpad::CrashGenerationServer
OnPipeConnected	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^void CALLBACK CrashGenerationServer::OnPipeConnected(void* context, BOOLEAN) {$/;"	f	class:google_breakpad::CrashGenerationServer
OneCardViewAsSkill	src/core/skill.cpp	/^OneCardViewAsSkill::OneCardViewAsSkill(const QString &name)$/;"	f	class:OneCardViewAsSkill
OneCardViewAsSkill	src/core/skill.h	/^class OneCardViewAsSkill: public ViewAsSkill{$/;"	c
OpArgK	src/lua/lopcodes.h	/^  OpArgK   \/* argument is a constant or register\/constant *\/$/;"	e	enum:OpArgMask
OpArgMask	src/lua/lopcodes.h	/^enum OpArgMask {$/;"	g
OpArgN	src/lua/lopcodes.h	/^  OpArgN,  \/* argument is not used *\/$/;"	e	enum:OpArgMask
OpArgR	src/lua/lopcodes.h	/^  OpArgR,  \/* argument is a register or a jump offset *\/$/;"	e	enum:OpArgMask
OpArgU	src/lua/lopcodes.h	/^  OpArgU,  \/* argument is used *\/$/;"	e	enum:OpArgMask
OpCode	src/lua/lopcodes.h	/^} OpCode;$/;"	t	typeref:enum:__anon89
OpMode	src/lua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	g
Open	src/breakpad/common/windows/pdb_source_line_writer.cc	/^bool PDBSourceLineWriter::Open(const wstring &file, FileFormat format) {$/;"	f	class:google_breakpad::PDBSourceLineWriter
Open	src/breakpad/processor/minidump.cc	/^bool Minidump::Open() {$/;"	f	class:google_breakpad::Minidump
OperationNoLimit	src/core/settings.h	/^    bool OperationNoLimit;$/;"	m	class:Settings
OperationTimeout	src/client/clientstruct.h	/^    int OperationTimeout;$/;"	m	struct:ServerInfoStruct
OperationTimeout	src/core/settings.h	/^    int OperationTimeout;$/;"	m	class:Settings
OptionButton	src/dialog/choosegeneraldialog.cpp	/^OptionButton::OptionButton(QString icon_path, const QString &caption, QWidget *parent)$/;"	f	class:OptionButton
OptionButton	src/dialog/choosegeneraldialog.h	/^class OptionButton : public QToolButton$/;"	c
Overview	src/dialog/cardoverview.cpp	/^static CardOverview *Overview;$/;"	v	file:
PACKAGE_H	src/package/package.h	2;"	d
PACKAGINGEDITOR_H	src/dialog/packagingeditor.h	2;"	d
PCRC	src/lua/ldo.h	33;"	d
PCRLUA	src/lua/ldo.h	32;"	d
PCRYIELD	src/lua/ldo.h	34;"	d
PC_VALID	src/breakpad/processor/cfi_frame_info_unittest.cc	/^    PC_VALID = 0x40$/;"	e	enum:SimpleCFIWalkerFixture::Validity	file:
PDBModuleInfo	src/breakpad/common/windows/pdb_source_line_writer.h	/^struct PDBModuleInfo {$/;"	s	namespace:google_breakpad
PDBSourceLineWriter	src/breakpad/common/windows/pdb_source_line_writer.cc	/^PDBSourceLineWriter::PDBSourceLineWriter() : output_(NULL) {$/;"	f	class:google_breakpad::PDBSourceLineWriter
PDBSourceLineWriter	src/breakpad/common/windows/pdb_source_line_writer.h	/^class PDBSourceLineWriter {$/;"	c	namespace:google_breakpad
PDB_FILE	src/breakpad/common/windows/pdb_source_line_writer.h	/^    PDB_FILE,  \/\/ a .pdb file containing debug symbols$/;"	e	enum:google_breakpad::PDBSourceLineWriter::FileFormat
PEModuleInfo	src/breakpad/common/windows/pdb_source_line_writer.h	/^struct PEModuleInfo {$/;"	s	namespace:google_breakpad
PHOTO_H	src/ui/photo.h	2;"	d
PI	src/lua/lmathlib.c	20;"	d	file:
PI	src/lua/lmathlib.c	21;"	d	file:
PIXMAPANIMATION_H	src/ui/pixmapanimation.h	2;"	d
PIXMAP_H	src/ui/QSanSelectableItem.h	2;"	d
PLAYERCARDDIALOG_H	src/dialog/playercarddialog.h	2;"	d
PLAYER_H	src/core/player.h	2;"	d
PNG2TXT	src/util/recorder.cpp	/^QByteArray Replayer::PNG2TXT(const QString filename){$/;"	f	class:Replayer
POF	src/lua/loadlib.c	155;"	d	file:
POF	src/lua/loadlib.c	156;"	d	file:
POF	src/lua/loadlib.c	34;"	d	file:
POP_RESULT_FAIL	src/breakpad/processor/postfix_evaluator.h	/^    POP_RESULT_FAIL = 0,$/;"	e	enum:google_breakpad::PostfixEvaluator::PopResult
POP_RESULT_IDENTIFIER	src/breakpad/processor/postfix_evaluator.h	/^    POP_RESULT_IDENTIFIER$/;"	e	enum:google_breakpad::PostfixEvaluator::PopResult
POP_RESULT_VALUE	src/breakpad/processor/postfix_evaluator.h	/^    POP_RESULT_VALUE,$/;"	e	enum:google_breakpad::PostfixEvaluator::PopResult
POS_A	src/lua/lopcodes.h	45;"	d
POS_B	src/lua/lopcodes.h	47;"	d
POS_Bx	src/lua/lopcodes.h	48;"	d
POS_C	src/lua/lopcodes.h	46;"	d
POS_OP	src/lua/lopcodes.h	44;"	d
PRIx32	src/breakpad/processor/minidump.cc	48;"	d	file:
PRIx64	src/breakpad/google_breakpad/common/breakpad_types.h	80;"	d
PRIx64	src/breakpad/processor/minidump.cc	47;"	d	file:
PROCESSOR_ADDRESS_MAP_H__	src/breakpad/processor/address_map.h	39;"	d
PROCESSOR_ADDRESS_MAP_INL_H__	src/breakpad/processor/address_map-inl.h	37;"	d
PROCESSOR_BASIC_CODE_MODULES_H__	src/breakpad/processor/basic_code_modules.h	42;"	d
PROCESSOR_BASIC_CODE_MODULE_H__	src/breakpad/processor/basic_code_module.h	42;"	d
PROCESSOR_BASIC_SOURCE_LINE_RESOLVER_TYPES_H__	src/breakpad/processor/basic_source_line_resolver_types.h	38;"	d
PROCESSOR_CFI_FRAME_INFO_H_	src/breakpad/processor/cfi_frame_info.h	39;"	d
PROCESSOR_CFI_FRAME_INFO_INL_H_	src/breakpad/processor/cfi_frame_info-inl.h	37;"	d
PROCESSOR_CONTAINED_RANGE_MAP_H__	src/breakpad/processor/contained_range_map.h	61;"	d
PROCESSOR_CONTAINED_RANGE_MAP_INL_H__	src/breakpad/processor/contained_range_map-inl.h	37;"	d
PROCESSOR_FAST_SOURCE_LINE_RESOLVER_TYPES_H__	src/breakpad/processor/fast_source_line_resolver_types.h	38;"	d
PROCESSOR_LINKED_PTR_H__	src/breakpad/processor/linked_ptr.h	54;"	d
PROCESSOR_LOGGING_H__	src/breakpad/processor/logging.h	58;"	d
PROCESSOR_MAP_SERIALIZERS_H__	src/breakpad/processor/map_serializers.h	37;"	d
PROCESSOR_MAP_SERIALIZERS_INL_H__	src/breakpad/processor/map_serializers-inl.h	38;"	d
PROCESSOR_MODULE_COMPARER_H__	src/breakpad/processor/module_comparer.h	42;"	d
PROCESSOR_MODULE_FACTORY_H__	src/breakpad/processor/module_factory.h	37;"	d
PROCESSOR_MODULE_SERIALIZER_H__	src/breakpad/processor/module_serializer.h	38;"	d
PROCESSOR_PATHNAME_STRIPPER_H__	src/breakpad/processor/pathname_stripper.h	35;"	d
PROCESSOR_POSTFIX_EVALUATOR_H__	src/breakpad/processor/postfix_evaluator.h	70;"	d
PROCESSOR_POSTFIX_EVALUATOR_INL_H__	src/breakpad/processor/postfix_evaluator-inl.h	40;"	d
PROCESSOR_RANGE_MAP_H__	src/breakpad/processor/range_map.h	41;"	d
PROCESSOR_RANGE_MAP_INL_H__	src/breakpad/processor/range_map-inl.h	37;"	d
PROCESSOR_SCOPED_PTR_H__	src/breakpad/processor/scoped_ptr.h	50;"	d
PROCESSOR_SIMPLE_SERIALIZER_H__	src/breakpad/processor/simple_serializer.h	39;"	d
PROCESSOR_SIMPLE_SERIALIZER_INL_H__	src/breakpad/processor/simple_serializer-inl.h	39;"	d
PROCESSOR_SIMPLE_SYMBOL_SUPPLIER_H__	src/breakpad/processor/simple_symbol_supplier.h	77;"	d
PROCESSOR_SOURCE_LINE_RESOLVER_BASE_TYPES_H__	src/breakpad/processor/source_line_resolver_base_types.h	52;"	d
PROCESSOR_STACKWALKER_AMD64_H__	src/breakpad/processor/stackwalker_amd64.h	39;"	d
PROCESSOR_STACKWALKER_ARM_H__	src/breakpad/processor/stackwalker_arm.h	41;"	d
PROCESSOR_STACKWALKER_PPC_H__	src/breakpad/processor/stackwalker_ppc.h	39;"	d
PROCESSOR_STACKWALKER_SPARC_H__	src/breakpad/processor/stackwalker_sparc.h	39;"	d
PROCESSOR_STACKWALKER_UNITTEST_UTILS_H_	src/breakpad/processor/stackwalker_unittest_utils.h	37;"	d
PROCESSOR_STACKWALKER_X86_H__	src/breakpad/processor/stackwalker_x86.h	41;"	d
PROCESSOR_STATIC_ADDRESS_MAP_H__	src/breakpad/processor/static_address_map.h	43;"	d
PROCESSOR_STATIC_ADDRESS_MAP_INL_H__	src/breakpad/processor/static_address_map-inl.h	37;"	d
PROCESSOR_STATIC_CONTAINED_RANGE_MAP_H__	src/breakpad/processor/static_contained_range_map.h	43;"	d
PROCESSOR_STATIC_CONTAINED_RANGE_MAP_INL_H__	src/breakpad/processor/static_contained_range_map-inl.h	38;"	d
PROCESSOR_STATIC_MAP_H__	src/breakpad/processor/static_map.h	65;"	d
PROCESSOR_STATIC_MAP_INL_H__	src/breakpad/processor/static_map-inl.h	37;"	d
PROCESSOR_STATIC_MAP_ITERATOR_H__	src/breakpad/processor/static_map_iterator.h	40;"	d
PROCESSOR_STATIC_MAP_ITERATOR_INL_H__	src/breakpad/processor/static_map_iterator-inl.h	36;"	d
PROCESSOR_STATIC_RANGE_MAP_H__	src/breakpad/processor/static_range_map.h	40;"	d
PROCESSOR_STATIC_RANGE_MAP_INL_H__	src/breakpad/processor/static_range_map-inl.h	37;"	d
PROCESSOR_SYNTH_MINIDUMP_H_	src/breakpad/processor/synth_minidump.h	109;"	d
PROCESSOR_SYNTH_MINIDUMP_UNITTEST_DATA_H_	src/breakpad/processor/synth_minidump_unittest_data.h	7;"	d
PROCESSOR_WINDOWS_FRAME_INFO_H__	src/breakpad/processor/windows_frame_info.h	39;"	d
PROCESS_ERROR_DUPLICATE_REQUESTING_THREADS	src/breakpad/google_breakpad/processor/minidump_processor.h	/^  PROCESS_ERROR_DUPLICATE_REQUESTING_THREADS, \/\/ There was more than$/;"	e	enum:google_breakpad::ProcessResult
PROCESS_ERROR_GETTING_THREAD	src/breakpad/google_breakpad/processor/minidump_processor.h	/^  PROCESS_ERROR_GETTING_THREAD,               \/\/ There was an error$/;"	e	enum:google_breakpad::ProcessResult
PROCESS_ERROR_GETTING_THREAD_ID	src/breakpad/google_breakpad/processor/minidump_processor.h	/^  PROCESS_ERROR_GETTING_THREAD_ID,            \/\/ There was an error$/;"	e	enum:google_breakpad::ProcessResult
PROCESS_ERROR_MINIDUMP_NOT_FOUND	src/breakpad/google_breakpad/processor/minidump_processor.h	/^  PROCESS_ERROR_MINIDUMP_NOT_FOUND,           \/\/ The minidump file$/;"	e	enum:google_breakpad::ProcessResult
PROCESS_ERROR_NO_MEMORY_FOR_THREAD	src/breakpad/google_breakpad/processor/minidump_processor.h	/^  PROCESS_ERROR_NO_MEMORY_FOR_THREAD,         \/\/ A thread had no$/;"	e	enum:google_breakpad::ProcessResult
PROCESS_ERROR_NO_MINIDUMP_HEADER	src/breakpad/google_breakpad/processor/minidump_processor.h	/^  PROCESS_ERROR_NO_MINIDUMP_HEADER,           \/\/ The minidump file$/;"	e	enum:google_breakpad::ProcessResult
PROCESS_ERROR_NO_STACKWALKER_FOR_THREAD	src/breakpad/google_breakpad/processor/minidump_processor.h	/^  PROCESS_ERROR_NO_STACKWALKER_FOR_THREAD,    \/\/ We couldn't$/;"	e	enum:google_breakpad::ProcessResult
PROCESS_ERROR_NO_THREAD_LIST	src/breakpad/google_breakpad/processor/minidump_processor.h	/^  PROCESS_ERROR_NO_THREAD_LIST,               \/\/ The minidump file$/;"	e	enum:google_breakpad::ProcessResult
PROCESS_OK	src/breakpad/google_breakpad/processor/minidump_processor.h	/^  PROCESS_OK,                                 \/\/ The minidump was$/;"	e	enum:google_breakpad::ProcessResult
PROCESS_SYMBOL_SUPPLIER_INTERRUPTED	src/breakpad/google_breakpad/processor/minidump_processor.h	/^  PROCESS_SYMBOL_SUPPLIER_INTERRUPTED         \/\/ The minidump$/;"	e	enum:google_breakpad::ProcessResult
PSAux_Interface	include/freetype/freetype/internal/psaux.h	/^  typedef PSAux_ServiceRec   PSAux_Interface;$/;"	t
PSAux_Service	include/freetype/freetype/internal/psaux.h	/^  } PSAux_ServiceRec, *PSAux_Service;$/;"	t	typeref:struct:PSAux_ServiceRec_
PSAux_ServiceRec	include/freetype/freetype/internal/psaux.h	/^  } PSAux_ServiceRec, *PSAux_Service;$/;"	t	typeref:struct:PSAux_ServiceRec_
PSAux_ServiceRec_	include/freetype/freetype/internal/psaux.h	/^  typedef struct  PSAux_ServiceRec_$/;"	s
PSH_Globals	include/freetype/freetype/internal/pshints.h	/^  typedef struct PSH_GlobalsRec_*  PSH_Globals;$/;"	t	typeref:struct:PSH_GlobalsRec_
PSH_Globals_DestroyFunc	include/freetype/freetype/internal/pshints.h	/^  (*PSH_Globals_DestroyFunc)( PSH_Globals  globals );$/;"	t
PSH_Globals_Funcs	include/freetype/freetype/internal/pshints.h	/^  } PSH_Globals_FuncsRec, *PSH_Globals_Funcs;$/;"	t	typeref:struct:PSH_Globals_FuncsRec_
PSH_Globals_FuncsRec	include/freetype/freetype/internal/pshints.h	/^  } PSH_Globals_FuncsRec, *PSH_Globals_Funcs;$/;"	t	typeref:struct:PSH_Globals_FuncsRec_
PSH_Globals_FuncsRec_	include/freetype/freetype/internal/pshints.h	/^  typedef struct  PSH_Globals_FuncsRec_$/;"	s
PSH_Globals_NewFunc	include/freetype/freetype/internal/pshints.h	/^  (*PSH_Globals_NewFunc)( FT_Memory     memory,$/;"	t
PSH_Globals_SetScaleFunc	include/freetype/freetype/internal/pshints.h	/^  (*PSH_Globals_SetScaleFunc)( PSH_Globals  globals,$/;"	t
PSHinter_Interface	include/freetype/freetype/internal/pshints.h	/^  } PSHinter_Interface;$/;"	t	typeref:struct:PSHinter_Interface_
PSHinter_Interface_	include/freetype/freetype/internal/pshints.h	/^  typedef struct  PSHinter_Interface_$/;"	s
PSHinter_Service	include/freetype/freetype/internal/pshints.h	/^  typedef PSHinter_Interface*  PSHinter_Service;$/;"	t
PS_Adobe_Std_StringsFunc	include/freetype/freetype/internal/services/svpscmap.h	/^  (*PS_Adobe_Std_StringsFunc)( FT_UInt  string_index );$/;"	t
PS_Blend	include/freetype/freetype/t1tables.h	/^  } PS_BlendRec, *PS_Blend;$/;"	t	typeref:struct:PS_BlendRec_
PS_BlendRec	include/freetype/freetype/t1tables.h	/^  } PS_BlendRec, *PS_Blend;$/;"	t	typeref:struct:PS_BlendRec_
PS_BlendRec_	include/freetype/freetype/t1tables.h	/^  typedef struct  PS_BlendRec_$/;"	s
PS_DICT_BLUE_FUZZ	include/freetype/freetype/t1tables.h	/^    PS_DICT_BLUE_FUZZ,              \/* FT_Int     *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_BLUE_SCALE	include/freetype/freetype/t1tables.h	/^    PS_DICT_BLUE_SCALE,             \/* FT_Fixed   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_BLUE_SHIFT	include/freetype/freetype/t1tables.h	/^    PS_DICT_BLUE_SHIFT,             \/* FT_Int     *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_BLUE_VALUE	include/freetype/freetype/t1tables.h	/^    PS_DICT_BLUE_VALUE,             \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_CHAR_STRING	include/freetype/freetype/t1tables.h	/^    PS_DICT_CHAR_STRING,            \/* FT_String*      *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_CHAR_STRING_KEY	include/freetype/freetype/t1tables.h	/^    PS_DICT_CHAR_STRING_KEY,        \/* FT_String*      *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_ENCODING_ENTRY	include/freetype/freetype/t1tables.h	/^    PS_DICT_ENCODING_ENTRY,         \/* FT_String*      *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_ENCODING_TYPE	include/freetype/freetype/t1tables.h	/^    PS_DICT_ENCODING_TYPE,          \/* T1_EncodingType *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FAMILY_BLUE	include/freetype/freetype/t1tables.h	/^    PS_DICT_FAMILY_BLUE,            \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FAMILY_NAME	include/freetype/freetype/t1tables.h	/^    PS_DICT_FAMILY_NAME,            \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FAMILY_OTHER_BLUE	include/freetype/freetype/t1tables.h	/^    PS_DICT_FAMILY_OTHER_BLUE,      \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FONT_BBOX	include/freetype/freetype/t1tables.h	/^    PS_DICT_FONT_BBOX,              \/* FT_Fixed        *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FONT_MATRIX	include/freetype/freetype/t1tables.h	/^    PS_DICT_FONT_MATRIX,            \/* FT_Fixed        *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FONT_NAME	include/freetype/freetype/t1tables.h	/^    PS_DICT_FONT_NAME,              \/* FT_String*      *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FONT_TYPE	include/freetype/freetype/t1tables.h	/^    PS_DICT_FONT_TYPE,              \/* FT_Byte         *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FORCE_BOLD	include/freetype/freetype/t1tables.h	/^    PS_DICT_FORCE_BOLD,             \/* FT_Bool    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FS_TYPE	include/freetype/freetype/t1tables.h	/^    PS_DICT_FS_TYPE,                \/* FT_UShort  *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FULL_NAME	include/freetype/freetype/t1tables.h	/^    PS_DICT_FULL_NAME,              \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_IS_FIXED_PITCH	include/freetype/freetype/t1tables.h	/^    PS_DICT_IS_FIXED_PITCH,         \/* FT_Bool    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_ITALIC_ANGLE	include/freetype/freetype/t1tables.h	/^    PS_DICT_ITALIC_ANGLE,           \/* FT_Long    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_LANGUAGE_GROUP	include/freetype/freetype/t1tables.h	/^    PS_DICT_LANGUAGE_GROUP,         \/* FT_Long    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_LEN_IV	include/freetype/freetype/t1tables.h	/^    PS_DICT_LEN_IV,                 \/* FT_Int     *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_MAX	include/freetype/freetype/t1tables.h	/^    PS_DICT_MAX = PS_DICT_ITALIC_ANGLE$/;"	e	enum:PS_Dict_Keys_
PS_DICT_MIN_FEATURE	include/freetype/freetype/t1tables.h	/^    PS_DICT_MIN_FEATURE,            \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NOTICE	include/freetype/freetype/t1tables.h	/^    PS_DICT_NOTICE,                 \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_BLUE_VALUES	include/freetype/freetype/t1tables.h	/^    PS_DICT_NUM_BLUE_VALUES,        \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_CHAR_STRINGS	include/freetype/freetype/t1tables.h	/^    PS_DICT_NUM_CHAR_STRINGS,       \/* FT_Int          *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_FAMILY_BLUES	include/freetype/freetype/t1tables.h	/^    PS_DICT_NUM_FAMILY_BLUES,       \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_FAMILY_OTHER_BLUES	include/freetype/freetype/t1tables.h	/^    PS_DICT_NUM_FAMILY_OTHER_BLUES, \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_OTHER_BLUES	include/freetype/freetype/t1tables.h	/^    PS_DICT_NUM_OTHER_BLUES,        \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_STEM_SNAP_H	include/freetype/freetype/t1tables.h	/^    PS_DICT_NUM_STEM_SNAP_H,        \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_STEM_SNAP_V	include/freetype/freetype/t1tables.h	/^    PS_DICT_NUM_STEM_SNAP_V,        \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_SUBRS	include/freetype/freetype/t1tables.h	/^    PS_DICT_NUM_SUBRS,              \/* FT_Int     *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_OTHER_BLUE	include/freetype/freetype/t1tables.h	/^    PS_DICT_OTHER_BLUE,             \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_PAINT_TYPE	include/freetype/freetype/t1tables.h	/^    PS_DICT_PAINT_TYPE,             \/* FT_Byte         *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_PASSWORD	include/freetype/freetype/t1tables.h	/^    PS_DICT_PASSWORD,               \/* FT_Long    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_RND_STEM_UP	include/freetype/freetype/t1tables.h	/^    PS_DICT_RND_STEM_UP,            \/* FT_Bool    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_STD_HW	include/freetype/freetype/t1tables.h	/^    PS_DICT_STD_HW,                 \/* FT_UShort  *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_STD_VW	include/freetype/freetype/t1tables.h	/^    PS_DICT_STD_VW,                 \/* FT_UShort  *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_STEM_SNAP_H	include/freetype/freetype/t1tables.h	/^    PS_DICT_STEM_SNAP_H,            \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_STEM_SNAP_V	include/freetype/freetype/t1tables.h	/^    PS_DICT_STEM_SNAP_V,            \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_SUBR	include/freetype/freetype/t1tables.h	/^    PS_DICT_SUBR,                   \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_UNDERLINE_POSITION	include/freetype/freetype/t1tables.h	/^    PS_DICT_UNDERLINE_POSITION,     \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_UNDERLINE_THICKNESS	include/freetype/freetype/t1tables.h	/^    PS_DICT_UNDERLINE_THICKNESS,    \/* FT_UShort  *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_UNIQUE_ID	include/freetype/freetype/t1tables.h	/^    PS_DICT_UNIQUE_ID,              \/* FT_Int          *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_VERSION	include/freetype/freetype/t1tables.h	/^    PS_DICT_VERSION,                \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_WEIGHT	include/freetype/freetype/t1tables.h	/^    PS_DICT_WEIGHT,                 \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DesignMap	include/freetype/freetype/t1tables.h	/^  } PS_DesignMapRec, *PS_DesignMap;$/;"	t	typeref:struct:PS_DesignMap_
PS_DesignMapRec	include/freetype/freetype/t1tables.h	/^  } PS_DesignMapRec, *PS_DesignMap;$/;"	t	typeref:struct:PS_DesignMap_
PS_DesignMap_	include/freetype/freetype/t1tables.h	/^  typedef struct  PS_DesignMap_$/;"	s
PS_Dict_Keys	include/freetype/freetype/t1tables.h	/^  } PS_Dict_Keys;$/;"	t	typeref:enum:PS_Dict_Keys_
PS_Dict_Keys_	include/freetype/freetype/t1tables.h	/^  typedef enum  PS_Dict_Keys_$/;"	g
PS_FontExtraRec	include/freetype/freetype/internal/t1types.h	/^  } PS_FontExtraRec;$/;"	t	typeref:struct:PS_FontExtraRec_
PS_FontExtraRec_	include/freetype/freetype/internal/t1types.h	/^  typedef struct  PS_FontExtraRec_$/;"	s
PS_FontInfo	include/freetype/freetype/t1tables.h	/^  typedef struct PS_FontInfoRec_*  PS_FontInfo;$/;"	t	typeref:struct:PS_FontInfoRec_
PS_FontInfoRec	include/freetype/freetype/t1tables.h	/^  } PS_FontInfoRec;$/;"	t	typeref:struct:PS_FontInfoRec_
PS_FontInfoRec_	include/freetype/freetype/t1tables.h	/^  typedef struct  PS_FontInfoRec_$/;"	s
PS_FreeGlyphNameFunc	include/freetype/freetype/internal/services/svpscmap.h	/^  (*PS_FreeGlyphNameFunc)( FT_Pointer  data,$/;"	t
PS_GetFontExtraFunc	include/freetype/freetype/internal/services/svpsinfo.h	/^  (*PS_GetFontExtraFunc)( FT_Face           face,$/;"	t
PS_GetFontInfoFunc	include/freetype/freetype/internal/services/svpsinfo.h	/^  (*PS_GetFontInfoFunc)( FT_Face          face,$/;"	t
PS_GetFontPrivateFunc	include/freetype/freetype/internal/services/svpsinfo.h	/^  (*PS_GetFontPrivateFunc)( FT_Face         face,$/;"	t
PS_GetFontValueFunc	include/freetype/freetype/internal/services/svpsinfo.h	/^  (*PS_GetFontValueFunc)( FT_Face       face,$/;"	t
PS_GetGlyphNameFunc	include/freetype/freetype/internal/services/svpscmap.h	/^  (*PS_GetGlyphNameFunc)( FT_Pointer  data,$/;"	t
PS_HasGlyphNamesFunc	include/freetype/freetype/internal/services/svpsinfo.h	/^  (*PS_HasGlyphNamesFunc)( FT_Face  face );$/;"	t
PS_Macintosh_NameFunc	include/freetype/freetype/internal/services/svpscmap.h	/^  (*PS_Macintosh_NameFunc)( FT_UInt  name_index );$/;"	t
PS_Parser	include/freetype/freetype/internal/psaux.h	/^  typedef struct PS_ParserRec_*  PS_Parser;$/;"	t	typeref:struct:PS_ParserRec_
PS_ParserRec	include/freetype/freetype/internal/psaux.h	/^  } PS_ParserRec;$/;"	t	typeref:struct:PS_ParserRec_
PS_ParserRec_	include/freetype/freetype/internal/psaux.h	/^  typedef struct  PS_ParserRec_$/;"	s
PS_Parser_Funcs	include/freetype/freetype/internal/psaux.h	/^  typedef const struct PS_Parser_FuncsRec_*  PS_Parser_Funcs;$/;"	t	typeref:struct:PS_Parser_FuncsRec_
PS_Parser_FuncsRec	include/freetype/freetype/internal/psaux.h	/^  } PS_Parser_FuncsRec;$/;"	t	typeref:struct:PS_Parser_FuncsRec_
PS_Parser_FuncsRec_	include/freetype/freetype/internal/psaux.h	/^  typedef struct  PS_Parser_FuncsRec_$/;"	s
PS_Private	include/freetype/freetype/t1tables.h	/^  typedef struct PS_PrivateRec_*  PS_Private;$/;"	t	typeref:struct:PS_PrivateRec_
PS_PrivateRec	include/freetype/freetype/t1tables.h	/^  } PS_PrivateRec;$/;"	t	typeref:struct:PS_PrivateRec_
PS_PrivateRec_	include/freetype/freetype/t1tables.h	/^  typedef struct  PS_PrivateRec_$/;"	s
PS_Table	include/freetype/freetype/internal/psaux.h	/^  typedef struct PS_TableRec_*              PS_Table;$/;"	t	typeref:struct:PS_TableRec_
PS_TableRec	include/freetype/freetype/internal/psaux.h	/^  } PS_TableRec;$/;"	t	typeref:struct:PS_TableRec_
PS_TableRec_	include/freetype/freetype/internal/psaux.h	/^  typedef struct  PS_TableRec_$/;"	s
PS_Table_Funcs	include/freetype/freetype/internal/psaux.h	/^  typedef const struct PS_Table_FuncsRec_*  PS_Table_Funcs;$/;"	t	typeref:struct:PS_Table_FuncsRec_
PS_Table_FuncsRec	include/freetype/freetype/internal/psaux.h	/^  } PS_Table_FuncsRec;$/;"	t	typeref:struct:PS_Table_FuncsRec_
PS_Table_FuncsRec_	include/freetype/freetype/internal/psaux.h	/^  typedef struct  PS_Table_FuncsRec_$/;"	s
PS_UniMap	include/freetype/freetype/internal/services/svpscmap.h	/^  } PS_UniMap;$/;"	t	typeref:struct:PS_UniMap_
PS_UniMap_	include/freetype/freetype/internal/services/svpscmap.h	/^  typedef struct  PS_UniMap_$/;"	s
PS_Unicode_ValueFunc	include/freetype/freetype/internal/services/svpscmap.h	/^  (*PS_Unicode_ValueFunc)( const char*  glyph_name );$/;"	t
PS_Unicodes	include/freetype/freetype/internal/services/svpscmap.h	/^  typedef struct PS_UnicodesRec_*  PS_Unicodes;$/;"	t	typeref:struct:PS_UnicodesRec_
PS_UnicodesRec	include/freetype/freetype/internal/services/svpscmap.h	/^  } PS_UnicodesRec;$/;"	t	typeref:struct:PS_UnicodesRec_
PS_UnicodesRec_	include/freetype/freetype/internal/services/svpscmap.h	/^  typedef struct  PS_UnicodesRec_$/;"	s
PS_Unicodes_CharIndexFunc	include/freetype/freetype/internal/services/svpscmap.h	/^  (*PS_Unicodes_CharIndexFunc)( PS_Unicodes  unicodes,$/;"	t
PS_Unicodes_CharNextFunc	include/freetype/freetype/internal/services/svpscmap.h	/^  (*PS_Unicodes_CharNextFunc)( PS_Unicodes  unicodes,$/;"	t
PS_Unicodes_InitFunc	include/freetype/freetype/internal/services/svpscmap.h	/^  (*PS_Unicodes_InitFunc)( FT_Memory             memory,$/;"	t
Package	src/package/package.h	/^    Package(const QString &name){$/;"	f	class:Package
Package	src/package/package.h	/^class Package: public QObject{$/;"	c
PackageAdder	src/package/package.h	/^    PackageAdder(const QString &name, Package *pack){$/;"	f	class:PackageAdder
PackageAdder	src/package/package.h	/^class PackageAdder{$/;"	c
PackageHash	src/package/package.h	/^typedef QHash<QString, Package *> PackageHash;$/;"	t
PackagingEditor	src/dialog/packagingeditor.cpp	/^PackagingEditor::PackagingEditor(QWidget *parent) :$/;"	f	class:PackagingEditor
PackagingEditor	src/dialog/packagingeditor.h	/^class PackagingEditor : public QDialog$/;"	c
PacketType	src/core/protocol.h	/^    enum PacketType$/;"	g	namespace:QSanProtocol
PageIndex	src/jsoncpp/include/json/value.h	/^      typedef unsigned int PageIndex;$/;"	t	class:Json::ValueInternalArray
Pair	src/util/recorder.h	/^    struct Pair{$/;"	s	class:Replayer
Paiyi	src/package/yjcm-package.cpp	/^    Paiyi():ZeroCardViewAsSkill("paiyi"){$/;"	f	class:Paiyi
Paiyi	src/package/yjcm-package.cpp	/^class Paiyi:public ZeroCardViewAsSkill{$/;"	c	file:
PaiyiCard	src/package/yjcm-package.cpp	/^PaiyiCard::PaiyiCard(){$/;"	f	class:PaiyiCard
PaiyiCard	src/package/yjcm-package.h	/^class PaiyiCard: public SkillCard{$/;"	c
Parse	src/breakpad/processor/cfi_frame_info.cc	/^bool CFIRuleParser::Parse(const string &rule_set) {$/;"	f	class:google_breakpad::CFIRuleParser
Parse	src/core/card.cpp	/^const Card *Card::Parse(const QString &str){$/;"	f	class:Card
Parse	src/core/lua-wrapper.cpp	/^LuaSkillCard *LuaSkillCard::Parse(const QString &str){$/;"	f	class:LuaSkillCard
ParseCFIFrameInfo	src/breakpad/processor/basic_source_line_resolver.cc	/^bool BasicSourceLineResolver::Module::ParseCFIFrameInfo($/;"	f	class:google_breakpad::BasicSourceLineResolver::Module
ParseCFIRuleSet	src/breakpad/processor/source_line_resolver_base.cc	/^bool SourceLineResolverBase::Module::ParseCFIRuleSet($/;"	f	class:google_breakpad::SourceLineResolverBase::Module
ParseFile	src/breakpad/processor/basic_source_line_resolver.cc	/^bool BasicSourceLineResolver::Module::ParseFile(char *file_line) {$/;"	f	class:google_breakpad::BasicSourceLineResolver::Module
ParseFromString	src/breakpad/processor/windows_frame_info.h	/^  static WindowsFrameInfo *ParseFromString(const string string,$/;"	f	struct:google_breakpad::WindowsFrameInfo
ParseFunction	src/breakpad/processor/basic_source_line_resolver.cc	/^BasicSourceLineResolver::Module::ParseFunction(char *function_line) {$/;"	f	class:google_breakpad::BasicSourceLineResolver::Module
ParseHandler	src/breakpad/processor/cfi_frame_info_unittest.cc	/^class ParseHandler: public ParseHandlerFixture, public Test { };$/;"	c	file:
ParseHandlerFixture	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  ParseHandlerFixture() : CFIFixture(), handler(&cfi) { }$/;"	f	class:ParseHandlerFixture
ParseHandlerFixture	src/breakpad/processor/cfi_frame_info_unittest.cc	/^class ParseHandlerFixture: public CFIFixture {$/;"	c	file:
ParseLine	src/breakpad/processor/basic_source_line_resolver.cc	/^BasicSourceLineResolver::Line* BasicSourceLineResolver::Module::ParseLine($/;"	f	class:google_breakpad::BasicSourceLineResolver::Module
ParsePublicSymbol	src/breakpad/processor/basic_source_line_resolver.cc	/^bool BasicSourceLineResolver::Module::ParsePublicSymbol(char *public_line) {$/;"	f	class:google_breakpad::BasicSourceLineResolver::Module
ParseStackInfo	src/breakpad/processor/basic_source_line_resolver.cc	/^bool BasicSourceLineResolver::Module::ParseStackInfo(char *stack_info_line) {$/;"	f	class:google_breakpad::BasicSourceLineResolver::Module
Parser	src/breakpad/processor/cfi_frame_info_unittest.cc	/^class Parser: public CFIParserFixture, public Test { };$/;"	c	file:
Password	src/core/settings.h	/^    QString Password;$/;"	m	class:Settings
Path	src/jsoncpp/include/json/value.h	/^   class Path$/;"	c	namespace:Json
Path	src/jsoncpp/src/json_value.cpp	/^Path::Path( const std::string &path,$/;"	f	class:Json::Path
PathArgument	src/jsoncpp/include/json/value.h	/^   class PathArgument$/;"	c	namespace:Json
PathArgument	src/jsoncpp/src/json_value.cpp	/^PathArgument::PathArgument( ArrayIndex index )$/;"	f	class:Json::PathArgument
PathArgument	src/jsoncpp/src/json_value.cpp	/^PathArgument::PathArgument( const char *key )$/;"	f	class:Json::PathArgument
PathArgument	src/jsoncpp/src/json_value.cpp	/^PathArgument::PathArgument( const std::string &key )$/;"	f	class:Json::PathArgument
PathArgument	src/jsoncpp/src/json_value.cpp	/^PathArgument::PathArgument()$/;"	f	class:Json::PathArgument
PathnameStripper	src/breakpad/processor/pathname_stripper.h	/^class PathnameStripper {$/;"	c	namespace:google_breakpad
Peach	src/package/standard-cards.cpp	/^Peach::Peach(Suit suit, int number):BasicCard(suit, number){$/;"	f	class:Peach
Peach	src/package/standard.h	/^class Peach: public BasicCard{$/;"	c
Peaching	src/scenario/zombie-mode-scenario.cpp	/^    Peaching():OneCardViewAsSkill("peaching"){$/;"	f	class:Peaching
Peaching	src/scenario/zombie-mode-scenario.cpp	/^class Peaching: public OneCardViewAsSkill{$/;"	c	file:
PeachingCard	src/scenario/zombie-mode-scenario.cpp	/^PeachingCard::PeachingCard()$/;"	f	class:PeachingCard
PeachingCard	src/scenario/zombie-mode-scenario.h	/^class PeachingCard: public QingnangCard{$/;"	c
Pfunc	src/lua/ldo.h	/^typedef void (*Pfunc) (lua_State *L, void *ud);$/;"	t
Phase	src/core/player.h	/^    enum Phase {RoundStart, Start, Judge, Draw, Play, Discard, Finish, NotActive, PhaseNone};$/;"	g	class:Player
PhaseChangeSkill	src/core/skill.cpp	/^PhaseChangeSkill::PhaseChangeSkill(const QString &name)$/;"	f	class:PhaseChangeSkill
PhaseChangeSkill	src/core/skill.h	/^class PhaseChangeSkill: public TriggerSkill{$/;"	c
PhaseChangeStruct	src/core/structs.h	/^struct PhaseChangeStruct{$/;"	s
PhaseChangeStruct	src/server/roomthread.cpp	/^PhaseChangeStruct::PhaseChangeStruct()$/;"	f	class:PhaseChangeStruct
PhaseNone	src/core/player.h	/^    enum Phase {RoundStart, Start, Judge, Draw, Play, Discard, Finish, NotActive, PhaseNone};$/;"	e	enum:Player::Phase
PhaseStruct	src/core/structs.h	/^    inline PhaseStruct(){$/;"	f	struct:PhaseStruct
PhaseStruct	src/core/structs.h	/^struct PhaseStruct{$/;"	s
Photo	src/ui/photo.cpp	/^Photo::Photo(): PlayerCardContainer()$/;"	f	class:Photo
Photo	src/ui/photo.h	/^class Photo : public PlayerCardContainer$/;"	c
PhotoLayout	src/ui/SkinBank.h	/^    struct PhotoLayout : public PlayerCardContainerLayout$/;"	s	class:QSanRoomSkin
Pindian	src/core/structs.h	/^    Pindian,$/;"	e	enum:TriggerEvent
PindianStar	src/core/structs.h	/^typedef PindianStruct *PindianStar;$/;"	t
PindianStruct	src/core/structs.h	/^struct PindianStruct{$/;"	s
PindianStruct	src/server/roomthread.cpp	/^PindianStruct::PindianStruct()$/;"	f	class:PindianStruct
Pitch	include/freetype/freetype/tttables.h	/^    FT_UShort  Pitch;$/;"	m	struct:TT_PCLT_
PixmapAnimation	src/ui/pixmapanimation.cpp	/^PixmapAnimation::PixmapAnimation(QGraphicsScene *scene) :$/;"	f	class:PixmapAnimation
PixmapAnimation	src/ui/pixmapanimation.h	/^class PixmapAnimation : public QObject,public QGraphicsItem$/;"	c
Place	src/core/player.h	/^    enum Place {PlaceHand, PlaceEquip, PlaceDelayedTrick, PlaceJudge, PlaceSpecial, DiscardPile, DrawPile, PlaceTable, PlaceUnknown};$/;"	g	class:Player
PlaceDelayedTrick	src/core/player.h	/^    enum Place {PlaceHand, PlaceEquip, PlaceDelayedTrick, PlaceJudge, PlaceSpecial, DiscardPile, DrawPile, PlaceTable, PlaceUnknown};$/;"	e	enum:Player::Place
PlaceEquip	src/core/player.h	/^    enum Place {PlaceHand, PlaceEquip, PlaceDelayedTrick, PlaceJudge, PlaceSpecial, DiscardPile, DrawPile, PlaceTable, PlaceUnknown};$/;"	e	enum:Player::Place
PlaceHand	src/core/player.h	/^    enum Place {PlaceHand, PlaceEquip, PlaceDelayedTrick, PlaceJudge, PlaceSpecial, DiscardPile, DrawPile, PlaceTable, PlaceUnknown};$/;"	e	enum:Player::Place
PlaceJudge	src/core/player.h	/^    enum Place {PlaceHand, PlaceEquip, PlaceDelayedTrick, PlaceJudge, PlaceSpecial, DiscardPile, DrawPile, PlaceTable, PlaceUnknown};$/;"	e	enum:Player::Place
PlaceSpecial	src/core/player.h	/^    enum Place {PlaceHand, PlaceEquip, PlaceDelayedTrick, PlaceJudge, PlaceSpecial, DiscardPile, DrawPile, PlaceTable, PlaceUnknown};$/;"	e	enum:Player::Place
PlaceTable	src/core/player.h	/^    enum Place {PlaceHand, PlaceEquip, PlaceDelayedTrick, PlaceJudge, PlaceSpecial, DiscardPile, DrawPile, PlaceTable, PlaceUnknown};$/;"	e	enum:Player::Place
PlaceUnknown	src/core/player.h	/^    enum Place {PlaceHand, PlaceEquip, PlaceDelayedTrick, PlaceJudge, PlaceSpecial, DiscardPile, DrawPile, PlaceTable, PlaceUnknown};$/;"	e	enum:Player::Place
Play	src/core/player.h	/^    enum Phase {RoundStart, Start, Judge, Draw, Play, Discard, Finish, NotActive, PhaseNone};$/;"	e	enum:Player::Phase
Player	src/core/player.cpp	/^Player::Player(QObject *parent)$/;"	f	class:Player
Player	src/core/player.h	/^class Player : public QObject$/;"	c
PlayerCardContainer	src/ui/GenericCardContainerUI.cpp	/^PlayerCardContainer::PlayerCardContainer()$/;"	f	class:PlayerCardContainer
PlayerCardContainer	src/ui/GenericCardContainerUI.h	/^class PlayerCardContainer: public GenericCardContainer$/;"	c
PlayerCardContainerLayout	src/ui/SkinBank.h	/^    struct PlayerCardContainerLayout$/;"	s	class:QSanRoomSkin
PlayerCardDialog	src/dialog/playercarddialog.cpp	/^PlayerCardDialog::PlayerCardDialog(const ClientPlayer *player, const QString &flags)$/;"	f	class:PlayerCardDialog
PlayerCardDialog	src/dialog/playercarddialog.h	/^class PlayerCardDialog : public QDialog{$/;"	c
PlayerStar	src/core/structs.h	/^typedef ServerPlayer *PlayerStar;$/;"	t
Player_getTag	swig/sanguosha_wrap.cxx	/^SWIGINTERN QVariant Player_getTag(Player *self,char const *key){$/;"	f
Player_removeTag	swig/sanguosha_wrap.cxx	/^SWIGINTERN void Player_removeTag(Player *self,char const *tag_name){$/;"	f
Player_setTag	swig/sanguosha_wrap.cxx	/^SWIGINTERN void Player_setTag(Player *self,char const *key,QVariant &value){$/;"	f
Playing	src/client/client.h	/^        Playing,$/;"	e	enum:Client::Status
Pojun	src/package/yjcm-package.cpp	/^    Pojun():TriggerSkill("pojun"){$/;"	f	class:Pojun
Pojun	src/package/yjcm-package.cpp	/^class Pojun: public TriggerSkill{$/;"	c	file:
PopResult	src/breakpad/processor/postfix_evaluator.h	/^  enum PopResult {$/;"	g	class:google_breakpad::PostfixEvaluator
PopValue	src/breakpad/processor/postfix_evaluator-inl.h	/^bool PostfixEvaluator<ValueType>::PopValue(ValueType *value) {$/;"	f	class:google_breakpad::PostfixEvaluator
PopValueOrIdentifier	src/breakpad/processor/postfix_evaluator-inl.h	/^PostfixEvaluator<ValueType>::PopValueOrIdentifier($/;"	f	class:google_breakpad::PostfixEvaluator
PopValues	src/breakpad/processor/postfix_evaluator-inl.h	/^bool PostfixEvaluator<ValueType>::PopValues(ValueType *value1,$/;"	f	class:google_breakpad::PostfixEvaluator
PopulateCustomInfo	src/breakpad/client/windows/crash_generation/client_info.cc	/^bool ClientInfo::PopulateCustomInfo() {$/;"	f	class:google_breakpad::ClientInfo
PostCardEffected	src/core/structs.h	/^    PostCardEffected,  \/\/ For juxiang only now$/;"	e	enum:TriggerEvent
PostHpReduced	src/core/structs.h	/^    PostHpReduced,    \/\/ the moment after Hpreduce$/;"	e	enum:TriggerEvent
PostfixEvaluator	src/breakpad/processor/postfix_evaluator.h	/^  PostfixEvaluator(DictionaryType *dictionary, const MemoryRegion *memory)$/;"	f	class:google_breakpad::PostfixEvaluator
PostfixEvaluator	src/breakpad/processor/postfix_evaluator.h	/^class PostfixEvaluator {$/;"	c	namespace:google_breakpad
PreHpReduced	src/core/structs.h	/^    PreHpReduced,     \/\/ the moment before Hpreduce$/;"	e	enum:TriggerEvent
Predamage	src/core/structs.h	/^    Predamage,        \/\/ trigger the certain skill -- jueqing$/;"	e	enum:TriggerEvent
PrepareReply	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^bool CrashGenerationServer::PrepareReply(const ClientInfo& client_info,$/;"	f	class:google_breakpad::CrashGenerationServer
Print	src/breakpad/processor/minidump.cc	/^void Minidump::Print() {$/;"	f	class:google_breakpad::Minidump
Print	src/breakpad/processor/minidump.cc	/^void MinidumpAssertion::Print() {$/;"	f	class:google_breakpad::MinidumpAssertion
Print	src/breakpad/processor/minidump.cc	/^void MinidumpBreakpadInfo::Print() {$/;"	f	class:google_breakpad::MinidumpBreakpadInfo
Print	src/breakpad/processor/minidump.cc	/^void MinidumpContext::Print() {$/;"	f	class:google_breakpad::MinidumpContext
Print	src/breakpad/processor/minidump.cc	/^void MinidumpException::Print() {$/;"	f	class:google_breakpad::MinidumpException
Print	src/breakpad/processor/minidump.cc	/^void MinidumpMemoryInfo::Print() {$/;"	f	class:google_breakpad::MinidumpMemoryInfo
Print	src/breakpad/processor/minidump.cc	/^void MinidumpMemoryInfoList::Print() {$/;"	f	class:google_breakpad::MinidumpMemoryInfoList
Print	src/breakpad/processor/minidump.cc	/^void MinidumpMemoryList::Print() {$/;"	f	class:google_breakpad::MinidumpMemoryList
Print	src/breakpad/processor/minidump.cc	/^void MinidumpMemoryRegion::Print() {$/;"	f	class:google_breakpad::MinidumpMemoryRegion
Print	src/breakpad/processor/minidump.cc	/^void MinidumpMiscInfo::Print() {$/;"	f	class:google_breakpad::MinidumpMiscInfo
Print	src/breakpad/processor/minidump.cc	/^void MinidumpModule::Print() {$/;"	f	class:google_breakpad::MinidumpModule
Print	src/breakpad/processor/minidump.cc	/^void MinidumpModuleList::Print() {$/;"	f	class:google_breakpad::MinidumpModuleList
Print	src/breakpad/processor/minidump.cc	/^void MinidumpSystemInfo::Print() {$/;"	f	class:google_breakpad::MinidumpSystemInfo
Print	src/breakpad/processor/minidump.cc	/^void MinidumpThread::Print() {$/;"	f	class:google_breakpad::MinidumpThread
Print	src/breakpad/processor/minidump.cc	/^void MinidumpThreadList::Print() {$/;"	f	class:google_breakpad::MinidumpThreadList
Print	swig/sanguosha_wrap.cxx	/^static int Print(lua_State *lua){$/;"	f	file:
PrintCode	src/lua/print.c	/^static void PrintCode(const Proto* f)$/;"	f	file:
PrintCodePublicSymbol	src/breakpad/common/windows/pdb_source_line_writer.cc	/^bool PDBSourceLineWriter::PrintCodePublicSymbol(IDiaSymbol *symbol) {$/;"	f	class:google_breakpad::PDBSourceLineWriter
PrintConstant	src/lua/print.c	/^static void PrintConstant(const Proto* f, int i)$/;"	f	file:
PrintConstants	src/lua/print.c	/^static void PrintConstants(const Proto* f)$/;"	f	file:
PrintFrameData	src/breakpad/common/windows/pdb_source_line_writer.cc	/^bool PDBSourceLineWriter::PrintFrameData() {$/;"	f	class:google_breakpad::PDBSourceLineWriter
PrintFunction	src/breakpad/common/windows/pdb_source_line_writer.cc	/^bool PDBSourceLineWriter::PrintFunction(IDiaSymbol *function,$/;"	f	class:google_breakpad::PDBSourceLineWriter
PrintFunction	src/lua/print.c	/^void PrintFunction(const Proto* f, int full)$/;"	f
PrintFunction	src/lua/print.c	18;"	d	file:
PrintFunctions	src/breakpad/common/windows/pdb_source_line_writer.cc	/^bool PDBSourceLineWriter::PrintFunctions() {$/;"	f	class:google_breakpad::PDBSourceLineWriter
PrintHeader	src/lua/print.c	/^static void PrintHeader(const Proto* f)$/;"	f	file:
PrintLines	src/breakpad/common/windows/pdb_source_line_writer.cc	/^bool PDBSourceLineWriter::PrintLines(IDiaEnumLineNumbers *lines) {$/;"	f	class:google_breakpad::PDBSourceLineWriter
PrintLocals	src/lua/print.c	/^static void PrintLocals(const Proto* f)$/;"	f	file:
PrintMinidumpDump	src/breakpad/processor/minidump_dump.cc	/^static bool PrintMinidumpDump(const char *minidump_file) {$/;"	f	namespace:__anon82
PrintMinidumpProcess	src/breakpad/processor/minidump_stackwalk.cc	/^static bool PrintMinidumpProcess(const string &minidump_file,$/;"	f	namespace:__anon83
PrintModules	src/breakpad/processor/minidump_stackwalk.cc	/^static void PrintModules(const CodeModules *modules) {$/;"	f	namespace:__anon83
PrintModulesMachineReadable	src/breakpad/processor/minidump_stackwalk.cc	/^static void PrintModulesMachineReadable(const CodeModules *modules) {$/;"	f	namespace:__anon83
PrintPDBInfo	src/breakpad/common/windows/pdb_source_line_writer.cc	/^bool PDBSourceLineWriter::PrintPDBInfo() {$/;"	f	class:google_breakpad::PDBSourceLineWriter
PrintPEInfo	src/breakpad/common/windows/pdb_source_line_writer.cc	/^bool PDBSourceLineWriter::PrintPEInfo() {$/;"	f	class:google_breakpad::PDBSourceLineWriter
PrintProcessState	src/breakpad/processor/minidump_stackwalk.cc	/^static void PrintProcessState(const ProcessState& process_state) {$/;"	f	namespace:__anon83
PrintProcessStateMachineReadable	src/breakpad/processor/minidump_stackwalk.cc	/^static void PrintProcessStateMachineReadable(const ProcessState& process_state)$/;"	f	namespace:__anon83
PrintRegister	src/breakpad/processor/minidump_stackwalk.cc	/^static int PrintRegister(const char *name, u_int32_t value, int start_col) {$/;"	f	namespace:__anon83
PrintRegister64	src/breakpad/processor/minidump_stackwalk.cc	/^static int PrintRegister64(const char *name, u_int64_t value, int start_col) {$/;"	f	namespace:__anon83
PrintSourceFiles	src/breakpad/common/windows/pdb_source_line_writer.cc	/^bool PDBSourceLineWriter::PrintSourceFiles() {$/;"	f	class:google_breakpad::PDBSourceLineWriter
PrintStack	src/breakpad/processor/minidump_stackwalk.cc	/^static void PrintStack(const CallStack *stack, const string &cpu) {$/;"	f	namespace:__anon83
PrintStackMachineReadable	src/breakpad/processor/minidump_stackwalk.cc	/^static void PrintStackMachineReadable(int thread_num, const CallStack *stack) {$/;"	f	namespace:__anon83
PrintString	src/lua/print.c	/^static void PrintString(const TString* ts)$/;"	f	file:
PrintUpvalues	src/lua/print.c	/^static void PrintUpvalues(const Proto* f)$/;"	f	file:
Process	src/breakpad/processor/minidump_processor.cc	/^ProcessResult MinidumpProcessor::Process($/;"	f	class:google_breakpad::MinidumpProcessor
ProcessInstanceType	src/core/protocol.h	/^    enum ProcessInstanceType$/;"	g	namespace:QSanProtocol
ProcessResult	src/breakpad/google_breakpad/processor/minidump_processor.h	/^enum ProcessResult {$/;"	g	namespace:google_breakpad
ProcessState	src/breakpad/google_breakpad/processor/process_state.h	/^  ProcessState() : modules_(NULL) { Clear(); }$/;"	f	class:google_breakpad::ProcessState
ProcessState	src/breakpad/google_breakpad/processor/process_state.h	/^class ProcessState {$/;"	c	namespace:google_breakpad
ProhibitSkill	src/core/skill.cpp	/^ProhibitSkill::ProhibitSkill(const QString &name)$/;"	f	class:ProhibitSkill
ProhibitSkill	src/core/skill.h	/^class ProhibitSkill: public Skill{$/;"	c
Protect	src/lua/lvm.c	357;"	d	file:
Proto	src/lua/lobject.h	/^typedef struct Proto {$/;"	s
Proto	src/lua/lobject.h	/^} Proto;$/;"	t	typeref:struct:Proto
ProtocolMessage	src/breakpad/client/windows/common/ipc_protocol.h	/^  ProtocolMessage()$/;"	f	struct:google_breakpad::ProtocolMessage
ProtocolMessage	src/breakpad/client/windows/common/ipc_protocol.h	/^  ProtocolMessage(MessageTag arg_tag,$/;"	f	struct:google_breakpad::ProtocolMessage
ProtocolMessage	src/breakpad/client/windows/common/ipc_protocol.h	/^struct ProtocolMessage {$/;"	s	namespace:google_breakpad
PublicSymbol	src/breakpad/processor/fast_source_line_resolver_types.h	/^struct FastSourceLineResolver::PublicSymbol :$/;"	s	class:google_breakpad::FastSourceLineResolver
PublicSymbol	src/breakpad/processor/module_serializer.h	/^  typedef BasicSourceLineResolver::PublicSymbol PublicSymbol;$/;"	t	class:google_breakpad::ModuleSerializer
PublicSymbol	src/breakpad/processor/simple_serializer-inl.h	/^  typedef BasicSourceLineResolver::PublicSymbol PublicSymbol;$/;"	t	class:google_breakpad::SimpleSerializer
PublicSymbol	src/breakpad/processor/source_line_resolver_base_types.h	/^  PublicSymbol() { }$/;"	f	struct:google_breakpad::SourceLineResolverBase::PublicSymbol
PublicSymbol	src/breakpad/processor/source_line_resolver_base_types.h	/^  PublicSymbol(const string& set_name,$/;"	f	struct:google_breakpad::SourceLineResolverBase::PublicSymbol
PublicSymbol	src/breakpad/processor/source_line_resolver_base_types.h	/^struct SourceLineResolverBase::PublicSymbol {$/;"	s	class:google_breakpad::SourceLineResolverBase
PushValue	src/breakpad/processor/postfix_evaluator-inl.h	/^void PostfixEvaluator<ValueType>::PushValue(const ValueType &value) {$/;"	f	class:google_breakpad::PostfixEvaluator
QAnimatedEffect	src/ui/sprite.h	/^class QAnimatedEffect : public QGraphicsEffect$/;"	c
QList_Sl_CardItem_Sm__Sg__at	swig/sanguosha_wrap.cxx	/^SWIGINTERN CardItem *QList_Sl_CardItem_Sm__Sg__at(QList< CardItem * > const *self,int i){$/;"	f
QList_Sl_Card_SS_const_Sm__Sg__at	swig/sanguosha_wrap.cxx	/^SWIGINTERN Card const *QList_Sl_Card_SS_const_Sm__Sg__at(QList< Card const * > const *self,int i){$/;"	f
QList_Sl_CardsMoveStruct_Sg__at	swig/sanguosha_wrap.cxx	/^SWIGINTERN CardsMoveStruct QList_Sl_CardsMoveStruct_Sg__at(QList< CardsMoveStruct > const *self,int i){$/;"	f
QList_Sl_DelayedTrick_SS_const_Sm__Sg__at	swig/sanguosha_wrap.cxx	/^SWIGINTERN DelayedTrick const *QList_Sl_DelayedTrick_SS_const_Sm__Sg__at(QList< DelayedTrick const * > const *self,int i){$/;"	f
QList_Sl_Player_Phase_Sg__at	swig/sanguosha_wrap.cxx	/^SWIGINTERN Player::Phase QList_Sl_Player_Phase_Sg__at(QList< Player::Phase > const *self,int i){$/;"	f
QList_Sl_Player_Place_Sg__at	swig/sanguosha_wrap.cxx	/^SWIGINTERN Player::Place QList_Sl_Player_Place_Sg__at(QList< Player::Place > const *self,int i){$/;"	f
QList_Sl_Player_SS_const_Sm__Sg__at	swig/sanguosha_wrap.cxx	/^SWIGINTERN Player const *QList_Sl_Player_SS_const_Sm__Sg__at(QList< Player const * > const *self,int i){$/;"	f
QList_Sl_ServerPlayer_Sm__Sg__at	swig/sanguosha_wrap.cxx	/^SWIGINTERN ServerPlayer *QList_Sl_ServerPlayer_Sm__Sg__at(QList< ServerPlayer * > const *self,int i){$/;"	f
QList_Sl_Skill_SS_const_Sm__Sg__at	swig/sanguosha_wrap.cxx	/^SWIGINTERN Skill const *QList_Sl_Skill_SS_const_Sm__Sg__at(QList< Skill const * > const *self,int i){$/;"	f
QList_Sl_int_Sg__at	swig/sanguosha_wrap.cxx	/^SWIGINTERN int QList_Sl_int_Sg__at(QList< int > const *self,int i){$/;"	f
QSAN_UI_LIBRARY_AVAILABLE	src/ui/SkinBank.h	4;"	d
QSanButton	src/ui/qsanbutton.cpp	/^QSanButton::QSanButton(QGraphicsItem* parent): QGraphicsObject(parent)$/;"	f	class:QSanButton
QSanButton	src/ui/qsanbutton.cpp	/^QSanButton::QSanButton(const QString &groupName, $/;"	f	class:QSanButton
QSanButton	src/ui/qsanbutton.h	/^class QSanButton : public QGraphicsObject$/;"	c
QSanCommandProgressBar	src/ui/TimedProgressBar.cpp	/^QSanCommandProgressBar::QSanCommandProgressBar()$/;"	f	class:QSanCommandProgressBar
QSanCommandProgressBar	src/ui/TimedProgressBar.h	/^class QSanCommandProgressBar: public TimedProgressBar$/;"	c
QSanFreeTypeFont	src/ui/uiUtils.h	/^    namespace QSanFreeTypeFont$/;"	n	namespace:QSanUiUtils
QSanGeneralPacket	src/core/protocol.h	/^        inline QSanGeneralPacket(PacketType packetType = S_UNKNOWN_PACKET, CommandType command = S_COMMAND_UNKNOWN)$/;"	f	class:QSanProtocol::QSanGeneralPacket
QSanGeneralPacket	src/core/protocol.h	/^    class QSanGeneralPacket: public QSanPacket$/;"	c	namespace:QSanProtocol
QSanInvokeSkillButton	src/ui/qsanbutton.h	/^    inline QSanInvokeSkillButton(QGraphicsItem* parent = NULL) : QSanSkillButton(parent)$/;"	f	class:QSanInvokeSkillButton
QSanInvokeSkillButton	src/ui/qsanbutton.h	/^class QSanInvokeSkillButton: public QSanSkillButton$/;"	c
QSanInvokeSkillDock	src/ui/qsanbutton.h	/^    QSanInvokeSkillDock(QGraphicsItem* parent) : QGraphicsObject(parent) {}$/;"	f	class:QSanInvokeSkillDock
QSanInvokeSkillDock	src/ui/qsanbutton.h	/^class QSanInvokeSkillDock: public QGraphicsObject$/;"	c
QSanPacket	src/core/protocol.h	/^    class QSanPacket$/;"	c	namespace:QSanProtocol
QSanPixmapCache	src/ui/SkinBank.h	/^class QSanPixmapCache$/;"	c
QSanProtocol	src/core/jsonutils.h	/^namespace QSanProtocol$/;"	n
QSanProtocol	src/core/protocol.h	/^namespace QSanProtocol$/;"	n
QSanRoomSkin	src/ui/SkinBank.h	/^class QSanRoomSkin : public IQSanComponentSkin$/;"	c
QSanSelectableItem	src/ui/QSanSelectableItem.cpp	/^QSanSelectableItem::QSanSelectableItem(bool center_as_origin)$/;"	f	class:QSanSelectableItem
QSanSelectableItem	src/ui/QSanSelectableItem.cpp	/^QSanSelectableItem::QSanSelectableItem(const QString &filename, bool center_as_origin)    $/;"	f	class:QSanSelectableItem
QSanSelectableItem	src/ui/QSanSelectableItem.h	/^class QSanSelectableItem : public QGraphicsObject {$/;"	c
QSanShadowTextFont	src/ui/SkinBank.h	/^    class QSanShadowTextFont : public QSanSimpleTextFont$/;"	c	class:IQSanComponentSkin
QSanSimpleTextFont	src/ui/SkinBank.cpp	/^IQSanComponentSkin::QSanSimpleTextFont::QSanSimpleTextFont()$/;"	f	class:IQSanComponentSkin::QSanSimpleTextFont
QSanSimpleTextFont	src/ui/SkinBank.h	/^    class QSanSimpleTextFont {$/;"	c	class:IQSanComponentSkin
QSanSkillButton	src/ui/qsanbutton.cpp	/^QSanSkillButton::QSanSkillButton(QGraphicsItem* parent): $/;"	f	class:QSanSkillButton
QSanSkillButton	src/ui/qsanbutton.h	/^class QSanSkillButton: public QSanButton$/;"	c
QSanSkinFactory	src/ui/SkinBank.cpp	/^QSanSkinFactory::QSanSkinFactory(const char* fileName)$/;"	f	class:QSanSkinFactory
QSanSkinFactory	src/ui/SkinBank.h	/^class QSanSkinFactory$/;"	c
QSanSkinScheme	src/ui/SkinBank.h	/^class QSanSkinScheme$/;"	c
QSanUiUtils	src/ui/uiUtils.h	/^namespace QSanUiUtils$/;"	n
QVariant_setValue__SWIG_0	swig/sanguosha_wrap.cxx	/^SWIGINTERN void QVariant_setValue__SWIG_0(QVariant *self,int value){$/;"	f
QVariant_setValue__SWIG_1	swig/sanguosha_wrap.cxx	/^SWIGINTERN void QVariant_setValue__SWIG_1(QVariant *self,DamageStruct *damage){$/;"	f
QVariant_setValue__SWIG_10	swig/sanguosha_wrap.cxx	/^SWIGINTERN void QVariant_setValue__SWIG_10(QVariant *self,PhaseChangeStruct *phase){$/;"	f
QVariant_setValue__SWIG_11	swig/sanguosha_wrap.cxx	/^SWIGINTERN void QVariant_setValue__SWIG_11(QVariant *self,CardsMoveOneTimeStruct const *move){$/;"	f
QVariant_setValue__SWIG_2	swig/sanguosha_wrap.cxx	/^SWIGINTERN void QVariant_setValue__SWIG_2(QVariant *self,CardEffectStruct *effect){$/;"	f
QVariant_setValue__SWIG_3	swig/sanguosha_wrap.cxx	/^SWIGINTERN void QVariant_setValue__SWIG_3(QVariant *self,SlashEffectStruct *effect){$/;"	f
QVariant_setValue__SWIG_4	swig/sanguosha_wrap.cxx	/^SWIGINTERN void QVariant_setValue__SWIG_4(QVariant *self,CardUseStruct *use){$/;"	f
QVariant_setValue__SWIG_5	swig/sanguosha_wrap.cxx	/^SWIGINTERN void QVariant_setValue__SWIG_5(QVariant *self,Card const *card){$/;"	f
QVariant_setValue__SWIG_6	swig/sanguosha_wrap.cxx	/^SWIGINTERN void QVariant_setValue__SWIG_6(QVariant *self,ServerPlayer *player){$/;"	f
QVariant_setValue__SWIG_7	swig/sanguosha_wrap.cxx	/^SWIGINTERN void QVariant_setValue__SWIG_7(QVariant *self,DyingStruct *dying){$/;"	f
QVariant_setValue__SWIG_8	swig/sanguosha_wrap.cxx	/^SWIGINTERN void QVariant_setValue__SWIG_8(QVariant *self,RecoverStruct *recover){$/;"	f
QVariant_setValue__SWIG_9	swig/sanguosha_wrap.cxx	/^SWIGINTERN void QVariant_setValue__SWIG_9(QVariant *self,PindianStruct *pindian){$/;"	f
QVariant_toCard	swig/sanguosha_wrap.cxx	/^SWIGINTERN Card const *QVariant_toCard(QVariant const *self){$/;"	f
QVariant_toCardEffect	swig/sanguosha_wrap.cxx	/^SWIGINTERN CardEffectStruct QVariant_toCardEffect(QVariant const *self){$/;"	f
QVariant_toCardUse	swig/sanguosha_wrap.cxx	/^SWIGINTERN CardUseStruct QVariant_toCardUse(QVariant const *self){$/;"	f
QVariant_toDamage	swig/sanguosha_wrap.cxx	/^SWIGINTERN DamageStruct QVariant_toDamage(QVariant const *self){$/;"	f
QVariant_toDamageStar	swig/sanguosha_wrap.cxx	/^SWIGINTERN DamageStar QVariant_toDamageStar(QVariant const *self){$/;"	f
QVariant_toDying	swig/sanguosha_wrap.cxx	/^SWIGINTERN DyingStruct QVariant_toDying(QVariant const *self){$/;"	f
QVariant_toJudge	swig/sanguosha_wrap.cxx	/^SWIGINTERN JudgeStruct *QVariant_toJudge(QVariant const *self){$/;"	f
QVariant_toMoveOneTime	swig/sanguosha_wrap.cxx	/^SWIGINTERN CardsMoveOneTimeStruct const *QVariant_toMoveOneTime(QVariant const *self){$/;"	f
QVariant_toPhaseChange	swig/sanguosha_wrap.cxx	/^SWIGINTERN PhaseChangeStruct QVariant_toPhaseChange(QVariant const *self){$/;"	f
QVariant_toPindian	swig/sanguosha_wrap.cxx	/^SWIGINTERN PindianStruct *QVariant_toPindian(QVariant const *self){$/;"	f
QVariant_toPlayer	swig/sanguosha_wrap.cxx	/^SWIGINTERN ServerPlayer *QVariant_toPlayer(QVariant const *self){$/;"	f
QVariant_toRecover	swig/sanguosha_wrap.cxx	/^SWIGINTERN RecoverStruct QVariant_toRecover(QVariant const *self){$/;"	f
QVariant_toSlashEffect	swig/sanguosha_wrap.cxx	/^SWIGINTERN SlashEffectStruct QVariant_toSlashEffect(QVariant const *self){$/;"	f
Qiangxi	src/package/firepackage.cpp	/^    Qiangxi():ViewAsSkill("qiangxi"){$/;"	f	class:Qiangxi
Qiangxi	src/package/firepackage.cpp	/^class Qiangxi: public ViewAsSkill{$/;"	c	file:
QiangxiCard	src/package/firepackage.cpp	/^QiangxiCard::QiangxiCard(){$/;"	f	class:QiangxiCard
QiangxiCard	src/package/firepackage.h	/^class QiangxiCard: public SkillCard{$/;"	c
Qianxi	src/package/yjcm2012-package.cpp	/^    Qianxi():TriggerSkill("qianxi"){$/;"	f	class:Qianxi
Qianxi	src/package/yjcm2012-package.cpp	/^class Qianxi: public TriggerSkill{$/;"	c	file:
Qianxun	src/package/standard-generals.cpp	/^    Qianxun():ProhibitSkill("qianxun"){$/;"	f	class:Qianxun
Qianxun	src/package/standard-generals.cpp	/^class Qianxun: public ProhibitSkill{$/;"	c	file:
Qiaobian	src/package/mountainpackage.cpp	/^    Qiaobian():TriggerSkill("qiaobian"){$/;"	f	class:Qiaobian
Qiaobian	src/package/mountainpackage.cpp	/^class Qiaobian: public TriggerSkill{$/;"	c	file:
QiaobianCard	src/package/mountainpackage.cpp	/^QiaobianCard::QiaobianCard(){$/;"	f	class:QiaobianCard
QiaobianCard	src/package/mountainpackage.h	/^class QiaobianCard: public SkillCard{$/;"	c
QiaobianViewAsSkill	src/package/mountainpackage.cpp	/^    QiaobianViewAsSkill():ZeroCardViewAsSkill("qiaobian"){$/;"	f	class:QiaobianViewAsSkill
QiaobianViewAsSkill	src/package/mountainpackage.cpp	/^class QiaobianViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
Qice	src/package/yjcm2012-package.cpp	/^    Qice():ViewAsSkill("qice"){$/;"	f	class:Qice
Qice	src/package/yjcm2012-package.cpp	/^class Qice: public ViewAsSkill{$/;"	c	file:
QiceCard	src/package/yjcm2012-package.cpp	/^QiceCard::QiceCard(){$/;"	f	class:QiceCard
QiceCard	src/package/yjcm2012-package.h	/^class QiceCard: public SkillCard{$/;"	c
QinggangSword	src/package/standard-cards.cpp	/^QinggangSword::QinggangSword(Suit suit, int number)$/;"	f	class:QinggangSword
QinggangSword	src/package/standard-equips.h	/^class QinggangSword:public Weapon{$/;"	c
QinggangSwordSkill	src/package/standard-cards.cpp	/^    QinggangSwordSkill():WeaponSkill("QinggangSword"){$/;"	f	class:QinggangSwordSkill
QinggangSwordSkill	src/package/standard-cards.cpp	/^class QinggangSwordSkill: public WeaponSkill{$/;"	c	file:
Qingguo	src/package/standard-generals.cpp	/^    Qingguo():OneCardViewAsSkill("qingguo"){$/;"	f	class:Qingguo
Qingguo	src/package/standard-generals.cpp	/^class Qingguo:public OneCardViewAsSkill{$/;"	c	file:
Qingnang	src/package/standard-generals.cpp	/^    Qingnang():OneCardViewAsSkill("qingnang"){$/;"	f	class:Qingnang
Qingnang	src/package/standard-generals.cpp	/^class Qingnang: public OneCardViewAsSkill{$/;"	c	file:
QingnangCard	src/package/standard-skillcards.cpp	/^QingnangCard::QingnangCard(){$/;"	f	class:QingnangCard
QingnangCard	src/package/standard-skillcards.h	/^class QingnangCard: public SkillCard{$/;"	c
Qinyin	src/package/god.cpp	/^    Qinyin():TriggerSkill("qinyin"){$/;"	f	class:Qinyin
Qinyin	src/package/god.cpp	/^class Qinyin: public TriggerSkill{$/;"	c	file:
Qixi	src/package/standard-generals.cpp	/^    Qixi():OneCardViewAsSkill("qixi"){$/;"	f	class:Qixi
Qixi	src/package/standard-generals.cpp	/^class Qixi: public OneCardViewAsSkill{$/;"	c	file:
Qixing	src/package/god.cpp	/^    Qixing():TriggerSkill("qixing"){$/;"	f	class:Qixing
Qixing	src/package/god.cpp	/^class Qixing: public TriggerSkill{$/;"	c	file:
QixingAsk	src/package/god.cpp	/^    QixingAsk():PhaseChangeSkill("#qixing-ask"){$/;"	f	class:QixingAsk
QixingAsk	src/package/god.cpp	/^class QixingAsk: public PhaseChangeSkill{$/;"	c	file:
QixingClear	src/package/god.cpp	/^    QixingClear():TriggerSkill("#qixing-clear"){$/;"	f	class:QixingClear
QixingClear	src/package/god.cpp	/^class QixingClear: public TriggerSkill{$/;"	c	file:
QixingStart	src/package/god.cpp	/^    QixingStart():GameStartSkill("#qixing"){$/;"	f	class:QixingStart
QixingStart	src/package/god.cpp	/^class QixingStart: public GameStartSkill{$/;"	c	file:
Quanji	src/package/yjcm-package.cpp	/^    Quanji():MasochismSkill("#quanji"){$/;"	f	class:Quanji
Quanji	src/package/yjcm-package.cpp	/^class Quanji:public MasochismSkill{$/;"	c	file:
QuanjiKeep	src/package/yjcm-package.cpp	/^    QuanjiKeep():MaxCardsSkill("quanji"){$/;"	f	class:QuanjiKeep
QuanjiKeep	src/package/yjcm-package.cpp	/^class QuanjiKeep: public MaxCardsSkill{$/;"	c	file:
Quhu	src/package/firepackage.cpp	/^    Quhu():OneCardViewAsSkill("quhu"){$/;"	f	class:Quhu
Quhu	src/package/firepackage.cpp	/^class Quhu: public OneCardViewAsSkill{$/;"	c	file:
QuhuCard	src/package/firepackage.cpp	/^QuhuCard::QuhuCard(){$/;"	f	class:QuhuCard
QuhuCard	src/package/firepackage.h	/^class QuhuCard: public SkillCard{$/;"	c
R0_VALID	src/breakpad/processor/cfi_frame_info_unittest.cc	/^    R0_VALID = 0x01,$/;"	e	enum:SimpleCFIWalkerFixture::Validity	file:
R1_VALID	src/breakpad/processor/cfi_frame_info_unittest.cc	/^    R1_VALID = 0x02,$/;"	e	enum:SimpleCFIWalkerFixture::Validity	file:
R2_VALID	src/breakpad/processor/cfi_frame_info_unittest.cc	/^    R2_VALID = 0x04,$/;"	e	enum:SimpleCFIWalkerFixture::Validity	file:
R3_VALID	src/breakpad/processor/cfi_frame_info_unittest.cc	/^    R3_VALID = 0x08,$/;"	e	enum:SimpleCFIWalkerFixture::Validity	file:
R4_VALID	src/breakpad/processor/cfi_frame_info_unittest.cc	/^    R4_VALID = 0x10,$/;"	e	enum:SimpleCFIWalkerFixture::Validity	file:
RA	src/lua/lvm.c	343;"	d	file:
RADIANS_PER_DEGREE	src/lua/lmathlib.c	22;"	d	file:
RARule	src/breakpad/processor/cfi_frame_info.cc	/^void CFIFrameInfoParseHandler::RARule(const string &expression) {$/;"	f	class:google_breakpad::CFIFrameInfoParseHandler
RB	src/lua/lvm.c	345;"	d	file:
RC	src/lua/lvm.c	346;"	d	file:
RECORDER_H	src/util/recorder.h	2;"	d
RECURSION_DEPTH	src/breakpad/processor/stackwalker_selftest.cc	96;"	d	file:
RESERVED	src/lua/llex.h	/^enum RESERVED {$/;"	g
RKASK	src/lua/lopcodes.h	130;"	d
RKB	src/lua/lvm.c	347;"	d	file:
RKC	src/lua/lvm.c	349;"	d	file:
RMap	src/breakpad/processor/static_range_map_unittest.cc	/^typedef google_breakpad::RangeMap< AddressType, EntryType > RMap;$/;"	t	namespace:__anon85	file:
ROLEASSIGNDIALOG_H	src/dialog/roleassigndialog.h	2;"	d
ROLEComboBox_H	src/ui/rolecombobox.h	2;"	d
ROOMSCENE_H	src/ui/roomscene.h	2;"	d
ROOMTHREAD1V1_H	src/server/roomthread1v1.h	2;"	d
ROOMTHREAD3V3_H	src/server/roomthread3v3.h	2;"	d
ROOMTHREAD_H	src/server/roomthread.h	2;"	d
ROOM_H	src/server/room.h	2;"	d
ROUND_F26DOT6	include/freetype/freetype/internal/ftcalc.h	170;"	d
Range	src/breakpad/processor/map_serializers.h	/^  typedef typename RangeMap<Address, Entry>::Range Range;$/;"	t	class:google_breakpad::RangeMapSerializer
Range	src/breakpad/processor/range_map.h	/^    Range(const AddressType &base, const EntryType &entry)$/;"	f	class:google_breakpad::RangeMap::Range
Range	src/breakpad/processor/range_map.h	/^  class Range {$/;"	c	class:google_breakpad::RangeMap
Range	src/breakpad/processor/static_range_map.h	/^  class Range {$/;"	c	class:google_breakpad::StaticRangeMap
RangeMap	src/breakpad/processor/range_map.h	/^  RangeMap() : map_() {}$/;"	f	class:google_breakpad::RangeMap
RangeMap	src/breakpad/processor/range_map.h	/^class RangeMap {$/;"	c	namespace:google_breakpad
RangeMapSerializer	src/breakpad/processor/map_serializers.h	/^class RangeMapSerializer {$/;"	c	namespace:google_breakpad
RangeTest	src/breakpad/processor/range_map_unittest.cc	/^struct RangeTest {$/;"	s	namespace:__anon84	file:
RangeTest	src/breakpad/processor/static_range_map_unittest.cc	/^struct RangeTest {$/;"	s	namespace:__anon85	file:
RangeTestSet	src/breakpad/processor/range_map_unittest.cc	/^struct RangeTestSet {$/;"	s	namespace:__anon84	file:
RangeTestSet	src/breakpad/processor/static_range_map_unittest.cc	/^struct RangeTestSet {$/;"	s	namespace:__anon85	file:
RawContext	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  struct RawContext {$/;"	s	struct:SimpleCFIWalkerFixture	file:
Read	src/breakpad/processor/minidump.cc	/^bool Minidump::Read() {$/;"	f	class:google_breakpad::Minidump
Read	src/breakpad/processor/minidump.cc	/^bool MinidumpAssertion::Read(u_int32_t expected_size) {$/;"	f	class:google_breakpad::MinidumpAssertion
Read	src/breakpad/processor/minidump.cc	/^bool MinidumpBreakpadInfo::Read(u_int32_t expected_size) {$/;"	f	class:google_breakpad::MinidumpBreakpadInfo
Read	src/breakpad/processor/minidump.cc	/^bool MinidumpContext::Read(u_int32_t expected_size) {$/;"	f	class:google_breakpad::MinidumpContext
Read	src/breakpad/processor/minidump.cc	/^bool MinidumpException::Read(u_int32_t expected_size) {$/;"	f	class:google_breakpad::MinidumpException
Read	src/breakpad/processor/minidump.cc	/^bool MinidumpMemoryInfo::Read() {$/;"	f	class:google_breakpad::MinidumpMemoryInfo
Read	src/breakpad/processor/minidump.cc	/^bool MinidumpMemoryInfoList::Read(u_int32_t expected_size) {$/;"	f	class:google_breakpad::MinidumpMemoryInfoList
Read	src/breakpad/processor/minidump.cc	/^bool MinidumpMemoryList::Read(u_int32_t expected_size) {$/;"	f	class:google_breakpad::MinidumpMemoryList
Read	src/breakpad/processor/minidump.cc	/^bool MinidumpMiscInfo::Read(u_int32_t expected_size) {$/;"	f	class:google_breakpad::MinidumpMiscInfo
Read	src/breakpad/processor/minidump.cc	/^bool MinidumpModule::Read() {$/;"	f	class:google_breakpad::MinidumpModule
Read	src/breakpad/processor/minidump.cc	/^bool MinidumpModuleList::Read(u_int32_t expected_size) {$/;"	f	class:google_breakpad::MinidumpModuleList
Read	src/breakpad/processor/minidump.cc	/^bool MinidumpSystemInfo::Read(u_int32_t expected_size) {$/;"	f	class:google_breakpad::MinidumpSystemInfo
Read	src/breakpad/processor/minidump.cc	/^bool MinidumpThread::Read() {$/;"	f	class:google_breakpad::MinidumpThread
Read	src/breakpad/processor/minidump.cc	/^bool MinidumpThreadList::Read(u_int32_t expected_size) {$/;"	f	class:google_breakpad::MinidumpThreadList
ReadAuxiliaryData	src/breakpad/processor/minidump.cc	/^bool MinidumpModule::ReadAuxiliaryData() {$/;"	f	class:google_breakpad::MinidumpModule
ReadBytes	src/breakpad/processor/minidump.cc	/^bool Minidump::ReadBytes(void* bytes, size_t count) {$/;"	f	class:google_breakpad::Minidump
ReadExceptionCode	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^bool HandleTraceData::ReadExceptionCode($/;"	f	class:__anon67::HandleTraceData
ReadResponse	src/breakpad/common/windows/http_upload.cc	/^bool HTTPUpload::ReadResponse(HINTERNET request, wstring *response) {$/;"	f	class:google_breakpad::HTTPUpload
ReadString	src/breakpad/processor/minidump.cc	/^string* Minidump::ReadString(off_t offset) {$/;"	f	class:google_breakpad::Minidump
ReadSymbolFile	src/breakpad/processor/source_line_resolver_base.cc	/^bool SourceLineResolverBase::ReadSymbolFile(char **symbol_data,$/;"	f	class:google_breakpad::SourceLineResolverBase
Reader	src/jsoncpp/include/json/reader.h	/^   class JSON_API Reader$/;"	c	namespace:Json
Reader	src/jsoncpp/src/json_reader.cpp	/^Reader::Reader( const Features &features )$/;"	f	class:Json::Reader
Reader	src/jsoncpp/src/json_reader.cpp	/^Reader::Reader()$/;"	f	class:Json::Reader
Rebel	src/core/player.h	/^    enum Role {Lord, Loyalist, Rebel, Renegade};$/;"	e	enum:Player::Role
RecordHandleOperations	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^ULONG CALLBACK HandleTraceData::RecordHandleOperations($/;"	f	class:__anon67::HandleTraceData
Recorder	src/util/recorder.cpp	/^Recorder::Recorder(QObject *parent)$/;"	f	class:Recorder
Recorder	src/util/recorder.h	/^class Recorder : public QObject$/;"	c
RecoverStruct	src/core/structs.h	/^struct RecoverStruct{$/;"	s
RecoverStruct	src/server/roomthread.cpp	/^RecoverStruct::RecoverStruct()$/;"	f	class:RecoverStruct
Rect	src/core/settings.h	/^    const QRectF Rect;$/;"	m	class:Settings
Recursor	src/breakpad/processor/stackwalker_selftest.cc	/^static bool Recursor(unsigned int depth, unsigned int parent_callers) {$/;"	f	file:
Red	src/core/card.h	/^    enum Color{Red, Black, Colorless};$/;"	e	enum:Card::Color
Reflections	include/fmod/fmod.h	/^    int          Reflections;       \/* [r\/w] -10000 1000   -2602   Early reflections level relative to room effect                       (SUPPORTED:SFX\/WII) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
ReflectionsDelay	include/fmod/fmod.h	/^    float        ReflectionsDelay;  \/* [r\/w] 0.0    0.3    0.007   Initial reflection delay time                                         (SUPPORTED:SFX) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
RegionFromSection	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  void RegionFromSection() {$/;"	f	class:StackwalkerAMD64Fixture
RegionFromSection	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  void RegionFromSection() {$/;"	f	class:StackwalkerARMFixture
RegionFromSection	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  void RegionFromSection() {$/;"	f	class:StackwalkerX86Fixture
Register	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^bool CrashGenerationClient::Register() {$/;"	f	class:google_breakpad::CrashGenerationClient
RegisterClient	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^bool CrashGenerationClient::RegisterClient(HANDLE pipe) {$/;"	f	class:google_breakpad::CrashGenerationClient
RegisterRule	src/breakpad/processor/cfi_frame_info.cc	/^void CFIFrameInfoParseHandler::RegisterRule(const string &name,$/;"	f	class:google_breakpad::CFIFrameInfoParseHandler
RegisterSet	src/breakpad/processor/cfi_frame_info.h	/^  struct RegisterSet {$/;"	s	class:google_breakpad::SimpleCFIWalker
RegisterValidFlag	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  static ContextValidity RegisterValidFlag(int n) {$/;"	f	struct:google_breakpad::StackFrameARM
RegisterValueMap	src/breakpad/processor/cfi_frame_info.h	/^  template<typename ValueType> class RegisterValueMap: $/;"	c	class:google_breakpad::CFIFrameInfo
Relation	src/server/ai.h	/^    enum Relation { Friend, Enemy, Neutrality };$/;"	g	class:AI
Release	src/breakpad/client/windows/common/auto_critical_section.h	/^  void Release() {$/;"	f	class:google_breakpad::AutoCriticalSection
Remove	src/package/wind.cpp	/^    static void Remove(ServerPlayer *zhoutai){$/;"	f	class:BuquRemove
Rende	src/package/standard-generals.cpp	/^    Rende():PhaseChangeSkill("rende"){$/;"	f	class:Rende
Rende	src/package/standard-generals.cpp	/^class Rende: public PhaseChangeSkill{$/;"	c	file:
RendeCard	src/package/standard-skillcards.cpp	/^RendeCard::RendeCard(){$/;"	f	class:RendeCard
RendeCard	src/package/standard-skillcards.h	/^class RendeCard:public SkillCard{$/;"	c
RendeViewAsSkill	src/package/standard-generals.cpp	/^    RendeViewAsSkill():ViewAsSkill("rende"){$/;"	f	class:RendeViewAsSkill
RendeViewAsSkill	src/package/standard-generals.cpp	/^class RendeViewAsSkill:public ViewAsSkill{$/;"	c	file:
Renegade	src/core/player.h	/^    enum Role {Lord, Loyalist, Rebel, Renegade};$/;"	e	enum:Player::Role
Renjie	src/package/god.cpp	/^    Renjie():TriggerSkill("renjie"){$/;"	f	class:Renjie
Renjie	src/package/god.cpp	/^class Renjie: public TriggerSkill{$/;"	c	file:
RenwangShield	src/package/standard-cards.cpp	/^RenwangShield::RenwangShield(Suit suit, int number)$/;"	f	class:RenwangShield
RenwangShield	src/package/standard-equips.h	/^class RenwangShield: public Armor{$/;"	c
RenwangShieldSkill	src/package/standard-cards.cpp	/^    RenwangShieldSkill():ArmorSkill("RenwangShield"){$/;"	f	class:RenwangShieldSkill
RenwangShieldSkill	src/package/standard-cards.cpp	/^class RenwangShieldSkill: public ArmorSkill{$/;"	c	file:
Replayer	src/util/recorder.cpp	/^Replayer::Replayer(QObject *parent, const QString &filename)$/;"	f	class:Replayer
Replayer	src/util/recorder.h	/^class Replayer: public QThread$/;"	c
ReplayerControlBar	src/ui/roomscene.cpp	/^ReplayerControlBar::ReplayerControlBar(Dashboard *dashboard){$/;"	f	class:ReplayerControlBar
ReplayerControlBar	src/ui/roomscene.h	/^class ReplayerControlBar: public QGraphicsProxyWidget{$/;"	c
Report	src/breakpad/processor/cfi_frame_info.cc	/^bool CFIRuleParser::Report() {$/;"	f	class:google_breakpad::CFIRuleParser
RequestDump	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^bool CrashGenerationClient::RequestDump(EXCEPTION_POINTERS* ex_info) {$/;"	f	class:google_breakpad::CrashGenerationClient
RequestDump	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^bool CrashGenerationClient::RequestDump(EXCEPTION_POINTERS* ex_info,$/;"	f	class:google_breakpad::CrashGenerationClient
RequestDump	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^bool CrashGenerationClient::RequestDump(MDRawAssertionInfo* assert_info) {$/;"	f	class:google_breakpad::CrashGenerationClient
RequestUpload	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^bool CrashGenerationClient::RequestUpload(DWORD crash_id) {$/;"	f	class:google_breakpad::CrashGenerationClient
RequestUpload	src/breakpad/client/windows/handler/exception_handler.cc	/^bool ExceptionHandler::RequestUpload(DWORD crash_id) {$/;"	f	class:google_breakpad::ExceptionHandler
Reserved	include/freetype/freetype/tttables.h	/^    FT_Byte    Reserved;$/;"	m	struct:TT_PCLT_
Reserved	include/freetype/freetype/tttables.h	/^    FT_Short   Reserved[4];$/;"	m	struct:TT_HoriHeader_
Reserved	include/freetype/freetype/tttables.h	/^    FT_Short   Reserved[4];$/;"	m	struct:TT_VertHeader_
RespondToClient	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^bool CrashGenerationServer::RespondToClient(ClientInfo* client_info) {$/;"	f	class:google_breakpad::CrashGenerationServer
ResponseSkill	src/client/aux-skills.cpp	/^ResponseSkill::ResponseSkill()$/;"	f	class:ResponseSkill
ResponseSkill	src/client/aux-skills.h	/^class ResponseSkill: public OneCardViewAsSkill{$/;"	c
ResponseVerifyFunction	src/server/room.h	/^    typedef bool (Room::*ResponseVerifyFunction)(ServerPlayer*, const Json::Value&, void*);$/;"	t	class:Room
Responsing	src/client/client.h	/^        Responsing,$/;"	e	enum:Client::Status
Retrieve	src/breakpad/processor/address_map-inl.h	/^bool AddressMap<AddressType, EntryType>::Retrieve($/;"	f	class:google_breakpad::AddressMap
Retrieve	src/breakpad/processor/static_address_map-inl.h	/^bool StaticAddressMap<AddressType, EntryType>::Retrieve($/;"	f	class:google_breakpad::StaticAddressMap
RetrieveIndexTest	src/breakpad/processor/range_map_unittest.cc	/^static bool RetrieveIndexTest(TestMap *range_map, int set) {$/;"	f	namespace:__anon84
RetrieveIndexTest	src/breakpad/processor/static_range_map_unittest.cc	/^void TestStaticRangeMap::RetrieveIndexTest(const TestMap* range_map, int set) {$/;"	f	class:google_breakpad::TestStaticRangeMap
RetrieveNearestRange	src/breakpad/processor/range_map-inl.h	/^bool RangeMap<AddressType, EntryType>::RetrieveNearestRange($/;"	f	class:google_breakpad::RangeMap
RetrieveNearestRange	src/breakpad/processor/static_range_map-inl.h	/^bool StaticRangeMap<AddressType, EntryType>::RetrieveNearestRange($/;"	f	class:google_breakpad::StaticRangeMap
RetrieveRange	src/breakpad/processor/contained_range_map-inl.h	/^bool ContainedRangeMap<AddressType, EntryType>::RetrieveRange($/;"	f	class:google_breakpad::ContainedRangeMap
RetrieveRange	src/breakpad/processor/range_map-inl.h	/^bool RangeMap<AddressType, EntryType>::RetrieveRange($/;"	f	class:google_breakpad::RangeMap
RetrieveRange	src/breakpad/processor/static_contained_range_map-inl.h	/^bool StaticContainedRangeMap<AddressType, EntryType>::RetrieveRange($/;"	f	class:google_breakpad::StaticContainedRangeMap
RetrieveRange	src/breakpad/processor/static_range_map-inl.h	/^bool StaticRangeMap<AddressType, EntryType>::RetrieveRange($/;"	f	class:google_breakpad::StaticRangeMap
RetrieveRangeAtIndex	src/breakpad/processor/range_map-inl.h	/^bool RangeMap<AddressType, EntryType>::RetrieveRangeAtIndex($/;"	f	class:google_breakpad::RangeMap
RetrieveRangeAtIndex	src/breakpad/processor/static_range_map-inl.h	/^bool StaticRangeMap<AddressType, EntryType>::RetrieveRangeAtIndex($/;"	f	class:google_breakpad::StaticRangeMap
RetrieveTest	src/breakpad/processor/range_map_unittest.cc	/^static bool RetrieveTest(TestMap *range_map, const RangeTest *range_test) {$/;"	f	namespace:__anon84
RetrieveTest	src/breakpad/processor/static_range_map_unittest.cc	/^void TestStaticRangeMap::RetrieveTest(TestMap* range_map,$/;"	f	class:google_breakpad::TestStaticRangeMap
RetrieveTester	src/breakpad/processor/static_address_map_unittest.cc	/^  void RetrieveTester(int testcase) {$/;"	f	class:TestStaticAddressMap
RetriveAtIndexTest2	src/breakpad/processor/range_map_unittest.cc	/^static bool RetriveAtIndexTest2() {$/;"	f	namespace:__anon84
Reverb	include/fmod/fmod.h	/^    int          Reverb;            \/* [r\/w] -10000 2000   200     Late reverberation level relative to room effect                      (SUPPORTED:SFX) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
Reverb	include/fmod/fmod.hpp	/^    class Reverb$/;"	c	namespace:FMOD
ReverbDelay	include/fmod/fmod.h	/^    float        ReverbDelay;       \/* [r\/w] 0.0    0.1    0.011   Late reverberation delay time relative to initial reflection          (SUPPORTED:SFX\/WII) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
Right	src/core/skill.h	/^        Right$/;"	e	enum:Skill::Location
Right	src/ui/joystick.h	/^    static const int Right = 2;$/;"	m	class:Joystick
Role	src/core/player.h	/^    enum Role {Lord, Loyalist, Rebel, Renegade};$/;"	g	class:Player
RoleAssignDialog	src/dialog/roleassigndialog.cpp	/^RoleAssignDialog::RoleAssignDialog(QWidget *parent)$/;"	f	class:RoleAssignDialog
RoleAssignDialog	src/dialog/roleassigndialog.h	/^class RoleAssignDialog: public QDialog{$/;"	c
RoleComboBox	src/ui/rolecombobox.cpp	/^RoleComboBox::RoleComboBox(QGraphicsItem *parent) : QGraphicsObject(parent)$/;"	f	class:RoleComboBox
RoleComboBox	src/ui/rolecombobox.h	/^class RoleComboBox : public QGraphicsObject$/;"	c
RoleComboBoxItem	src/ui/rolecombobox.cpp	/^RoleComboBoxItem::RoleComboBoxItem(const QString &role, int number, QSize size)$/;"	f	class:RoleComboBoxItem
RoleComboBoxItem	src/ui/rolecombobox.h	/^class RoleComboBoxItem : public QSanSelectableItem{$/;"	c
RoleMapping	src/server/ai.cpp	/^struct RoleMapping: public QMap<RolePair, AI::Relation> {$/;"	s	file:
RolePair	src/server/ai.cpp	/^typedef QPair<QString, QString> RolePair;$/;"	t	file:
Room	include/fmod/fmod.h	/^    int          Room;                 \/* [r\/w] -10000 1000 0        Room effect level                                        (SUPPORTED:SFX) *\/$/;"	m	struct:FMOD_REVERB_CHANNELPROPERTIES
Room	include/fmod/fmod.h	/^    int          Room;              \/* [r\/w] -10000 0      -1000   Room effect level (at mid frequencies)                                (SUPPORTED:SFX\/WII\/PSP) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
Room	src/server/room.cpp	/^Room::Room(QObject *parent, const QString &mode)$/;"	f	class:Room
Room	src/server/room.h	/^class Room : public QThread$/;"	c
RoomHF	include/fmod/fmod.h	/^    int          RoomHF;            \/* [r\/w] -10000 0      -100    Relative room effect level at high frequencies                        (SUPPORTED:SFX) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
RoomLF	include/fmod/fmod.h	/^    int          RoomLF;            \/* [r\/w] -10000 0      0       Relative room effect level at low frequencies                         (SUPPORTED:SFX) *\/$/;"	m	struct:FMOD_REVERB_PROPERTIES
RoomLayout	src/ui/SkinBank.h	/^    struct RoomLayout {$/;"	s	class:QSanRoomSkin
RoomScene	src/ui/roomscene.cpp	/^RoomScene::RoomScene(QMainWindow *main_window):$/;"	f	class:RoomScene
RoomScene	src/ui/roomscene.h	/^class RoomScene : public QGraphicsScene{$/;"	c
RoomStar	src/server/room.h	/^typedef Room *RoomStar;$/;"	t
RoomState	src/core/RoomState.h	/^    inline RoomState(bool isClient) { m_isClient = isClient; }$/;"	f	class:RoomState
RoomState	src/core/RoomState.h	/^class RoomState$/;"	c
RoomThread	src/server/roomthread.cpp	/^RoomThread::RoomThread(Room *room)$/;"	f	class:RoomThread
RoomThread	src/server/roomthread.h	/^class RoomThread : public QThread{$/;"	c
RoomThread1v1	src/server/roomthread1v1.cpp	/^RoomThread1v1::RoomThread1v1(Room *room)$/;"	f	class:RoomThread1v1
RoomThread1v1	src/server/roomthread1v1.h	/^class RoomThread1v1 : public QThread$/;"	c
RoomThread3v3	src/server/roomthread3v3.cpp	/^RoomThread3v3::RoomThread3v3(Room *room)$/;"	f	class:RoomThread3v3
RoomThread3v3	src/server/roomthread3v3.h	/^class RoomThread3v3 : public QThread$/;"	c
Room_nextPlayer	swig/sanguosha_wrap.cxx	/^SWIGINTERN ServerPlayer *Room_nextPlayer(Room const *self){$/;"	f
Room_output	swig/sanguosha_wrap.cxx	/^SWIGINTERN void Room_output(Room *self,char const *msg){$/;"	f
Room_outputEventStack	swig/sanguosha_wrap.cxx	/^SWIGINTERN void Room_outputEventStack(Room *self){$/;"	f
Room_writeToConsole	swig/sanguosha_wrap.cxx	/^SWIGINTERN void Room_writeToConsole(Room *self,char const *msg){$/;"	f
Roulin	src/package/thicket.cpp	/^    Roulin():TriggerSkill("roulin"){$/;"	f	class:Roulin
Roulin	src/package/thicket.cpp	/^class Roulin: public TriggerSkill{$/;"	c	file:
RoundStart	src/core/player.h	/^    enum Phase {RoundStart, Start, Judge, Draw, Play, Discard, Finish, NotActive, PhaseNone};$/;"	e	enum:Player::Phase
RuleMap	src/breakpad/processor/cfi_frame_info.h	/^  typedef map<string, string> RuleMap;$/;"	t	class:google_breakpad::CFIFrameInfo
RunTestCase	src/breakpad/processor/static_range_map_unittest.cc	/^void TestStaticRangeMap::RunTestCase(int test_case) {$/;"	f	class:google_breakpad::TestStaticRangeMap
RunTests	src/breakpad/processor/address_map_unittest.cc	/^static bool RunTests() {$/;"	f	namespace:__anon76
RunTests	src/breakpad/processor/contained_range_map_unittest.cc	/^static bool RunTests() {$/;"	f	namespace:__anon69
RunTests	src/breakpad/processor/pathname_stripper_unittest.cc	/^static bool RunTests() {$/;"	f	namespace:__anon70
RunTests	src/breakpad/processor/postfix_evaluator_unittest.cc	/^static bool RunTests() {$/;"	f	namespace:__anon75
RunTests	src/breakpad/processor/range_map_unittest.cc	/^static bool RunTests() {$/;"	f	namespace:__anon84
Ruoyu	src/package/mountainpackage.cpp	/^    Ruoyu():PhaseChangeSkill("ruoyu$"){$/;"	f	class:Ruoyu
Ruoyu	src/package/mountainpackage.cpp	/^class Ruoyu: public PhaseChangeSkill{$/;"	c	file:
S	src/lua/print.c	159;"	d	file:
SCENARIOOVERVIEW_H	src/dialog/scenario-overview.h	2;"	d
SCENARIO_H	src/scenario/scenario.h	2;"	d
SCENERULE_H	src/scenario/scenerule.h	2;"	d
SEMA_COMMAND_INTERACTIVE	src/server/serverplayer.h	/^        SEMA_COMMAND_INTERACTIVE \/\/ used to wait for response from client        $/;"	e	enum:ServerPlayer::SemaphoreType
SEMA_MUTEX	src/server/serverplayer.h	/^        SEMA_MUTEX, \/\/ used to protect mutex access to member variables        $/;"	e	enum:ServerPlayer::SemaphoreType
SERVERPLAYER_H	src/server/serverplayer.h	2;"	d
SERVER_H	src/server/server.h	2;"	d
SETARG_A	src/lua/lopcodes.h	85;"	d
SETARG_B	src/lua/lopcodes.h	89;"	d
SETARG_Bx	src/lua/lopcodes.h	97;"	d
SETARG_C	src/lua/lopcodes.h	93;"	d
SETARG_sBx	src/lua/lopcodes.h	101;"	d
SETTINGS_H	src/core/settings.h	2;"	d
SET_OPCODE	src/lua/lopcodes.h	81;"	d
SEVERITY_ERROR	src/breakpad/processor/logging.h	/^    SEVERITY_ERROR$/;"	e	enum:google_breakpad::LogStream::Severity
SEVERITY_ERROR	src/breakpad/processor/logging.h	74;"	d
SEVERITY_INFO	src/breakpad/processor/logging.h	/^    SEVERITY_INFO,$/;"	e	enum:google_breakpad::LogStream::Severity
SFIXEDBIT	src/lua/lgc.h	61;"	d
SFNT_Header	include/freetype/freetype/internal/tttypes.h	/^  } SFNT_HeaderRec, *SFNT_Header;$/;"	t	typeref:struct:SFNT_HeaderRec_
SFNT_HeaderRec	include/freetype/freetype/internal/tttypes.h	/^  } SFNT_HeaderRec, *SFNT_Header;$/;"	t	typeref:struct:SFNT_HeaderRec_
SFNT_HeaderRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  SFNT_HeaderRec_$/;"	s
SFNT_Interface	include/freetype/freetype/internal/sfnt.h	/^  } SFNT_Interface;$/;"	t	typeref:struct:SFNT_Interface_
SFNT_Interface_	include/freetype/freetype/internal/sfnt.h	/^  typedef struct  SFNT_Interface_$/;"	s
SFNT_Service	include/freetype/freetype/internal/sfnt.h	/^  typedef SFNT_Interface*   SFNT_Service;$/;"	t
SIZE_A	src/lua/lopcodes.h	40;"	d
SIZE_B	src/lua/lopcodes.h	38;"	d
SIZE_Bx	src/lua/lopcodes.h	39;"	d
SIZE_C	src/lua/lopcodes.h	37;"	d
SIZE_OP	src/lua/lopcodes.h	42;"	d
SKILL_H	src/core/skill.h	2;"	d
SOCKET_H	src/util/socket.h	2;"	d
SPCardPackage	src/package/sp-package.cpp	/^SPCardPackage::SPCardPackage()$/;"	f	class:SPCardPackage
SPCardPackage	src/package/sp-package.h	/^class SPCardPackage: public Package{$/;"	c
SPConvertSkill	src/core/skill.cpp	/^SPConvertSkill::SPConvertSkill(const QString &name, const QString &from, const QString &to)$/;"	f	class:SPConvertSkill
SPConvertSkill	src/core/skill.h	/^class SPConvertSkill: public GameStartSkill{$/;"	c
SPECIAL3V3_H	src/package/special3v3-package.h	2;"	d
SPECIALS	src/lua/lstrlib.c	183;"	d	file:
SPMoonSpear	src/package/sp-package.cpp	/^SPMoonSpear::SPMoonSpear(Suit suit, int number)$/;"	f	class:SPMoonSpear
SPMoonSpear	src/package/sp-package.h	/^class SPMoonSpear:public Weapon{$/;"	c
SPMoonSpearSkill	src/package/sp-package.cpp	/^    SPMoonSpearSkill():WeaponSkill("SPMoonSpear"){$/;"	f	class:SPMoonSpearSkill
SPMoonSpearSkill	src/package/sp-package.cpp	/^class SPMoonSpearSkill: public WeaponSkill{$/;"	c	file:
SPPACKAGE_H	src/package/sp-package.h	2;"	d
SPPackage	src/package/sp-package.cpp	/^SPPackage::SPPackage()$/;"	f	class:SPPackage
SPPackage	src/package/sp-package.h	/^class SPPackage: public Package{$/;"	c
SPRITE_H	src/ui/sprite.h	2;"	d
SP_VALID	src/breakpad/processor/cfi_frame_info_unittest.cc	/^    SP_VALID = 0x20,$/;"	e	enum:SimpleCFIWalkerFixture::Validity	file:
SParser	src/lua/ldo.c	/^struct SParser {  \/* data to `f_parser' *\/$/;"	s	file:
SS	src/lua/print.c	158;"	d	file:
STACK_INFO_FPO	src/breakpad/processor/windows_frame_info.h	/^    STACK_INFO_FPO = 0,$/;"	e	enum:google_breakpad::WindowsFrameInfo::StackInfoTypes
STACK_INFO_FRAME_DATA	src/breakpad/processor/windows_frame_info.h	/^    STACK_INFO_FRAME_DATA,$/;"	e	enum:google_breakpad::WindowsFrameInfo::StackInfoTypes
STACK_INFO_LAST	src/breakpad/processor/windows_frame_info.h	/^    STACK_INFO_LAST,  \/\/ must be the last sequentially-numbered item$/;"	e	enum:google_breakpad::WindowsFrameInfo::StackInfoTypes
STACK_INFO_STANDARD	src/breakpad/processor/windows_frame_info.h	/^    STACK_INFO_STANDARD,$/;"	e	enum:google_breakpad::WindowsFrameInfo::StackInfoTypes
STACK_INFO_TRAP	src/breakpad/processor/windows_frame_info.h	/^    STACK_INFO_TRAP,  \/\/ not used here$/;"	e	enum:google_breakpad::WindowsFrameInfo::StackInfoTypes
STACK_INFO_TSS	src/breakpad/processor/windows_frame_info.h	/^    STACK_INFO_TSS,   \/\/ not used here$/;"	e	enum:google_breakpad::WindowsFrameInfo::StackInfoTypes
STACK_INFO_UNKNOWN	src/breakpad/processor/windows_frame_info.h	/^    STACK_INFO_UNKNOWN = -1$/;"	e	enum:google_breakpad::WindowsFrameInfo::StackInfoTypes
STANDARDEQUIPS_H	src/package/standard-equips.h	2;"	d
STANDARDSKILLCARDS_H	src/package/standard-skillcards.h	2;"	d
STANDARD_H	src/package/standard.h	2;"	d
STARTSCENE_H	src/ui/startscene.h	2;"	d
STRINGISE	src/core/compiler-specific.h	6;"	d
STRINGISE_IMPL	src/core/compiler-specific.h	5;"	d
STRUCTS_H	src/core/structs.h	2;"	d
SWIGEXPORT	swig/sanguosha_wrap.cxx	115;"	d	file:
SWIGEXPORT	swig/sanguosha_wrap.cxx	117;"	d	file:
SWIGEXPORT	swig/sanguosha_wrap.cxx	121;"	d	file:
SWIGEXPORT	swig/sanguosha_wrap.cxx	123;"	d	file:
SWIGINLINE	swig/sanguosha_wrap.cxx	60;"	d	file:
SWIGINLINE	swig/sanguosha_wrap.cxx	62;"	d	file:
SWIGINTERN	swig/sanguosha_wrap.cxx	97;"	d	file:
SWIGINTERNINLINE	swig/sanguosha_wrap.cxx	102;"	d	file:
SWIGLUA	swig/sanguosha_wrap.cxx	11;"	d	file:
SWIGRUNTIME	swig/sanguosha_wrap.cxx	178;"	d	file:
SWIGRUNTIMEINLINE	swig/sanguosha_wrap.cxx	182;"	d	file:
SWIGSTDCALL	swig/sanguosha_wrap.cxx	131;"	d	file:
SWIGSTDCALL	swig/sanguosha_wrap.cxx	133;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	swig/sanguosha_wrap.cxx	47;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	swig/sanguosha_wrap.cxx	51;"	d	file:
SWIGTEMPLATEDISAMBIGUATOR	swig/sanguosha_wrap.cxx	53;"	d	file:
SWIGTYPE_p_AI	swig/sanguosha_wrap.cxx	1647;"	d	file:
SWIGTYPE_p_Armor	swig/sanguosha_wrap.cxx	1648;"	d	file:
SWIGTYPE_p_BasicCard	swig/sanguosha_wrap.cxx	1649;"	d	file:
SWIGTYPE_p_Card	swig/sanguosha_wrap.cxx	1650;"	d	file:
SWIGTYPE_p_CardEffectStruct	swig/sanguosha_wrap.cxx	1651;"	d	file:
SWIGTYPE_p_CardItem	swig/sanguosha_wrap.cxx	1652;"	d	file:
SWIGTYPE_p_CardMoveReason	swig/sanguosha_wrap.cxx	1653;"	d	file:
SWIGTYPE_p_CardPattern	swig/sanguosha_wrap.cxx	1654;"	d	file:
SWIGTYPE_p_CardUseStruct	swig/sanguosha_wrap.cxx	1655;"	d	file:
SWIGTYPE_p_Card__Suit	swig/sanguosha_wrap.cxx	1656;"	d	file:
SWIGTYPE_p_CardsMoveOneTimeStruct	swig/sanguosha_wrap.cxx	1657;"	d	file:
SWIGTYPE_p_CardsMoveStruct	swig/sanguosha_wrap.cxx	1658;"	d	file:
SWIGTYPE_p_Client	swig/sanguosha_wrap.cxx	1659;"	d	file:
SWIGTYPE_p_ClientPlayer	swig/sanguosha_wrap.cxx	1660;"	d	file:
SWIGTYPE_p_ClientSocket	swig/sanguosha_wrap.cxx	1661;"	d	file:
SWIGTYPE_p_DamageStruct	swig/sanguosha_wrap.cxx	1662;"	d	file:
SWIGTYPE_p_DefensiveHorse	swig/sanguosha_wrap.cxx	1663;"	d	file:
SWIGTYPE_p_DelayedTrick	swig/sanguosha_wrap.cxx	1664;"	d	file:
SWIGTYPE_p_DistanceSkill	swig/sanguosha_wrap.cxx	1665;"	d	file:
SWIGTYPE_p_DummyCard	swig/sanguosha_wrap.cxx	1666;"	d	file:
SWIGTYPE_p_DyingStruct	swig/sanguosha_wrap.cxx	1667;"	d	file:
SWIGTYPE_p_Engine	swig/sanguosha_wrap.cxx	1668;"	d	file:
SWIGTYPE_p_EquipCard	swig/sanguosha_wrap.cxx	1669;"	d	file:
SWIGTYPE_p_FilterSkill	swig/sanguosha_wrap.cxx	1670;"	d	file:
SWIGTYPE_p_GameStartSkill	swig/sanguosha_wrap.cxx	1671;"	d	file:
SWIGTYPE_p_General	swig/sanguosha_wrap.cxx	1672;"	d	file:
SWIGTYPE_p_Horse	swig/sanguosha_wrap.cxx	1673;"	d	file:
SWIGTYPE_p_JudgeStruct	swig/sanguosha_wrap.cxx	1674;"	d	file:
SWIGTYPE_p_LogMessage	swig/sanguosha_wrap.cxx	1675;"	d	file:
SWIGTYPE_p_LuaAI	swig/sanguosha_wrap.cxx	1676;"	d	file:
SWIGTYPE_p_LuaDistanceSkill	swig/sanguosha_wrap.cxx	1677;"	d	file:
SWIGTYPE_p_LuaFilterSkill	swig/sanguosha_wrap.cxx	1678;"	d	file:
SWIGTYPE_p_LuaFunction	swig/sanguosha_wrap.cxx	1679;"	d	file:
SWIGTYPE_p_LuaMaxCardsSkill	swig/sanguosha_wrap.cxx	1680;"	d	file:
SWIGTYPE_p_LuaProhibitSkill	swig/sanguosha_wrap.cxx	1681;"	d	file:
SWIGTYPE_p_LuaSkillCard	swig/sanguosha_wrap.cxx	1682;"	d	file:
SWIGTYPE_p_LuaTriggerSkill	swig/sanguosha_wrap.cxx	1683;"	d	file:
SWIGTYPE_p_LuaViewAsSkill	swig/sanguosha_wrap.cxx	1684;"	d	file:
SWIGTYPE_p_MaxCardsSkill	swig/sanguosha_wrap.cxx	1685;"	d	file:
SWIGTYPE_p_OffensiveHorse	swig/sanguosha_wrap.cxx	1686;"	d	file:
SWIGTYPE_p_OneCardViewAsSkill	swig/sanguosha_wrap.cxx	1687;"	d	file:
SWIGTYPE_p_Package	swig/sanguosha_wrap.cxx	1688;"	d	file:
SWIGTYPE_p_PhaseChangeStruct	swig/sanguosha_wrap.cxx	1689;"	d	file:
SWIGTYPE_p_PindianStruct	swig/sanguosha_wrap.cxx	1690;"	d	file:
SWIGTYPE_p_Player	swig/sanguosha_wrap.cxx	1691;"	d	file:
SWIGTYPE_p_ProhibitSkill	swig/sanguosha_wrap.cxx	1692;"	d	file:
SWIGTYPE_p_QColor	swig/sanguosha_wrap.cxx	1693;"	d	file:
SWIGTYPE_p_QDialog	swig/sanguosha_wrap.cxx	1694;"	d	file:
SWIGTYPE_p_QListT_CardItem_p_t	swig/sanguosha_wrap.cxx	1695;"	d	file:
SWIGTYPE_p_QListT_Card_const_p_t	swig/sanguosha_wrap.cxx	1696;"	d	file:
SWIGTYPE_p_QListT_CardsMoveStruct_t	swig/sanguosha_wrap.cxx	1697;"	d	file:
SWIGTYPE_p_QListT_DelayedTrick_const_p_t	swig/sanguosha_wrap.cxx	1698;"	d	file:
SWIGTYPE_p_QListT_DistanceSkill_const_p_t	swig/sanguosha_wrap.cxx	1699;"	d	file:
SWIGTYPE_p_QListT_Player__Phase_t	swig/sanguosha_wrap.cxx	1700;"	d	file:
SWIGTYPE_p_QListT_Player__Place_t	swig/sanguosha_wrap.cxx	1701;"	d	file:
SWIGTYPE_p_QListT_Player_const_p_t	swig/sanguosha_wrap.cxx	1702;"	d	file:
SWIGTYPE_p_QListT_ServerPlayer_p_t	swig/sanguosha_wrap.cxx	1703;"	d	file:
SWIGTYPE_p_QListT_Skill_const_p_t	swig/sanguosha_wrap.cxx	1704;"	d	file:
SWIGTYPE_p_QListT_TriggerEvent_t	swig/sanguosha_wrap.cxx	1705;"	d	file:
SWIGTYPE_p_QListT_int_t	swig/sanguosha_wrap.cxx	1706;"	d	file:
SWIGTYPE_p_QMapT_QString_QString_t	swig/sanguosha_wrap.cxx	1707;"	d	file:
SWIGTYPE_p_QObject	swig/sanguosha_wrap.cxx	1708;"	d	file:
SWIGTYPE_p_QRegExp	swig/sanguosha_wrap.cxx	1709;"	d	file:
SWIGTYPE_p_QSetT_QString_t	swig/sanguosha_wrap.cxx	1710;"	d	file:
SWIGTYPE_p_QSetT_Skill_const_p_t	swig/sanguosha_wrap.cxx	1711;"	d	file:
SWIGTYPE_p_QSetT_TriggerSkill_const_p_t	swig/sanguosha_wrap.cxx	1712;"	d	file:
SWIGTYPE_p_QString	swig/sanguosha_wrap.cxx	1713;"	d	file:
SWIGTYPE_p_QStringList	swig/sanguosha_wrap.cxx	1714;"	d	file:
SWIGTYPE_p_QThread	swig/sanguosha_wrap.cxx	1715;"	d	file:
SWIGTYPE_p_QVariant	swig/sanguosha_wrap.cxx	1716;"	d	file:
SWIGTYPE_p_RecoverStruct	swig/sanguosha_wrap.cxx	1717;"	d	file:
SWIGTYPE_p_Room	swig/sanguosha_wrap.cxx	1718;"	d	file:
SWIGTYPE_p_RoomThread	swig/sanguosha_wrap.cxx	1719;"	d	file:
SWIGTYPE_p_SPConvertSkill	swig/sanguosha_wrap.cxx	1720;"	d	file:
SWIGTYPE_p_Scenario	swig/sanguosha_wrap.cxx	1721;"	d	file:
SWIGTYPE_p_ServerPlayer	swig/sanguosha_wrap.cxx	1722;"	d	file:
SWIGTYPE_p_Skill	swig/sanguosha_wrap.cxx	1723;"	d	file:
SWIGTYPE_p_SkillCard	swig/sanguosha_wrap.cxx	1724;"	d	file:
SWIGTYPE_p_Slash	swig/sanguosha_wrap.cxx	1725;"	d	file:
SWIGTYPE_p_SlashEffectStruct	swig/sanguosha_wrap.cxx	1726;"	d	file:
SWIGTYPE_p_TrickCard	swig/sanguosha_wrap.cxx	1727;"	d	file:
SWIGTYPE_p_TriggerSkill	swig/sanguosha_wrap.cxx	1728;"	d	file:
SWIGTYPE_p_TrustAI	swig/sanguosha_wrap.cxx	1729;"	d	file:
SWIGTYPE_p_ViewAsSkill	swig/sanguosha_wrap.cxx	1730;"	d	file:
SWIGTYPE_p_Weapon	swig/sanguosha_wrap.cxx	1731;"	d	file:
SWIGTYPE_p_WrappedCard	swig/sanguosha_wrap.cxx	1732;"	d	file:
SWIGTYPE_p_bool	swig/sanguosha_wrap.cxx	1733;"	d	file:
SWIGTYPE_p_lua_State	swig/sanguosha_wrap.cxx	1734;"	d	file:
SWIGUNUSED	swig/sanguosha_wrap.cxx	70;"	d	file:
SWIGUNUSED	swig/sanguosha_wrap.cxx	72;"	d	file:
SWIGUNUSED	swig/sanguosha_wrap.cxx	75;"	d	file:
SWIGUNUSED	swig/sanguosha_wrap.cxx	77;"	d	file:
SWIGUNUSEDPARM	swig/sanguosha_wrap.cxx	89;"	d	file:
SWIGUNUSEDPARM	swig/sanguosha_wrap.cxx	91;"	d	file:
SWIG_AddCast	swig/sanguosha_wrap.cxx	/^SWIGINTERNINLINE int SWIG_AddCast(int r) { $/;"	f
SWIG_AddCast	swig/sanguosha_wrap.cxx	318;"	d	file:
SWIG_AddNewMask	swig/sanguosha_wrap.cxx	294;"	d	file:
SWIG_AddTmpMask	swig/sanguosha_wrap.cxx	297;"	d	file:
SWIG_ArgError	swig/sanguosha_wrap.cxx	280;"	d	file:
SWIG_BADOBJ	swig/sanguosha_wrap.cxx	289;"	d	file:
SWIG_BUFFER_SIZE	swig/sanguosha_wrap.cxx	187;"	d	file:
SWIG_CASTRANKLIMIT	swig/sanguosha_wrap.cxx	283;"	d	file:
SWIG_CASTRANKMASK	swig/sanguosha_wrap.cxx	309;"	d	file:
SWIG_CAST_NEW_MEMORY	swig/sanguosha_wrap.cxx	192;"	d	file:
SWIG_CastRank	swig/sanguosha_wrap.cxx	310;"	d	file:
SWIG_CheckState	swig/sanguosha_wrap.cxx	/^SWIGINTERNINLINE int SWIG_CheckState(int r) { $/;"	f
SWIG_CheckState	swig/sanguosha_wrap.cxx	319;"	d	file:
SWIG_ConvertMember	swig/sanguosha_wrap.cxx	879;"	d	file:
SWIG_ConvertPtr	swig/sanguosha_wrap.cxx	876;"	d	file:
SWIG_DOSTRING_FAIL	swig/sanguosha_wrap.cxx	1614;"	d	file:
SWIG_DelNewMask	swig/sanguosha_wrap.cxx	295;"	d	file:
SWIG_DelTmpMask	swig/sanguosha_wrap.cxx	298;"	d	file:
SWIG_ERROR	swig/sanguosha_wrap.cxx	278;"	d	file:
SWIG_EXPAND_AND_QUOTE_STRING	swig/sanguosha_wrap.cxx	162;"	d	file:
SWIG_GetModule	swig/sanguosha_wrap.cxx	883;"	d	file:
SWIG_InitializeModule	swig/sanguosha_wrap.cxx	/^SWIG_InitializeModule(void *clientdata) {$/;"	f
SWIG_IsNewObj	swig/sanguosha_wrap.cxx	296;"	d	file:
SWIG_IsOK	swig/sanguosha_wrap.cxx	279;"	d	file:
SWIG_IsTmpObj	swig/sanguosha_wrap.cxx	299;"	d	file:
SWIG_LUACODE	swig/sanguosha_wrap.cxx	/^const char* SWIG_LUACODE=$/;"	v
SWIG_LUACODE	swig/sanguosha_wrap.cxx	1746;"	d	file:
SWIG_LUA_BINARY	swig/sanguosha_wrap.cxx	813;"	d	file:
SWIG_LUA_CHAR	swig/sanguosha_wrap.cxx	814;"	d	file:
SWIG_LUA_CONSTTAB_CHAR	swig/sanguosha_wrap.cxx	765;"	d	file:
SWIG_LUA_CONSTTAB_CHAR	swig/sanguosha_wrap.cxx	770;"	d	file:
SWIG_LUA_CONSTTAB_FLOAT	swig/sanguosha_wrap.cxx	763;"	d	file:
SWIG_LUA_CONSTTAB_FLOAT	swig/sanguosha_wrap.cxx	768;"	d	file:
SWIG_LUA_CONSTTAB_INT	swig/sanguosha_wrap.cxx	762;"	d	file:
SWIG_LUA_CONSTTAB_INT	swig/sanguosha_wrap.cxx	767;"	d	file:
SWIG_LUA_CONSTTAB_STRING	swig/sanguosha_wrap.cxx	764;"	d	file:
SWIG_LUA_CONSTTAB_STRING	swig/sanguosha_wrap.cxx	769;"	d	file:
SWIG_LUA_FLAVOR_ELUA	swig/sanguosha_wrap.cxx	754;"	d	file:
SWIG_LUA_FLAVOR_ELUAC	swig/sanguosha_wrap.cxx	755;"	d	file:
SWIG_LUA_FLAVOR_LUA	swig/sanguosha_wrap.cxx	753;"	d	file:
SWIG_LUA_FLOAT	swig/sanguosha_wrap.cxx	810;"	d	file:
SWIG_LUA_INT	swig/sanguosha_wrap.cxx	809;"	d	file:
SWIG_LUA_MODULE_GLOBAL	swig/sanguosha_wrap.cxx	13;"	d	file:
SWIG_LUA_POINTER	swig/sanguosha_wrap.cxx	812;"	d	file:
SWIG_LUA_STRING	swig/sanguosha_wrap.cxx	811;"	d	file:
SWIG_LUA_TARGET	swig/sanguosha_wrap.cxx	12;"	d	file:
SWIG_Lua_ConvertPacked	swig/sanguosha_wrap.cxx	/^SWIGRUNTIME int  SWIG_Lua_ConvertPacked(lua_State* L,int index,void* ptr,size_t size,swig_type_info *type)$/;"	f
SWIG_Lua_ConvertPtr	swig/sanguosha_wrap.cxx	/^SWIGRUNTIME int  SWIG_Lua_ConvertPtr(lua_State* L,int index,void** ptr,swig_type_info *type,int flags)$/;"	f
SWIG_Lua_GetModule	swig/sanguosha_wrap.cxx	/^SWIG_Lua_GetModule(lua_State* L) {$/;"	f
SWIG_Lua_InstallConstants	swig/sanguosha_wrap.cxx	/^SWIG_Lua_InstallConstants(lua_State* L, swig_lua_const_info constants[]) {$/;"	f
SWIG_Lua_MustGetPtr	swig/sanguosha_wrap.cxx	/^SWIGRUNTIME void* SWIG_Lua_MustGetPtr(lua_State* L,int index,swig_type_info *type,int flags,$/;"	f
SWIG_Lua_NewPackedObj	swig/sanguosha_wrap.cxx	/^SWIGRUNTIME void SWIG_Lua_NewPackedObj(lua_State* L,void* ptr,size_t size,swig_type_info *type)$/;"	f
SWIG_Lua_NewPointerObj	swig/sanguosha_wrap.cxx	/^SWIGRUNTIME void SWIG_Lua_NewPointerObj(lua_State* L,void* ptr,swig_type_info *type, int own)$/;"	f
SWIG_Lua_SetModule	swig/sanguosha_wrap.cxx	/^SWIG_Lua_SetModule(lua_State* L, swig_module_info *module) {$/;"	f
SWIG_Lua_add_class_details	swig/sanguosha_wrap.cxx	/^SWIGINTERN void  SWIG_Lua_add_class_details(lua_State* L,swig_lua_class* clss)$/;"	f
SWIG_Lua_add_class_variable	swig/sanguosha_wrap.cxx	/^SWIGINTERN void  SWIG_Lua_add_class_variable(lua_State* L,const char* name,lua_CFunction getFn,lua_CFunction setFn)$/;"	f
SWIG_Lua_add_function	swig/sanguosha_wrap.cxx	908;"	d	file:
SWIG_Lua_class_destruct	swig/sanguosha_wrap.cxx	/^SWIGINTERN int  SWIG_Lua_class_destruct(lua_State* L)$/;"	f
SWIG_Lua_class_disown	swig/sanguosha_wrap.cxx	/^SWIGINTERN int  SWIG_Lua_class_disown(lua_State* L)$/;"	f
SWIG_Lua_class_get	swig/sanguosha_wrap.cxx	/^SWIGINTERN int  SWIG_Lua_class_get(lua_State* L)$/;"	f
SWIG_Lua_class_register	swig/sanguosha_wrap.cxx	/^SWIGINTERN void  SWIG_Lua_class_register(lua_State* L,swig_lua_class* clss)$/;"	f
SWIG_Lua_class_set	swig/sanguosha_wrap.cxx	/^SWIGINTERN int  SWIG_Lua_class_set(lua_State* L)$/;"	f
SWIG_Lua_class_tostring	swig/sanguosha_wrap.cxx	/^SWIGINTERN int  SWIG_Lua_class_tostring(lua_State* L)$/;"	f
SWIG_Lua_dostring	swig/sanguosha_wrap.cxx	/^SWIG_Lua_dostring(lua_State *L, const char* str) {$/;"	f
SWIG_Lua_equal	swig/sanguosha_wrap.cxx	/^SWIGRUNTIME int SWIG_Lua_equal(lua_State* L)$/;"	f
SWIG_Lua_get_class_metatable	swig/sanguosha_wrap.cxx	/^SWIGINTERN void  SWIG_Lua_get_class_metatable(lua_State* L,const char* cname)$/;"	f
SWIG_Lua_get_class_registry	swig/sanguosha_wrap.cxx	/^SWIGINTERN void  SWIG_Lua_get_class_registry(lua_State* L)$/;"	f
SWIG_Lua_get_table	swig/sanguosha_wrap.cxx	905;"	d	file:
SWIG_Lua_init_base_class	swig/sanguosha_wrap.cxx	/^SWIGINTERN void SWIG_Lua_init_base_class(lua_State* L,swig_lua_class* clss)$/;"	f
SWIG_Lua_module_add_function	swig/sanguosha_wrap.cxx	/^SWIGINTERN void  SWIG_Lua_module_add_function(lua_State* L,const char* name,lua_CFunction fn)$/;"	f
SWIG_Lua_module_add_variable	swig/sanguosha_wrap.cxx	/^SWIGINTERN void SWIG_Lua_module_add_variable(lua_State* L,const char* name,lua_CFunction getFn,lua_CFunction setFn)$/;"	f
SWIG_Lua_module_begin	swig/sanguosha_wrap.cxx	/^SWIGINTERN void  SWIG_Lua_module_begin(lua_State* L,const char* name)$/;"	f
SWIG_Lua_module_end	swig/sanguosha_wrap.cxx	/^SWIGINTERN void  SWIG_Lua_module_end(lua_State* L)$/;"	f
SWIG_Lua_module_get	swig/sanguosha_wrap.cxx	/^SWIGINTERN int SWIG_Lua_module_get(lua_State* L)$/;"	f
SWIG_Lua_module_set	swig/sanguosha_wrap.cxx	/^SWIGINTERN int SWIG_Lua_module_set(lua_State* L)$/;"	f
SWIG_Lua_set_immutable	swig/sanguosha_wrap.cxx	/^SWIGINTERN int SWIG_Lua_set_immutable(lua_State* L)$/;"	f
SWIG_Lua_type	swig/sanguosha_wrap.cxx	/^SWIGRUNTIME int SWIG_Lua_type(lua_State* L)$/;"	f
SWIG_Lua_typename	swig/sanguosha_wrap.cxx	/^SWIGRUNTIME const char *SWIG_Lua_typename(lua_State *L, int tp)$/;"	f
SWIG_MAXCASTRANK	swig/sanguosha_wrap.cxx	307;"	d	file:
SWIG_MODULE_CLIENTDATA_TYPE	swig/sanguosha_wrap.cxx	885;"	d	file:
SWIG_MangledTypeQuery	swig/sanguosha_wrap.cxx	1738;"	d	file:
SWIG_MangledTypeQueryModule	swig/sanguosha_wrap.cxx	/^SWIG_MangledTypeQueryModule(swig_module_info *start, $/;"	f
SWIG_MustGetPtr	swig/sanguosha_wrap.cxx	877;"	d	file:
SWIG_NEWOBJ	swig/sanguosha_wrap.cxx	291;"	d	file:
SWIG_NEWOBJMASK	swig/sanguosha_wrap.cxx	285;"	d	file:
SWIG_NewMemberObj	swig/sanguosha_wrap.cxx	880;"	d	file:
SWIG_NewPointerObj	swig/sanguosha_wrap.cxx	875;"	d	file:
SWIG_OK	swig/sanguosha_wrap.cxx	277;"	d	file:
SWIG_OLDOBJ	swig/sanguosha_wrap.cxx	290;"	d	file:
SWIG_POINTER_DISOWN	swig/sanguosha_wrap.cxx	191;"	d	file:
SWIG_POINTER_OWN	swig/sanguosha_wrap.cxx	195;"	d	file:
SWIG_PackData	swig/sanguosha_wrap.cxx	/^SWIG_PackData(char *c, void *ptr, size_t sz) {$/;"	f
SWIG_PackDataName	swig/sanguosha_wrap.cxx	/^SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {$/;"	f
SWIG_PackVoidPtr	swig/sanguosha_wrap.cxx	/^SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {$/;"	f
SWIG_PropagateClientData	swig/sanguosha_wrap.cxx	/^SWIG_PropagateClientData(void) {$/;"	f
SWIG_QUOTE_STRING	swig/sanguosha_wrap.cxx	161;"	d	file:
SWIG_RUNTIME_VERSION	swig/sanguosha_wrap.cxx	157;"	d	file:
SWIG_SetModule	swig/sanguosha_wrap.cxx	884;"	d	file:
SWIG_TMPOBJ	swig/sanguosha_wrap.cxx	292;"	d	file:
SWIG_TMPOBJMASK	swig/sanguosha_wrap.cxx	287;"	d	file:
SWIG_TYPE_TABLE_NAME	swig/sanguosha_wrap.cxx	163;"	d	file:
SWIG_TYPE_TABLE_NAME	swig/sanguosha_wrap.cxx	165;"	d	file:
SWIG_TypeCast	swig/sanguosha_wrap.cxx	/^SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {$/;"	f
SWIG_TypeCheck	swig/sanguosha_wrap.cxx	/^SWIG_TypeCheck(const char *c, swig_type_info *ty) {$/;"	f
SWIG_TypeCheckStruct	swig/sanguosha_wrap.cxx	/^SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {$/;"	f
SWIG_TypeClientData	swig/sanguosha_wrap.cxx	/^SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypeCompare	swig/sanguosha_wrap.cxx	/^SWIG_TypeCompare(const char *nb, const char *tb) {$/;"	f
SWIG_TypeDynamicCast	swig/sanguosha_wrap.cxx	/^SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {$/;"	f
SWIG_TypeEquiv	swig/sanguosha_wrap.cxx	/^SWIG_TypeEquiv(const char *nb, const char *tb) {$/;"	f
SWIG_TypeName	swig/sanguosha_wrap.cxx	/^SWIG_TypeName(const swig_type_info *ty) {$/;"	f
SWIG_TypeNameComp	swig/sanguosha_wrap.cxx	/^SWIG_TypeNameComp(const char *f1, const char *l1,$/;"	f
SWIG_TypeNewClientData	swig/sanguosha_wrap.cxx	/^SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {$/;"	f
SWIG_TypePrettyName	swig/sanguosha_wrap.cxx	/^SWIG_TypePrettyName(const swig_type_info *type) {$/;"	f
SWIG_TypeQuery	swig/sanguosha_wrap.cxx	1737;"	d	file:
SWIG_TypeQueryModule	swig/sanguosha_wrap.cxx	/^SWIG_TypeQueryModule(swig_module_info *start, $/;"	f
SWIG_TypeRank	swig/sanguosha_wrap.cxx	304;"	d	file:
SWIG_UnpackData	swig/sanguosha_wrap.cxx	/^SWIG_UnpackData(const char *c, void *ptr, size_t sz) {$/;"	f
SWIG_UnpackDataName	swig/sanguosha_wrap.cxx	/^SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {$/;"	f
SWIG_UnpackVoidPtr	swig/sanguosha_wrap.cxx	/^SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {$/;"	f
SWIG_check_num_args	swig/sanguosha_wrap.cxx	899;"	d	file:
SWIG_contract_assert	swig/sanguosha_wrap.cxx	888;"	d	file:
SWIG_fail	swig/sanguosha_wrap.cxx	892;"	d	file:
SWIG_fail_arg	swig/sanguosha_wrap.cxx	893;"	d	file:
SWIG_fail_ptr	swig/sanguosha_wrap.cxx	897;"	d	file:
SWIG_init	swig/sanguosha_wrap.cxx	/^LUALIB_API int SWIG_init(lua_State* L)$/;"	f
SWIG_init	swig/sanguosha_wrap.cxx	1743;"	d	file:
SWIG_init_user	swig/sanguosha_wrap.cxx	/^void SWIG_init_user(lua_State* L)$/;"	f
SWIG_init_user	swig/sanguosha_wrap.cxx	1744;"	d	file:
SWIG_isptrtype	swig/sanguosha_wrap.cxx	914;"	d	file:
SWIG_lua_isnilstring	swig/sanguosha_wrap.cxx	/^SWIGINTERN int SWIG_lua_isnilstring(lua_State *L, int idx) {$/;"	f
SWIG_name	swig/sanguosha_wrap.cxx	1742;"	d	file:
S_CAMP_COOL	src/core/protocol.h	/^        S_CAMP_COOL = 1$/;"	e	enum:QSanProtocol::Game3v3Camp
S_CAMP_WARM	src/core/protocol.h	/^        S_CAMP_WARM = 0,$/;"	e	enum:QSanProtocol::Game3v3Camp
S_CHEAT_CHANGE_GENERAL	src/core/protocol.h	/^        S_CHEAT_CHANGE_GENERAL,$/;"	e	enum:QSanProtocol::CheatCode
S_CHEAT_FIRE_DAMAGE	src/core/protocol.h	/^        S_CHEAT_FIRE_DAMAGE,$/;"	e	enum:QSanProtocol::CheatCategory
S_CHEAT_GET_ONE_CARD	src/core/protocol.h	/^        S_CHEAT_GET_ONE_CARD,$/;"	e	enum:QSanProtocol::CheatCode
S_CHEAT_HP_LOSE	src/core/protocol.h	/^        S_CHEAT_HP_LOSE,$/;"	e	enum:QSanProtocol::CheatCategory
S_CHEAT_HP_RECOVER	src/core/protocol.h	/^        S_CHEAT_HP_RECOVER,$/;"	e	enum:QSanProtocol::CheatCategory
S_CHEAT_KILL_PLAYER	src/core/protocol.h	/^        S_CHEAT_KILL_PLAYER,$/;"	e	enum:QSanProtocol::CheatCode
S_CHEAT_MAKE_DAMAGE	src/core/protocol.h	/^        S_CHEAT_MAKE_DAMAGE,$/;"	e	enum:QSanProtocol::CheatCode
S_CHEAT_MAX_HP_LOSE	src/core/protocol.h	/^        S_CHEAT_MAX_HP_LOSE,$/;"	e	enum:QSanProtocol::CheatCategory
S_CHEAT_MAX_HP_RESET	src/core/protocol.h	/^        S_CHEAT_MAX_HP_RESET$/;"	e	enum:QSanProtocol::CheatCategory
S_CHEAT_NORMAL_DAMAGE	src/core/protocol.h	/^        S_CHEAT_NORMAL_DAMAGE,$/;"	e	enum:QSanProtocol::CheatCategory
S_CHEAT_REVIVE_PLAYER	src/core/protocol.h	/^        S_CHEAT_REVIVE_PLAYER,$/;"	e	enum:QSanProtocol::CheatCode
S_CHEAT_RUN_SCRIPT	src/core/protocol.h	/^        S_CHEAT_RUN_SCRIPT$/;"	e	enum:QSanProtocol::CheatCode
S_CHEAT_THUNDER_DAMAGE	src/core/protocol.h	/^        S_CHEAT_THUNDER_DAMAGE,$/;"	e	enum:QSanProtocol::CheatCategory
S_CHOOSE_GENERAL_TIMEOUT	src/core/settings.cpp	/^const int Settings::S_CHOOSE_GENERAL_TIMEOUT = 15;$/;"	m	class:Settings	file:
S_CHOOSE_GENERAL_TIMEOUT	src/core/settings.h	/^    static const int S_CHOOSE_GENERAL_TIMEOUT;$/;"	m	class:Settings
S_CLEARANCE_DELAY_BUCKETS	src/ui/TablePile.h	/^    static const int S_CLEARANCE_DELAY_BUCKETS = 3;$/;"	m	class:TablePile
S_CLEARANCE_UPDATE_INTERVAL_MSEC	src/ui/TablePile.h	/^    static const int S_CLEARANCE_UPDATE_INTERVAL_MSEC = 1000;$/;"	m	class:TablePile
S_CLIENT_INSTANCE	src/core/protocol.h	/^        S_CLIENT_INSTANCE$/;"	e	enum:QSanProtocol::ProcessInstanceType
S_CLIENT_NOTIFICATION	src/core/protocol.h	/^        S_CLIENT_NOTIFICATION$/;"	e	enum:QSanProtocol::PacketType
S_CLIENT_REPLY	src/core/protocol.h	/^        S_CLIENT_REPLY,$/;"	e	enum:QSanProtocol::PacketType
S_CLIENT_REQUEST	src/core/protocol.h	/^        S_CLIENT_REQUEST,$/;"	e	enum:QSanProtocol::PacketType
S_COMMAND_AMAZING_GRACE	src/core/protocol.h	/^        S_COMMAND_AMAZING_GRACE,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_ASK_PEACH	src/core/protocol.h	/^        S_COMMAND_ASK_PEACH,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_CHEAT	src/core/protocol.h	/^        S_COMMAND_CHEAT,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_CHOOSE_CARD	src/core/protocol.h	/^        S_COMMAND_CHOOSE_CARD,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_CHOOSE_DIRECTION	src/core/protocol.h	/^        S_COMMAND_CHOOSE_DIRECTION,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_CHOOSE_GENERAL	src/core/protocol.h	/^        S_COMMAND_CHOOSE_GENERAL,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_CHOOSE_KINGDOM	src/core/protocol.h	/^        S_COMMAND_CHOOSE_KINGDOM,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_CHOOSE_ORDER	src/core/protocol.h	/^        S_COMMAND_CHOOSE_ORDER,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_CHOOSE_PLAYER	src/core/protocol.h	/^        S_COMMAND_CHOOSE_PLAYER,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_CHOOSE_ROLE	src/core/protocol.h	/^        S_COMMAND_CHOOSE_ROLE,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_CHOOSE_ROLE_3V3	src/core/protocol.h	/^        S_COMMAND_CHOOSE_ROLE_3V3,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_CHOOSE_SUIT	src/core/protocol.h	/^        S_COMMAND_CHOOSE_SUIT,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_CLAIM_GENERAL	src/core/protocol.h	/^        S_COMMAND_CLAIM_GENERAL,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_CLAIM_SKILL_ADD	src/core/protocol.h	/^        S_COMMAND_CLAIM_SKILL_ADD,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_CLAIM_SKILL_REMOVE	src/core/protocol.h	/^        S_COMMAND_CLAIM_SKILL_REMOVE,        $/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_DISCARD_CARD	src/core/protocol.h	/^        S_COMMAND_DISCARD_CARD,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_EXCHANGE_CARD	src/core/protocol.h	/^        S_COMMAND_EXCHANGE_CARD,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_GAME_OVER	src/core/protocol.h	/^        S_COMMAND_GAME_OVER, $/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_GET_CARD	src/core/protocol.h	/^        S_COMMAND_GET_CARD,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_INVOKE_SKILL	src/core/protocol.h	/^        S_COMMAND_INVOKE_SKILL,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_LOG_EVENT	src/core/protocol.h	/^        S_COMMAND_LOG_EVENT,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_LOG_SKILL	src/core/protocol.h	/^        S_COMMAND_LOG_SKILL,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_LOSE_CARD	src/core/protocol.h	/^        S_COMMAND_LOSE_CARD,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_MOVE_CARD	src/core/protocol.h	/^        S_COMMAND_MOVE_CARD,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_MOVE_FOCUS	src/core/protocol.h	/^        S_COMMAND_MOVE_FOCUS,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_MULTIPLE_CHOICE	src/core/protocol.h	/^        S_COMMAND_MULTIPLE_CHOICE,        $/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_NULLIFICATION	src/core/protocol.h	/^        S_COMMAND_NULLIFICATION,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_PINDIAN	src/core/protocol.h	/^        S_COMMAND_PINDIAN,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_PLAY_CARD	src/core/protocol.h	/^        S_COMMAND_PLAY_CARD,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_RESPONSE_CARD	src/core/protocol.h	/^        S_COMMAND_RESPONSE_CARD,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_SET_HP	src/core/protocol.h	/^        S_COMMAND_SET_HP,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_SET_MAXHP	src/core/protocol.h	/^        S_COMMAND_SET_MAXHP,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_SET_PROPERTY	src/core/protocol.h	/^        S_COMMAND_SET_PROPERTY,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_SHOW_ALL_CARDS	src/core/protocol.h	/^        S_COMMAND_SHOW_ALL_CARDS,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_SHOW_CARD	src/core/protocol.h	/^        S_COMMAND_SHOW_CARD,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_SKILL_GONGXIN	src/core/protocol.h	/^        S_COMMAND_SKILL_GONGXIN,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_SKILL_GUANXING	src/core/protocol.h	/^        S_COMMAND_SKILL_GUANXING,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_SKILL_YIJI	src/core/protocol.h	/^        S_COMMAND_SKILL_YIJI,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_SURRENDER	src/core/protocol.h	/^        S_COMMAND_SURRENDER,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_UNKNOWN	src/core/protocol.h	/^        S_COMMAND_UNKNOWN,$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_UPDATE_CARD	src/core/protocol.h	/^       S_COMMAND_UPDATE_CARD$/;"	e	enum:QSanProtocol::CommandType
S_COMMAND_USE_CARD	src/core/protocol.h	/^        S_COMMAND_USE_CARD,        $/;"	e	enum:QSanProtocol::CommandType
S_COUNTDOWN_MAGIC	src/core/protocol.cpp	/^const string QSanProtocol::Countdown::S_COUNTDOWN_MAGIC = "MG_COUNTDOWN";$/;"	m	class:QSanProtocol::Countdown	file:
S_COUNTDOWN_MAGIC	src/core/protocol.h	/^        static const std::string S_COUNTDOWN_MAGIC;$/;"	m	class:QSanProtocol::Countdown
S_COUNTDOWN_NO_LIMIT	src/core/protocol.h	/^            S_COUNTDOWN_NO_LIMIT,$/;"	e	enum:QSanProtocol::Countdown::CountdownType
S_COUNTDOWN_USE_DEFAULT	src/core/protocol.h	/^            S_COUNTDOWN_USE_DEFAULT           $/;"	e	enum:QSanProtocol::Countdown::CountdownType
S_COUNTDOWN_USE_SPECIFIED	src/core/protocol.h	/^            S_COUNTDOWN_USE_SPECIFIED,$/;"	e	enum:QSanProtocol::Countdown::CountdownType
S_DEFAULT_INTERVAL	src/ui/pixmapanimation.cpp	/^const int PixmapAnimation::S_DEFAULT_INTERVAL = 50;$/;"	m	class:PixmapAnimation	file:
S_DEFAULT_INTERVAL	src/ui/pixmapanimation.h	/^    static const int S_DEFAULT_INTERVAL;$/;"	m	class:PixmapAnimation
S_FRAME_NO_FRAME	src/ui/photo.h	/^        S_FRAME_NO_FRAME$/;"	e	enum:Photo::FrameType
S_FRAME_PLAYING	src/ui/photo.h	/^        S_FRAME_PLAYING,$/;"	e	enum:Photo::FrameType
S_FRAME_RESPONSING	src/ui/photo.h	/^        S_FRAME_RESPONSING,$/;"	e	enum:Photo::FrameType
S_FRAME_SOS	src/ui/photo.h	/^        S_FRAME_SOS,$/;"	e	enum:Photo::FrameType
S_GAME_EVENT_ACQUIRE_SKILL	src/core/protocol.h	/^        S_GAME_EVENT_ACQUIRE_SKILL,$/;"	e	enum:QSanProtocol::GameEventType
S_GAME_EVENT_ADD_SKILL	src/core/protocol.h	/^        S_GAME_EVENT_ADD_SKILL,$/;"	e	enum:QSanProtocol::GameEventType
S_GAME_EVENT_DETACH_SKILL	src/core/protocol.h	/^        S_GAME_EVENT_DETACH_SKILL,$/;"	e	enum:QSanProtocol::GameEventType
S_GAME_EVENT_HUASHEN	src/core/protocol.h	/^        S_GAME_EVENT_HUASHEN$/;"	e	enum:QSanProtocol::GameEventType
S_GAME_EVENT_JUDGE_RESULT	src/core/protocol.h	/^        S_GAME_EVENT_JUDGE_RESULT,$/;"	e	enum:QSanProtocol::GameEventType
S_GAME_EVENT_LOSE_SKILL	src/core/protocol.h	/^        S_GAME_EVENT_LOSE_SKILL,$/;"	e	enum:QSanProtocol::GameEventType
S_GAME_EVENT_PLAYER_DYING	src/core/protocol.h	/^        S_GAME_EVENT_PLAYER_DYING,$/;"	e	enum:QSanProtocol::GameEventType
S_GAME_EVENT_SKILL_INVOKED	src/core/protocol.h	/^        S_GAME_EVENT_SKILL_INVOKED,$/;"	e	enum:QSanProtocol::GameEventType
S_GAME_EVENT_UPDATE_SKILL	src/core/protocol.h	/^        S_GAME_EVENT_UPDATE_SKILL,$/;"	e	enum:QSanProtocol::GameEventType
S_GENERAL_ICON_SIZE_CARD	src/ui/SkinBank.h	/^        S_GENERAL_ICON_SIZE_CARD,$/;"	e	enum:QSanRoomSkin::GeneralIconSize
S_GENERAL_ICON_SIZE_DASHBOARD_PRIMARY	src/ui/SkinBank.h	/^        S_GENERAL_ICON_SIZE_DASHBOARD_PRIMARY$/;"	e	enum:QSanRoomSkin::GeneralIconSize
S_GENERAL_ICON_SIZE_DASHBOARD_SECONDARY	src/ui/SkinBank.h	/^        S_GENERAL_ICON_SIZE_DASHBOARD_SECONDARY,$/;"	e	enum:QSanRoomSkin::GeneralIconSize
S_GENERAL_ICON_SIZE_LARGE	src/ui/SkinBank.h	/^        S_GENERAL_ICON_SIZE_LARGE,$/;"	e	enum:QSanRoomSkin::GeneralIconSize
S_GENERAL_ICON_SIZE_PHOTO_PRIMARY	src/ui/SkinBank.h	/^        S_GENERAL_ICON_SIZE_PHOTO_PRIMARY,$/;"	e	enum:QSanRoomSkin::GeneralIconSize
S_GENERAL_ICON_SIZE_PHOTO_SECONDARY	src/ui/SkinBank.h	/^        S_GENERAL_ICON_SIZE_PHOTO_SECONDARY,$/;"	e	enum:QSanRoomSkin::GeneralIconSize
S_GENERAL_ICON_SIZE_SMALL	src/ui/SkinBank.h	/^        S_GENERAL_ICON_SIZE_SMALL,$/;"	e	enum:QSanRoomSkin::GeneralIconSize
S_GENERAL_ICON_SIZE_TINY	src/ui/SkinBank.h	/^        S_GENERAL_ICON_SIZE_TINY,$/;"	e	enum:QSanRoomSkin::GeneralIconSize
S_GUANXING_TIMEOUT	src/core/settings.cpp	/^const int Settings::S_GUANXING_TIMEOUT = 20;$/;"	m	class:Settings	file:
S_GUANXING_TIMEOUT	src/core/settings.h	/^    static const int S_GUANXING_TIMEOUT;$/;"	m	class:Settings
S_IMAGE_GROUP_KEYS	src/ui/SkinBank.cpp	/^QHash<QString, QList<QString> > IQSanComponentSkin::S_IMAGE_GROUP_KEYS;$/;"	m	class:IQSanComponentSkin	file:
S_IMAGE_GROUP_KEYS	src/ui/SkinBank.h	/^    static QHash<QString, QList<QString> > S_IMAGE_GROUP_KEYS;$/;"	m	class:IQSanComponentSkin
S_IMAGE_KEY2FILE	src/ui/SkinBank.cpp	/^QHash<QString, QString> IQSanComponentSkin::S_IMAGE_KEY2FILE;$/;"	m	class:IQSanComponentSkin	file:
S_IMAGE_KEY2FILE	src/ui/SkinBank.h	/^    static QHash<QString, QString> S_IMAGE_KEY2FILE;$/;"	m	class:IQSanComponentSkin
S_IMAGE_KEY2PIXMAP	src/ui/SkinBank.cpp	/^QHash<QString, QPixmap> IQSanComponentSkin::S_IMAGE_KEY2PIXMAP;$/;"	m	class:IQSanComponentSkin	file:
S_IMAGE_KEY2PIXMAP	src/ui/SkinBank.h	/^    static QHash<QString, QPixmap> S_IMAGE_KEY2PIXMAP;$/;"	m	class:IQSanComponentSkin
S_JUDGE_ANIMATION_DURATION	src/core/settings.cpp	/^const int Settings::S_JUDGE_ANIMATION_DURATION = 2600;$/;"	m	class:Settings	file:
S_JUDGE_ANIMATION_DURATION	src/core/settings.h	/^    static const int S_JUDGE_ANIMATION_DURATION;$/;"	m	class:Settings
S_JUDGE_RESULT_DELAY	src/core/settings.cpp	/^const int Settings::S_JUDGE_RESULT_DELAY = 1500;$/;"	m	class:Settings	file:
S_JUDGE_RESULT_DELAY	src/core/settings.h	/^    static const int S_JUDGE_RESULT_DELAY;$/;"	m	class:Settings
S_MASK_BASIC_REASON	src/core/structs.h	/^    static const int S_MASK_BASIC_REASON = 0x0F;$/;"	m	class:CardMoveReason
S_MAX_PACKET_SIZE	src/core/protocol.cpp	/^const unsigned int QSanProtocol::QSanGeneralPacket::S_MAX_PACKET_SIZE = 1000;$/;"	m	class:QSanProtocol::QSanGeneralPacket	file:
S_MAX_PACKET_SIZE	src/core/protocol.h	/^        static const unsigned int S_MAX_PACKET_SIZE;$/;"	m	class:QSanProtocol::QSanGeneralPacket
S_MOVE_CARD_ANIMATION_DURAION	src/core/settings.cpp	/^const int Settings::S_MOVE_CARD_ANIMATION_DURAION = 600;$/;"	m	class:Settings	file:
S_MOVE_CARD_ANIMATION_DURAION	src/core/settings.h	/^    static const int S_MOVE_CARD_ANIMATION_DURAION;$/;"	m	class:Settings
S_NUM_BUTTON_STATES	src/ui/qsanbutton.h	/^                       S_STATE_DISABLED, S_NUM_BUTTON_STATES };$/;"	e	enum:QSanButton::ButtonState
S_NUM_BUTTON_WIDTHS	src/ui/qsanbutton.h	/^    enum SkillButtonWidth { S_WIDTH_WIDE = 0, S_WIDTH_MED = 1, S_WIDTH_NARROW = 2, S_NUM_BUTTON_WIDTHS};    $/;"	e	enum:QSanInvokeSkillButton::SkillButtonWidth
S_NUM_SEMAPHORES	src/server/serverplayer.cpp	/^const int ServerPlayer::S_NUM_SEMAPHORES = 6;$/;"	m	class:ServerPlayer	file:
S_NUM_SEMAPHORES	src/server/serverplayer.h	/^    static const int S_NUM_SEMAPHORES;    $/;"	m	class:ServerPlayer
S_NUM_SKILL_TYPES	src/ui/qsanbutton.h	/^                     S_SKILL_AWAKEN, S_SKILL_ONEOFF_SPELL, S_NUM_SKILL_TYPES };$/;"	e	enum:QSanSkillButton::SkillType
S_PENDING_OFFSET_Y	src/ui/dashboard.h	/^    static const int S_PENDING_OFFSET_Y = -25;$/;"	m	class:Dashboard
S_PLAYER_SELF_REFERENCE_ID	src/core/protocol.cpp	/^const char* QSanProtocol::S_PLAYER_SELF_REFERENCE_ID = "MG_SELF";$/;"	m	class:QSanProtocol	file:
S_PROGRESS_BAR_UPDATE_INTERVAL	src/core/settings.cpp	/^const int Settings::S_PROGRESS_BAR_UPDATE_INTERVAL = 200;$/;"	m	class:Settings	file:
S_PROGRESS_BAR_UPDATE_INTERVAL	src/core/settings.h	/^    static const int S_PROGRESS_BAR_UPDATE_INTERVAL;$/;"	m	class:Settings
S_REASON_CHANGE_EQUIP	src/core/structs.h	/^    static const int S_REASON_CHANGE_EQUIP = 0x33;      \/\/  replace existed equip$/;"	m	class:CardMoveReason
S_REASON_CHOOSE_ORDER_SELECT	src/core/protocol.h	/^        S_REASON_CHOOSE_ORDER_SELECT$/;"	e	enum:QSanProtocol::Game3v3ChooseOrderCommand
S_REASON_CHOOSE_ORDER_TURN	src/core/protocol.h	/^        S_REASON_CHOOSE_ORDER_TURN,$/;"	e	enum:QSanProtocol::Game3v3ChooseOrderCommand
S_REASON_DEMONSTRATE	src/core/structs.h	/^    static const int S_REASON_DEMONSTRATE = 0x48;       \/\/ show a card which copy one to move to table$/;"	m	class:CardMoveReason
S_REASON_DISCARD	src/core/structs.h	/^    static const int S_REASON_DISCARD = 0x03;$/;"	m	class:CardMoveReason
S_REASON_DISMANTLE	src/core/structs.h	/^    static const int S_REASON_DISMANTLE = 0x43;         \/\/  one throw card of another$/;"	m	class:CardMoveReason
S_REASON_DRAW	src/core/structs.h	/^    static const int S_REASON_DRAW = 0x06;$/;"	m	class:CardMoveReason
S_REASON_EXCHANGE_FROM_PILE	src/core/structs.h	/^    static const int S_REASON_EXCHANGE_FROM_PILE = 0x39;\/\/ exchange cards from cards moved out of game (for qixing only)$/;"	m	class:CardMoveReason
S_REASON_EXTRACTION	src/core/structs.h	/^    static const int S_REASON_EXTRACTION = 0x27;        \/\/ from another's place to one's hand$/;"	m	class:CardMoveReason
S_REASON_GIVE	src/core/structs.h	/^    static const int S_REASON_GIVE = 0x17;              \/\/ from one hand to another hand$/;"	m	class:CardMoveReason
S_REASON_GOTBACK	src/core/structs.h	/^    static const int S_REASON_GOTBACK = 0x37;           \/\/ from placetable to hand$/;"	m	class:CardMoveReason
S_REASON_GOTCARD	src/core/structs.h	/^    static const int S_REASON_GOTCARD = 0x07;$/;"	m	class:CardMoveReason
S_REASON_JUDGE	src/core/structs.h	/^    static const int S_REASON_JUDGE = 0x28;             \/\/ show a card  from drawpile for judge$/;"	m	class:CardMoveReason
S_REASON_JUDGEDONE	src/core/structs.h	/^    static const int S_REASON_JUDGEDONE = 0x3A;         \/\/  judge card move into discardpile$/;"	m	class:CardMoveReason
S_REASON_LETUSE	src/core/structs.h	/^    static const int S_REASON_LETUSE = 0x11;           \/\/ use a card when self is not current$/;"	m	class:CardMoveReason
S_REASON_NATURAL_ENTER	src/core/structs.h	/^    static const int S_REASON_NATURAL_ENTER = 0x1A;     \/\/  a card with no-owner move into discardpile$/;"	m	class:CardMoveReason
S_REASON_OVERRIDE	src/core/structs.h	/^    static const int S_REASON_OVERRIDE = 0x29;          \/\/ exchange cards from cards in game$/;"	m	class:CardMoveReason
S_REASON_PINDIAN	src/core/structs.h	/^    static const int S_REASON_PINDIAN = 0x05;$/;"	m	class:CardMoveReason
S_REASON_PREVIEW	src/core/structs.h	/^    static const int S_REASON_PREVIEW = 0x38;           \/\/ Not done yet, plan for view some cards for self only(guanxing yiji miji)$/;"	m	class:CardMoveReason
S_REASON_PUT	src/core/structs.h	/^    static const int S_REASON_PUT = 0x0A;$/;"	m	class:CardMoveReason
S_REASON_RECAST	src/core/structs.h	/^    static const int S_REASON_RECAST = 0x04;          \/\/ ironchain etc.$/;"	m	class:CardMoveReason
S_REASON_RECYCLE	src/core/structs.h	/^    static const int S_REASON_RECYCLE = 0x47;           \/\/ from discardpile to hand$/;"	m	class:CardMoveReason
S_REASON_REMOVE_FROM_PILE	src/core/structs.h	/^    static const int S_REASON_REMOVE_FROM_PILE = 0x2A;  \/\/  cards moved out of game go back into discardpile$/;"	m	class:CardMoveReason
S_REASON_RESPONSE	src/core/structs.h	/^    static const int S_REASON_RESPONSE = 0x02;$/;"	m	class:CardMoveReason
S_REASON_RETRIAL	src/core/structs.h	/^    static const int S_REASON_RETRIAL = 0x12;$/;"	m	class:CardMoveReason
S_REASON_ROB	src/core/structs.h	/^    static const int S_REASON_ROB = 0x57;               \/\/ got a definite card from other's hand$/;"	m	class:CardMoveReason
S_REASON_RULEDISCARD	src/core/structs.h	/^    static const int S_REASON_RULEDISCARD = 0x13;       \/\/  discard at one's Player::Discard for gamerule$/;"	m	class:CardMoveReason
S_REASON_SHOW	src/core/structs.h	/^    static const int S_REASON_SHOW = 0x08;$/;"	m	class:CardMoveReason
S_REASON_SWAP	src/core/structs.h	/^    static const int S_REASON_SWAP = 0x19;              \/\/ exchange card for two players$/;"	m	class:CardMoveReason
S_REASON_THROW	src/core/structs.h	/^    static const int S_REASON_THROW = 0x23;             \/*  gamerule(dying or punish)$/;"	m	class:CardMoveReason
S_REASON_TRANSFER	src/core/structs.h	/^    static const int S_REASON_TRANSFER = 0x09;$/;"	m	class:CardMoveReason
S_REASON_TURNOVER	src/core/structs.h	/^    static const int S_REASON_TURNOVER = 0x18;          \/\/ show n cards  from drawpile$/;"	m	class:CardMoveReason
S_REASON_UNKNOWN	src/core/structs.h	/^    static const int S_REASON_UNKNOWN = 0x00;$/;"	m	class:CardMoveReason
S_REASON_USE	src/core/structs.h	/^    static const int S_REASON_USE = 0x01;$/;"	m	class:CardMoveReason
S_REGULAR_ANIMATION_SLOW_DURAION	src/core/settings.cpp	/^const int Settings::S_REGULAR_ANIMATION_SLOW_DURAION = 1500;$/;"	m	class:Settings	file:
S_REGULAR_ANIMATION_SLOW_DURAION	src/core/settings.h	/^    static const int S_REGULAR_ANIMATION_SLOW_DURAION;$/;"	m	class:Settings
S_ROLE_COMBO_BOX_GAP	src/ui/rolecombobox.h	/^    static const int S_ROLE_COMBO_BOX_GAP = 5;$/;"	m	class:RoleComboBox
S_ROLE_COMBO_BOX_HEIGHT	src/ui/rolecombobox.h	/^    static const int S_ROLE_COMBO_BOX_HEIGHT = 26;$/;"	m	class:RoleComboBox
S_ROLE_COMBO_BOX_WIDTH	src/ui/rolecombobox.h	/^    static const int S_ROLE_COMBO_BOX_WIDTH = 25;$/;"	m	class:RoleComboBox
S_SERVER_INSTANCE	src/core/protocol.h	/^        S_SERVER_INSTANCE,$/;"	e	enum:QSanProtocol::ProcessInstanceType
S_SERVER_NOTIFICATION	src/core/protocol.h	/^        S_SERVER_NOTIFICATION,$/;"	e	enum:QSanProtocol::PacketType
S_SERVER_REPLY	src/core/protocol.h	/^        S_SERVER_REPLY,$/;"	e	enum:QSanProtocol::PacketType
S_SERVER_REQUEST	src/core/protocol.h	/^        S_SERVER_REQUEST,$/;"	e	enum:QSanProtocol::PacketType
S_SERVER_TIMEOUT_GRACIOUS_PERIOD	src/core/settings.cpp	/^const int Settings::S_SERVER_TIMEOUT_GRACIOUS_PERIOD = 1000;$/;"	m	class:Settings	file:
S_SERVER_TIMEOUT_GRACIOUS_PERIOD	src/core/settings.h	/^    static const int S_SERVER_TIMEOUT_GRACIOUS_PERIOD;$/;"	m	class:Settings
S_SKILL_AWAKEN	src/ui/qsanbutton.h	/^                     S_SKILL_AWAKEN, S_SKILL_ONEOFF_SPELL, S_NUM_SKILL_TYPES };$/;"	e	enum:QSanSkillButton::SkillType
S_SKILL_COMPULSORY	src/ui/qsanbutton.h	/^    enum SkillType { S_SKILL_PROACTIVE, S_SKILL_FREQUENT, S_SKILL_COMPULSORY,$/;"	e	enum:QSanSkillButton::SkillType
S_SKILL_FREQUENT	src/ui/qsanbutton.h	/^    enum SkillType { S_SKILL_PROACTIVE, S_SKILL_FREQUENT, S_SKILL_COMPULSORY,$/;"	e	enum:QSanSkillButton::SkillType
S_SKILL_ONEOFF_SPELL	src/ui/qsanbutton.h	/^                     S_SKILL_AWAKEN, S_SKILL_ONEOFF_SPELL, S_NUM_SKILL_TYPES };$/;"	e	enum:QSanSkillButton::SkillType
S_SKILL_PROACTIVE	src/ui/qsanbutton.h	/^    enum SkillType { S_SKILL_PROACTIVE, S_SKILL_FREQUENT, S_SKILL_COMPULSORY,$/;"	e	enum:QSanSkillButton::SkillType
S_SKIN_KEY_ACTIONED_ICON	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_ACTIONED_ICON = "playerActioned";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_ACTIONED_ICON	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_ACTIONED_ICON;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_ANIMATIONS	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_ANIMATIONS = "preloads";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_ANIMATIONS	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_ANIMATIONS;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_BLANK_GENERAL	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_BLANK_GENERAL = "%1BlankGeneral";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_BLANK_GENERAL	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_BLANK_GENERAL;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_BUTTON	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_BUTTON = "button-%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_BUTTON	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_BUTTON;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_BUTTON_DASHBOARD_CANCEL	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_BUTTON_DASHBOARD_CANCEL;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_BUTTON_DASHBOARD_CONFIRM	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_BUTTON_DASHBOARD_CONFIRM;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_BUTTON_DASHBOARD_DISCARD	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_BUTTON_DASHBOARD_DISCARD;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_BUTTON_DASHBOARD_TRUST	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_BUTTON_DASHBOARD_TRUST;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_BUTTON_SKILL	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_BUTTON_SKILL = "skill";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_BUTTON_SKILL	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_BUTTON_SKILL;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_CHAIN	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_CHAIN = "%1Chain";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_CHAIN	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_CHAIN;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_COMMON	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_COMMON = "common";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_COMMON	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_COMMON;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_DASHBOARD	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_DASHBOARD = "dashboard";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_DASHBOARD	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_DASHBOARD;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_DASHBOARD_BUTTON_SET_BG	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_DASHBOARD_BUTTON_SET_BG = "dashboardButtonSetBg";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_DASHBOARD_BUTTON_SET_BG	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_DASHBOARD_BUTTON_SET_BG;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_DEFAULT	src/ui/SkinBank.cpp	/^const char* IQSanComponentSkin::S_SKIN_KEY_DEFAULT = "default";$/;"	m	class:IQSanComponentSkin	file:
S_SKIN_KEY_DEFAULT	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_DEFAULT;$/;"	m	class:IQSanComponentSkin
S_SKIN_KEY_EQUIP_ICON	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_EQUIP_ICON = "%1Equip-%2";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_EQUIP_ICON	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_EQUIP_ICON;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_EXTRA_SKILL_BG	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_EXTRA_SKILL_BG = "%1ExtraSkillBg";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_EXTRA_SKILL_BG	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_EXTRA_SKILL_BG;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_FACETURNEDMASK	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_FACETURNEDMASK = "%1FaceTurnedMask";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_FACETURNEDMASK	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_FACETURNEDMASK;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_FOCUS_FRAME	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_FOCUS_FRAME = "%1FocusFrame%2";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_FOCUS_FRAME	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_FOCUS_FRAME;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_GENERAL_CIRCLE_IMAGE	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_GENERAL_CIRCLE_IMAGE = "generalCircleImage-%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_GENERAL_CIRCLE_IMAGE	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_GENERAL_CIRCLE_IMAGE;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_GENERAL_CIRCLE_MASK	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_GENERAL_CIRCLE_MASK = "generalCircleMask-%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_GENERAL_CIRCLE_MASK	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_GENERAL_CIRCLE_MASK;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_HANDCARDNUM	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_HANDCARDNUM = "%1HandCardNum";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_HANDCARDNUM	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_HANDCARDNUM;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_HAND_CARD_BACK	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_HAND_CARD_BACK = "handCardBack";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_HAND_CARD_BACK	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_HAND_CARD_BACK;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_HAND_CARD_FRAME	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_HAND_CARD_FRAME = "handCardFrame-%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_HAND_CARD_FRAME	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_HAND_CARD_FRAME;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_HAND_CARD_MAIN_PHOTO	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_HAND_CARD_MAIN_PHOTO = "handCardMainPhoto-%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_HAND_CARD_MAIN_PHOTO	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_HAND_CARD_MAIN_PHOTO;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_HAND_CARD_NUMBER_BLACK	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_HAND_CARD_NUMBER_BLACK = "handCardNumber-black-%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_HAND_CARD_NUMBER_BLACK	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_HAND_CARD_NUMBER_BLACK;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_HAND_CARD_NUMBER_RED	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_HAND_CARD_NUMBER_RED = "handCardNumber-red-%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_HAND_CARD_NUMBER_RED	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_HAND_CARD_NUMBER_RED;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_HAND_CARD_SUIT	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_HAND_CARD_SUIT = "handCardSuit-%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_HAND_CARD_SUIT	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_HAND_CARD_SUIT;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_JUDGE_CARD_ICON	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_JUDGE_CARD_ICON = "judgeCardIcon-%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_JUDGE_CARD_ICON	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_JUDGE_CARD_ICON;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_KINGDOM_COLOR_MASK	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_KINGDOM_COLOR_MASK = "kingdomColorMask-%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_KINGDOM_COLOR_MASK	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_KINGDOM_COLOR_MASK;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_KINGDOM_ICON	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_KINGDOM_ICON = "kingdomIcon-%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_KINGDOM_ICON	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_KINGDOM_ICON;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_LEFTFRAME	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_LEFTFRAME = "%1LeftFrame";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_LEFTFRAME	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_LEFTFRAME;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_MAGATAMAS	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_MAGATAMAS = "magatamas%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_MAGATAMAS	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_MAGATAMAS;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_MAGATAMAS_BG	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_MAGATAMAS_BG = "magatamasBg%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_MAGATAMAS_BG	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_MAGATAMAS_BG;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_MAINFRAME	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_MAINFRAME = "%1MainFrame";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_MAINFRAME	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_MAINFRAME;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_MIDDLEFRAME	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_MIDDLEFRAME = "%1MiddleFrame";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_MIDDLEFRAME	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_MIDDLEFRAME;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_PHASE	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_PHASE = "%1Phase%2";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_PHASE	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_PHASE;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_PHOTO	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_PHOTO = "photo";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_PHOTO	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_PHOTO;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_PLATTER	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_PLATTER;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_PLAYER_AUDIO_EFFECT	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_PLAYER_AUDIO_EFFECT = "playerAudioEffect-%1-%2";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_PLAYER_AUDIO_EFFECT	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_PLAYER_AUDIO_EFFECT;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_PLAYER_GENERAL_ICON	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_PLAYER_GENERAL_ICON = "playerGeneralIcon-%2-%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_PLAYER_GENERAL_ICON	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_PLAYER_GENERAL_ICON;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_PROGRESS_BAR_IMAGE	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_PROGRESS_BAR_IMAGE = "progressBar";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_PROGRESS_BAR_IMAGE	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_PROGRESS_BAR_IMAGE;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_READY_ICON	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_READY_ICON = "playerReady";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_READY_ICON	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_READY_ICON;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_RIGHTFRAME	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_RIGHTFRAME = "%1RightFrame";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_RIGHTFRAME	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_RIGHTFRAME;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_ROOM	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_ROOM = "room";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_ROOM	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_ROOM; $/;"	m	class:QSanRoomSkin
S_SKIN_KEY_SAVE_ME_ICON	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_SAVE_ME_ICON = "saveMe";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_SAVE_ME_ICON	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_SAVE_ME_ICON;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_SELECTED_FRAME	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_SELECTED_FRAME = "%1FrameWhenSelected";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_SELECTED_FRAME	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_SELECTED_FRAME;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_SYSTEM_AUDIO_EFFECT	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_SYSTEM_AUDIO_EFFECT = "systemAudioEffect-%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_SYSTEM_AUDIO_EFFECT	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_SYSTEM_AUDIO_EFFECT;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_TABLE_BG	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_TABLE_BG = "tableBg";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_TABLE_BG	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_TABLE_BG;$/;"	m	class:QSanRoomSkin
S_SKIN_KEY_VOTES_NUMBER	src/ui/SkinBank.cpp	/^const char* QSanRoomSkin::S_SKIN_KEY_VOTES_NUMBER = "votesNum-%1";$/;"	m	class:QSanRoomSkin	file:
S_SKIN_KEY_VOTES_NUMBER	src/ui/SkinBank.h	/^    static const char* S_SKIN_KEY_VOTES_NUMBER;$/;"	m	class:QSanRoomSkin
S_STATE_DISABLED	src/ui/qsanbutton.h	/^                       S_STATE_DISABLED, S_NUM_BUTTON_STATES };$/;"	e	enum:QSanButton::ButtonState
S_STATE_DOWN	src/ui/qsanbutton.h	/^    enum ButtonState { S_STATE_UP, S_STATE_HOVER, S_STATE_DOWN, $/;"	e	enum:QSanButton::ButtonState
S_STATE_HOVER	src/ui/qsanbutton.h	/^    enum ButtonState { S_STATE_UP, S_STATE_HOVER, S_STATE_DOWN, $/;"	e	enum:QSanButton::ButtonState
S_STATE_UP	src/ui/qsanbutton.h	/^    enum ButtonState { S_STATE_UP, S_STATE_HOVER, S_STATE_DOWN, $/;"	e	enum:QSanButton::ButtonState
S_STYLE_PUSH	src/ui/qsanbutton.h	/^    enum ButtonStyle { S_STYLE_PUSH, S_STYLE_TOGGLE };$/;"	e	enum:QSanButton::ButtonStyle
S_STYLE_TOGGLE	src/ui/qsanbutton.h	/^    enum ButtonStyle { S_STYLE_PUSH, S_STYLE_TOGGLE };$/;"	e	enum:QSanButton::ButtonStyle
S_SURRNDER_REQUEST_MIN_INTERVAL	src/core/settings.cpp	/^const int Settings::S_SURRNDER_REQUEST_MIN_INTERVAL = 60;$/;"	m	class:Settings	file:
S_SURRNDER_REQUEST_MIN_INTERVAL	src/core/settings.h	/^    static const int S_SURRNDER_REQUEST_MIN_INTERVAL;$/;"	m	class:Settings
S_UNKNOWN_CARD_ID	src/core/card.cpp	/^const int Card::S_UNKNOWN_CARD_ID = -1;$/;"	m	class:Card	file:
S_UNKNOWN_CARD_ID	src/core/card.h	/^    static const int S_UNKNOWN_CARD_ID;$/;"	m	class:Card
S_UNKNOWN_PACKET	src/core/protocol.h	/^        S_UNKNOWN_PACKET,$/;"	e	enum:QSanProtocol::PacketType
S_WIDTH_MED	src/ui/qsanbutton.h	/^    enum SkillButtonWidth { S_WIDTH_WIDE = 0, S_WIDTH_MED = 1, S_WIDTH_NARROW = 2, S_NUM_BUTTON_WIDTHS};    $/;"	e	enum:QSanInvokeSkillButton::SkillButtonWidth
S_WIDTH_NARROW	src/ui/qsanbutton.h	/^    enum SkillButtonWidth { S_WIDTH_WIDE = 0, S_WIDTH_MED = 1, S_WIDTH_NARROW = 2, S_NUM_BUTTON_WIDTHS};    $/;"	e	enum:QSanInvokeSkillButton::SkillButtonWidth
S_WIDTH_WIDE	src/ui/qsanbutton.h	/^    enum SkillButtonWidth { S_WIDTH_WIDE = 0, S_WIDTH_MED = 1, S_WIDTH_NARROW = 2, S_NUM_BUTTON_WIDTHS};    $/;"	e	enum:QSanInvokeSkillButton::SkillButtonWidth
Sanguosha	src/core/engine.cpp	/^Engine *Sanguosha = NULL;$/;"	v
SanityCheck	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^class SanityCheck: public StackwalkerAMD64Fixture, public Test { };$/;"	c	file:
SanityCheck	src/breakpad/processor/stackwalker_arm_unittest.cc	/^class SanityCheck: public StackwalkerARMFixture, public Test { };$/;"	c	file:
SanityCheck	src/breakpad/processor/stackwalker_x86_unittest.cc	/^class SanityCheck: public StackwalkerX86Fixture, public Test { };$/;"	c	file:
SavageAssault	src/package/standard-cards.cpp	/^SavageAssault::SavageAssault(Suit suit, int number)$/;"	f	class:SavageAssault
SavageAssault	src/package/standard.h	/^class SavageAssault:public AOE{$/;"	c
SavageAssaultAvoid	src/package/thicket.cpp	/^    SavageAssaultAvoid(const QString &avoid_skill)$/;"	f	class:SavageAssaultAvoid
SavageAssaultAvoid	src/package/thicket.cpp	/^class SavageAssaultAvoid: public TriggerSkill{$/;"	c	file:
ScanForReturnAddress	src/breakpad/google_breakpad/processor/stackwalker.h	/^  bool ScanForReturnAddress(InstructionType location_start,$/;"	f	class:google_breakpad::Stackwalker
Scenario	src/scenario/scenario.cpp	/^Scenario::Scenario(const QString &name)$/;"	f	class:Scenario
Scenario	src/scenario/scenario.h	/^class Scenario : public Package$/;"	c
ScenarioAdder	src/scenario/scenario.h	/^    ScenarioAdder(const QString &name, Scenario *scenario){$/;"	f	class:ScenarioAdder
ScenarioAdder	src/scenario/scenario.h	/^class ScenarioAdder{$/;"	c
ScenarioHash	src/scenario/scenario.h	/^typedef QHash<QString, Scenario *> ScenarioHash;$/;"	t
ScenarioOverview	src/dialog/scenario-overview.cpp	/^ScenarioOverview::ScenarioOverview(QWidget *parent)$/;"	f	class:ScenarioOverview
ScenarioOverview	src/dialog/scenario-overview.h	/^class ScenarioOverview: public QDialog{$/;"	c
ScenarioRule	src/core/skill.cpp	/^ScenarioRule::ScenarioRule(Scenario *scenario)$/;"	f	class:ScenarioRule
ScenarioRule	src/core/skill.h	/^class ScenarioRule: public TriggerSkill{$/;"	c
Scene26Effect	src/scenario/scenerule.cpp	/^    Scene26Effect(const QString &name) : TriggerSkill(name) { events << EventPhaseStart; }$/;"	f	class:Scene26Effect
Scene26Effect	src/scenario/scenerule.cpp	/^class Scene26Effect : public TriggerSkill {$/;"	c	file:
Scene27Card	src/scenario/scenerule.cpp	/^class Scene27Card : public SkillCard {$/;"	c	file:
Scene27Skill	src/scenario/scenerule.cpp	/^    Scene27Skill():OneCardViewAsSkill("liangshangjunzi") { }$/;"	f	class:Scene27Skill	file:
Scene27Skill	src/scenario/scenerule.cpp	/^class Scene27Skill : public OneCardViewAsSkill {$/;"	c	file:
SceneDistanceEffect	src/scenario/scenerule.cpp	/^    SceneDistanceEffect(const QString &name) : DistanceSkill(name) { }$/;"	f	class:SceneDistanceEffect
SceneDistanceEffect	src/scenario/scenerule.cpp	/^class SceneDistanceEffect : public DistanceSkill {$/;"	c	file:
SceneRule	src/scenario/scenerule.cpp	/^SceneRule::SceneRule(QObject *parent) : GameRule(parent) {$/;"	f	class:SceneRule
SceneRule	src/scenario/scenerule.h	/^class SceneRule : public GameRule {$/;"	c
Scope	src/breakpad/processor/cfi_frame_info_unittest.cc	/^class Scope: public CFIFixture, public Test { };$/;"	c	file:
ScopedPtrMallocFree	src/breakpad/processor/scoped_ptr.h	/^class ScopedPtrMallocFree {$/;"	c	namespace:google_breakpad
ScriptExecutor	src/ui/roomscene.cpp	/^ScriptExecutor::ScriptExecutor(QWidget *parent)$/;"	f	class:ScriptExecutor
ScriptExecutor	src/ui/roomscene.h	/^class ScriptExecutor: public QDialog{$/;"	c
SecondBanSet	src/core/banpair.cpp	/^static QSet<QString> SecondBanSet;$/;"	v	file:
Section	src/breakpad/processor/synth_minidump.cc	/^Section::Section(const Dump &dump)$/;"	f	class:google_breakpad::SynthMinidump::Section
Section	src/breakpad/processor/synth_minidump.h	/^class Section: public test_assembler::Section {$/;"	c	namespace:google_breakpad::SynthMinidump
SeekSet	src/breakpad/processor/minidump.cc	/^bool Minidump::SeekSet(off_t offset) {$/;"	f	class:google_breakpad::Minidump
SeekToStreamType	src/breakpad/processor/minidump.cc	/^bool Minidump::SeekToStreamType(u_int32_t  stream_type,$/;"	f	class:google_breakpad::Minidump
Select3v3GeneralDialog	src/server/server.cpp	/^Select3v3GeneralDialog::Select3v3GeneralDialog(QDialog *parent)$/;"	f	class:Select3v3GeneralDialog
Select3v3GeneralDialog	src/server/server.h	/^class Select3v3GeneralDialog: public QDialog{$/;"	c
SelectSkill	src/package/mountainpackage.cpp	/^    static QString SelectSkill(ServerPlayer *zuoci, bool acquire_instant = true){$/;"	f	class:Huashen
Selector	src/server/generalselector.cpp	/^static GeneralSelector *Selector;$/;"	v	file:
Self	src/client/clientplayer.cpp	/^ClientPlayer *Self = NULL;$/;"	v
SelfMemoryRegion	src/breakpad/processor/stackwalker_selftest.cc	/^class SelfMemoryRegion : public MemoryRegion {$/;"	c	file:
SelfPtr	src/breakpad/processor/static_address_map.h	/^  typedef StaticAddressMap* SelfPtr;$/;"	t	class:google_breakpad::StaticAddressMap
SelfPtr	src/breakpad/processor/static_contained_range_map.h	/^  typedef StaticContainedRangeMap* SelfPtr;$/;"	t	class:google_breakpad::StaticContainedRangeMap
SelfPtr	src/breakpad/processor/static_range_map.h	/^  typedef StaticRangeMap* SelfPtr;$/;"	t	class:google_breakpad::StaticRangeMap
SelfType	src/jsoncpp/include/json/value.h	/^      typedef ValueConstIterator SelfType;$/;"	t	class:Json::ValueConstIterator
SelfType	src/jsoncpp/include/json/value.h	/^      typedef ValueIterator SelfType;$/;"	t	class:Json::ValueIterator
SelfType	src/jsoncpp/include/json/value.h	/^      typedef ValueIteratorBase SelfType;$/;"	t	class:Json::ValueIteratorBase
SemInfo	src/lua/llex.h	/^} SemInfo;  \/* semantics information *\/$/;"	t	typeref:union:__anon97
SemaphoreType	src/server/serverplayer.h	/^    enum SemaphoreType {$/;"	g	class:ServerPlayer
SendRequest	src/breakpad/common/windows/http_upload.cc	/^bool HTTPUpload::SendRequest(const wstring &url,$/;"	f	class:google_breakpad::HTTPUpload
SentbackEffect	src/ui/sprite.cpp	/^SentbackEffect::SentbackEffect(bool stay, QObject *parent)$/;"	f	class:SentbackEffect
SentbackEffect	src/ui/sprite.h	/^class SentbackEffect : public QAnimatedEffect$/;"	c
Serialize	src/breakpad/processor/cfi_frame_info.cc	/^string CFIFrameInfo::Serialize() const {$/;"	f	class:google_breakpad::CFIFrameInfo
Serialize	src/breakpad/processor/map_serializers-inl.h	/^char *ContainedRangeMapSerializer<AddrType, EntryType>::Serialize($/;"	f	class:google_breakpad::ContainedRangeMapSerializer
Serialize	src/breakpad/processor/map_serializers-inl.h	/^char *RangeMapSerializer<Address, Entry>::Serialize($/;"	f	class:google_breakpad::RangeMapSerializer
Serialize	src/breakpad/processor/map_serializers-inl.h	/^char *StdMapSerializer<Key, Value>::Serialize($/;"	f	class:google_breakpad::StdMapSerializer
Serialize	src/breakpad/processor/map_serializers.h	/^  char* Serialize(const AddressMap<Addr, Entry> &m, unsigned int *size) const {$/;"	f	class:google_breakpad::AddressMapSerializer
Serialize	src/breakpad/processor/module_serializer.cc	/^char* ModuleSerializer::Serialize($/;"	f	class:google_breakpad::ModuleSerializer
Serialize	src/breakpad/processor/static_map_unittest.cc	/^  static char* Serialize(const std::map<Key, Value> &stdmap,$/;"	f	class:SimpleMapSerializer
SerializeModuleAndLoadIntoFastResolver	src/breakpad/processor/module_serializer.cc	/^bool ModuleSerializer::SerializeModuleAndLoadIntoFastResolver($/;"	f	class:google_breakpad::ModuleSerializer
SerializeSymbolFileData	src/breakpad/processor/module_serializer.cc	/^char* ModuleSerializer::SerializeSymbolFileData($/;"	f	class:google_breakpad::ModuleSerializer
SerifStyle	include/freetype/freetype/tttables.h	/^    FT_Byte    SerifStyle;$/;"	m	struct:TT_PCLT_
Server	src/server/server.cpp	/^Server::Server(QObject *parent)$/;"	f	class:Server
Server	src/server/server.h	/^class Server : public QObject{$/;"	c
ServerDialog	src/server/server.cpp	/^ServerDialog::ServerDialog(QWidget *parent)$/;"	f	class:ServerDialog
ServerDialog	src/server/server.h	/^class ServerDialog: public QDialog{$/;"	c
ServerInfo	src/client/clientstruct.cpp	/^ServerInfoStruct ServerInfo;$/;"	v
ServerInfoStruct	src/client/clientstruct.h	/^struct ServerInfoStruct{$/;"	s
ServerInfoWidget	src/client/clientstruct.cpp	/^ServerInfoWidget::ServerInfoWidget(bool show_lack)$/;"	f	class:ServerInfoWidget
ServerInfoWidget	src/client/clientstruct.h	/^class ServerInfoWidget: public QWidget{$/;"	c
ServerName	src/core/settings.h	/^    QString ServerName;$/;"	m	class:Settings
ServerPlayer	src/server/serverplayer.cpp	/^ServerPlayer::ServerPlayer(Room *room)$/;"	f	class:ServerPlayer
ServerPlayer	src/server/serverplayer.h	/^class ServerPlayer : public Player$/;"	c
ServerPlayer_speak	swig/sanguosha_wrap.cxx	/^SWIGINTERN void ServerPlayer_speak(ServerPlayer *self,char const *msg){$/;"	f
ServerPort	src/core/settings.h	/^    ushort ServerPort;$/;"	m	class:Settings
ServerSocket	src/util/socket.h	/^class ServerSocket: public QObject{$/;"	c
SetCFARule	src/breakpad/processor/cfi_frame_info.h	/^  void SetCFARule(const string &expression) { cfa_rule_ = expression; }$/;"	f	class:google_breakpad::CFIFrameInfo
SetConfig	swig/sanguosha_wrap.cxx	/^static int SetConfig(lua_State *lua){$/;"	f	file:
SetContextFrameValidity	src/breakpad/processor/stackwalker_arm.h	/^  void SetContextFrameValidity(int valid) { context_frame_validity_ = valid; }$/;"	f	class:google_breakpad::StackwalkerARM
SetDescriptor	src/breakpad/processor/minidump.cc	/^void MinidumpMemoryRegion::SetDescriptor(MDMemoryDescriptor* descriptor) {$/;"	f	class:google_breakpad::MinidumpMemoryRegion
SetModuleSymbols	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  void SetModuleSymbols(MockCodeModule *module, const string &info) {$/;"	f	class:StackwalkerAMD64Fixture
SetModuleSymbols	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  void SetModuleSymbols(MockCodeModule *module, const string &info) {$/;"	f	class:StackwalkerARMFixture
SetModuleSymbols	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  void SetModuleSymbols(MockCodeModule *module, const string &info) {$/;"	f	class:StackwalkerX86Fixture
SetProcessUptime	src/breakpad/client/windows/crash_generation/client_info.cc	/^void ClientInfo::SetProcessUptime() {$/;"	f	class:google_breakpad::ClientInfo
SetRARule	src/breakpad/processor/cfi_frame_info.h	/^  void SetRARule(const string &expression)  { ra_rule_ = expression; }$/;"	f	class:google_breakpad::CFIFrameInfo
SetRegisterRule	src/breakpad/processor/cfi_frame_info.h	/^  void SetRegisterRule(const string &register_name, const string &expression) {$/;"	f	class:google_breakpad::CFIFrameInfo
SetUp	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  void SetUp() {$/;"	f	class:__anon71::TestBasicSourceLineResolver
SetUp	src/breakpad/processor/binarystream_unittest.cc	/^  void SetUp() {$/;"	f	class:__anon72::BinaryStreamU8Test
SetUp	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  void SetUp() {$/;"	f	class:__anon73::TestFastSourceLineResolver
SetUp	src/breakpad/processor/map_serializers_unittest.cc	/^  void SetUp() {$/;"	f	class:TestAddressMapSerializer
SetUp	src/breakpad/processor/map_serializers_unittest.cc	/^  void SetUp() {$/;"	f	class:TestContainedRangeMapSerializer
SetUp	src/breakpad/processor/map_serializers_unittest.cc	/^  void SetUp() {$/;"	f	class:TestRangeMapSerializer
SetUp	src/breakpad/processor/map_serializers_unittest.cc	/^  void SetUp() {$/;"	f	class:TestStdMapSerializer
SetUp	src/breakpad/processor/minidump_unittest.cc	/^  void SetUp() {$/;"	f	class:__anon86::MinidumpTest
SetUp	src/breakpad/processor/static_address_map_unittest.cc	/^  void SetUp() {$/;"	f	class:TestStaticAddressMap
SetUp	src/breakpad/processor/static_contained_range_map_unittest.cc	/^void TestStaticCRMMap::SetUp() {$/;"	f	class:google_breakpad::TestStaticCRMMap
SetUp	src/breakpad/processor/static_map_unittest.cc	/^  void SetUp() {$/;"	f	class:TestInvalidMap
SetUp	src/breakpad/processor/static_map_unittest.cc	/^  void SetUp() {$/;"	f	class:TestValidMap
SetUp	src/breakpad/processor/static_range_map_unittest.cc	/^  void SetUp() {$/;"	f	class:google_breakpad::TestStaticRangeMap
Settings	src/core/settings.cpp	/^Settings::Settings()$/;"	f	class:Settings
Settings	src/core/settings.h	/^class Settings : public QSettings{$/;"	c
SettingsStar	src/dialog/packagingeditor.cpp	/^Q_DECLARE_METATYPE(SettingsStar);$/;"	v
SettingsStar	src/dialog/packagingeditor.cpp	/^typedef const QSettings *SettingsStar;$/;"	t	file:
Severity	src/breakpad/processor/logging.h	/^  enum Severity {$/;"	g	class:google_breakpad::LogStream
Shangshi	src/package/yjcm-package.cpp	/^Shangshi::Shangshi(const QString &name, int n)$/;"	f	class:Shangshi
Shangshi	src/package/yjcm-package.h	/^class Shangshi: public TriggerSkill{$/;"	c
ShangshiCardMove	src/package/yjcm-package.cpp	/^    ShangshiCardMove():Shangshi("#shangshi", 2)$/;"	f	class:ShangshiCardMove
ShangshiCardMove	src/package/yjcm-package.cpp	/^class ShangshiCardMove: public Shangshi{$/;"	c	file:
ShangshiStateChanged	src/package/yjcm-package.cpp	/^    ShangshiStateChanged():Shangshi("shangshi", 2)$/;"	f	class:ShangshiStateChanged
ShangshiStateChanged	src/package/yjcm-package.cpp	/^class ShangshiStateChanged: public Shangshi{$/;"	c	file:
Shaoying	src/package/yitianpackage.cpp	/^    Shaoying():TriggerSkill("shaoying"){$/;"	f	class:Shaoying
Shaoying	src/package/yitianpackage.cpp	/^class Shaoying: public TriggerSkill{$/;"	c	file:
Shelie	src/package/god.cpp	/^    Shelie():PhaseChangeSkill("shelie"){$/;"	f	class:Shelie
Shelie	src/package/god.cpp	/^class Shelie: public PhaseChangeSkill{$/;"	c	file:
Shenfen	src/package/god.cpp	/^    Shenfen():ZeroCardViewAsSkill("shenfen"){$/;"	f	class:Shenfen
Shenfen	src/package/god.cpp	/^class Shenfen:public ZeroCardViewAsSkill{$/;"	c	file:
ShenfenCard	src/package/god.cpp	/^ShenfenCard::ShenfenCard(){$/;"	f	class:ShenfenCard
ShenfenCard	src/package/god.h	/^class ShenfenCard: public SkillCard{$/;"	c
Shenjun	src/package/yitianpackage.cpp	/^    Shenjun():TriggerSkill("shenjun"){$/;"	f	class:Shenjun
Shenjun	src/package/yitianpackage.cpp	/^class Shenjun: public TriggerSkill{$/;"	c	file:
Shenli	src/package/yitianpackage.cpp	/^    Shenli():TriggerSkill("shenli"){$/;"	f	class:Shenli
Shenli	src/package/yitianpackage.cpp	/^class Shenli: public TriggerSkill{$/;"	c	file:
Shensu	src/package/wind.cpp	/^    Shensu():TriggerSkill("shensu"){$/;"	f	class:Shensu
Shensu	src/package/wind.cpp	/^class Shensu: public TriggerSkill{$/;"	c	file:
ShensuCard	src/package/wind.cpp	/^ShensuCard::ShensuCard(){$/;"	f	class:ShensuCard
ShensuCard	src/package/wind.h	/^class ShensuCard: public SkillCard{$/;"	c
ShensuViewAsSkill	src/package/wind.cpp	/^    ShensuViewAsSkill():ViewAsSkill("shensu"){$/;"	f	class:ShensuViewAsSkill
ShensuViewAsSkill	src/package/wind.cpp	/^class ShensuViewAsSkill: public ViewAsSkill{$/;"	c	file:
Shenwei	src/package/sp-package.cpp	/^    Shenwei():DrawCardsSkill("#shenwei-draw"){$/;"	f	class:Shenwei
Shenwei	src/package/sp-package.cpp	/^class Shenwei: public DrawCardsSkill{$/;"	c	file:
ShenweiKeep	src/package/sp-package.cpp	/^    ShenweiKeep():MaxCardsSkill("shenwei"){$/;"	f	class:ShenweiKeep
ShenweiKeep	src/package/sp-package.cpp	/^class ShenweiKeep: public MaxCardsSkill{$/;"	c	file:
Shicai	src/package/wisdompackage.cpp	/^    Shicai():TriggerSkill("shicai"){$/;"	f	class:Shicai
Shicai	src/package/wisdompackage.cpp	/^class Shicai: public TriggerSkill{$/;"	c	file:
Shichou	src/package/bgm-package.cpp	/^    Shichou(): TriggerSkill("shichou$"){$/;"	f	class:Shichou
Shichou	src/package/bgm-package.cpp	/^class Shichou: public TriggerSkill{$/;"	c	file:
Shien	src/package/wisdompackage.cpp	/^    Shien():TriggerSkill("shien"){$/;"	f	class:Shien
Shien	src/package/wisdompackage.cpp	/^class Shien:public TriggerSkill{$/;"	c	file:
Shihun	src/package/standard-generals.cpp	/^    Shihun():TriggerSkill("shihun"){$/;"	f	class:Shihun
Shihun	src/package/standard-generals.cpp	/^class Shihun: public TriggerSkill{$/;"	c	file:
Shipo	src/package/wisdompackage.cpp	/^    Shipo():TriggerSkill("shipo"){$/;"	f	class:Shipo
Shipo	src/package/wisdompackage.cpp	/^class Shipo: public TriggerSkill{$/;"	c	file:
Shiyong	src/package/yjcm2012-package.cpp	/^    Shiyong():TriggerSkill("shiyong"){$/;"	f	class:Shiyong
Shiyong	src/package/yjcm2012-package.cpp	/^class Shiyong: public TriggerSkill{$/;"	c	file:
ShouldDeleteMemoryBufferAfterLoadModule	src/breakpad/processor/fast_source_line_resolver.cc	/^bool FastSourceLineResolver::ShouldDeleteMemoryBufferAfterLoadModule() {$/;"	f	class:google_breakpad::FastSourceLineResolver
ShouldDeleteMemoryBufferAfterLoadModule	src/breakpad/processor/source_line_resolver_base.cc	/^bool SourceLineResolverBase::ShouldDeleteMemoryBufferAfterLoadModule() {$/;"	f	class:google_breakpad::SourceLineResolverBase
Shouye	src/package/wisdompackage.cpp	/^    Shouye():OneCardViewAsSkill("shouye"){$/;"	f	class:Shouye
Shouye	src/package/wisdompackage.cpp	/^class Shouye: public OneCardViewAsSkill{$/;"	c	file:
ShouyeCard	src/package/wisdompackage.cpp	/^ShouyeCard::ShouyeCard(){$/;"	f	class:ShouyeCard
ShouyeCard	src/package/wisdompackage.h	/^class ShouyeCard: public SkillCard{$/;"	c
ShowOrPindianSkill	src/client/aux-skills.cpp	/^ShowOrPindianSkill::ShowOrPindianSkill()$/;"	f	class:ShowOrPindianSkill
ShowOrPindianSkill	src/client/aux-skills.h	/^class ShowOrPindianSkill: public ResponseSkill{$/;"	c
ShrinkWidth	src/dialog/connectiondialog.cpp	/^static const int ShrinkWidth = 285;$/;"	v	file:
Shuangxiong	src/package/firepackage.cpp	/^    Shuangxiong():TriggerSkill("shuangxiong"){$/;"	f	class:Shuangxiong
Shuangxiong	src/package/firepackage.cpp	/^class Shuangxiong: public TriggerSkill{$/;"	c	file:
ShuangxiongViewAsSkill	src/package/firepackage.cpp	/^    ShuangxiongViewAsSkill():OneCardViewAsSkill("shuangxiong"){$/;"	f	class:ShuangxiongViewAsSkill
ShuangxiongViewAsSkill	src/package/firepackage.cpp	/^class ShuangxiongViewAsSkill: public OneCardViewAsSkill{$/;"	c	file:
SignalCrashEventAndWait	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^bool CrashGenerationClient::SignalCrashEventAndWait() {$/;"	f	class:google_breakpad::CrashGenerationClient
Silue	src/scenario/boss-mode-scenario.cpp	/^    Silue():PhaseChangeSkill("silue"){$/;"	f	class:Silue
Silue	src/scenario/boss-mode-scenario.cpp	/^class Silue: public PhaseChangeSkill{$/;"	c	file:
SilverLion	src/package/maneuvering.cpp	/^SilverLion::SilverLion(Suit suit, int number):Armor(suit, number){$/;"	f	class:SilverLion
SilverLion	src/package/maneuvering.h	/^class SilverLion: public Armor{$/;"	c
SilverLionSkill	src/package/maneuvering.cpp	/^    SilverLionSkill():ArmorSkill("SilverLion"){$/;"	f	class:SilverLionSkill
SilverLionSkill	src/package/maneuvering.cpp	/^class SilverLionSkill: public ArmorSkill{$/;"	c	file:
Simple	src/breakpad/processor/cfi_frame_info_unittest.cc	/^class Simple: public CFIFixture, public Test { };$/;"	c	file:
SimpleCFIWalker	src/breakpad/processor/cfi_frame_info.h	/^  SimpleCFIWalker(const RegisterSet *register_map, size_t map_size)$/;"	f	class:google_breakpad::SimpleCFIWalker
SimpleCFIWalker	src/breakpad/processor/cfi_frame_info.h	/^class SimpleCFIWalker {$/;"	c	namespace:google_breakpad
SimpleCFIWalkerFixture	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  SimpleCFIWalkerFixture()$/;"	f	struct:SimpleCFIWalkerFixture
SimpleCFIWalkerFixture	src/breakpad/processor/cfi_frame_info_unittest.cc	/^struct SimpleCFIWalkerFixture {$/;"	s	file:
SimpleMapSerializer	src/breakpad/processor/static_map_unittest.cc	/^class SimpleMapSerializer {$/;"	c	file:
SimpleSerializer	src/breakpad/processor/simple_serializer-inl.h	/^class SimpleSerializer< linked_ptr<BasicSourceLineResolver::Function> > {$/;"	c	namespace:google_breakpad
SimpleSerializer	src/breakpad/processor/simple_serializer-inl.h	/^class SimpleSerializer< linked_ptr<BasicSourceLineResolver::Line> > {$/;"	c	namespace:google_breakpad
SimpleSerializer	src/breakpad/processor/simple_serializer-inl.h	/^class SimpleSerializer< linked_ptr<BasicSourceLineResolver::PublicSymbol> > {$/;"	c	namespace:google_breakpad
SimpleSerializer	src/breakpad/processor/simple_serializer-inl.h	/^class SimpleSerializer< linked_ptr<WindowsFrameInfo> > {$/;"	c	namespace:google_breakpad
SimpleSerializer	src/breakpad/processor/simple_serializer-inl.h	/^class SimpleSerializer<BasicSourceLineResolver::Function> {$/;"	c	namespace:google_breakpad
SimpleSerializer	src/breakpad/processor/simple_serializer-inl.h	/^class SimpleSerializer<BasicSourceLineResolver::Line> {$/;"	c	namespace:google_breakpad
SimpleSerializer	src/breakpad/processor/simple_serializer-inl.h	/^class SimpleSerializer<BasicSourceLineResolver::PublicSymbol> {$/;"	c	namespace:google_breakpad
SimpleSerializer	src/breakpad/processor/simple_serializer-inl.h	/^class SimpleSerializer<WindowsFrameInfo> {$/;"	c	namespace:google_breakpad
SimpleSerializer	src/breakpad/processor/simple_serializer-inl.h	/^class SimpleSerializer<bool> {$/;"	c	namespace:google_breakpad
SimpleSerializer	src/breakpad/processor/simple_serializer-inl.h	/^class SimpleSerializer<const char*> {$/;"	c	namespace:google_breakpad
SimpleSerializer	src/breakpad/processor/simple_serializer-inl.h	/^class SimpleSerializer<string> {$/;"	c	namespace:google_breakpad
SimpleSerializer	src/breakpad/processor/simple_serializer.h	/^template<class Type> class SimpleSerializer {$/;"	c	namespace:google_breakpad
SimpleSymbolSupplier	src/breakpad/processor/simple_symbol_supplier.h	/^  explicit SimpleSymbolSupplier(const string &path) : paths_(1, path) {}$/;"	f	class:google_breakpad::SimpleSymbolSupplier
SimpleSymbolSupplier	src/breakpad/processor/simple_symbol_supplier.h	/^  explicit SimpleSymbolSupplier(const vector<string> &paths) : paths_(paths) {}$/;"	f	class:google_breakpad::SimpleSymbolSupplier
SimpleSymbolSupplier	src/breakpad/processor/simple_symbol_supplier.h	/^class SimpleSymbolSupplier : public SymbolSupplier {$/;"	c	namespace:google_breakpad
SimpleWalker	src/breakpad/processor/cfi_frame_info_unittest.cc	/^class SimpleWalker: public SimpleCFIWalkerFixture, public Test { };$/;"	c	file:
SingleTargetTrick	src/package/standard.h	/^    SingleTargetTrick(Suit suit, int number, bool aggressive):TrickCard(suit, number, aggressive){}$/;"	f	class:SingleTargetTrick
SingleTargetTrick	src/package/standard.h	/^class SingleTargetTrick: public TrickCard{$/;"	c
SizeOf	src/breakpad/processor/map_serializers-inl.h	/^size_t ContainedRangeMapSerializer<AddrType, EntryType>::SizeOf($/;"	f	class:google_breakpad::ContainedRangeMapSerializer
SizeOf	src/breakpad/processor/map_serializers-inl.h	/^size_t RangeMapSerializer<Address, Entry>::SizeOf($/;"	f	class:google_breakpad::RangeMapSerializer
SizeOf	src/breakpad/processor/map_serializers-inl.h	/^size_t StdMapSerializer<Key, Value>::SizeOf($/;"	f	class:google_breakpad::StdMapSerializer
SizeOf	src/breakpad/processor/map_serializers.h	/^  size_t SizeOf(const AddressMap<Addr, Entry> &m) const {$/;"	f	class:google_breakpad::AddressMapSerializer
SizeOf	src/breakpad/processor/module_serializer.cc	/^size_t ModuleSerializer::SizeOf(const BasicSourceLineResolver::Module &module) {$/;"	f	class:google_breakpad::ModuleSerializer
SizeOf	src/breakpad/processor/simple_serializer-inl.h	/^  static size_t SizeOf(bool boolean) { return 1; }$/;"	f	class:google_breakpad::SimpleSerializer
SizeOf	src/breakpad/processor/simple_serializer-inl.h	/^  static size_t SizeOf(const Function &func) {$/;"	f	class:google_breakpad::SimpleSerializer
SizeOf	src/breakpad/processor/simple_serializer-inl.h	/^  static size_t SizeOf(const Line &line) {$/;"	f	class:google_breakpad::SimpleSerializer
SizeOf	src/breakpad/processor/simple_serializer-inl.h	/^  static size_t SizeOf(const PublicSymbol &pubsymbol) {$/;"	f	class:google_breakpad::SimpleSerializer
SizeOf	src/breakpad/processor/simple_serializer-inl.h	/^  static size_t SizeOf(const WindowsFrameInfo &wfi) {$/;"	f	class:google_breakpad::SimpleSerializer
SizeOf	src/breakpad/processor/simple_serializer-inl.h	/^  static size_t SizeOf(const char *cstring) {$/;"	f	class:google_breakpad::SimpleSerializer
SizeOf	src/breakpad/processor/simple_serializer-inl.h	/^  static size_t SizeOf(const linked_ptr<Function> &func) {$/;"	f	class:google_breakpad::SimpleSerializer
SizeOf	src/breakpad/processor/simple_serializer-inl.h	/^  static size_t SizeOf(const linked_ptr<Line> &lineptr) {$/;"	f	class:google_breakpad::SimpleSerializer
SizeOf	src/breakpad/processor/simple_serializer-inl.h	/^  static size_t SizeOf(const linked_ptr<PublicSymbol> &pubsymbol) {$/;"	f	class:google_breakpad::SimpleSerializer
SizeOf	src/breakpad/processor/simple_serializer-inl.h	/^  static size_t SizeOf(const linked_ptr<WindowsFrameInfo> &wfi) {$/;"	f	class:google_breakpad::SimpleSerializer
SizeOf	src/breakpad/processor/simple_serializer-inl.h	/^  static size_t SizeOf(const string &str) { return str.size() + 1; }$/;"	f	class:google_breakpad::SimpleSerializer
SizeOf	src/breakpad/processor/simple_serializer.h	/^  static size_t SizeOf(const Type &item) { return sizeof(item); }$/;"	f	class:google_breakpad::SimpleSerializer
Sizeof	src/lua/print.c	20;"	d	file:
Sizhan	src/package/yitianpackage.cpp	/^    Sizhan():TriggerSkill("sizhan"){$/;"	f	class:Sizhan
Sizhan	src/package/yitianpackage.cpp	/^class Sizhan: public TriggerSkill{$/;"	c	file:
Skill	src/core/card.h	/^        Skill,$/;"	e	enum:Card::CardType
Skill	src/core/skill.cpp	/^Skill::Skill(const QString &name, Frequency frequency)$/;"	f	class:Skill
Skill	src/core/skill.h	/^class Skill : public QObject$/;"	c
SkillAssignDialog	src/dialog/customassigndialog.cpp	/^SkillAssignDialog::SkillAssignDialog(QDialog *parent, QString player_name, QStringList &player_skills)$/;"	f	class:SkillAssignDialog
SkillAssignDialog	src/dialog/customassigndialog.h	/^class SkillAssignDialog : public QDialog{$/;"	c
SkillBox	src/dialog/cardeditor.cpp	/^SkillBox::SkillBox()$/;"	f	class:SkillBox
SkillBox	src/dialog/cardeditor.h	/^class SkillBox: public QGraphicsObject{$/;"	c
SkillButtonWidth	src/ui/qsanbutton.h	/^    enum SkillButtonWidth { S_WIDTH_WIDE = 0, S_WIDTH_MED = 1, S_WIDTH_NARROW = 2, S_NUM_BUTTON_WIDTHS};    $/;"	g	class:QSanInvokeSkillButton
SkillCard	src/core/card.cpp	/^SkillCard::SkillCard()$/;"	f	class:SkillCard
SkillCard	src/core/card.h	/^class SkillCard: public Card{$/;"	c
SkillTitle	src/dialog/cardeditor.cpp	/^    SkillTitle(const QString &kingdom, const QString &text)$/;"	f	class:SkillTitle
SkillTitle	src/dialog/cardeditor.cpp	/^class SkillTitle: public QGraphicsPixmapItem{$/;"	c	file:
SkillType	src/ui/qsanbutton.h	/^    enum SkillType { S_SKILL_PROACTIVE, S_SKILL_FREQUENT, S_SKILL_COMPULSORY,$/;"	g	class:QSanSkillButton
Slash	src/package/standard-cards.cpp	/^Slash::Slash(Suit suit, int number): BasicCard(suit, number)$/;"	f	class:Slash
Slash	src/package/standard.h	/^class Slash: public BasicCard{$/;"	c
SlashBuffSkill	src/core/skill.cpp	/^SlashBuffSkill::SlashBuffSkill(const QString &name)$/;"	f	class:SlashBuffSkill
SlashBuffSkill	src/core/skill.h	/^class SlashBuffSkill: public TriggerSkill{$/;"	c
SlashEffect	src/core/structs.h	/^    SlashEffect,$/;"	e	enum:TriggerEvent
SlashEffectStruct	src/core/structs.h	/^struct SlashEffectStruct{$/;"	s
SlashEffectStruct	src/server/roomthread.cpp	/^SlashEffectStruct::SlashEffectStruct()$/;"	f	class:SlashEffectStruct
SlashEffected	src/core/structs.h	/^    SlashEffected,$/;"	e	enum:TriggerEvent
SlashHit	src/core/structs.h	/^    SlashHit,$/;"	e	enum:TriggerEvent
SlashMissed	src/core/structs.h	/^    SlashMissed,$/;"	e	enum:TriggerEvent
SlashProceed	src/core/structs.h	/^    SlashProceed,$/;"	e	enum:TriggerEvent
SmallFont	src/core/settings.h	/^    QFont SmallFont;$/;"	m	class:Settings
SmallTuxi	src/scenario/guandu-scenario.cpp	/^    SmallTuxi():PhaseChangeSkill("smalltuxi"){$/;"	f	class:SmallTuxi
SmallTuxi	src/scenario/guandu-scenario.cpp	/^class SmallTuxi:public PhaseChangeSkill{$/;"	c	file:
SmallTuxiCard	src/scenario/guandu-scenario.cpp	/^SmallTuxiCard::SmallTuxiCard(){$/;"	f	class:SmallTuxiCard
SmallTuxiCard	src/scenario/guandu-scenario.h	/^class SmallTuxiCard: public TuxiCard{$/;"	c
SmallTuxiViewAsSkill	src/scenario/guandu-scenario.cpp	/^    SmallTuxiViewAsSkill():ZeroCardViewAsSkill("smalltuxi"){$/;"	f	class:SmallTuxiViewAsSkill
SmallTuxiViewAsSkill	src/scenario/guandu-scenario.cpp	/^class SmallTuxiViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
SmallYeyanCard	src/package/god.cpp	/^SmallYeyanCard::SmallYeyanCard(){$/;"	f	class:SmallYeyanCard
SmallYeyanCard	src/package/god.h	/^class SmallYeyanCard: public YeyanCard{$/;"	c
SmartAI.getHegGeneralName 	lua/ai/hegemony-ai.lua	/^	SmartAI.getHegGeneralName = function(self, player)$/;"	f
SmartAI.getHegKingdom 	lua/ai/hegemony-ai.lua	/^	SmartAI.getHegKingdom = function(self)$/;"	f
SmartAI.hasHegSkills 	lua/ai/hegemony-ai.lua	/^	SmartAI.hasHegSkills = function(self, skills, players)$/;"	f
SmartAI.isEnemy 	lua/ai/hegemony-ai.lua	/^	SmartAI.isEnemy = function(self, player)$/;"	f
SmartAI.isFriend 	lua/ai/hegemony-ai.lua	/^	SmartAI.isFriend = function(self, player)$/;"	f
SmartAI.objectiveLevel 	lua/ai/hegemony-ai.lua	/^	SmartAI.objectiveLevel = function(self, player, recursive)$/;"	f
SmartAI.printAll 	lua/ai/hegemony-ai.lua	/^	SmartAI.printAll = function(self, player, intention)$/;"	f
SmartAI.printFEList 	lua/ai/hegemony-ai.lua	/^	SmartAI.printFEList = function(self)$/;"	f
SmartAI.updatePlayers 	lua/ai/hegemony-ai.lua	/^	SmartAI.updatePlayers = function(self, inclusive)$/;"	f
SmartAI:activate	extension-doc/15-Activate.lua	/^function SmartAI:activate(use)$/;"	f
SmartAI:activate	lua/ai/smart-ai.lua	/^function SmartAI:activate(use)$/;"	f
SmartAI:aoeIsEffective	lua/ai/smart-ai.lua	/^function SmartAI:aoeIsEffective(card, to)$/;"	f
SmartAI:askForAG	lua/ai/smart-ai.lua	/^function SmartAI:askForAG(card_ids, refusable, reason)$/;"	f
SmartAI:askForCard	lua/ai/smart-ai.lua	/^function SmartAI:askForCard(pattern, prompt, data)$/;"	f
SmartAI:askForCardChosen	lua/ai/smart-ai.lua	/^function SmartAI:askForCardChosen(who, flags, reason)$/;"	f
SmartAI:askForCardShow	lua/ai/smart-ai.lua	/^function SmartAI:askForCardShow(requestor, reason)$/;"	f
SmartAI:askForChoice	lua/ai/smart-ai.lua	/^function SmartAI:askForChoice(skill_name, choices, data)$/;"	f
SmartAI:askForDiscard	lua/ai/smart-ai.lua	/^function SmartAI:askForDiscard(reason, discard_num, min_num, optional, include_equip)$/;"	f
SmartAI:askForGuanxing	lua/ai/guanxing-ai.lua	/^function SmartAI:askForGuanxing(cards, up_only)$/;"	f
SmartAI:askForNullification	lua/ai/smart-ai.lua	/^function SmartAI:askForNullification(trick, from, to, positive)$/;"	f
SmartAI:askForPindian	lua/ai/smart-ai.lua	/^function SmartAI:askForPindian(requestor, reason)$/;"	f
SmartAI:askForPlayerChosen	lua/ai/smart-ai.lua	/^function SmartAI:askForPlayerChosen(targets, reason)$/;"	f
SmartAI:askForSinglePeach	lua/ai/smart-ai.lua	/^function SmartAI:askForSinglePeach(dying)$/;"	f
SmartAI:askForSkillInvoke	lua/ai/smart-ai.lua	/^function SmartAI:askForSkillInvoke(skill_name, data)$/;"	f
SmartAI:askForSuit	lua/ai/smart-ai.lua	/^function SmartAI:askForSuit(reason)$/;"	f
SmartAI:askForUseCard	lua/ai/smart-ai.lua	/^function SmartAI:askForUseCard(pattern, prompt)$/;"	f
SmartAI:askForYiji	lua/ai/smart-ai.lua	/^function SmartAI:askForYiji(card_ids)$/;"	f
SmartAI:assignKeep	lua/ai/smart-ai.lua	/^function SmartAI:assignKeep(num,start)$/;"	f
SmartAI:canAvoidAOE	lua/ai/smart-ai.lua	/^function SmartAI:canAvoidAOE(card)$/;"	f
SmartAI:canLiuli	lua/ai/standard_cards-ai.lua	/^function SmartAI:canLiuli(other, another)$/;"	f
SmartAI:canRetrial	lua/ai/smart-ai.lua	/^function SmartAI:canRetrial(player) $/;"	f
SmartAI:cantbeHurt	lua/ai/god-ai.lua	/^function SmartAI:cantbeHurt(player)$/;"	f
SmartAI:cardNeed	lua/ai/smart-ai.lua	/^function SmartAI:cardNeed(card)$/;"	f
SmartAI:damageIsEffective	lua/ai/smart-ai.lua	/^function SmartAI:damageIsEffective(player, nature, source)$/;"	f
SmartAI:damageMinusHp	lua/ai/smart-ai.lua	/^function SmartAI:damageMinusHp(self, enemy, type)$/;"	f
SmartAI:doNotSave	lua/ai/god-ai.lua	/^function SmartAI:doNotSave(player)$/;"	f
SmartAI:evaluateArmor	lua/ai/smart-ai.lua	/^function SmartAI:evaluateArmor(card, player)$/;"	f
SmartAI:evaluatePlayerCardsNum	lua/ai/smart-ai.lua	/^function SmartAI:evaluatePlayerCardsNum(class_name, player)$/;"	f
SmartAI:evaluateWeapon	lua/ai/smart-ai.lua	/^function SmartAI:evaluateWeapon(card)$/;"	f
SmartAI:exclude	lua/ai/smart-ai.lua	/^function SmartAI:exclude(players, card)$/;"	f
SmartAI:fillSkillCards	lua/ai/smart-ai.lua	/^function SmartAI:fillSkillCards(cards)$/;"	f
SmartAI:filterEvent	lua/ai/smart-ai.lua	/^function SmartAI:filterEvent(event, player, data)$/;"	f
SmartAI:getAllPeachNum	lua/ai/smart-ai.lua	/^function SmartAI:getAllPeachNum(player)$/;"	f
SmartAI:getAoeValue	lua/ai/smart-ai.lua	/^function SmartAI:getAoeValue(card, player)$/;"	f
SmartAI:getAoeValueTo	lua/ai/smart-ai.lua	/^function SmartAI:getAoeValueTo(card, to , from)$/;"	f
SmartAI:getCard	lua/ai/smart-ai.lua	/^function SmartAI:getCard(class_name, player)$/;"	f
SmartAI:getCardId	lua/ai/smart-ai.lua	/^function SmartAI:getCardId(class_name, player)$/;"	f
SmartAI:getCardNeedPlayer	lua/ai/smart-ai.lua	/^function SmartAI:getCardNeedPlayer(cards)$/;"	f
SmartAI:getCardRandomly	lua/ai/smart-ai.lua	/^function SmartAI:getCardRandomly(who, flags)$/;"	f
SmartAI:getCards	lua/ai/smart-ai.lua	/^function SmartAI:getCards(class_name, player, flag)$/;"	f
SmartAI:getCardsFromDiscardPile	lua/ai/smart-ai.lua	/^function SmartAI:getCardsFromDiscardPile(class_name)$/;"	f
SmartAI:getCardsFromDrawPile	lua/ai/smart-ai.lua	/^function SmartAI:getCardsFromDrawPile(class_name)$/;"	f
SmartAI:getCardsFromGame	lua/ai/smart-ai.lua	/^function SmartAI:getCardsFromGame(class_name)$/;"	f
SmartAI:getCardsNum	lua/ai/smart-ai.lua	/^function SmartAI:getCardsNum(class_name, player, flag, selfonly)$/;"	f
SmartAI:getChainedEnemies	lua/ai/maneuvering-ai.lua	/^function SmartAI:getChainedEnemies()$/;"	f
SmartAI:getChainedFriends	lua/ai/maneuvering-ai.lua	/^function SmartAI:getChainedFriends()$/;"	f
SmartAI:getDamagedEffects	lua/ai/smart-ai.lua	/^function SmartAI:getDamagedEffects(self, player)$/;"	f
SmartAI:getDangerousCard	lua/ai/standard_cards-ai.lua	/^function SmartAI:getDangerousCard(who)$/;"	f
SmartAI:getDistanceLimit	lua/ai/smart-ai.lua	/^function SmartAI:getDistanceLimit(card)$/;"	f
SmartAI:getDynamicUsePriority	lua/ai/smart-ai.lua	/^function SmartAI:getDynamicUsePriority(card)$/;"	f
SmartAI:getEnemies	lua/ai/smart-ai.lua	/^function SmartAI:getEnemies(player)$/;"	f
SmartAI:getFinalRetrial	lua/ai/smart-ai.lua	/^function SmartAI:getFinalRetrial(player) $/;"	f
SmartAI:getFriends	lua/ai/smart-ai.lua	/^function SmartAI:getFriends(player)$/;"	f
SmartAI:getFriendsNoself	lua/ai/smart-ai.lua	/^function SmartAI:getFriendsNoself(player)$/;"	f
SmartAI:getGuhuoCard	lua/ai/wind-ai.lua	/^function SmartAI:getGuhuoCard(class_name, player, at_play)$/;"	f
SmartAI:getJiemingChaofeng	lua/ai/smart-ai.lua	/^function SmartAI:getJiemingChaofeng(player)$/;"	f
SmartAI:getKeepValue	lua/ai/smart-ai.lua	/^function SmartAI:getKeepValue(card,kept)$/;"	f
SmartAI:getKnownNum	lua/ai/smart-ai.lua	/^function SmartAI:getKnownNum(player)$/;"	f
SmartAI:getMaxCard	lua/ai/smart-ai.lua	/^function SmartAI:getMaxCard(player)$/;"	f
SmartAI:getMinCard	lua/ai/smart-ai.lua	/^function SmartAI:getMinCard(player)$/;"	f
SmartAI:getOverflow	lua/ai/smart-ai.lua	/^function SmartAI:getOverflow(player)$/;"	f
SmartAI:getPriorTarget	lua/ai/smart-ai.lua	/^function SmartAI:getPriorTarget()$/;"	f
SmartAI:getRestCardsNum	lua/ai/smart-ai.lua	/^function SmartAI:getRestCardsNum(class_name)$/;"	f
SmartAI:getRetrialCardId	lua/ai/smart-ai.lua	/^function SmartAI:getRetrialCardId(cards, judge)$/;"	f
SmartAI:getSameEquip	lua/ai/smart-ai.lua	/^function SmartAI:getSameEquip(card, player)$/;"	f
SmartAI:getSuitNum	lua/ai/smart-ai.lua	/^function SmartAI:getSuitNum(suit_strings, include_equip, player)$/;"	f
SmartAI:getTurnUse	extension-doc/15-Activate.lua	/^function SmartAI:getTurnUse() -- 这个函数的目的就是得到计划使用的牌（下称“计划用牌”）$/;"	f
SmartAI:getTurnUse	lua/ai/smart-ai.lua	/^function SmartAI:getTurnUse()$/;"	f
SmartAI:getUsePriority	lua/ai/smart-ai.lua	/^function SmartAI:getUsePriority(card)$/;"	f
SmartAI:getUseValue	lua/ai/smart-ai.lua	/^function SmartAI:getUseValue(card)$/;"	f
SmartAI:getValuableCard	lua/ai/standard_cards-ai.lua	/^function SmartAI:getValuableCard(who)$/;"	f
SmartAI:hasEquip	lua/ai/smart-ai.lua	/^function SmartAI:hasEquip(card)$/;"	f
SmartAI:hasSameEquip	lua/ai/smart-ai.lua	/^function SmartAI:hasSameEquip(card, player) -- obsolete$/;"	f
SmartAI:hasSkill	lua/ai/smart-ai.lua	/^function SmartAI:hasSkill(skill)$/;"	f
SmartAI:hasSkills	lua/ai/smart-ai.lua	/^function SmartAI:hasSkills(skill_names, player)$/;"	f
SmartAI:hasSuit	lua/ai/smart-ai.lua	/^function SmartAI:hasSuit(suit_strings, include_equip, player)$/;"	f
SmartAI:hasTrickEffective	lua/ai/smart-ai.lua	/^function SmartAI:hasTrickEffective(card, player)$/;"	f
SmartAI:hasWizard	lua/ai/smart-ai.lua	/^function SmartAI:hasWizard(players,onlyharm)$/;"	f
SmartAI:initialize	lua/ai/hegemony-ai.lua	/^	function SmartAI:initialize(player)$/;"	f
SmartAI:initialize	lua/ai/smart-ai.lua	/^function SmartAI:initialize(player)$/;"	f
SmartAI:isEnemy	lua/ai/smart-ai.lua	/^function SmartAI:isEnemy(other, another)$/;"	f
SmartAI:isEquip	lua/ai/smart-ai.lua	/^function SmartAI:isEquip(equip_name, player)$/;"	f
SmartAI:isFriend	lua/ai/smart-ai.lua	/^function SmartAI:isFriend(other, another)$/;"	f
SmartAI:isGoodChainPartner	lua/ai/maneuvering-ai.lua	/^function SmartAI:isGoodChainPartner(player)  $/;"	f
SmartAI:isGoodChainTarget	lua/ai/maneuvering-ai.lua	/^function SmartAI:isGoodChainTarget(who)    $/;"	f
SmartAI:isWeak	lua/ai/smart-ai.lua	/^function SmartAI:isWeak(player)$/;"	f
SmartAI:log	lua/ai/debug-ai.lua	/^function SmartAI:log(outString)$/;"	f
SmartAI:needBear	lua/ai/god-ai.lua	/^function SmartAI:needBear(player)$/;"	f
SmartAI:needDeath	lua/ai/god-ai.lua	/^function SmartAI:needDeath(player)$/;"	f
SmartAI:needKongcheng	lua/ai/smart-ai.lua	/^function SmartAI:needKongcheng(player)$/;"	f
SmartAI:needRende	lua/ai/smart-ai.lua	/^function SmartAI:needRende()$/;"	f
SmartAI:needRetrial	lua/ai/smart-ai.lua	/^function SmartAI:needRetrial(judge)  $/;"	f
SmartAI:objectiveLevel	lua/ai/smart-ai.lua	/^function SmartAI:objectiveLevel(player)$/;"	f
SmartAI:printFEList	lua/ai/debug-ai.lua	/^function SmartAI:printFEList()$/;"	f
SmartAI:printStand	lua/ai/debug-ai.lua	/^function SmartAI:printStand()$/;"	f
SmartAI:searchForAnaleptic	lua/ai/maneuvering-ai.lua	/^function SmartAI:searchForAnaleptic(use,enemy,slash)$/;"	f
SmartAI:slashIsAvailable	lua/ai/standard_cards-ai.lua	/^function SmartAI:slashIsAvailable(player)$/;"	f
SmartAI:slashIsEffective	lua/ai/standard_cards-ai.lua	/^function SmartAI:slashIsEffective(slash, to)$/;"	f
SmartAI:slashProhibit	lua/ai/standard_cards-ai.lua	/^function SmartAI:slashProhibit(card,enemy)$/;"	f
SmartAI:sort	lua/ai/smart-ai.lua	/^function SmartAI:sort(players, key, inverse)$/;"	f
SmartAI:sortByCardNeed	lua/ai/smart-ai.lua	/^function SmartAI:sortByCardNeed(cards)$/;"	f
SmartAI:sortByDynamicUsePriority	lua/ai/smart-ai.lua	/^function SmartAI:sortByDynamicUsePriority(cards)$/;"	f
SmartAI:sortByKeepValue	lua/ai/smart-ai.lua	/^function SmartAI:sortByKeepValue(cards,inverse,kept)$/;"	f
SmartAI:sortByUsePriority	lua/ai/smart-ai.lua	/^function SmartAI:sortByUsePriority(cards)$/;"	f
SmartAI:sortByUseValue	lua/ai/smart-ai.lua	/^function SmartAI:sortByUseValue(cards,inverse)$/;"	f
SmartAI:sortEnemies	lua/ai/smart-ai.lua	/^function SmartAI:sortEnemies(players)$/;"	f
SmartAI:speak	lua/ai/chat-ai.lua	/^function SmartAI:speak(type, isFemale)$/;"	f
SmartAI:updateAlivePlayerRoles	lua/ai/smart-ai.lua	/^function SmartAI:updateAlivePlayerRoles()$/;"	f
SmartAI:updatePlayers	lua/ai/smart-ai.lua	/^function SmartAI:updatePlayers()$/;"	f
SmartAI:updateRoleTargets	lua/ai/smart-ai.lua	/^function SmartAI:updateRoleTargets()$/;"	f
SmartAI:useBasicCard	lua/ai/smart-ai.lua	/^function SmartAI:useBasicCard(card, use)$/;"	f
SmartAI:useCardAmazingGrace	lua/ai/standard_cards-ai.lua	/^function SmartAI:useCardAmazingGrace(card, use)$/;"	f
SmartAI:useCardByClassName	extension-doc/15-Activate.lua	/^function SmartAI:useCardByClassName(card, use)$/;"	f
SmartAI:useCardByClassName	lua/ai/smart-ai.lua	/^function SmartAI:useCardByClassName(card, use)$/;"	f
SmartAI:useCardCollateral	lua/ai/standard_cards-ai.lua	/^function SmartAI:useCardCollateral(card, use)$/;"	f
SmartAI:useCardDuel	lua/ai/standard_cards-ai.lua	/^function SmartAI:useCardDuel(duel, use)$/;"	f
SmartAI:useCardExNihilo	lua/ai/standard_cards-ai.lua	/^function SmartAI:useCardExNihilo(card, use)$/;"	f
SmartAI:useCardFireAttack	lua/ai/maneuvering-ai.lua	/^function SmartAI:useCardFireAttack(fire_attack, use)  $/;"	f
SmartAI:useCardFireSlash	lua/ai/maneuvering-ai.lua	/^function SmartAI:useCardFireSlash(...)$/;"	f
SmartAI:useCardGaleShell	lua/ai/joy-ai.lua	/^function SmartAI:useCardGaleShell(card, use)$/;"	f
SmartAI:useCardGodSalvation	lua/ai/standard_cards-ai.lua	/^function SmartAI:useCardGodSalvation(card, use)$/;"	f
SmartAI:useCardIndulgence	lua/ai/standard_cards-ai.lua	/^function SmartAI:useCardIndulgence(card, use)$/;"	f
SmartAI:useCardIronChain	lua/ai/maneuvering-ai.lua	/^function SmartAI:useCardIronChain(card, use)    $/;"	f
SmartAI:useCardLightning	lua/ai/standard_cards-ai.lua	/^function SmartAI:useCardLightning(card, use)$/;"	f
SmartAI:useCardPeach	lua/ai/standard_cards-ai.lua	/^function SmartAI:useCardPeach(card, use)$/;"	f
SmartAI:useCardSlash	lua/ai/standard_cards-ai.lua	/^function SmartAI:useCardSlash(card, use)$/;"	f
SmartAI:useCardSnatchOrDismantlement	lua/ai/standard_cards-ai.lua	/^function SmartAI:useCardSnatchOrDismantlement(card, use)$/;"	f
SmartAI:useCardSupplyShortage	lua/ai/maneuvering-ai.lua	/^function SmartAI:useCardSupplyShortage(card, use)$/;"	f
SmartAI:useCardThunderSlash	lua/ai/maneuvering-ai.lua	/^function SmartAI:useCardThunderSlash(...)$/;"	f
SmartAI:useCardYanxiaoCard	lua/ai/bgm-ai.lua	/^function SmartAI:useCardYanxiaoCard(card, use)$/;"	f
SmartAI:useEquipCard	lua/ai/smart-ai.lua	/^function SmartAI:useEquipCard(card, use)$/;"	f
SmartAI:useSkillCard	lua/ai/smart-ai.lua	/^function SmartAI:useSkillCard(card,use)$/;"	f
SmartAI:useTrickCard	lua/ai/smart-ai.lua	/^function SmartAI:useTrickCard(card, use)$/;"	f
SmartAI:useTrickCard	lua/ai/zombie_mode-ai.lua	/^	function SmartAI:useTrickCard(card, use)$/;"	f
Snatch	src/package/standard-cards.cpp	/^Snatch::Snatch(Suit suit, int number):SingleTargetTrick(suit, number, true) {$/;"	f	class:Snatch
Snatch	src/package/standard.h	/^class Snatch:public SingleTargetTrick{$/;"	c
Songwei	src/package/thicket.cpp	/^    Songwei():TriggerSkill("songwei$"){$/;"	f	class:Songwei
Songwei	src/package/thicket.cpp	/^class Songwei: public TriggerSkill{$/;"	c	file:
Sound	include/fmod/fmod.hpp	/^    class Sound$/;"	c	namespace:FMOD
Sound	src/core/audio.cpp	/^    Sound(const QString &filename)$/;"	f	class:Sound
Sound	src/core/audio.cpp	/^class Sound{$/;"	c	file:
SoundCache	src/core/audio.cpp	/^static QCache<QString, Sound> SoundCache;$/;"	v	file:
SoundGroup	include/fmod/fmod.hpp	/^    class SoundGroup$/;"	c	namespace:FMOD
SourceLineResolverBase	src/breakpad/google_breakpad/processor/source_line_resolver_base.h	/^class SourceLineResolverBase : public SourceLineResolverInterface {$/;"	c	namespace:google_breakpad
SourceLineResolverBase	src/breakpad/processor/source_line_resolver_base.cc	/^SourceLineResolverBase::SourceLineResolverBase($/;"	f	class:google_breakpad::SourceLineResolverBase
SourceLineResolverInterface	src/breakpad/google_breakpad/processor/source_line_resolver_interface.h	/^  SourceLineResolverInterface() {}$/;"	f	class:google_breakpad::SourceLineResolverInterface
SourceLineResolverInterface	src/breakpad/google_breakpad/processor/source_line_resolver_interface.h	/^class SourceLineResolverInterface {$/;"	c	namespace:google_breakpad
Spade	src/core/card.h	/^    enum Suit {Spade, Club, Heart, Diamond, NoSuit};$/;"	e	enum:Card::Suit
SpeakThread	src/ui/roomscene.cpp	/^SpeakThread::SpeakThread()$/;"	f	class:SpeakThread
SpeakThread	src/ui/roomscene.h	/^class SpeakThread: public QThread{$/;"	c
Spear	src/package/standard-cards.cpp	/^Spear::Spear(Suit suit, int number)$/;"	f	class:Spear
Spear	src/package/standard-equips.h	/^class Spear:public Weapon{$/;"	c
SpearSkill	src/package/standard-cards.cpp	/^    SpearSkill():ViewAsSkill("Spear"){$/;"	f	class:SpearSkill
SpearSkill	src/package/standard-cards.cpp	/^class SpearSkill: public ViewAsSkill{$/;"	c	file:
Spear_skill.getTurnUseCard	lua/ai/standard_cards-ai.lua	/^Spear_skill.getTurnUseCard=function(self,inclusive)$/;"	f
Special3v3Package	src/package/special3v3-package.cpp	/^Special3v3Package::Special3v3Package():Package("Special3v3")$/;"	f	class:Special3v3Package
Special3v3Package	src/package/special3v3-package.h	/^class Special3v3Package : public Package{$/;"	c
SpecialPack	src/package/package.h	/^        SpecialPack,$/;"	e	enum:Package::Type
Sprite	src/ui/sprite.cpp	/^Sprite::Sprite(QGraphicsItem *parent) :$/;"	f	class:Sprite
Sprite	src/ui/sprite.h	/^class Sprite : public QObject, public QGraphicsPixmapItem$/;"	c
StackFrame	src/breakpad/google_breakpad/processor/stack_frame.h	/^  StackFrame()$/;"	f	struct:google_breakpad::StackFrame
StackFrame	src/breakpad/google_breakpad/processor/stack_frame.h	/^struct StackFrame {$/;"	s	namespace:google_breakpad
StackFrameAMD64	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  StackFrameAMD64() : context(), context_validity(CONTEXT_VALID_NONE) {}$/;"	f	struct:google_breakpad::StackFrameAMD64
StackFrameAMD64	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^struct StackFrameAMD64 : public StackFrame {$/;"	s	namespace:google_breakpad
StackFrameARM	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  StackFrameARM() : context(), context_validity(CONTEXT_VALID_NONE) {}$/;"	f	struct:google_breakpad::StackFrameARM
StackFrameARM	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^struct StackFrameARM : public StackFrame {$/;"	s	namespace:google_breakpad
StackFramePPC	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  StackFramePPC() : context(), context_validity(CONTEXT_VALID_NONE) {}$/;"	f	struct:google_breakpad::StackFramePPC
StackFramePPC	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^struct StackFramePPC : public StackFrame {$/;"	s	namespace:google_breakpad
StackFrameSPARC	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  StackFrameSPARC() : context(), context_validity(CONTEXT_VALID_NONE) {}$/;"	f	struct:google_breakpad::StackFrameSPARC
StackFrameSPARC	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^struct StackFrameSPARC : public StackFrame {$/;"	s	namespace:google_breakpad
StackFrameX86	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^ StackFrameX86()$/;"	f	struct:google_breakpad::StackFrameX86
StackFrameX86	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^struct StackFrameX86 : public StackFrame {$/;"	s	namespace:google_breakpad
StackInfoTypes	src/breakpad/processor/windows_frame_info.h	/^  enum StackInfoTypes {$/;"	g	struct:google_breakpad::WindowsFrameInfo
Stackwalker	src/breakpad/google_breakpad/processor/stackwalker.h	/^class Stackwalker {$/;"	c	namespace:google_breakpad
Stackwalker	src/breakpad/processor/stackwalker.cc	/^Stackwalker::Stackwalker(const SystemInfo *system_info,$/;"	f	class:google_breakpad::Stackwalker
StackwalkerAMD64	src/breakpad/processor/stackwalker_amd64.cc	/^StackwalkerAMD64::StackwalkerAMD64(const SystemInfo *system_info,$/;"	f	class:google_breakpad::StackwalkerAMD64
StackwalkerAMD64	src/breakpad/processor/stackwalker_amd64.h	/^class StackwalkerAMD64 : public Stackwalker {$/;"	c	namespace:google_breakpad
StackwalkerAMD64Fixture	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  StackwalkerAMD64Fixture()$/;"	f	class:StackwalkerAMD64Fixture
StackwalkerAMD64Fixture	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^class StackwalkerAMD64Fixture {$/;"	c	file:
StackwalkerARM	src/breakpad/processor/stackwalker_arm.cc	/^StackwalkerARM::StackwalkerARM(const SystemInfo *system_info,$/;"	f	class:google_breakpad::StackwalkerARM
StackwalkerARM	src/breakpad/processor/stackwalker_arm.h	/^class StackwalkerARM : public Stackwalker {$/;"	c	namespace:google_breakpad
StackwalkerARMFixture	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  StackwalkerARMFixture()$/;"	f	class:StackwalkerARMFixture
StackwalkerARMFixture	src/breakpad/processor/stackwalker_arm_unittest.cc	/^class StackwalkerARMFixture {$/;"	c	file:
StackwalkerARMFixtureIOS	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  StackwalkerARMFixtureIOS() {$/;"	f	class:StackwalkerARMFixtureIOS
StackwalkerARMFixtureIOS	src/breakpad/processor/stackwalker_arm_unittest.cc	/^class StackwalkerARMFixtureIOS : public StackwalkerARMFixture {$/;"	c	file:
StackwalkerForCPU	src/breakpad/processor/stackwalker.cc	/^Stackwalker* Stackwalker::StackwalkerForCPU($/;"	f	class:google_breakpad::Stackwalker
StackwalkerPPC	src/breakpad/processor/stackwalker_ppc.cc	/^StackwalkerPPC::StackwalkerPPC(const SystemInfo *system_info,$/;"	f	class:google_breakpad::StackwalkerPPC
StackwalkerPPC	src/breakpad/processor/stackwalker_ppc.h	/^class StackwalkerPPC : public Stackwalker {$/;"	c	namespace:google_breakpad
StackwalkerSPARC	src/breakpad/processor/stackwalker_sparc.cc	/^StackwalkerSPARC::StackwalkerSPARC(const SystemInfo *system_info,$/;"	f	class:google_breakpad::StackwalkerSPARC
StackwalkerSPARC	src/breakpad/processor/stackwalker_sparc.h	/^class StackwalkerSPARC : public Stackwalker {$/;"	c	namespace:google_breakpad
StackwalkerX86	src/breakpad/processor/stackwalker_x86.cc	/^StackwalkerX86::StackwalkerX86(const SystemInfo *system_info,$/;"	f	class:google_breakpad::StackwalkerX86
StackwalkerX86	src/breakpad/processor/stackwalker_x86.h	/^class StackwalkerX86 : public Stackwalker {$/;"	c	namespace:google_breakpad
StackwalkerX86Fixture	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  StackwalkerX86Fixture()$/;"	f	class:StackwalkerX86Fixture
StackwalkerX86Fixture	src/breakpad/processor/stackwalker_x86_unittest.cc	/^class StackwalkerX86Fixture {$/;"	c	file:
StageChange	src/core/structs.h	/^    StageChange,$/;"	e	enum:TriggerEvent
StandardCardPackage	src/package/standard-cards.cpp	/^StandardCardPackage::StandardCardPackage()$/;"	f	class:StandardCardPackage
StandardCardPackage	src/package/standard-equips.h	/^class StandardCardPackage: public Package{$/;"	c
StandardExCardPackage	src/package/standard-cards.cpp	/^StandardExCardPackage::StandardExCardPackage()$/;"	f	class:StandardExCardPackage
StandardExCardPackage	src/package/standard-equips.h	/^class StandardExCardPackage: public Package{$/;"	c
StandardPackage	src/package/standard.cpp	/^StandardPackage::StandardPackage()$/;"	f	class:StandardPackage
StandardPackage	src/package/standard.h	/^class StandardPackage:public Package{$/;"	c
Start	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^bool CrashGenerationServer::Start() {$/;"	f	class:google_breakpad::CrashGenerationServer
Start	src/core/player.h	/^    enum Phase {RoundStart, Start, Judge, Draw, Play, Discard, Finish, NotActive, PhaseNone};$/;"	e	enum:Player::Phase
StartJudge	src/core/structs.h	/^    StartJudge,$/;"	e	enum:TriggerEvent
StartScene	src/ui/startscene.cpp	/^StartScene::StartScene()$/;"	f	class:StartScene
StartScene	src/ui/startscene.h	/^class StartScene: public QGraphicsScene{$/;"	c
StaticAddressMap	src/breakpad/processor/static_address_map.h	/^  StaticAddressMap(): map_() { }$/;"	f	class:google_breakpad::StaticAddressMap
StaticAddressMap	src/breakpad/processor/static_address_map.h	/^  explicit StaticAddressMap(const char *map_data): map_(map_data) { }$/;"	f	class:google_breakpad::StaticAddressMap
StaticAddressMap	src/breakpad/processor/static_address_map.h	/^class StaticAddressMap {$/;"	c	namespace:google_breakpad
StaticContainedRangeMap	src/breakpad/processor/static_contained_range_map-inl.h	/^StaticContainedRangeMap<AddressType, EntryType>::StaticContainedRangeMap($/;"	f	class:google_breakpad::StaticContainedRangeMap
StaticContainedRangeMap	src/breakpad/processor/static_contained_range_map.h	/^  StaticContainedRangeMap(): base_(), entry_size_(), entry_ptr_(), map_() { }$/;"	f	class:google_breakpad::StaticContainedRangeMap
StaticContainedRangeMap	src/breakpad/processor/static_contained_range_map.h	/^class StaticContainedRangeMap {$/;"	c	namespace:google_breakpad
StaticMap	src/breakpad/processor/static_map-inl.h	/^StaticMap<Key, Value, Compare>::StaticMap(const char* raw_data)$/;"	f	class:google_breakpad::StaticMap
StaticMap	src/breakpad/processor/static_map.h	/^  StaticMap() : raw_data_(0),$/;"	f	class:google_breakpad::StaticMap
StaticMap	src/breakpad/processor/static_map.h	/^class StaticMap {$/;"	c	namespace:google_breakpad
StaticMapIterator	src/breakpad/processor/static_map_iterator-inl.h	/^StaticMapIterator<Key, Value, Compare>::StaticMapIterator(const char* base,$/;"	f	class:google_breakpad::StaticMapIterator
StaticMapIterator	src/breakpad/processor/static_map_iterator.h	/^  StaticMapIterator(): index_(-1), base_(NULL) { }$/;"	f	class:google_breakpad::StaticMapIterator
StaticMapIterator	src/breakpad/processor/static_map_iterator.h	/^class StaticMapIterator {$/;"	c	namespace:google_breakpad
StaticRangeMap	src/breakpad/processor/static_range_map.h	/^  StaticRangeMap(): map_() { }$/;"	f	class:google_breakpad::StaticRangeMap
StaticRangeMap	src/breakpad/processor/static_range_map.h	/^  explicit StaticRangeMap(const char *memory): map_(memory) { }$/;"	f	class:google_breakpad::StaticRangeMap
StaticRangeMap	src/breakpad/processor/static_range_map.h	/^class StaticRangeMap {$/;"	c	namespace:google_breakpad
StaticString	src/jsoncpp/include/json/value.h	/^      explicit StaticString( const char *czstring )$/;"	f	class:Json::StaticString
StaticString	src/jsoncpp/include/json/value.h	/^   class JSON_API StaticString$/;"	c	namespace:Json
Status	src/client/client.h	/^    enum Status{$/;"	g	class:Client
StdMap	src/breakpad/processor/static_map_unittest.cc	/^typedef std::map< KeyType, ValueType > StdMap;$/;"	t	file:
StdMapSerializer	src/breakpad/processor/map_serializers.h	/^class StdMapSerializer {$/;"	c	namespace:google_breakpad
StkId	src/lua/lobject.h	/^typedef TValue *StkId;  \/* index to stack elements *\/$/;"	t
Store	src/breakpad/processor/address_map-inl.h	/^bool AddressMap<AddressType, EntryType>::Store(const AddressType &address,$/;"	f	class:google_breakpad::AddressMap
StoreDuplicateFileID	src/breakpad/common/windows/pdb_source_line_writer.h	/^  void StoreDuplicateFileID(const wstring &file, DWORD id) {$/;"	f	class:google_breakpad::PDBSourceLineWriter
StoreRange	src/breakpad/processor/contained_range_map-inl.h	/^bool ContainedRangeMap<AddressType, EntryType>::StoreRange($/;"	f	class:google_breakpad::ContainedRangeMap
StoreRange	src/breakpad/processor/range_map-inl.h	/^bool RangeMap<AddressType, EntryType>::StoreRange(const AddressType &base,$/;"	f	class:google_breakpad::RangeMap
StoreTest	src/breakpad/processor/range_map_unittest.cc	/^static bool StoreTest(TestMap *range_map, const RangeTest *range_test) {$/;"	f	namespace:__anon84
StoreTest	src/breakpad/processor/static_range_map_unittest.cc	/^void TestStaticRangeMap::StoreTest(RMap* range_map,$/;"	f	class:google_breakpad::TestStaticRangeMap
Stream	src/breakpad/processor/synth_minidump.h	/^  Stream(const Dump &dump, u_int32_t type) : Section(dump), type_(type) { }$/;"	f	class:google_breakpad::SynthMinidump::Stream
Stream	src/breakpad/processor/synth_minidump.h	/^class Stream: public Section {$/;"	c	namespace:google_breakpad::SynthMinidump
String	src/breakpad/processor/synth_minidump.cc	/^String::String(const Dump &dump, const string &contents) : Section(dump) {$/;"	f	class:google_breakpad::SynthMinidump::String
String	src/breakpad/processor/synth_minidump.h	/^class String: public Section {$/;"	c	namespace:google_breakpad::SynthMinidump
StringToVector	src/breakpad/processor/tokenize.cc	/^void StringToVector(const string &str, vector<char> &vec) {$/;"	f	namespace:google_breakpad
StringsToIds	src/core/card.cpp	/^QList<int> Card::StringsToIds(const QStringList &strings){$/;"	f	class:Card
StripSeparator	src/breakpad/processor/minidump_stackwalk.cc	/^static string StripSeparator(const string &original) {$/;"	f	namespace:__anon83
StrokeWeight	include/freetype/freetype/tttables.h	/^    FT_Char    StrokeWeight;$/;"	m	struct:TT_PCLT_
Style	include/freetype/freetype/tttables.h	/^    FT_UShort  Style;$/;"	m	struct:TT_PCLT_
StyledStreamWriter	src/jsoncpp/include/json/writer.h	/^   class JSON_API StyledStreamWriter$/;"	c	namespace:Json
StyledStreamWriter	src/jsoncpp/src/json_writer.cpp	/^StyledStreamWriter::StyledStreamWriter( std::string indentation )$/;"	f	class:Json::StyledStreamWriter
StyledWriter	src/jsoncpp/include/json/writer.h	/^   class JSON_API StyledWriter: public Writer$/;"	c	namespace:Json
StyledWriter	src/jsoncpp/src/json_writer.cpp	/^StyledWriter::StyledWriter()$/;"	f	class:Json::StyledWriter
Suit	src/core/card.h	/^    enum Suit {Spade, Club, Heart, Diamond, NoSuit};$/;"	g	class:Card
Suit2String	src/core/card.cpp	/^QString Card::Suit2String(Suit suit){$/;"	f	class:Card
SunceZhiba	src/package/mountainpackage.cpp	/^    SunceZhiba():TriggerSkill("sunce_zhiba$"){$/;"	f	class:SunceZhiba
SunceZhiba	src/package/mountainpackage.cpp	/^class SunceZhiba: public TriggerSkill{$/;"	c	file:
SuperGuanxing	src/package/standard-generals.cpp	/^    SuperGuanxing():Guanxing(){$/;"	f	class:SuperGuanxing
SuperGuanxing	src/package/standard-generals.cpp	/^class SuperGuanxing: public Guanxing{$/;"	c	file:
SupplyShortage	src/package/maneuvering.cpp	/^SupplyShortage::SupplyShortage(Card::Suit suit, int number)$/;"	f	class:SupplyShortage
SupplyShortage	src/package/maneuvering.h	/^class SupplyShortage: public DelayedTrick{$/;"	c
Swap	src/breakpad/processor/minidump.cc	/^static inline void Swap(MDGUID* guid) {$/;"	f	namespace:google_breakpad
Swap	src/breakpad/processor/minidump.cc	/^static inline void Swap(MDLocationDescriptor* location_descriptor) {$/;"	f	namespace:google_breakpad
Swap	src/breakpad/processor/minidump.cc	/^static inline void Swap(MDMemoryDescriptor* memory_descriptor) {$/;"	f	namespace:google_breakpad
Swap	src/breakpad/processor/minidump.cc	/^static inline void Swap(u_int16_t* value) {$/;"	f	namespace:google_breakpad
Swap	src/breakpad/processor/minidump.cc	/^static inline void Swap(u_int32_t* value) {$/;"	f	namespace:google_breakpad
Swap	src/breakpad/processor/minidump.cc	/^static inline void Swap(u_int64_t* value) {$/;"	f	namespace:google_breakpad
Swap	src/breakpad/processor/minidump.cc	/^static inline void Swap(u_int8_t* value) {$/;"	f	namespace:google_breakpad
Swap	src/breakpad/processor/minidump.cc	/^static void Swap(u_int128_t* value) {$/;"	f	namespace:google_breakpad
SwigMovePointer	swig/sanguosha_wrap.cxx	/^    SwigMovePointer(T *p) : ptr(p) { }$/;"	f	struct:SwigValueWrapper::SwigMovePointer
SwigMovePointer	swig/sanguosha_wrap.cxx	/^  struct SwigMovePointer {$/;"	s	class:SwigValueWrapper	file:
SwigValueInit	swig/sanguosha_wrap.cxx	/^template <typename T> T SwigValueInit() {$/;"	f
SwigValueWrapper	swig/sanguosha_wrap.cxx	/^  SwigValueWrapper() : pointer(0) { }$/;"	f	class:SwigValueWrapper
SwigValueWrapper	swig/sanguosha_wrap.cxx	/^template<typename T> class SwigValueWrapper {$/;"	c	file:
SymbolDataVector	src/breakpad/processor/stackwalker_unittest_utils.h	/^  typedef std::vector<char*> SymbolDataVector;$/;"	t	class:MockSymbolSupplier
SymbolResult	src/breakpad/google_breakpad/processor/symbol_supplier.h	/^  enum SymbolResult {$/;"	g	class:google_breakpad::SymbolSupplier
SymbolSet	include/freetype/freetype/tttables.h	/^    FT_UShort  SymbolSet;$/;"	m	struct:TT_PCLT_
SymbolSupplier	src/breakpad/google_breakpad/processor/symbol_supplier.h	/^class SymbolSupplier {$/;"	c	namespace:google_breakpad
SynthMinidump	src/breakpad/processor/synth_minidump.cc	/^namespace SynthMinidump {$/;"	n	namespace:google_breakpad	file:
SynthMinidump	src/breakpad/processor/synth_minidump.h	/^namespace SynthMinidump {$/;"	n	namespace:google_breakpad
System	include/fmod/fmod.hpp	/^    class System$/;"	c	namespace:FMOD
System	src/core/audio.cpp	/^static FMOD_SYSTEM *System;$/;"	v	file:
SystemInfo	src/breakpad/google_breakpad/processor/system_info.h	/^  SystemInfo() : os(), os_short(), os_version(), cpu(), cpu_info(),$/;"	f	struct:google_breakpad::SystemInfo
SystemInfo	src/breakpad/google_breakpad/processor/system_info.h	/^struct SystemInfo {$/;"	s	namespace:google_breakpad
SystemInfo	src/breakpad/processor/stackwalker_unittest_utils.h	/^  typedef google_breakpad::SystemInfo SystemInfo;$/;"	t	class:MockSymbolSupplier
SystemInfo	src/breakpad/processor/synth_minidump.cc	/^SystemInfo::SystemInfo(const Dump &dump,$/;"	f	class:google_breakpad::SynthMinidump::SystemInfo
SystemInfo	src/breakpad/processor/synth_minidump.h	/^class SystemInfo: public Stream {$/;"	c	namespace:google_breakpad::SynthMinidump
System_Create	include/fmod/fmod.hpp	/^    inline FMOD_RESULT System_Create(System **system) { return FMOD_System_Create((FMOD_SYSTEM **)system); }$/;"	f	namespace:FMOD
T1_BLEND_BLUE_SCALE	include/freetype/freetype/t1tables.h	/^    T1_BLEND_BLUE_SCALE,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_BLUE_SHIFT	include/freetype/freetype/t1tables.h	/^    T1_BLEND_BLUE_SHIFT,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_BLUE_VALUES	include/freetype/freetype/t1tables.h	/^    T1_BLEND_BLUE_VALUES,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_FAMILY_BLUES	include/freetype/freetype/t1tables.h	/^    T1_BLEND_FAMILY_BLUES,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_FAMILY_OTHER_BLUES	include/freetype/freetype/t1tables.h	/^    T1_BLEND_FAMILY_OTHER_BLUES,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_FORCE_BOLD	include/freetype/freetype/t1tables.h	/^    T1_BLEND_FORCE_BOLD,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_ITALIC_ANGLE	include/freetype/freetype/t1tables.h	/^    T1_BLEND_ITALIC_ANGLE,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_MAX	include/freetype/freetype/t1tables.h	/^    T1_BLEND_MAX$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_OTHER_BLUES	include/freetype/freetype/t1tables.h	/^    T1_BLEND_OTHER_BLUES,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_STANDARD_HEIGHT	include/freetype/freetype/t1tables.h	/^    T1_BLEND_STANDARD_HEIGHT,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_STANDARD_WIDTH	include/freetype/freetype/t1tables.h	/^    T1_BLEND_STANDARD_WIDTH,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_STEM_SNAP_HEIGHTS	include/freetype/freetype/t1tables.h	/^    T1_BLEND_STEM_SNAP_HEIGHTS,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_STEM_SNAP_WIDTHS	include/freetype/freetype/t1tables.h	/^    T1_BLEND_STEM_SNAP_WIDTHS,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_UNDERLINE_POSITION	include/freetype/freetype/t1tables.h	/^    T1_BLEND_UNDERLINE_POSITION = 0,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_UNDERLINE_THICKNESS	include/freetype/freetype/t1tables.h	/^    T1_BLEND_UNDERLINE_THICKNESS,$/;"	e	enum:T1_Blend_Flags_
T1_Blend	include/freetype/freetype/t1tables.h	/^  typedef PS_BlendRec  T1_Blend;$/;"	t
T1_Blend_Flags	include/freetype/freetype/t1tables.h	/^  } T1_Blend_Flags;$/;"	t	typeref:enum:T1_Blend_Flags_
T1_Blend_Flags_	include/freetype/freetype/t1tables.h	/^  typedef enum  T1_Blend_Flags_$/;"	g
T1_Builder	include/freetype/freetype/internal/psaux.h	/^  typedef struct T1_BuilderRec_*  T1_Builder;$/;"	t	typeref:struct:T1_BuilderRec_
T1_BuilderRec	include/freetype/freetype/internal/psaux.h	/^  } T1_BuilderRec;$/;"	t	typeref:struct:T1_BuilderRec_
T1_BuilderRec_	include/freetype/freetype/internal/psaux.h	/^  typedef struct  T1_BuilderRec_$/;"	s
T1_Builder_Add_Contour_Func	include/freetype/freetype/internal/psaux.h	/^  (*T1_Builder_Add_Contour_Func)( T1_Builder  builder );$/;"	t
T1_Builder_Add_Point1_Func	include/freetype/freetype/internal/psaux.h	/^  (*T1_Builder_Add_Point1_Func)( T1_Builder  builder,$/;"	t
T1_Builder_Add_Point_Func	include/freetype/freetype/internal/psaux.h	/^  (*T1_Builder_Add_Point_Func)( T1_Builder  builder,$/;"	t
T1_Builder_Check_Points_Func	include/freetype/freetype/internal/psaux.h	/^  (*T1_Builder_Check_Points_Func)( T1_Builder  builder,$/;"	t
T1_Builder_Close_Contour_Func	include/freetype/freetype/internal/psaux.h	/^  (*T1_Builder_Close_Contour_Func)( T1_Builder  builder );$/;"	t
T1_Builder_Funcs	include/freetype/freetype/internal/psaux.h	/^  typedef const struct T1_Builder_FuncsRec_*  T1_Builder_Funcs;$/;"	t	typeref:struct:T1_Builder_FuncsRec_
T1_Builder_FuncsRec	include/freetype/freetype/internal/psaux.h	/^  } T1_Builder_FuncsRec;$/;"	t	typeref:struct:T1_Builder_FuncsRec_
T1_Builder_FuncsRec_	include/freetype/freetype/internal/psaux.h	/^  typedef struct  T1_Builder_FuncsRec_$/;"	s
T1_Builder_Start_Point_Func	include/freetype/freetype/internal/psaux.h	/^  (*T1_Builder_Start_Point_Func)( T1_Builder  builder,$/;"	t
T1_CMap_Classes	include/freetype/freetype/internal/psaux.h	/^  typedef const struct T1_CMap_ClassesRec_*  T1_CMap_Classes;$/;"	t	typeref:struct:T1_CMap_ClassesRec_
T1_CMap_ClassesRec	include/freetype/freetype/internal/psaux.h	/^  } T1_CMap_ClassesRec;$/;"	t	typeref:struct:T1_CMap_ClassesRec_
T1_CMap_ClassesRec_	include/freetype/freetype/internal/psaux.h	/^  typedef struct T1_CMap_ClassesRec_$/;"	s
T1_CONFIG_OPTION_NO_AFM	include/freetype/freetype/config/ftoption.h	704;"	d
T1_CONFIG_OPTION_NO_MM_SUPPORT	include/freetype/freetype/config/ftoption.h	713;"	d
T1_Decoder	include/freetype/freetype/internal/psaux.h	/^  typedef struct T1_DecoderRec_*              T1_Decoder;$/;"	t	typeref:struct:T1_DecoderRec_
T1_DecoderRec	include/freetype/freetype/internal/psaux.h	/^  } T1_DecoderRec;$/;"	t	typeref:struct:T1_DecoderRec_
T1_DecoderRec_	include/freetype/freetype/internal/psaux.h	/^  typedef struct  T1_DecoderRec_$/;"	s
T1_Decoder_Callback	include/freetype/freetype/internal/psaux.h	/^  (*T1_Decoder_Callback)( T1_Decoder  decoder,$/;"	t
T1_Decoder_Funcs	include/freetype/freetype/internal/psaux.h	/^  typedef const struct T1_Decoder_FuncsRec_*  T1_Decoder_Funcs;$/;"	t	typeref:struct:T1_Decoder_FuncsRec_
T1_Decoder_FuncsRec	include/freetype/freetype/internal/psaux.h	/^  } T1_Decoder_FuncsRec;$/;"	t	typeref:struct:T1_Decoder_FuncsRec_
T1_Decoder_FuncsRec_	include/freetype/freetype/internal/psaux.h	/^  typedef struct  T1_Decoder_FuncsRec_$/;"	s
T1_Decoder_Zone	include/freetype/freetype/internal/psaux.h	/^  } T1_Decoder_ZoneRec, *T1_Decoder_Zone;$/;"	t	typeref:struct:T1_Decoder_ZoneRec_
T1_Decoder_ZoneRec	include/freetype/freetype/internal/psaux.h	/^  } T1_Decoder_ZoneRec, *T1_Decoder_Zone;$/;"	t	typeref:struct:T1_Decoder_ZoneRec_
T1_Decoder_ZoneRec_	include/freetype/freetype/internal/psaux.h	/^  typedef struct  T1_Decoder_ZoneRec_$/;"	s
T1_DesignMap	include/freetype/freetype/t1tables.h	/^  typedef PS_DesignMapRec  T1_DesignMap;$/;"	t
T1_ENCODING_TYPE_ARRAY	include/freetype/freetype/t1tables.h	/^    T1_ENCODING_TYPE_ARRAY,$/;"	e	enum:T1_EncodingType_
T1_ENCODING_TYPE_EXPERT	include/freetype/freetype/t1tables.h	/^    T1_ENCODING_TYPE_EXPERT$/;"	e	enum:T1_EncodingType_
T1_ENCODING_TYPE_ISOLATIN1	include/freetype/freetype/t1tables.h	/^    T1_ENCODING_TYPE_ISOLATIN1,$/;"	e	enum:T1_EncodingType_
T1_ENCODING_TYPE_NONE	include/freetype/freetype/t1tables.h	/^    T1_ENCODING_TYPE_NONE = 0,$/;"	e	enum:T1_EncodingType_
T1_ENCODING_TYPE_STANDARD	include/freetype/freetype/t1tables.h	/^    T1_ENCODING_TYPE_STANDARD,$/;"	e	enum:T1_EncodingType_
T1_Encoding	include/freetype/freetype/internal/t1types.h	/^  } T1_EncodingRec, *T1_Encoding;$/;"	t	typeref:struct:T1_EncodingRecRec_
T1_EncodingRec	include/freetype/freetype/internal/t1types.h	/^  } T1_EncodingRec, *T1_Encoding;$/;"	t	typeref:struct:T1_EncodingRecRec_
T1_EncodingRecRec_	include/freetype/freetype/internal/t1types.h	/^  typedef struct  T1_EncodingRecRec_$/;"	s
T1_EncodingType	include/freetype/freetype/t1tables.h	/^  } T1_EncodingType;$/;"	t	typeref:enum:T1_EncodingType_
T1_EncodingType_	include/freetype/freetype/t1tables.h	/^  typedef enum  T1_EncodingType_$/;"	g
T1_FIELD_BBOX	include/freetype/freetype/internal/psaux.h	304;"	d
T1_FIELD_BOOL	include/freetype/freetype/internal/psaux.h	285;"	d
T1_FIELD_CALLBACK	include/freetype/freetype/internal/psaux.h	324;"	d
T1_FIELD_DICT_FONTDICT	include/freetype/freetype/internal/psaux.h	239;"	d
T1_FIELD_DICT_PRIVATE	include/freetype/freetype/internal/psaux.h	240;"	d
T1_FIELD_FIXED	include/freetype/freetype/internal/psaux.h	291;"	d
T1_FIELD_FIXED_1000	include/freetype/freetype/internal/psaux.h	294;"	d
T1_FIELD_FIXED_TABLE	include/freetype/freetype/internal/psaux.h	312;"	d
T1_FIELD_FIXED_TABLE2	include/freetype/freetype/internal/psaux.h	320;"	d
T1_FIELD_KEY	include/freetype/freetype/internal/psaux.h	301;"	d
T1_FIELD_LOCATION_BBOX	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_BBOX,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_BLEND	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_BLEND,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_CID_INFO	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_CID_INFO,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_FACE	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_FACE,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_FONT_DICT	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_FONT_DICT,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_FONT_EXTRA	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_FONT_EXTRA,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_FONT_INFO	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_FONT_INFO,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_LOADER	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_LOADER,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_MAX	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_MAX$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_PRIVATE	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_LOCATION_PRIVATE,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_NUM	include/freetype/freetype/internal/psaux.h	288;"	d
T1_FIELD_NUM_TABLE	include/freetype/freetype/internal/psaux.h	308;"	d
T1_FIELD_NUM_TABLE2	include/freetype/freetype/internal/psaux.h	316;"	d
T1_FIELD_STRING	include/freetype/freetype/internal/psaux.h	298;"	d
T1_FIELD_TYPE_BBOX	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_TYPE_BBOX,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_BOOL	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_TYPE_BOOL,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_CALLBACK	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_TYPE_CALLBACK,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_FIXED	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_TYPE_FIXED,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_FIXED_1000	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_TYPE_FIXED_1000,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_FIXED_ARRAY	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_TYPE_FIXED_ARRAY,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_INTEGER	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_TYPE_INTEGER,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_INTEGER_ARRAY	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_TYPE_INTEGER_ARRAY,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_KEY	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_TYPE_KEY,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_MAX	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_TYPE_MAX$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_NONE	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_TYPE_NONE = 0,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_STRING	include/freetype/freetype/internal/psaux.h	/^    T1_FIELD_TYPE_STRING,$/;"	e	enum:T1_FieldType_
T1_Face	include/freetype/freetype/internal/t1types.h	/^  typedef struct T1_FaceRec_*   T1_Face;$/;"	t	typeref:struct:T1_FaceRec_
T1_FaceRec	include/freetype/freetype/internal/t1types.h	/^  } T1_FaceRec;$/;"	t	typeref:struct:T1_FaceRec_
T1_FaceRec_	include/freetype/freetype/internal/t1types.h	/^  typedef struct  T1_FaceRec_$/;"	s
T1_Field	include/freetype/freetype/internal/psaux.h	/^  typedef struct T1_FieldRec_*   T1_Field;$/;"	t	typeref:struct:T1_FieldRec_
T1_FieldLocation	include/freetype/freetype/internal/psaux.h	/^  } T1_FieldLocation;$/;"	t	typeref:enum:T1_FieldLocation_
T1_FieldLocation_	include/freetype/freetype/internal/psaux.h	/^  typedef enum  T1_FieldLocation_$/;"	g
T1_FieldRec	include/freetype/freetype/internal/psaux.h	/^  } T1_FieldRec;$/;"	t	typeref:struct:T1_FieldRec_
T1_FieldRec_	include/freetype/freetype/internal/psaux.h	/^  typedef struct  T1_FieldRec_$/;"	s
T1_FieldType	include/freetype/freetype/internal/psaux.h	/^  } T1_FieldType;$/;"	t	typeref:enum:T1_FieldType_
T1_FieldType_	include/freetype/freetype/internal/psaux.h	/^  typedef enum  T1_FieldType_$/;"	g
T1_Field_ParseFunc	include/freetype/freetype/internal/psaux.h	/^  (*T1_Field_ParseFunc)( FT_Face     face,$/;"	t
T1_Font	include/freetype/freetype/internal/t1types.h	/^  } T1_FontRec, *T1_Font;$/;"	t	typeref:struct:T1_FontRec_
T1_FontInfo	include/freetype/freetype/t1tables.h	/^  typedef PS_FontInfoRec  T1_FontInfo;$/;"	t
T1_FontRec	include/freetype/freetype/internal/t1types.h	/^  } T1_FontRec, *T1_Font;$/;"	t	typeref:struct:T1_FontRec_
T1_FontRec_	include/freetype/freetype/internal/t1types.h	/^  typedef struct  T1_FontRec_$/;"	s
T1_Hints	include/freetype/freetype/internal/pshints.h	/^  typedef struct T1_HintsRec_*  T1_Hints;$/;"	t	typeref:struct:T1_HintsRec_
T1_Hints_ApplyFunc	include/freetype/freetype/internal/pshints.h	/^  (*T1_Hints_ApplyFunc)( T1_Hints        hints,$/;"	t
T1_Hints_CloseFunc	include/freetype/freetype/internal/pshints.h	/^  (*T1_Hints_CloseFunc)( T1_Hints  hints,$/;"	t
T1_Hints_Funcs	include/freetype/freetype/internal/pshints.h	/^  typedef const struct T1_Hints_FuncsRec_*  T1_Hints_Funcs;$/;"	t	typeref:struct:T1_Hints_FuncsRec_
T1_Hints_FuncsRec	include/freetype/freetype/internal/pshints.h	/^  } T1_Hints_FuncsRec;$/;"	t	typeref:struct:T1_Hints_FuncsRec_
T1_Hints_FuncsRec_	include/freetype/freetype/internal/pshints.h	/^  typedef struct  T1_Hints_FuncsRec_$/;"	s
T1_Hints_OpenFunc	include/freetype/freetype/internal/pshints.h	/^  (*T1_Hints_OpenFunc)( T1_Hints  hints );$/;"	t
T1_Hints_ResetFunc	include/freetype/freetype/internal/pshints.h	/^  (*T1_Hints_ResetFunc)( T1_Hints  hints,$/;"	t
T1_Hints_SetStem3Func	include/freetype/freetype/internal/pshints.h	/^  (*T1_Hints_SetStem3Func)( T1_Hints   hints,$/;"	t
T1_Hints_SetStemFunc	include/freetype/freetype/internal/pshints.h	/^  (*T1_Hints_SetStemFunc)( T1_Hints   hints,$/;"	t
T1_MAX_CHARSTRINGS_OPERANDS	include/freetype/freetype/config/ftoption.h	694;"	d
T1_MAX_DICT_DEPTH	include/freetype/freetype/config/ftoption.h	676;"	d
T1_MAX_MM_AXIS	include/freetype/freetype/t1tables.h	243;"	d
T1_MAX_MM_DESIGNS	include/freetype/freetype/t1tables.h	240;"	d
T1_MAX_MM_MAP_POINTS	include/freetype/freetype/t1tables.h	246;"	d
T1_MAX_SUBRS_CALLS	include/freetype/freetype/config/ftoption.h	684;"	d
T1_NEW_CALLBACK_FIELD	include/freetype/freetype/internal/psaux.h	254;"	d
T1_NEW_SIMPLE_FIELD	include/freetype/freetype/internal/psaux.h	244;"	d
T1_NEW_TABLE_FIELD	include/freetype/freetype/internal/psaux.h	263;"	d
T1_NEW_TABLE_FIELD2	include/freetype/freetype/internal/psaux.h	274;"	d
T1_ParseState	include/freetype/freetype/internal/psaux.h	/^  } T1_ParseState;$/;"	t	typeref:enum:T1_ParseState_
T1_ParseState_	include/freetype/freetype/internal/psaux.h	/^  typedef enum  T1_ParseState_$/;"	g
T1_Parse_Have_Moveto	include/freetype/freetype/internal/psaux.h	/^    T1_Parse_Have_Moveto,$/;"	e	enum:T1_ParseState_
T1_Parse_Have_Path	include/freetype/freetype/internal/psaux.h	/^    T1_Parse_Have_Path$/;"	e	enum:T1_ParseState_
T1_Parse_Have_Width	include/freetype/freetype/internal/psaux.h	/^    T1_Parse_Have_Width,$/;"	e	enum:T1_ParseState_
T1_Parse_Start	include/freetype/freetype/internal/psaux.h	/^    T1_Parse_Start,$/;"	e	enum:T1_ParseState_
T1_Private	include/freetype/freetype/t1tables.h	/^  typedef PS_PrivateRec  T1_Private;$/;"	t
T1_TOKEN_TYPE_ANY	include/freetype/freetype/internal/psaux.h	/^    T1_TOKEN_TYPE_ANY,$/;"	e	enum:T1_TokenType_
T1_TOKEN_TYPE_ARRAY	include/freetype/freetype/internal/psaux.h	/^    T1_TOKEN_TYPE_ARRAY,$/;"	e	enum:T1_TokenType_
T1_TOKEN_TYPE_KEY	include/freetype/freetype/internal/psaux.h	/^    T1_TOKEN_TYPE_KEY, \/* aka `name' *\/$/;"	e	enum:T1_TokenType_
T1_TOKEN_TYPE_MAX	include/freetype/freetype/internal/psaux.h	/^    T1_TOKEN_TYPE_MAX$/;"	e	enum:T1_TokenType_
T1_TOKEN_TYPE_NONE	include/freetype/freetype/internal/psaux.h	/^    T1_TOKEN_TYPE_NONE = 0,$/;"	e	enum:T1_TokenType_
T1_TOKEN_TYPE_STRING	include/freetype/freetype/internal/psaux.h	/^    T1_TOKEN_TYPE_STRING,$/;"	e	enum:T1_TokenType_
T1_Token	include/freetype/freetype/internal/psaux.h	/^  typedef struct T1_TokenRec_*   T1_Token;$/;"	t	typeref:struct:T1_TokenRec_
T1_TokenRec	include/freetype/freetype/internal/psaux.h	/^  } T1_TokenRec;$/;"	t	typeref:struct:T1_TokenRec_
T1_TokenRec_	include/freetype/freetype/internal/psaux.h	/^  typedef struct  T1_TokenRec_$/;"	s
T1_TokenType	include/freetype/freetype/internal/psaux.h	/^  } T1_TokenType;$/;"	t	typeref:enum:T1_TokenType_
T1_TokenType_	include/freetype/freetype/internal/psaux.h	/^  typedef enum  T1_TokenType_$/;"	g
T2_Hints	include/freetype/freetype/internal/pshints.h	/^  typedef struct T2_HintsRec_*  T2_Hints;$/;"	t	typeref:struct:T2_HintsRec_
T2_Hints_ApplyFunc	include/freetype/freetype/internal/pshints.h	/^  (*T2_Hints_ApplyFunc)( T2_Hints        hints,$/;"	t
T2_Hints_CloseFunc	include/freetype/freetype/internal/pshints.h	/^  (*T2_Hints_CloseFunc)( T2_Hints  hints,$/;"	t
T2_Hints_CounterFunc	include/freetype/freetype/internal/pshints.h	/^  (*T2_Hints_CounterFunc)( T2_Hints        hints,$/;"	t
T2_Hints_Funcs	include/freetype/freetype/internal/pshints.h	/^  typedef const struct T2_Hints_FuncsRec_*  T2_Hints_Funcs;$/;"	t	typeref:struct:T2_Hints_FuncsRec_
T2_Hints_FuncsRec	include/freetype/freetype/internal/pshints.h	/^  } T2_Hints_FuncsRec;$/;"	t	typeref:struct:T2_Hints_FuncsRec_
T2_Hints_FuncsRec_	include/freetype/freetype/internal/pshints.h	/^  typedef struct  T2_Hints_FuncsRec_$/;"	s
T2_Hints_MaskFunc	include/freetype/freetype/internal/pshints.h	/^  (*T2_Hints_MaskFunc)( T2_Hints        hints,$/;"	t
T2_Hints_OpenFunc	include/freetype/freetype/internal/pshints.h	/^  (*T2_Hints_OpenFunc)( T2_Hints  hints );$/;"	t
T2_Hints_StemsFunc	include/freetype/freetype/internal/pshints.h	/^  (*T2_Hints_StemsFunc)( T2_Hints   hints,$/;"	t
TEST	src/breakpad/processor/binarystream_unittest.cc	/^TEST(BinaryStreamTest, InitWithData) {$/;"	f	namespace:__anon72
TEST	src/breakpad/processor/binarystream_unittest.cc	/^TEST(BinaryStreamTest, InitWithDataLeadingNull) {$/;"	f	namespace:__anon72
TEST	src/breakpad/processor/binarystream_unittest.cc	/^TEST(BinaryStreamTest, InitWithDataVector) {$/;"	f	namespace:__anon72
TEST	src/breakpad/processor/disassembler_x86_unittest.cc	/^TEST(DisassemblerX86Test, BadReadClobberThenWrite) {$/;"	f	namespace:__anon68
TEST	src/breakpad/processor/disassembler_x86_unittest.cc	/^TEST(DisassemblerX86Test, BadReadLeadsToBlockWrite) {$/;"	f	namespace:__anon68
TEST	src/breakpad/processor/disassembler_x86_unittest.cc	/^TEST(DisassemblerX86Test, BadReadLeadsToBranch) {$/;"	f	namespace:__anon68
TEST	src/breakpad/processor/disassembler_x86_unittest.cc	/^TEST(DisassemblerX86Test, BadReadThenCMP) {$/;"	f	namespace:__anon68
TEST	src/breakpad/processor/disassembler_x86_unittest.cc	/^TEST(DisassemblerX86Test, BadReadXCHGThenWrite) {$/;"	f	namespace:__anon68
TEST	src/breakpad/processor/disassembler_x86_unittest.cc	/^TEST(DisassemblerX86Test, BadWriteLeadsToPushedArg) {$/;"	f	namespace:__anon68
TEST	src/breakpad/processor/disassembler_x86_unittest.cc	/^TEST(DisassemblerX86Test, SimpleInvalidInstruction) {$/;"	f	namespace:__anon68
TEST	src/breakpad/processor/disassembler_x86_unittest.cc	/^TEST(DisassemblerX86Test, SimpleReturnInstruction) {$/;"	f	namespace:__anon68
TEST	src/breakpad/processor/exploitability_unittest.cc	/^TEST(ExploitabilityTest, TestWindowsEngine) {$/;"	f	namespace:__anon74
TEST	src/breakpad/processor/minidump_unittest.cc	/^TEST(Dump, BigDump) {$/;"	f	namespace:__anon86
TEST	src/breakpad/processor/minidump_unittest.cc	/^TEST(Dump, OneExceptionARM) {$/;"	f	namespace:__anon86
TEST	src/breakpad/processor/minidump_unittest.cc	/^TEST(Dump, OneExceptionARMOldFlags) {$/;"	f	namespace:__anon86
TEST	src/breakpad/processor/minidump_unittest.cc	/^TEST(Dump, OneExceptionX86) {$/;"	f	namespace:__anon86
TEST	src/breakpad/processor/minidump_unittest.cc	/^TEST(Dump, OneExceptionX86XState) {$/;"	f	namespace:__anon86
TEST	src/breakpad/processor/minidump_unittest.cc	/^TEST(Dump, OneMemory) {$/;"	f	namespace:__anon86
TEST	src/breakpad/processor/minidump_unittest.cc	/^TEST(Dump, OneMemoryInfo) {$/;"	f	namespace:__anon86
TEST	src/breakpad/processor/minidump_unittest.cc	/^TEST(Dump, OneModule) {$/;"	f	namespace:__anon86
TEST	src/breakpad/processor/minidump_unittest.cc	/^TEST(Dump, OneStream) {$/;"	f	namespace:__anon86
TEST	src/breakpad/processor/minidump_unittest.cc	/^TEST(Dump, OneSystemInfo) {$/;"	f	namespace:__anon86
TEST	src/breakpad/processor/minidump_unittest.cc	/^TEST(Dump, OneThread) {$/;"	f	namespace:__anon86
TEST	src/breakpad/processor/minidump_unittest.cc	/^TEST(Dump, ReadBackEmpty) {$/;"	f	namespace:__anon86
TEST	src/breakpad/processor/minidump_unittest.cc	/^TEST(Dump, ReadBackEmptyBigEndian) {$/;"	f	namespace:__anon86
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(Context, ARM) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(Context, X86) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(ContextDeathTest, X86BadEndianness) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(ContextDeathTest, X86BadFlags) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(Dump, Header) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(Dump, HeaderBigEndian) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(Dump, OneSection) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(Exception, Simple) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(List, Empty) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(List, Two) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(Memory, CiteMemoryIn) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(Memory, Here) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(Section, CiteLocationIn) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(Section, Simple) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(Stream, CiteStreamIn) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(String, CiteStringIn) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(String, Simple) {$/;"	f
TEST	src/breakpad/processor/synth_minidump_unittest.cc	/^TEST(Thread, Simple) {$/;"	f
TEST_F	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^TEST_F(TestBasicSourceLineResolver, TestInvalidLoads)$/;"	f	namespace:__anon71
TEST_F	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^TEST_F(TestBasicSourceLineResolver, TestLoadAndResolve)$/;"	f	namespace:__anon71
TEST_F	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^TEST_F(TestBasicSourceLineResolver, TestUnload)$/;"	f	namespace:__anon71
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, AppendStreamResultsByteLength) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, ReadEmptyString) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, ReadMixed) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, ReadMultiU16) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, ReadMultiU32) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, ReadMultiU64) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, ReadMultiU8) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, ReadString) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, ReadStringMissing) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, ReadStringTruncated) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, ReadU16) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, ReadU32) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, ReadU64) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, ReadU8) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, StreamByteLength) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamBasicTest, StreamSetStr) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamU8Test, ReadString) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamU8Test, ReadU16) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamU8Test, ReadU32) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/binarystream_unittest.cc	/^TEST_F(BinaryStreamU8Test, ReadU64) {$/;"	f	namespace:__anon72
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(ParseHandler, CFARARule) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(ParseHandler, RegisterRules) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, CFA) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, CFANoColonNoExpr) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, CFANoExpr) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, CFARARegs) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, Empty) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, EmptyName) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, LoneColon) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, NoName) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, NoNameTwo) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, RA) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, RANoColonNoExpr) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, RANoExpr) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, Reg) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, RegNoExpr) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, RegNoExprRule) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, RuleLoneColon) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, StartsWithExpr) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, Whitespace) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Parser, WhitespaceLoneColon) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Scope, CFALacksCFA) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Scope, CFALacksRA) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Scope, CFASeesCurrentRegs) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Scope, RALacksRA) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Scope, RASeesCFA) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Scope, RASeesCurrentRegs) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Scope, RegistersSeeCFA) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Scope, RegsLackRA) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Scope, RegsSeeRegs) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Scope, SeparateTempsRA) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Simple, NoCFA) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Simple, NoRA) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Simple, RulesOverride) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Simple, SetCFAAndRARule) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(Simple, SetManyRules) {$/;"	f
TEST_F	src/breakpad/processor/cfi_frame_info_unittest.cc	/^TEST_F(SimpleWalker, Walk) {$/;"	f
TEST_F	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^TEST_F(TestFastSourceLineResolver, CompareModule) {$/;"	f	namespace:__anon73
TEST_F	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^TEST_F(TestFastSourceLineResolver, TestInvalidLoads) {$/;"	f	namespace:__anon73
TEST_F	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^TEST_F(TestFastSourceLineResolver, TestLoadAndResolve) {$/;"	f	namespace:__anon73
TEST_F	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^TEST_F(TestFastSourceLineResolver, TestUnload) {$/;"	f	namespace:__anon73
TEST_F	src/breakpad/processor/map_serializers_unittest.cc	/^TEST_F(TestAddressMapSerializer, EmptyMapTestCase) {$/;"	f
TEST_F	src/breakpad/processor/map_serializers_unittest.cc	/^TEST_F(TestAddressMapSerializer, MapWithFourElementsTestCase) {$/;"	f
TEST_F	src/breakpad/processor/map_serializers_unittest.cc	/^TEST_F(TestAddressMapSerializer, MapWithTwoElementsTestCase) {$/;"	f
TEST_F	src/breakpad/processor/map_serializers_unittest.cc	/^TEST_F(TestContainedRangeMapSerializer, EmptyMapTestCase) {$/;"	f
TEST_F	src/breakpad/processor/map_serializers_unittest.cc	/^TEST_F(TestContainedRangeMapSerializer, MapWithOneRangeTestCase) {$/;"	f
TEST_F	src/breakpad/processor/map_serializers_unittest.cc	/^TEST_F(TestContainedRangeMapSerializer, MapWithTwoLevelsTestCase) {$/;"	f
TEST_F	src/breakpad/processor/map_serializers_unittest.cc	/^TEST_F(TestRangeMapSerializer, EmptyMapTestCase) {$/;"	f
TEST_F	src/breakpad/processor/map_serializers_unittest.cc	/^TEST_F(TestRangeMapSerializer, MapWithOneRangeTestCase) {$/;"	f
TEST_F	src/breakpad/processor/map_serializers_unittest.cc	/^TEST_F(TestRangeMapSerializer, MapWithThreeRangesTestCase) {$/;"	f
TEST_F	src/breakpad/processor/map_serializers_unittest.cc	/^TEST_F(TestStdMapSerializer, EmptyMapTestCase) {$/;"	f
TEST_F	src/breakpad/processor/map_serializers_unittest.cc	/^TEST_F(TestStdMapSerializer, MapWithFiveElementsTestCase) {$/;"	f
TEST_F	src/breakpad/processor/map_serializers_unittest.cc	/^TEST_F(TestStdMapSerializer, MapWithTwoElementsTestCase) {$/;"	f
TEST_F	src/breakpad/processor/minidump_processor_unittest.cc	/^TEST_F(MinidumpProcessorTest, TestBasicProcessing) {$/;"	f	namespace:__anon77
TEST_F	src/breakpad/processor/minidump_processor_unittest.cc	/^TEST_F(MinidumpProcessorTest, TestCorruptMinidumps) {$/;"	f	namespace:__anon77
TEST_F	src/breakpad/processor/minidump_processor_unittest.cc	/^TEST_F(MinidumpProcessorTest, TestSymbolSupplierLookupCounts) {$/;"	f	namespace:__anon77
TEST_F	src/breakpad/processor/minidump_unittest.cc	/^TEST_F(MinidumpTest, TestMinidumpFromFile) {$/;"	f	namespace:__anon86
TEST_F	src/breakpad/processor/minidump_unittest.cc	/^TEST_F(MinidumpTest, TestMinidumpFromStream) {$/;"	f	namespace:__anon86
TEST_F	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^TEST_F(CFI, At4000) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^TEST_F(CFI, At4001) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^TEST_F(CFI, At4002) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^TEST_F(CFI, At4003) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^TEST_F(CFI, At4004) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^TEST_F(CFI, At4005) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^TEST_F(CFI, At4006) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^TEST_F(GetCallerFrame, CallerPushedRBP) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^TEST_F(GetCallerFrame, ScanWithFunctionSymbols) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^TEST_F(GetCallerFrame, ScanWithoutSymbols) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^TEST_F(GetContextFrame, Simple) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^TEST_F(SanityCheck, NoResolver) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(CFI, At4000) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(CFI, At4001) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(CFI, At4001LimitedValidity) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(CFI, At4002) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(CFI, At4003) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(CFI, At4004) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(CFI, At4005) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(CFI, At4006) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(CFI, RejectBackwards) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(CFI, RejectBadExpressions) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(GetCallerFrame, ScanWithFunctionSymbols) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(GetCallerFrame, ScanWithoutSymbols) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(GetContextFrame, Simple) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(GetFramesByFramePointer, FramePointerAndCFI) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(GetFramesByFramePointer, OnlyFramePointer) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_arm_unittest.cc	/^TEST_F(SanityCheck, NoResolver) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(CFI, At4000) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(CFI, At4001) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(CFI, At4002) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(CFI, At4003) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(CFI, At4004) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(CFI, At4005) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(CFI, At4006) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(GetCallerFrame, Traditional) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(GetCallerFrame, TraditionalScan) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(GetCallerFrame, TraditionalScanLongWay) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(GetCallerFrame, WindowsFPOSystemCall) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(GetCallerFrame, WindowsFPOUnchangedEBP) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(GetCallerFrame, WindowsFPOUsedEBP) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(GetCallerFrame, WindowsFrameData) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(GetCallerFrame, WindowsFrameDataAligned) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(GetCallerFrame, WindowsFrameDataBadEIPScan) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(GetCallerFrame, WindowsFrameDataParameterSize) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(GetCallerFrame, WindowsFrameDataScan) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(GetContextFrame, Simple) {$/;"	f
TEST_F	src/breakpad/processor/stackwalker_x86_unittest.cc	/^TEST_F(SanityCheck, NoResolver) {$/;"	f
TEST_F	src/breakpad/processor/static_address_map_unittest.cc	/^TEST_F(TestStaticAddressMap, Test1000RandomElementsMap) {$/;"	f
TEST_F	src/breakpad/processor/static_address_map_unittest.cc	/^TEST_F(TestStaticAddressMap, TestEmptyMap) {$/;"	f
TEST_F	src/breakpad/processor/static_address_map_unittest.cc	/^TEST_F(TestStaticAddressMap, TestOneElementMap) {$/;"	f
TEST_F	src/breakpad/processor/static_address_map_unittest.cc	/^TEST_F(TestStaticAddressMap, TestSixElementsMap) {$/;"	f
TEST_F	src/breakpad/processor/static_contained_range_map_unittest.cc	/^TEST_F(TestStaticCRMMap, RunTestData) {$/;"	f	namespace:google_breakpad
TEST_F	src/breakpad/processor/static_contained_range_map_unittest.cc	/^TEST_F(TestStaticCRMMap, TestEmptyMap) {$/;"	f	namespace:google_breakpad
TEST_F	src/breakpad/processor/static_contained_range_map_unittest.cc	/^TEST_F(TestStaticCRMMap, TestSingleElementMap) {$/;"	f	namespace:google_breakpad
TEST_F	src/breakpad/processor/static_map_unittest.cc	/^TEST_F(TestInvalidMap, TestNegativeNumberNodes) {$/;"	f
TEST_F	src/breakpad/processor/static_map_unittest.cc	/^TEST_F(TestInvalidMap, TestUnSortedKeys) {$/;"	f
TEST_F	src/breakpad/processor/static_map_unittest.cc	/^TEST_F(TestInvalidMap, TestWrongOffsets) {$/;"	f
TEST_F	src/breakpad/processor/static_map_unittest.cc	/^TEST_F(TestValidMap, Test1000RandomElements) {$/;"	f
TEST_F	src/breakpad/processor/static_map_unittest.cc	/^TEST_F(TestValidMap, Test100Elements) {$/;"	f
TEST_F	src/breakpad/processor/static_map_unittest.cc	/^TEST_F(TestValidMap, TestEmptyMap) {$/;"	f
TEST_F	src/breakpad/processor/static_map_unittest.cc	/^TEST_F(TestValidMap, TestSingleElement) {$/;"	f
TEST_F	src/breakpad/processor/static_range_map_unittest.cc	/^TEST_F(TestStaticRangeMap, RunTestCase0Again) {$/;"	f	namespace:google_breakpad
TEST_F	src/breakpad/processor/static_range_map_unittest.cc	/^TEST_F(TestStaticRangeMap, TestCase0) {$/;"	f	namespace:google_breakpad
TEST_F	src/breakpad/processor/static_range_map_unittest.cc	/^TEST_F(TestStaticRangeMap, TestCase1) {$/;"	f	namespace:google_breakpad
TEST_F	src/breakpad/processor/static_range_map_unittest.cc	/^TEST_F(TestStaticRangeMap, TestCase2) {$/;"	f	namespace:google_breakpad
TEST_F	src/breakpad/processor/static_range_map_unittest.cc	/^TEST_F(TestStaticRangeMap, TestCase3) {$/;"	f	namespace:google_breakpad
THICKET_H	src/package/thicket.h	2;"	d
TK_AND	src/lua/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_BREAK	src/lua/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_CONCAT	src/lua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_DO	src/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_DOTS	src/lua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_ELSE	src/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_ELSEIF	src/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_END	src/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_EOS	src/lua/llex.h	/^  TK_NAME, TK_STRING, TK_EOS$/;"	e	enum:RESERVED
TK_EQ	src/lua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_FALSE	src/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FOR	src/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FUNCTION	src/lua/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_GE	src/lua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_IF	src/lua/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IN	src/lua/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_LE	src/lua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_LOCAL	src/lua/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NAME	src/lua/llex.h	/^  TK_NAME, TK_STRING, TK_EOS$/;"	e	enum:RESERVED
TK_NE	src/lua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_NIL	src/lua/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NOT	src/lua/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NUMBER	src/lua/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_OR	src/lua/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_REPEAT	src/lua/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_RETURN	src/lua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_STRING	src/lua/llex.h	/^  TK_NAME, TK_STRING, TK_EOS$/;"	e	enum:RESERVED
TK_THEN	src/lua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_TRUE	src/lua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_UNTIL	src/lua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_WHILE	src/lua/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TKey	src/lua/lobject.h	/^typedef union TKey {$/;"	u
TKey	src/lua/lobject.h	/^} TKey;$/;"	t	typeref:union:TKey
TMS	src/lua/ltm.h	/^} TMS;$/;"	t	typeref:enum:__anon96
TM_ADD	src/lua/ltm.h	/^  TM_ADD,$/;"	e	enum:__anon96
TM_CALL	src/lua/ltm.h	/^  TM_CALL,$/;"	e	enum:__anon96
TM_CONCAT	src/lua/ltm.h	/^  TM_CONCAT,$/;"	e	enum:__anon96
TM_DIV	src/lua/ltm.h	/^  TM_DIV,$/;"	e	enum:__anon96
TM_EQ	src/lua/ltm.h	/^  TM_EQ,  \/* last tag method with `fast' access *\/$/;"	e	enum:__anon96
TM_GC	src/lua/ltm.h	/^  TM_GC,$/;"	e	enum:__anon96
TM_INDEX	src/lua/ltm.h	/^  TM_INDEX,$/;"	e	enum:__anon96
TM_LE	src/lua/ltm.h	/^  TM_LE,$/;"	e	enum:__anon96
TM_LEN	src/lua/ltm.h	/^  TM_LEN,$/;"	e	enum:__anon96
TM_LT	src/lua/ltm.h	/^  TM_LT,$/;"	e	enum:__anon96
TM_MOD	src/lua/ltm.h	/^  TM_MOD,$/;"	e	enum:__anon96
TM_MODE	src/lua/ltm.h	/^  TM_MODE,$/;"	e	enum:__anon96
TM_MUL	src/lua/ltm.h	/^  TM_MUL,$/;"	e	enum:__anon96
TM_N	src/lua/ltm.h	/^  TM_N		\/* number of elements in the enum *\/$/;"	e	enum:__anon96
TM_NEWINDEX	src/lua/ltm.h	/^  TM_NEWINDEX,$/;"	e	enum:__anon96
TM_POW	src/lua/ltm.h	/^  TM_POW,$/;"	e	enum:__anon96
TM_SUB	src/lua/ltm.h	/^  TM_SUB,$/;"	e	enum:__anon96
TM_UNM	src/lua/ltm.h	/^  TM_UNM,$/;"	e	enum:__anon96
TOKEN_LEN	src/lua/llex.h	17;"	d
TRUE	include/freetype/freetype/internal/ftobjs.h	53;"	d
TString	src/lua/lobject.h	/^typedef union TString {$/;"	u
TString	src/lua/lobject.h	/^} TString;$/;"	t	typeref:union:TString
TTAG_BASE	include/freetype/freetype/tttags.h	37;"	d
TTAG_BDF	include/freetype/freetype/tttags.h	39;"	d
TTAG_CFF	include/freetype/freetype/tttags.h	43;"	d
TTAG_CID	include/freetype/freetype/tttags.h	44;"	d
TTAG_DSIG	include/freetype/freetype/tttags.h	48;"	d
TTAG_EBDT	include/freetype/freetype/tttags.h	49;"	d
TTAG_EBLC	include/freetype/freetype/tttags.h	50;"	d
TTAG_EBSC	include/freetype/freetype/tttags.h	51;"	d
TTAG_FOND	include/freetype/freetype/tttags.h	53;"	d
TTAG_GDEF	include/freetype/freetype/tttags.h	57;"	d
TTAG_GPOS	include/freetype/freetype/tttags.h	59;"	d
TTAG_GSUB	include/freetype/freetype/tttags.h	60;"	d
TTAG_JSTF	include/freetype/freetype/tttags.h	66;"	d
TTAG_LTSH	include/freetype/freetype/tttags.h	71;"	d
TTAG_LWFN	include/freetype/freetype/tttags.h	72;"	d
TTAG_MATH	include/freetype/freetype/tttags.h	73;"	d
TTAG_META	include/freetype/freetype/tttags.h	75;"	d
TTAG_MMFX	include/freetype/freetype/tttags.h	76;"	d
TTAG_MMSD	include/freetype/freetype/tttags.h	77;"	d
TTAG_OS2	include/freetype/freetype/tttags.h	82;"	d
TTAG_OTTO	include/freetype/freetype/tttags.h	83;"	d
TTAG_PCLT	include/freetype/freetype/tttags.h	84;"	d
TTAG_POST	include/freetype/freetype/tttags.h	85;"	d
TTAG_SING	include/freetype/freetype/tttags.h	90;"	d
TTAG_TYP1	include/freetype/freetype/tttags.h	95;"	d
TTAG_VDMX	include/freetype/freetype/tttags.h	97;"	d
TTAG_avar	include/freetype/freetype/tttags.h	36;"	d
TTAG_bdat	include/freetype/freetype/tttags.h	38;"	d
TTAG_bhed	include/freetype/freetype/tttags.h	40;"	d
TTAG_bloc	include/freetype/freetype/tttags.h	41;"	d
TTAG_bsln	include/freetype/freetype/tttags.h	42;"	d
TTAG_cmap	include/freetype/freetype/tttags.h	45;"	d
TTAG_cvar	include/freetype/freetype/tttags.h	46;"	d
TTAG_cvt	include/freetype/freetype/tttags.h	47;"	d
TTAG_feat	include/freetype/freetype/tttags.h	52;"	d
TTAG_fpgm	include/freetype/freetype/tttags.h	54;"	d
TTAG_fvar	include/freetype/freetype/tttags.h	55;"	d
TTAG_gasp	include/freetype/freetype/tttags.h	56;"	d
TTAG_glyf	include/freetype/freetype/tttags.h	58;"	d
TTAG_gvar	include/freetype/freetype/tttags.h	61;"	d
TTAG_hdmx	include/freetype/freetype/tttags.h	62;"	d
TTAG_head	include/freetype/freetype/tttags.h	63;"	d
TTAG_hhea	include/freetype/freetype/tttags.h	64;"	d
TTAG_hmtx	include/freetype/freetype/tttags.h	65;"	d
TTAG_just	include/freetype/freetype/tttags.h	67;"	d
TTAG_kern	include/freetype/freetype/tttags.h	68;"	d
TTAG_lcar	include/freetype/freetype/tttags.h	69;"	d
TTAG_loca	include/freetype/freetype/tttags.h	70;"	d
TTAG_maxp	include/freetype/freetype/tttags.h	74;"	d
TTAG_mort	include/freetype/freetype/tttags.h	78;"	d
TTAG_morx	include/freetype/freetype/tttags.h	79;"	d
TTAG_name	include/freetype/freetype/tttags.h	80;"	d
TTAG_opbd	include/freetype/freetype/tttags.h	81;"	d
TTAG_post	include/freetype/freetype/tttags.h	86;"	d
TTAG_prep	include/freetype/freetype/tttags.h	87;"	d
TTAG_prop	include/freetype/freetype/tttags.h	88;"	d
TTAG_sfnt	include/freetype/freetype/tttags.h	89;"	d
TTAG_trak	include/freetype/freetype/tttags.h	91;"	d
TTAG_true	include/freetype/freetype/tttags.h	92;"	d
TTAG_ttc	include/freetype/freetype/tttags.h	93;"	d
TTAG_ttcf	include/freetype/freetype/tttags.h	94;"	d
TTAG_typ1	include/freetype/freetype/tttags.h	96;"	d
TTAG_vhea	include/freetype/freetype/tttags.h	98;"	d
TTAG_vmtx	include/freetype/freetype/tttags.h	99;"	d
TTC_HeaderRec	include/freetype/freetype/internal/tttypes.h	/^  } TTC_HeaderRec;$/;"	t	typeref:struct:TTC_HeaderRec_
TTC_HeaderRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TTC_HeaderRec_$/;"	s
TT_ADOBE_ID_CUSTOM	include/freetype/freetype/ttnameid.h	311;"	d
TT_ADOBE_ID_EXPERT	include/freetype/freetype/ttnameid.h	310;"	d
TT_ADOBE_ID_LATIN_1	include/freetype/freetype/ttnameid.h	312;"	d
TT_ADOBE_ID_STANDARD	include/freetype/freetype/ttnameid.h	309;"	d
TT_APPLE_ID_DEFAULT	include/freetype/freetype/ttnameid.h	124;"	d
TT_APPLE_ID_ISO_10646	include/freetype/freetype/ttnameid.h	126;"	d
TT_APPLE_ID_UNICODE_1_1	include/freetype/freetype/ttnameid.h	125;"	d
TT_APPLE_ID_UNICODE_2_0	include/freetype/freetype/ttnameid.h	127;"	d
TT_APPLE_ID_UNICODE_32	include/freetype/freetype/ttnameid.h	128;"	d
TT_APPLE_ID_VARIANT_SELECTOR	include/freetype/freetype/ttnameid.h	129;"	d
TT_BDF	include/freetype/freetype/internal/tttypes.h	/^  } TT_BDFRec, *TT_BDF;$/;"	t	typeref:struct:TT_BDFRec_
TT_BDFRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_BDFRec, *TT_BDF;$/;"	t	typeref:struct:TT_BDFRec_
TT_BDFRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_BDFRec_$/;"	s
TT_CMapInfo	include/freetype/freetype/internal/services/svttcmap.h	/^  } TT_CMapInfo;$/;"	t	typeref:struct:TT_CMapInfo_
TT_CMapInfo_	include/freetype/freetype/internal/services/svttcmap.h	/^  typedef struct  TT_CMapInfo_$/;"	s
TT_CMap_Info_GetFunc	include/freetype/freetype/internal/services/svttcmap.h	/^  (*TT_CMap_Info_GetFunc)( FT_CharMap    charmap,$/;"	t
TT_CONFIG_CMAP_FORMAT_0	include/freetype/freetype/config/ftoption.h	528;"	d
TT_CONFIG_CMAP_FORMAT_10	include/freetype/freetype/config/ftoption.h	533;"	d
TT_CONFIG_CMAP_FORMAT_12	include/freetype/freetype/config/ftoption.h	534;"	d
TT_CONFIG_CMAP_FORMAT_13	include/freetype/freetype/config/ftoption.h	535;"	d
TT_CONFIG_CMAP_FORMAT_14	include/freetype/freetype/config/ftoption.h	536;"	d
TT_CONFIG_CMAP_FORMAT_2	include/freetype/freetype/config/ftoption.h	529;"	d
TT_CONFIG_CMAP_FORMAT_4	include/freetype/freetype/config/ftoption.h	530;"	d
TT_CONFIG_CMAP_FORMAT_6	include/freetype/freetype/config/ftoption.h	531;"	d
TT_CONFIG_CMAP_FORMAT_8	include/freetype/freetype/config/ftoption.h	532;"	d
TT_CONFIG_OPTION_BDF	include/freetype/freetype/config/ftoption.h	658;"	d
TT_CONFIG_OPTION_BYTECODE_INTERPRETER	include/freetype/freetype/config/ftoption.h	558;"	d
TT_CONFIG_OPTION_COMPONENT_OFFSET_SCALED	include/freetype/freetype/config/ftoption.h	640;"	d
TT_CONFIG_OPTION_EMBEDDED_BITMAPS	include/freetype/freetype/config/ftoption.h	490;"	d
TT_CONFIG_OPTION_GX_VAR_SUPPORT	include/freetype/freetype/config/ftoption.h	650;"	d
TT_CONFIG_OPTION_INTERPRETER_SWITCH	include/freetype/freetype/config/ftoption.h	621;"	d
TT_CONFIG_OPTION_POSTSCRIPT_NAMES	include/freetype/freetype/config/ftoption.h	505;"	d
TT_CONFIG_OPTION_SFNT_NAMES	include/freetype/freetype/config/ftoption.h	519;"	d
TT_CONFIG_OPTION_UNPATENTED_HINTING	include/freetype/freetype/config/ftoption.h	794;"	d
TT_CharMap_Free_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_CharMap_Free_Func)( TT_Face       face,$/;"	t
TT_CharMap_Load_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_CharMap_Load_Func)( TT_Face    face,$/;"	t
TT_Done_Face_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Done_Face_Func)( TT_Face  face );$/;"	t
TT_ExecContext	include/freetype/freetype/internal/tttypes.h	/^  typedef struct TT_ExecContextRec_*  TT_ExecContext;$/;"	t	typeref:struct:TT_ExecContextRec_
TT_Face	include/freetype/freetype/internal/tttypes.h	/^  typedef struct TT_FaceRec_*  TT_Face;$/;"	t	typeref:struct:TT_FaceRec_
TT_FaceRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_FaceRec;$/;"	t	typeref:struct:TT_FaceRec_
TT_FaceRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_FaceRec_$/;"	s
TT_Face_GetKerningFunc	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Face_GetKerningFunc)( TT_Face  face,$/;"	t
TT_Find_SBit_Image_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Find_SBit_Image_Func)( TT_Face          face,$/;"	t
TT_Free_Table_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Free_Table_Func)( TT_Face  face );$/;"	t
TT_GASP_DOGRAY	include/freetype/freetype/internal/tttypes.h	286;"	d
TT_GASP_GRIDFIT	include/freetype/freetype/internal/tttypes.h	285;"	d
TT_GaspRange	include/freetype/freetype/internal/tttypes.h	/^  } TT_GaspRangeRec, *TT_GaspRange;$/;"	t	typeref:struct:TT_GaspRangeRec_
TT_GaspRangeRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_GaspRangeRec, *TT_GaspRange;$/;"	t	typeref:struct:TT_GaspRangeRec_
TT_GaspRangeRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_GaspRangeRec_$/;"	s
TT_GaspRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_GaspRec;$/;"	t	typeref:struct:TT_Gasp_
TT_Gasp_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_Gasp_$/;"	s
TT_Get_Metrics_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Get_Metrics_Func)( TT_Face     face,$/;"	t
TT_Get_PS_Name_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Get_PS_Name_Func)( TT_Face      face,$/;"	t
TT_Glyf_GetLocationFunc	include/freetype/freetype/internal/services/svttglyf.h	/^  (*TT_Glyf_GetLocationFunc)( FT_Face    face,$/;"	t
TT_GlyphZone	include/freetype/freetype/internal/tttypes.h	/^  } TT_GlyphZoneRec, *TT_GlyphZone;$/;"	t	typeref:struct:TT_GlyphZoneRec_
TT_GlyphZoneRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_GlyphZoneRec, *TT_GlyphZone;$/;"	t	typeref:struct:TT_GlyphZoneRec_
TT_GlyphZoneRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_GlyphZoneRec_$/;"	s
TT_Hdmx	include/freetype/freetype/internal/tttypes.h	/^  } TT_HdmxRec, *TT_Hdmx;$/;"	t	typeref:struct:TT_HdmxRec_
TT_HdmxEntry	include/freetype/freetype/internal/tttypes.h	/^  } TT_HdmxEntryRec, *TT_HdmxEntry;$/;"	t	typeref:struct:TT_HdmxEntryRec_
TT_HdmxEntryRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_HdmxEntryRec, *TT_HdmxEntry;$/;"	t	typeref:struct:TT_HdmxEntryRec_
TT_HdmxEntryRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_HdmxEntryRec_$/;"	s
TT_HdmxRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_HdmxRec, *TT_Hdmx;$/;"	t	typeref:struct:TT_HdmxRec_
TT_HdmxRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_HdmxRec_$/;"	s
TT_Header	include/freetype/freetype/tttables.h	/^  } TT_Header;$/;"	t	typeref:struct:TT_Header_
TT_Header_	include/freetype/freetype/tttables.h	/^  typedef struct  TT_Header_$/;"	s
TT_HoriHeader	include/freetype/freetype/tttables.h	/^  } TT_HoriHeader;$/;"	t	typeref:struct:TT_HoriHeader_
TT_HoriHeader_	include/freetype/freetype/tttables.h	/^  typedef struct  TT_HoriHeader_$/;"	s
TT_ISO_ID_10646	include/freetype/freetype/ttnameid.h	235;"	d
TT_ISO_ID_7BIT_ASCII	include/freetype/freetype/ttnameid.h	234;"	d
TT_ISO_ID_8859_1	include/freetype/freetype/ttnameid.h	236;"	d
TT_Init_Face_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Init_Face_Func)( FT_Stream      stream,$/;"	t
TT_Interpreter	include/freetype/freetype/internal/tttypes.h	/^  (*TT_Interpreter)( void*  exec_context );$/;"	t
TT_Kern0_Pair	include/freetype/freetype/internal/tttypes.h	/^  } TT_Kern0_PairRec, *TT_Kern0_Pair;$/;"	t	typeref:struct:TT_Kern0_PairRec_
TT_Kern0_PairRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_Kern0_PairRec, *TT_Kern0_Pair;$/;"	t	typeref:struct:TT_Kern0_PairRec_
TT_Kern0_PairRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_Kern0_PairRec_$/;"	s
TT_Load_Any_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Load_Any_Func)( TT_Face    face,$/;"	t
TT_Load_Directory_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Load_Directory_Func)( TT_Face      face,$/;"	t
TT_Load_Face_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Load_Face_Func)( FT_Stream      stream,$/;"	t
TT_Load_Metrics_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Load_Metrics_Func)( TT_Face    face,$/;"	t
TT_Load_SBit_Image_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Load_SBit_Image_Func)( TT_Face              face,$/;"	t
TT_Load_SBit_Metrics_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Load_SBit_Metrics_Func)( FT_Stream        stream,$/;"	t
TT_Load_SFNT_HeaderRec_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Load_SFNT_HeaderRec_Func)( TT_Face      face,$/;"	t
TT_Load_Strike_Metrics_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Load_Strike_Metrics_Func)( TT_Face           face,$/;"	t
TT_Load_Table_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Load_Table_Func)( TT_Face    face,$/;"	t
TT_Loader	include/freetype/freetype/internal/tttypes.h	/^  typedef struct TT_LoaderRec_*  TT_Loader;$/;"	t	typeref:struct:TT_LoaderRec_
TT_LoaderRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_LoaderRec;$/;"	t	typeref:struct:TT_LoaderRec_
TT_LoaderRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_LoaderRec_$/;"	s
TT_Loader_EndGlyphFunc	include/freetype/freetype/internal/tttypes.h	/^  (*TT_Loader_EndGlyphFunc)( TT_Loader  loader );$/;"	t
TT_Loader_GotoTableFunc	include/freetype/freetype/internal/tttypes.h	/^  (*TT_Loader_GotoTableFunc)( TT_Face    face,$/;"	t
TT_Loader_ReadGlyphFunc	include/freetype/freetype/internal/tttypes.h	/^  (*TT_Loader_ReadGlyphFunc)( TT_Loader  loader );$/;"	t
TT_Loader_StartGlyphFunc	include/freetype/freetype/internal/tttypes.h	/^  (*TT_Loader_StartGlyphFunc)( TT_Loader  loader,$/;"	t
TT_LongMetrics	include/freetype/freetype/internal/tttypes.h	/^  } TT_LongMetricsRec, *TT_LongMetrics;$/;"	t	typeref:struct:TT_LongMetricsRec_
TT_LongMetricsRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_LongMetricsRec, *TT_LongMetrics;$/;"	t	typeref:struct:TT_LongMetricsRec_
TT_LongMetricsRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_LongMetricsRec_$/;"	s
TT_MAC_ID_ARABIC	include/freetype/freetype/ttnameid.h	182;"	d
TT_MAC_ID_ARMENIAN	include/freetype/freetype/ttnameid.h	202;"	d
TT_MAC_ID_BENGALI	include/freetype/freetype/ttnameid.h	191;"	d
TT_MAC_ID_BURMESE	include/freetype/freetype/ttnameid.h	197;"	d
TT_MAC_ID_DEVANAGARI	include/freetype/freetype/ttnameid.h	187;"	d
TT_MAC_ID_GEEZ	include/freetype/freetype/ttnameid.h	207;"	d
TT_MAC_ID_GEORGIAN	include/freetype/freetype/ttnameid.h	201;"	d
TT_MAC_ID_GREEK	include/freetype/freetype/ttnameid.h	184;"	d
TT_MAC_ID_GUJARATI	include/freetype/freetype/ttnameid.h	189;"	d
TT_MAC_ID_GURMUKHI	include/freetype/freetype/ttnameid.h	188;"	d
TT_MAC_ID_HEBREW	include/freetype/freetype/ttnameid.h	183;"	d
TT_MAC_ID_JAPANESE	include/freetype/freetype/ttnameid.h	179;"	d
TT_MAC_ID_KANNADA	include/freetype/freetype/ttnameid.h	194;"	d
TT_MAC_ID_KHMER	include/freetype/freetype/ttnameid.h	198;"	d
TT_MAC_ID_KOREAN	include/freetype/freetype/ttnameid.h	181;"	d
TT_MAC_ID_LAOTIAN	include/freetype/freetype/ttnameid.h	200;"	d
TT_MAC_ID_MALAYALAM	include/freetype/freetype/ttnameid.h	195;"	d
TT_MAC_ID_MALDIVIAN	include/freetype/freetype/ttnameid.h	203;"	d
TT_MAC_ID_MONGOLIAN	include/freetype/freetype/ttnameid.h	206;"	d
TT_MAC_ID_ORIYA	include/freetype/freetype/ttnameid.h	190;"	d
TT_MAC_ID_ROMAN	include/freetype/freetype/ttnameid.h	178;"	d
TT_MAC_ID_RSYMBOL	include/freetype/freetype/ttnameid.h	186;"	d
TT_MAC_ID_RUSSIAN	include/freetype/freetype/ttnameid.h	185;"	d
TT_MAC_ID_SIMPLIFIED_CHINESE	include/freetype/freetype/ttnameid.h	204;"	d
TT_MAC_ID_SINDHI	include/freetype/freetype/ttnameid.h	210;"	d
TT_MAC_ID_SINHALESE	include/freetype/freetype/ttnameid.h	196;"	d
TT_MAC_ID_SLAVIC	include/freetype/freetype/ttnameid.h	208;"	d
TT_MAC_ID_TAMIL	include/freetype/freetype/ttnameid.h	192;"	d
TT_MAC_ID_TELUGU	include/freetype/freetype/ttnameid.h	193;"	d
TT_MAC_ID_THAI	include/freetype/freetype/ttnameid.h	199;"	d
TT_MAC_ID_TIBETAN	include/freetype/freetype/ttnameid.h	205;"	d
TT_MAC_ID_TRADITIONAL_CHINESE	include/freetype/freetype/ttnameid.h	180;"	d
TT_MAC_ID_UNINTERP	include/freetype/freetype/ttnameid.h	211;"	d
TT_MAC_ID_VIETNAMESE	include/freetype/freetype/ttnameid.h	209;"	d
TT_MAC_LANGID_AFRIKAANS	include/freetype/freetype/ttnameid.h	446;"	d
TT_MAC_LANGID_ALBANIAN	include/freetype/freetype/ttnameid.h	361;"	d
TT_MAC_LANGID_AMHARIC	include/freetype/freetype/ttnameid.h	412;"	d
TT_MAC_LANGID_ARABIC	include/freetype/freetype/ttnameid.h	337;"	d
TT_MAC_LANGID_ARMENIAN	include/freetype/freetype/ttnameid.h	377;"	d
TT_MAC_LANGID_ASSAMESE	include/freetype/freetype/ttnameid.h	395;"	d
TT_MAC_LANGID_AYMARA	include/freetype/freetype/ttnameid.h	428;"	d
TT_MAC_LANGID_AZERBAIJANI	include/freetype/freetype/ttnameid.h	374;"	d
TT_MAC_LANGID_AZERBAIJANI_ARABIC_SCRIPT	include/freetype/freetype/ttnameid.h	376;"	d
TT_MAC_LANGID_AZERBAIJANI_CYRILLIC_SCRIPT	include/freetype/freetype/ttnameid.h	375;"	d
TT_MAC_LANGID_AZERBAIJANI_ROMAN_SCRIPT	include/freetype/freetype/ttnameid.h	455;"	d
TT_MAC_LANGID_BASQUE	include/freetype/freetype/ttnameid.h	423;"	d
TT_MAC_LANGID_BENGALI	include/freetype/freetype/ttnameid.h	394;"	d
TT_MAC_LANGID_BRETON	include/freetype/freetype/ttnameid.h	447;"	d
TT_MAC_LANGID_BULGARIAN	include/freetype/freetype/ttnameid.h	369;"	d
TT_MAC_LANGID_BURMESE	include/freetype/freetype/ttnameid.h	404;"	d
TT_MAC_LANGID_BYELORUSSIAN	include/freetype/freetype/ttnameid.h	371;"	d
TT_MAC_LANGID_CATALAN	include/freetype/freetype/ttnameid.h	424;"	d
TT_MAC_LANGID_CHEWA	include/freetype/freetype/ttnameid.h	419;"	d
TT_MAC_LANGID_CHINESE_SIMPLIFIED	include/freetype/freetype/ttnameid.h	358;"	d
TT_MAC_LANGID_CHINESE_TRADITIONAL	include/freetype/freetype/ttnameid.h	344;"	d
TT_MAC_LANGID_CROATIAN	include/freetype/freetype/ttnameid.h	343;"	d
TT_MAC_LANGID_CZECH	include/freetype/freetype/ttnameid.h	363;"	d
TT_MAC_LANGID_DANISH	include/freetype/freetype/ttnameid.h	332;"	d
TT_MAC_LANGID_DUTCH	include/freetype/freetype/ttnameid.h	329;"	d
TT_MAC_LANGID_DZONGKHA	include/freetype/freetype/ttnameid.h	431;"	d
TT_MAC_LANGID_ENGLISH	include/freetype/freetype/ttnameid.h	325;"	d
TT_MAC_LANGID_ESPERANTO	include/freetype/freetype/ttnameid.h	421;"	d
TT_MAC_LANGID_ESTONIAN	include/freetype/freetype/ttnameid.h	352;"	d
TT_MAC_LANGID_FAEROESE	include/freetype/freetype/ttnameid.h	355;"	d
TT_MAC_LANGID_FARSI	include/freetype/freetype/ttnameid.h	356;"	d
TT_MAC_LANGID_FINNISH	include/freetype/freetype/ttnameid.h	338;"	d
TT_MAC_LANGID_FLEMISH	include/freetype/freetype/ttnameid.h	359;"	d
TT_MAC_LANGID_FRENCH	include/freetype/freetype/ttnameid.h	326;"	d
TT_MAC_LANGID_GALICIAN	include/freetype/freetype/ttnameid.h	445;"	d
TT_MAC_LANGID_GALLA	include/freetype/freetype/ttnameid.h	414;"	d
TT_MAC_LANGID_GEORGIAN	include/freetype/freetype/ttnameid.h	378;"	d
TT_MAC_LANGID_GERMAN	include/freetype/freetype/ttnameid.h	327;"	d
TT_MAC_LANGID_GREEK	include/freetype/freetype/ttnameid.h	339;"	d
TT_MAC_LANGID_GREEK_POLYTONIC	include/freetype/freetype/ttnameid.h	453;"	d
TT_MAC_LANGID_GREELANDIC	include/freetype/freetype/ttnameid.h	454;"	d
TT_MAC_LANGID_GUARANI	include/freetype/freetype/ttnameid.h	427;"	d
TT_MAC_LANGID_GUJARATI	include/freetype/freetype/ttnameid.h	396;"	d
TT_MAC_LANGID_HEBREW	include/freetype/freetype/ttnameid.h	335;"	d
TT_MAC_LANGID_HINDI	include/freetype/freetype/ttnameid.h	346;"	d
TT_MAC_LANGID_HUNGARIAN	include/freetype/freetype/ttnameid.h	351;"	d
TT_MAC_LANGID_ICELANDIC	include/freetype/freetype/ttnameid.h	340;"	d
TT_MAC_LANGID_INDONESIAN	include/freetype/freetype/ttnameid.h	408;"	d
TT_MAC_LANGID_INUKTITUT	include/freetype/freetype/ttnameid.h	448;"	d
TT_MAC_LANGID_IRISH	include/freetype/freetype/ttnameid.h	360;"	d
TT_MAC_LANGID_IRISH_GAELIC	include/freetype/freetype/ttnameid.h	451;"	d
TT_MAC_LANGID_ITALIAN	include/freetype/freetype/ttnameid.h	328;"	d
TT_MAC_LANGID_JAPANESE	include/freetype/freetype/ttnameid.h	336;"	d
TT_MAC_LANGID_JAVANESE	include/freetype/freetype/ttnameid.h	432;"	d
TT_MAC_LANGID_KANNADA	include/freetype/freetype/ttnameid.h	400;"	d
TT_MAC_LANGID_KASHMIRI	include/freetype/freetype/ttnameid.h	388;"	d
TT_MAC_LANGID_KAZAKH	include/freetype/freetype/ttnameid.h	373;"	d
TT_MAC_LANGID_KHMER	include/freetype/freetype/ttnameid.h	405;"	d
TT_MAC_LANGID_KIRGHIZ	include/freetype/freetype/ttnameid.h	380;"	d
TT_MAC_LANGID_KOREAN	include/freetype/freetype/ttnameid.h	348;"	d
TT_MAC_LANGID_KURDISH	include/freetype/freetype/ttnameid.h	387;"	d
TT_MAC_LANGID_LAO	include/freetype/freetype/ttnameid.h	406;"	d
TT_MAC_LANGID_LATIN	include/freetype/freetype/ttnameid.h	425;"	d
TT_MAC_LANGID_LETTISH	include/freetype/freetype/ttnameid.h	353;"	d
TT_MAC_LANGID_LITHUANIAN	include/freetype/freetype/ttnameid.h	349;"	d
TT_MAC_LANGID_MACEDONIAN	include/freetype/freetype/ttnameid.h	368;"	d
TT_MAC_LANGID_MALAGASY	include/freetype/freetype/ttnameid.h	420;"	d
TT_MAC_LANGID_MALAYALAM	include/freetype/freetype/ttnameid.h	399;"	d
TT_MAC_LANGID_MALAY_ARABIC_SCRIPT	include/freetype/freetype/ttnameid.h	411;"	d
TT_MAC_LANGID_MALAY_ROMAN_SCRIPT	include/freetype/freetype/ttnameid.h	410;"	d
TT_MAC_LANGID_MALTESE	include/freetype/freetype/ttnameid.h	341;"	d
TT_MAC_LANGID_MANX_GAELIC	include/freetype/freetype/ttnameid.h	450;"	d
TT_MAC_LANGID_MARATHI	include/freetype/freetype/ttnameid.h	393;"	d
TT_MAC_LANGID_MOLDAVIAN	include/freetype/freetype/ttnameid.h	379;"	d
TT_MAC_LANGID_MONGOLIAN	include/freetype/freetype/ttnameid.h	383;"	d
TT_MAC_LANGID_MONGOLIAN_CYRILLIC_SCRIPT	include/freetype/freetype/ttnameid.h	385;"	d
TT_MAC_LANGID_MONGOLIAN_MONGOLIAN_SCRIPT	include/freetype/freetype/ttnameid.h	384;"	d
TT_MAC_LANGID_NEPALI	include/freetype/freetype/ttnameid.h	391;"	d
TT_MAC_LANGID_NORWEGIAN	include/freetype/freetype/ttnameid.h	334;"	d
TT_MAC_LANGID_ORIYA	include/freetype/freetype/ttnameid.h	398;"	d
TT_MAC_LANGID_PASHTO	include/freetype/freetype/ttnameid.h	386;"	d
TT_MAC_LANGID_POLISH	include/freetype/freetype/ttnameid.h	350;"	d
TT_MAC_LANGID_PORTUGUESE	include/freetype/freetype/ttnameid.h	333;"	d
TT_MAC_LANGID_PUNJABI	include/freetype/freetype/ttnameid.h	397;"	d
TT_MAC_LANGID_QUECHUA	include/freetype/freetype/ttnameid.h	426;"	d
TT_MAC_LANGID_ROMANIAN	include/freetype/freetype/ttnameid.h	362;"	d
TT_MAC_LANGID_RUANDA	include/freetype/freetype/ttnameid.h	417;"	d
TT_MAC_LANGID_RUNDI	include/freetype/freetype/ttnameid.h	418;"	d
TT_MAC_LANGID_RUSSIAN	include/freetype/freetype/ttnameid.h	357;"	d
TT_MAC_LANGID_SAAMISK	include/freetype/freetype/ttnameid.h	354;"	d
TT_MAC_LANGID_SANSKRIT	include/freetype/freetype/ttnameid.h	392;"	d
TT_MAC_LANGID_SCOTTISH_GAELIC	include/freetype/freetype/ttnameid.h	449;"	d
TT_MAC_LANGID_SERBIAN	include/freetype/freetype/ttnameid.h	367;"	d
TT_MAC_LANGID_SINDHI	include/freetype/freetype/ttnameid.h	389;"	d
TT_MAC_LANGID_SINHALESE	include/freetype/freetype/ttnameid.h	403;"	d
TT_MAC_LANGID_SLOVAK	include/freetype/freetype/ttnameid.h	364;"	d
TT_MAC_LANGID_SLOVENIAN	include/freetype/freetype/ttnameid.h	365;"	d
TT_MAC_LANGID_SOMALI	include/freetype/freetype/ttnameid.h	415;"	d
TT_MAC_LANGID_SPANISH	include/freetype/freetype/ttnameid.h	331;"	d
TT_MAC_LANGID_SUNDANESE	include/freetype/freetype/ttnameid.h	433;"	d
TT_MAC_LANGID_SWAHILI	include/freetype/freetype/ttnameid.h	416;"	d
TT_MAC_LANGID_SWEDISH	include/freetype/freetype/ttnameid.h	330;"	d
TT_MAC_LANGID_TAGALOG	include/freetype/freetype/ttnameid.h	409;"	d
TT_MAC_LANGID_TAJIKI	include/freetype/freetype/ttnameid.h	381;"	d
TT_MAC_LANGID_TAMIL	include/freetype/freetype/ttnameid.h	401;"	d
TT_MAC_LANGID_TATAR	include/freetype/freetype/ttnameid.h	429;"	d
TT_MAC_LANGID_TELUGU	include/freetype/freetype/ttnameid.h	402;"	d
TT_MAC_LANGID_THAI	include/freetype/freetype/ttnameid.h	347;"	d
TT_MAC_LANGID_TIBETAN	include/freetype/freetype/ttnameid.h	390;"	d
TT_MAC_LANGID_TIGRINYA	include/freetype/freetype/ttnameid.h	413;"	d
TT_MAC_LANGID_TONGAN	include/freetype/freetype/ttnameid.h	452;"	d
TT_MAC_LANGID_TURKISH	include/freetype/freetype/ttnameid.h	342;"	d
TT_MAC_LANGID_TURKMEN	include/freetype/freetype/ttnameid.h	382;"	d
TT_MAC_LANGID_UIGHUR	include/freetype/freetype/ttnameid.h	430;"	d
TT_MAC_LANGID_UKRAINIAN	include/freetype/freetype/ttnameid.h	370;"	d
TT_MAC_LANGID_URDU	include/freetype/freetype/ttnameid.h	345;"	d
TT_MAC_LANGID_UZBEK	include/freetype/freetype/ttnameid.h	372;"	d
TT_MAC_LANGID_VIETNAMESE	include/freetype/freetype/ttnameid.h	407;"	d
TT_MAC_LANGID_WELSH	include/freetype/freetype/ttnameid.h	422;"	d
TT_MAC_LANGID_YIDDISH	include/freetype/freetype/ttnameid.h	366;"	d
TT_MS_ID_BIG_5	include/freetype/freetype/ttnameid.h	283;"	d
TT_MS_ID_GB2312	include/freetype/freetype/ttnameid.h	282;"	d
TT_MS_ID_JOHAB	include/freetype/freetype/ttnameid.h	285;"	d
TT_MS_ID_SJIS	include/freetype/freetype/ttnameid.h	281;"	d
TT_MS_ID_SYMBOL_CS	include/freetype/freetype/ttnameid.h	279;"	d
TT_MS_ID_UCS_4	include/freetype/freetype/ttnameid.h	286;"	d
TT_MS_ID_UNICODE_CS	include/freetype/freetype/ttnameid.h	280;"	d
TT_MS_ID_WANSUNG	include/freetype/freetype/ttnameid.h	284;"	d
TT_MS_LANGID_AFRIKAANS_SOUTH_AFRICA	include/freetype/freetype/ttnameid.h	659;"	d
TT_MS_LANGID_ALBANIAN_ALBANIA	include/freetype/freetype/ttnameid.h	629;"	d
TT_MS_LANGID_AMHARIC_ETHIOPIA	include/freetype/freetype/ttnameid.h	749;"	d
TT_MS_LANGID_ARABIC_ALGERIA	include/freetype/freetype/ttnameid.h	485;"	d
TT_MS_LANGID_ARABIC_BAHRAIN	include/freetype/freetype/ttnameid.h	495;"	d
TT_MS_LANGID_ARABIC_EGYPT	include/freetype/freetype/ttnameid.h	483;"	d
TT_MS_LANGID_ARABIC_GENERAL	include/freetype/freetype/ttnameid.h	480;"	d
TT_MS_LANGID_ARABIC_IRAQ	include/freetype/freetype/ttnameid.h	482;"	d
TT_MS_LANGID_ARABIC_JORDAN	include/freetype/freetype/ttnameid.h	491;"	d
TT_MS_LANGID_ARABIC_KUWAIT	include/freetype/freetype/ttnameid.h	493;"	d
TT_MS_LANGID_ARABIC_LEBANON	include/freetype/freetype/ttnameid.h	492;"	d
TT_MS_LANGID_ARABIC_LIBYA	include/freetype/freetype/ttnameid.h	484;"	d
TT_MS_LANGID_ARABIC_MOROCCO	include/freetype/freetype/ttnameid.h	486;"	d
TT_MS_LANGID_ARABIC_OMAN	include/freetype/freetype/ttnameid.h	488;"	d
TT_MS_LANGID_ARABIC_QATAR	include/freetype/freetype/ttnameid.h	496;"	d
TT_MS_LANGID_ARABIC_SAUDI_ARABIA	include/freetype/freetype/ttnameid.h	481;"	d
TT_MS_LANGID_ARABIC_SYRIA	include/freetype/freetype/ttnameid.h	490;"	d
TT_MS_LANGID_ARABIC_TUNISIA	include/freetype/freetype/ttnameid.h	487;"	d
TT_MS_LANGID_ARABIC_UAE	include/freetype/freetype/ttnameid.h	494;"	d
TT_MS_LANGID_ARABIC_YEMEN	include/freetype/freetype/ttnameid.h	489;"	d
TT_MS_LANGID_ARMENIAN_ARMENIA	include/freetype/freetype/ttnameid.h	647;"	d
TT_MS_LANGID_ASSAMESE_INDIA	include/freetype/freetype/ttnameid.h	709;"	d
TT_MS_LANGID_AZERI_AZERBAIJAN_CYRILLIC	include/freetype/freetype/ttnameid.h	649;"	d
TT_MS_LANGID_AZERI_AZERBAIJAN_LATIN	include/freetype/freetype/ttnameid.h	648;"	d
TT_MS_LANGID_BASQUE_SPAIN	include/freetype/freetype/ttnameid.h	650;"	d
TT_MS_LANGID_BELARUSIAN_BELARUS	include/freetype/freetype/ttnameid.h	638;"	d
TT_MS_LANGID_BENGALI_BANGLADESH	include/freetype/freetype/ttnameid.h	700;"	d
TT_MS_LANGID_BENGALI_INDIA	include/freetype/freetype/ttnameid.h	699;"	d
TT_MS_LANGID_BOSNIAN_BOSNIA_HERZEGOVINA	include/freetype/freetype/ttnameid.h	621;"	d
TT_MS_LANGID_BULGARIAN_BULGARIA	include/freetype/freetype/ttnameid.h	497;"	d
TT_MS_LANGID_BURMESE_MYANMAR	include/freetype/freetype/ttnameid.h	738;"	d
TT_MS_LANGID_CATALAN_SPAIN	include/freetype/freetype/ttnameid.h	498;"	d
TT_MS_LANGID_CHEROKEE_UNITED_STATES	include/freetype/freetype/ttnameid.h	747;"	d
TT_MS_LANGID_CHINESE_GENERAL	include/freetype/freetype/ttnameid.h	499;"	d
TT_MS_LANGID_CHINESE_HONG_KONG	include/freetype/freetype/ttnameid.h	502;"	d
TT_MS_LANGID_CHINESE_MACAU	include/freetype/freetype/ttnameid.h	506;"	d
TT_MS_LANGID_CHINESE_PRC	include/freetype/freetype/ttnameid.h	501;"	d
TT_MS_LANGID_CHINESE_SINGAPORE	include/freetype/freetype/ttnameid.h	503;"	d
TT_MS_LANGID_CHINESE_TAIWAN	include/freetype/freetype/ttnameid.h	500;"	d
TT_MS_LANGID_CLASSIC_LITHUANIAN_LITHUANIA	include/freetype/freetype/ttnameid.h	643;"	d
TT_MS_LANGID_CROATIAN_BOSNIA_HERZEGOVINA	include/freetype/freetype/ttnameid.h	620;"	d
TT_MS_LANGID_CROATIAN_CROATIA	include/freetype/freetype/ttnameid.h	613;"	d
TT_MS_LANGID_CZECH_CZECH_REPUBLIC	include/freetype/freetype/ttnameid.h	516;"	d
TT_MS_LANGID_DANISH_DENMARK	include/freetype/freetype/ttnameid.h	517;"	d
TT_MS_LANGID_DHIVEHI_MALDIVES	include/freetype/freetype/ttnameid.h	764;"	d
TT_MS_LANGID_DIVEHI_MALDIVES	include/freetype/freetype/ttnameid.h	766;"	d
TT_MS_LANGID_DUTCH_BELGIUM	include/freetype/freetype/ttnameid.h	602;"	d
TT_MS_LANGID_DUTCH_NETHERLANDS	include/freetype/freetype/ttnameid.h	601;"	d
TT_MS_LANGID_DZONGHKA_BHUTAN	include/freetype/freetype/ttnameid.h	724;"	d
TT_MS_LANGID_EDO_NIGERIA	include/freetype/freetype/ttnameid.h	767;"	d
TT_MS_LANGID_ENGLISH_AUSTRALIA	include/freetype/freetype/ttnameid.h	533;"	d
TT_MS_LANGID_ENGLISH_BELIZE	include/freetype/freetype/ttnameid.h	540;"	d
TT_MS_LANGID_ENGLISH_CANADA	include/freetype/freetype/ttnameid.h	534;"	d
TT_MS_LANGID_ENGLISH_CARIBBEAN	include/freetype/freetype/ttnameid.h	539;"	d
TT_MS_LANGID_ENGLISH_GENERAL	include/freetype/freetype/ttnameid.h	530;"	d
TT_MS_LANGID_ENGLISH_HONG_KONG	include/freetype/freetype/ttnameid.h	545;"	d
TT_MS_LANGID_ENGLISH_INDIA	include/freetype/freetype/ttnameid.h	546;"	d
TT_MS_LANGID_ENGLISH_INDONESIA	include/freetype/freetype/ttnameid.h	544;"	d
TT_MS_LANGID_ENGLISH_IRELAND	include/freetype/freetype/ttnameid.h	536;"	d
TT_MS_LANGID_ENGLISH_JAMAICA	include/freetype/freetype/ttnameid.h	538;"	d
TT_MS_LANGID_ENGLISH_MALAYSIA	include/freetype/freetype/ttnameid.h	547;"	d
TT_MS_LANGID_ENGLISH_NEW_ZEALAND	include/freetype/freetype/ttnameid.h	535;"	d
TT_MS_LANGID_ENGLISH_PHILIPPINES	include/freetype/freetype/ttnameid.h	543;"	d
TT_MS_LANGID_ENGLISH_SINGAPORE	include/freetype/freetype/ttnameid.h	548;"	d
TT_MS_LANGID_ENGLISH_SOUTH_AFRICA	include/freetype/freetype/ttnameid.h	537;"	d
TT_MS_LANGID_ENGLISH_TRINIDAD	include/freetype/freetype/ttnameid.h	541;"	d
TT_MS_LANGID_ENGLISH_UNITED_KINGDOM	include/freetype/freetype/ttnameid.h	532;"	d
TT_MS_LANGID_ENGLISH_UNITED_STATES	include/freetype/freetype/ttnameid.h	531;"	d
TT_MS_LANGID_ENGLISH_ZIMBABWE	include/freetype/freetype/ttnameid.h	542;"	d
TT_MS_LANGID_ESTONIAN_ESTONIA	include/freetype/freetype/ttnameid.h	640;"	d
TT_MS_LANGID_FAEROESE_FAEROE_ISLANDS	include/freetype/freetype/ttnameid.h	661;"	d
TT_MS_LANGID_FARSI_IRAN	include/freetype/freetype/ttnameid.h	645;"	d
TT_MS_LANGID_FILIPINO_PHILIPPINES	include/freetype/freetype/ttnameid.h	763;"	d
TT_MS_LANGID_FINNISH_FINLAND	include/freetype/freetype/ttnameid.h	573;"	d
TT_MS_LANGID_FRENCH_BELGIUM	include/freetype/freetype/ttnameid.h	575;"	d
TT_MS_LANGID_FRENCH_CAMEROON	include/freetype/freetype/ttnameid.h	586;"	d
TT_MS_LANGID_FRENCH_CANADA	include/freetype/freetype/ttnameid.h	576;"	d
TT_MS_LANGID_FRENCH_CONGO	include/freetype/freetype/ttnameid.h	582;"	d
TT_MS_LANGID_FRENCH_COTE_D_IVOIRE	include/freetype/freetype/ttnameid.h	587;"	d
TT_MS_LANGID_FRENCH_FRANCE	include/freetype/freetype/ttnameid.h	574;"	d
TT_MS_LANGID_FRENCH_HAITI	include/freetype/freetype/ttnameid.h	590;"	d
TT_MS_LANGID_FRENCH_LUXEMBOURG	include/freetype/freetype/ttnameid.h	578;"	d
TT_MS_LANGID_FRENCH_MALI	include/freetype/freetype/ttnameid.h	588;"	d
TT_MS_LANGID_FRENCH_MONACO	include/freetype/freetype/ttnameid.h	579;"	d
TT_MS_LANGID_FRENCH_MOROCCO	include/freetype/freetype/ttnameid.h	589;"	d
TT_MS_LANGID_FRENCH_NORTH_AFRICA	include/freetype/freetype/ttnameid.h	592;"	d
TT_MS_LANGID_FRENCH_REUNION	include/freetype/freetype/ttnameid.h	581;"	d
TT_MS_LANGID_FRENCH_SENEGAL	include/freetype/freetype/ttnameid.h	585;"	d
TT_MS_LANGID_FRENCH_SWITZERLAND	include/freetype/freetype/ttnameid.h	577;"	d
TT_MS_LANGID_FRENCH_WEST_INDIES	include/freetype/freetype/ttnameid.h	580;"	d
TT_MS_LANGID_FRENCH_ZAIRE	include/freetype/freetype/ttnameid.h	584;"	d
TT_MS_LANGID_FRISIAN_NETHERLANDS	include/freetype/freetype/ttnameid.h	761;"	d
TT_MS_LANGID_FULFULDE_NIGERIA	include/freetype/freetype/ttnameid.h	768;"	d
TT_MS_LANGID_GALICIAN_SPAIN	include/freetype/freetype/ttnameid.h	739;"	d
TT_MS_LANGID_GEORGIAN_GEORGIA	include/freetype/freetype/ttnameid.h	660;"	d
TT_MS_LANGID_GERMAN_AUSTRIA	include/freetype/freetype/ttnameid.h	520;"	d
TT_MS_LANGID_GERMAN_GERMANY	include/freetype/freetype/ttnameid.h	518;"	d
TT_MS_LANGID_GERMAN_LIECHTENSTEI	include/freetype/freetype/ttnameid.h	522;"	d
TT_MS_LANGID_GERMAN_LUXEMBOURG	include/freetype/freetype/ttnameid.h	521;"	d
TT_MS_LANGID_GERMAN_SWITZERLAND	include/freetype/freetype/ttnameid.h	519;"	d
TT_MS_LANGID_GREEK_GREECE	include/freetype/freetype/ttnameid.h	523;"	d
TT_MS_LANGID_GUARANI_PARAGUAY	include/freetype/freetype/ttnameid.h	787;"	d
TT_MS_LANGID_GUJARATI_INDIA	include/freetype/freetype/ttnameid.h	703;"	d
TT_MS_LANGID_HAUSA_NIGERIA	include/freetype/freetype/ttnameid.h	769;"	d
TT_MS_LANGID_HAWAIIAN_UNITED_STATES	include/freetype/freetype/ttnameid.h	788;"	d
TT_MS_LANGID_HEBREW_ISRAEL	include/freetype/freetype/ttnameid.h	593;"	d
TT_MS_LANGID_HINDI_INDIA	include/freetype/freetype/ttnameid.h	662;"	d
TT_MS_LANGID_HUNGARIAN_HUNGARY	include/freetype/freetype/ttnameid.h	594;"	d
TT_MS_LANGID_IBIBIO_NIGERIA	include/freetype/freetype/ttnameid.h	770;"	d
TT_MS_LANGID_ICELANDIC_ICELAND	include/freetype/freetype/ttnameid.h	595;"	d
TT_MS_LANGID_IGBO_NIGERIA	include/freetype/freetype/ttnameid.h	780;"	d
TT_MS_LANGID_INDONESIAN_INDONESIA	include/freetype/freetype/ttnameid.h	636;"	d
TT_MS_LANGID_INUKTITUT_CANADA	include/freetype/freetype/ttnameid.h	748;"	d
TT_MS_LANGID_IRISH_GAELIC_IRELAND	include/freetype/freetype/ttnameid.h	682;"	d
TT_MS_LANGID_ITALIAN_ITALY	include/freetype/freetype/ttnameid.h	596;"	d
TT_MS_LANGID_ITALIAN_SWITZERLAND	include/freetype/freetype/ttnameid.h	597;"	d
TT_MS_LANGID_JAPANESE_JAPAN	include/freetype/freetype/ttnameid.h	598;"	d
TT_MS_LANGID_KANNADA_INDIA	include/freetype/freetype/ttnameid.h	707;"	d
TT_MS_LANGID_KANURI_NIGERIA	include/freetype/freetype/ttnameid.h	781;"	d
TT_MS_LANGID_KASHMIRI_INDIA	include/freetype/freetype/ttnameid.h	758;"	d
TT_MS_LANGID_KASHMIRI_PAKISTAN	include/freetype/freetype/ttnameid.h	753;"	d
TT_MS_LANGID_KASHMIRI_SASIA	include/freetype/freetype/ttnameid.h	756;"	d
TT_MS_LANGID_KAZAK_KAZAKSTAN	include/freetype/freetype/ttnameid.h	688;"	d
TT_MS_LANGID_KHMER_CAMBODIA	include/freetype/freetype/ttnameid.h	736;"	d
TT_MS_LANGID_KIRGHIZ_KIRGHIZSTAN	include/freetype/freetype/ttnameid.h	689;"	d
TT_MS_LANGID_KIRGHIZ_KIRGHIZ_REPUBLIC	include/freetype/freetype/ttnameid.h	691;"	d
TT_MS_LANGID_KONKANI_INDIA	include/freetype/freetype/ttnameid.h	740;"	d
TT_MS_LANGID_KOREAN_EXTENDED_WANSUNG_KOREA	include/freetype/freetype/ttnameid.h	599;"	d
TT_MS_LANGID_KOREAN_JOHAB_KOREA	include/freetype/freetype/ttnameid.h	600;"	d
TT_MS_LANGID_LAO_LAOS	include/freetype/freetype/ttnameid.h	737;"	d
TT_MS_LANGID_LATIN	include/freetype/freetype/ttnameid.h	789;"	d
TT_MS_LANGID_LATVIAN_LATVIA	include/freetype/freetype/ttnameid.h	641;"	d
TT_MS_LANGID_LITHUANIAN_LITHUANIA	include/freetype/freetype/ttnameid.h	642;"	d
TT_MS_LANGID_MACEDONIAN_MACEDONIA	include/freetype/freetype/ttnameid.h	652;"	d
TT_MS_LANGID_MALAYALAM_INDIA	include/freetype/freetype/ttnameid.h	708;"	d
TT_MS_LANGID_MALAY_BRUNEI_DARUSSALAM	include/freetype/freetype/ttnameid.h	687;"	d
TT_MS_LANGID_MALAY_MALAYSIA	include/freetype/freetype/ttnameid.h	686;"	d
TT_MS_LANGID_MALTESE_MALTA	include/freetype/freetype/ttnameid.h	663;"	d
TT_MS_LANGID_MANIPURI_INDIA	include/freetype/freetype/ttnameid.h	741;"	d
TT_MS_LANGID_MAORI_NEW_ZEALAND	include/freetype/freetype/ttnameid.h	798;"	d
TT_MS_LANGID_MARATHI_INDIA	include/freetype/freetype/ttnameid.h	710;"	d
TT_MS_LANGID_MOLDAVIAN_MOLDAVIA	include/freetype/freetype/ttnameid.h	610;"	d
TT_MS_LANGID_MONGOLIAN_MONGOLIA	include/freetype/freetype/ttnameid.h	712;"	d
TT_MS_LANGID_MONGOLIAN_MONGOLIA_MONGOLIAN	include/freetype/freetype/ttnameid.h	713;"	d
TT_MS_LANGID_NEPALI_INDIA	include/freetype/freetype/ttnameid.h	760;"	d
TT_MS_LANGID_NEPALI_NEPAL	include/freetype/freetype/ttnameid.h	759;"	d
TT_MS_LANGID_NORWEGIAN_NORWAY_BOKMAL	include/freetype/freetype/ttnameid.h	603;"	d
TT_MS_LANGID_NORWEGIAN_NORWAY_NYNORSK	include/freetype/freetype/ttnameid.h	604;"	d
TT_MS_LANGID_ORIYA_INDIA	include/freetype/freetype/ttnameid.h	704;"	d
TT_MS_LANGID_OROMO_ETHIOPIA	include/freetype/freetype/ttnameid.h	782;"	d
TT_MS_LANGID_PAPIAMENTU_NETHERLANDS_ANTILLES	include/freetype/freetype/ttnameid.h	795;"	d
TT_MS_LANGID_PASHTO_AFGHANISTAN	include/freetype/freetype/ttnameid.h	762;"	d
TT_MS_LANGID_POLISH_POLAND	include/freetype/freetype/ttnameid.h	605;"	d
TT_MS_LANGID_PORTUGUESE_BRAZIL	include/freetype/freetype/ttnameid.h	606;"	d
TT_MS_LANGID_PORTUGUESE_PORTUGAL	include/freetype/freetype/ttnameid.h	607;"	d
TT_MS_LANGID_PUNJABI_ARABIC_PAKISTAN	include/freetype/freetype/ttnameid.h	702;"	d
TT_MS_LANGID_PUNJABI_INDIA	include/freetype/freetype/ttnameid.h	701;"	d
TT_MS_LANGID_QUECHUA_BOLIVIA	include/freetype/freetype/ttnameid.h	772;"	d
TT_MS_LANGID_QUECHUA_ECUADOR	include/freetype/freetype/ttnameid.h	773;"	d
TT_MS_LANGID_QUECHUA_PERU	include/freetype/freetype/ttnameid.h	774;"	d
TT_MS_LANGID_RHAETO_ROMANIC_SWITZERLAND	include/freetype/freetype/ttnameid.h	608;"	d
TT_MS_LANGID_ROMANIAN_ROMANIA	include/freetype/freetype/ttnameid.h	609;"	d
TT_MS_LANGID_RUSSIAN_MOLDAVIA	include/freetype/freetype/ttnameid.h	612;"	d
TT_MS_LANGID_RUSSIAN_RUSSIA	include/freetype/freetype/ttnameid.h	611;"	d
TT_MS_LANGID_SAAMI_LAPONIA	include/freetype/freetype/ttnameid.h	675;"	d
TT_MS_LANGID_SAMI_INARI_FINLAND	include/freetype/freetype/ttnameid.h	673;"	d
TT_MS_LANGID_SAMI_LULE_NORWAY	include/freetype/freetype/ttnameid.h	668;"	d
TT_MS_LANGID_SAMI_LULE_SWEDEN	include/freetype/freetype/ttnameid.h	669;"	d
TT_MS_LANGID_SAMI_NORTHERN_FINLAND	include/freetype/freetype/ttnameid.h	667;"	d
TT_MS_LANGID_SAMI_NORTHERN_NORWAY	include/freetype/freetype/ttnameid.h	665;"	d
TT_MS_LANGID_SAMI_NORTHERN_SWEDEN	include/freetype/freetype/ttnameid.h	666;"	d
TT_MS_LANGID_SAMI_SKOLT_FINLAND	include/freetype/freetype/ttnameid.h	672;"	d
TT_MS_LANGID_SAMI_SOUTHERN_NORWAY	include/freetype/freetype/ttnameid.h	670;"	d
TT_MS_LANGID_SAMI_SOUTHERN_SWEDEN	include/freetype/freetype/ttnameid.h	671;"	d
TT_MS_LANGID_SANSKRIT_INDIA	include/freetype/freetype/ttnameid.h	711;"	d
TT_MS_LANGID_SCOTTISH_GAELIC_UNITED_KINGDOM	include/freetype/freetype/ttnameid.h	681;"	d
TT_MS_LANGID_SEPEDI_SOUTH_AFRICA	include/freetype/freetype/ttnameid.h	775;"	d
TT_MS_LANGID_SERBIAN_BOSNIA_HERZ_CYRILLIC	include/freetype/freetype/ttnameid.h	625;"	d
TT_MS_LANGID_SERBIAN_BOSNIA_HERZ_LATIN	include/freetype/freetype/ttnameid.h	624;"	d
TT_MS_LANGID_SERBIAN_SERBIA_CYRILLIC	include/freetype/freetype/ttnameid.h	615;"	d
TT_MS_LANGID_SERBIAN_SERBIA_LATIN	include/freetype/freetype/ttnameid.h	614;"	d
TT_MS_LANGID_SINDHI_INDIA	include/freetype/freetype/ttnameid.h	742;"	d
TT_MS_LANGID_SINDHI_PAKISTAN	include/freetype/freetype/ttnameid.h	743;"	d
TT_MS_LANGID_SINHALESE_SRI_LANKA	include/freetype/freetype/ttnameid.h	746;"	d
TT_MS_LANGID_SLOVAK_SLOVAKIA	include/freetype/freetype/ttnameid.h	628;"	d
TT_MS_LANGID_SLOVENE_SLOVENIA	include/freetype/freetype/ttnameid.h	639;"	d
TT_MS_LANGID_SOMALI_SOMALIA	include/freetype/freetype/ttnameid.h	790;"	d
TT_MS_LANGID_SORBIAN_GERMANY	include/freetype/freetype/ttnameid.h	651;"	d
TT_MS_LANGID_SOTHO_SOUTHERN_SOUTH_AFRICA	include/freetype/freetype/ttnameid.h	777;"	d
TT_MS_LANGID_SPANISH_ARGENTINA	include/freetype/freetype/ttnameid.h	559;"	d
TT_MS_LANGID_SPANISH_BOLIVIA	include/freetype/freetype/ttnameid.h	564;"	d
TT_MS_LANGID_SPANISH_CHILE	include/freetype/freetype/ttnameid.h	561;"	d
TT_MS_LANGID_SPANISH_COLOMBIA	include/freetype/freetype/ttnameid.h	557;"	d
TT_MS_LANGID_SPANISH_COSTA_RICA	include/freetype/freetype/ttnameid.h	553;"	d
TT_MS_LANGID_SPANISH_DOMINICAN_REPUBLIC	include/freetype/freetype/ttnameid.h	555;"	d
TT_MS_LANGID_SPANISH_ECUADOR	include/freetype/freetype/ttnameid.h	560;"	d
TT_MS_LANGID_SPANISH_EL_SALVADOR	include/freetype/freetype/ttnameid.h	565;"	d
TT_MS_LANGID_SPANISH_GUATEMALA	include/freetype/freetype/ttnameid.h	552;"	d
TT_MS_LANGID_SPANISH_HONDURAS	include/freetype/freetype/ttnameid.h	566;"	d
TT_MS_LANGID_SPANISH_LATIN_AMERICA	include/freetype/freetype/ttnameid.h	572;"	d
TT_MS_LANGID_SPANISH_MEXICO	include/freetype/freetype/ttnameid.h	550;"	d
TT_MS_LANGID_SPANISH_NICARAGUA	include/freetype/freetype/ttnameid.h	567;"	d
TT_MS_LANGID_SPANISH_PANAMA	include/freetype/freetype/ttnameid.h	554;"	d
TT_MS_LANGID_SPANISH_PARAGUAY	include/freetype/freetype/ttnameid.h	563;"	d
TT_MS_LANGID_SPANISH_PERU	include/freetype/freetype/ttnameid.h	558;"	d
TT_MS_LANGID_SPANISH_PUERTO_RICO	include/freetype/freetype/ttnameid.h	568;"	d
TT_MS_LANGID_SPANISH_SPAIN_INTERNATIONAL_SORT	include/freetype/freetype/ttnameid.h	551;"	d
TT_MS_LANGID_SPANISH_SPAIN_TRADITIONAL_SORT	include/freetype/freetype/ttnameid.h	549;"	d
TT_MS_LANGID_SPANISH_UNITED_STATES	include/freetype/freetype/ttnameid.h	569;"	d
TT_MS_LANGID_SPANISH_URUGUAY	include/freetype/freetype/ttnameid.h	562;"	d
TT_MS_LANGID_SPANISH_VENEZUELA	include/freetype/freetype/ttnameid.h	556;"	d
TT_MS_LANGID_SUTU_SOUTH_AFRICA	include/freetype/freetype/ttnameid.h	653;"	d
TT_MS_LANGID_SWAHILI_KENYA	include/freetype/freetype/ttnameid.h	694;"	d
TT_MS_LANGID_SWEDISH_FINLAND	include/freetype/freetype/ttnameid.h	631;"	d
TT_MS_LANGID_SWEDISH_SWEDEN	include/freetype/freetype/ttnameid.h	630;"	d
TT_MS_LANGID_SYRIAC_SYRIA	include/freetype/freetype/ttnameid.h	745;"	d
TT_MS_LANGID_TAJIK_TAJIKISTAN	include/freetype/freetype/ttnameid.h	644;"	d
TT_MS_LANGID_TAMAZIGHT_MOROCCO	include/freetype/freetype/ttnameid.h	750;"	d
TT_MS_LANGID_TAMAZIGHT_MOROCCO_LATIN	include/freetype/freetype/ttnameid.h	751;"	d
TT_MS_LANGID_TAMIL_INDIA	include/freetype/freetype/ttnameid.h	705;"	d
TT_MS_LANGID_TATAR_TATARSTAN	include/freetype/freetype/ttnameid.h	698;"	d
TT_MS_LANGID_TELUGU_INDIA	include/freetype/freetype/ttnameid.h	706;"	d
TT_MS_LANGID_THAI_THAILAND	include/freetype/freetype/ttnameid.h	632;"	d
TT_MS_LANGID_TIBETAN_BHUTAN	include/freetype/freetype/ttnameid.h	732;"	d
TT_MS_LANGID_TIBETAN_CHINA	include/freetype/freetype/ttnameid.h	714;"	d
TT_MS_LANGID_TIGRIGNA_ERYTHREA	include/freetype/freetype/ttnameid.h	784;"	d
TT_MS_LANGID_TIGRIGNA_ERYTREA	include/freetype/freetype/ttnameid.h	786;"	d
TT_MS_LANGID_TIGRIGNA_ETHIOPIA	include/freetype/freetype/ttnameid.h	783;"	d
TT_MS_LANGID_TSONGA_SOUTH_AFRICA	include/freetype/freetype/ttnameid.h	654;"	d
TT_MS_LANGID_TSWANA_SOUTH_AFRICA	include/freetype/freetype/ttnameid.h	655;"	d
TT_MS_LANGID_TURKISH_TURKEY	include/freetype/freetype/ttnameid.h	633;"	d
TT_MS_LANGID_TURKMEN_TURKMENISTAN	include/freetype/freetype/ttnameid.h	695;"	d
TT_MS_LANGID_UIGHUR_CHINA	include/freetype/freetype/ttnameid.h	797;"	d
TT_MS_LANGID_UKRAINIAN_UKRAINE	include/freetype/freetype/ttnameid.h	637;"	d
TT_MS_LANGID_URDU_INDIA	include/freetype/freetype/ttnameid.h	635;"	d
TT_MS_LANGID_URDU_PAKISTAN	include/freetype/freetype/ttnameid.h	634;"	d
TT_MS_LANGID_UZBEK_UZBEKISTAN_CYRILLIC	include/freetype/freetype/ttnameid.h	697;"	d
TT_MS_LANGID_UZBEK_UZBEKISTAN_LATIN	include/freetype/freetype/ttnameid.h	696;"	d
TT_MS_LANGID_VENDA_SOUTH_AFRICA	include/freetype/freetype/ttnameid.h	656;"	d
TT_MS_LANGID_VIETNAMESE_VIET_NAM	include/freetype/freetype/ttnameid.h	646;"	d
TT_MS_LANGID_WELSH_WALES	include/freetype/freetype/ttnameid.h	735;"	d
TT_MS_LANGID_XHOSA_SOUTH_AFRICA	include/freetype/freetype/ttnameid.h	657;"	d
TT_MS_LANGID_YIDDISH_GERMANY	include/freetype/freetype/ttnameid.h	685;"	d
TT_MS_LANGID_YI_CHINA	include/freetype/freetype/ttnameid.h	794;"	d
TT_MS_LANGID_YORUBA_NIGERIA	include/freetype/freetype/ttnameid.h	771;"	d
TT_MS_LANGID_ZULU_SOUTH_AFRICA	include/freetype/freetype/ttnameid.h	658;"	d
TT_MaxProfile	include/freetype/freetype/tttables.h	/^  } TT_MaxProfile;$/;"	t	typeref:struct:TT_MaxProfile_
TT_MaxProfile_	include/freetype/freetype/tttables.h	/^  typedef struct  TT_MaxProfile_$/;"	s
TT_NAME_ID_CID_FINDFONT_NAME	include/freetype/freetype/ttnameid.h	836;"	d
TT_NAME_ID_COPYRIGHT	include/freetype/freetype/ttnameid.h	810;"	d
TT_NAME_ID_DESCRIPTION	include/freetype/freetype/ttnameid.h	822;"	d
TT_NAME_ID_DESIGNER	include/freetype/freetype/ttnameid.h	821;"	d
TT_NAME_ID_DESIGNER_URL	include/freetype/freetype/ttnameid.h	824;"	d
TT_NAME_ID_FONT_FAMILY	include/freetype/freetype/ttnameid.h	811;"	d
TT_NAME_ID_FONT_SUBFAMILY	include/freetype/freetype/ttnameid.h	812;"	d
TT_NAME_ID_FULL_NAME	include/freetype/freetype/ttnameid.h	814;"	d
TT_NAME_ID_LICENSE	include/freetype/freetype/ttnameid.h	825;"	d
TT_NAME_ID_LICENSE_URL	include/freetype/freetype/ttnameid.h	826;"	d
TT_NAME_ID_MAC_FULL_NAME	include/freetype/freetype/ttnameid.h	830;"	d
TT_NAME_ID_MANUFACTURER	include/freetype/freetype/ttnameid.h	820;"	d
TT_NAME_ID_PREFERRED_FAMILY	include/freetype/freetype/ttnameid.h	828;"	d
TT_NAME_ID_PREFERRED_SUBFAMILY	include/freetype/freetype/ttnameid.h	829;"	d
TT_NAME_ID_PS_NAME	include/freetype/freetype/ttnameid.h	816;"	d
TT_NAME_ID_SAMPLE_TEXT	include/freetype/freetype/ttnameid.h	833;"	d
TT_NAME_ID_TRADEMARK	include/freetype/freetype/ttnameid.h	817;"	d
TT_NAME_ID_UNIQUE_ID	include/freetype/freetype/ttnameid.h	813;"	d
TT_NAME_ID_VENDOR_URL	include/freetype/freetype/ttnameid.h	823;"	d
TT_NAME_ID_VERSION_STRING	include/freetype/freetype/ttnameid.h	815;"	d
TT_NAME_ID_WWS_FAMILY	include/freetype/freetype/ttnameid.h	839;"	d
TT_NAME_ID_WWS_SUBFAMILY	include/freetype/freetype/ttnameid.h	840;"	d
TT_NameEntry	include/freetype/freetype/internal/tttypes.h	/^  } TT_NameEntryRec, *TT_NameEntry;$/;"	t	typeref:struct:TT_NameEntryRec_
TT_NameEntryRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_NameEntryRec, *TT_NameEntry;$/;"	t	typeref:struct:TT_NameEntryRec_
TT_NameEntryRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_NameEntryRec_$/;"	s
TT_NameTable	include/freetype/freetype/internal/tttypes.h	/^  } TT_NameTableRec, *TT_NameTable;$/;"	t	typeref:struct:TT_NameTableRec_
TT_NameTableRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_NameTableRec, *TT_NameTable;$/;"	t	typeref:struct:TT_NameTableRec_
TT_NameTableRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_NameTableRec_$/;"	s
TT_OS2	include/freetype/freetype/tttables.h	/^  } TT_OS2;$/;"	t	typeref:struct:TT_OS2_
TT_OS2_	include/freetype/freetype/tttables.h	/^  typedef struct  TT_OS2_$/;"	s
TT_PCLT	include/freetype/freetype/tttables.h	/^  } TT_PCLT;$/;"	t	typeref:struct:TT_PCLT_
TT_PCLT_	include/freetype/freetype/tttables.h	/^  typedef struct  TT_PCLT_$/;"	s
TT_PLATFORM_ADOBE	include/freetype/freetype/ttnameid.h	91;"	d
TT_PLATFORM_APPLE_UNICODE	include/freetype/freetype/ttnameid.h	86;"	d
TT_PLATFORM_CUSTOM	include/freetype/freetype/ttnameid.h	90;"	d
TT_PLATFORM_ISO	include/freetype/freetype/ttnameid.h	88;"	d
TT_PLATFORM_MACINTOSH	include/freetype/freetype/ttnameid.h	87;"	d
TT_PLATFORM_MICROSOFT	include/freetype/freetype/ttnameid.h	89;"	d
TT_Post_20	include/freetype/freetype/internal/tttypes.h	/^  } TT_Post_20Rec, *TT_Post_20;$/;"	t	typeref:struct:TT_Post_20Rec_
TT_Post_20Rec	include/freetype/freetype/internal/tttypes.h	/^  } TT_Post_20Rec, *TT_Post_20;$/;"	t	typeref:struct:TT_Post_20Rec_
TT_Post_20Rec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_Post_20Rec_$/;"	s
TT_Post_25	include/freetype/freetype/internal/tttypes.h	/^  } TT_Post_25Rec, *TT_Post_25;$/;"	t	typeref:struct:TT_Post_25_
TT_Post_25Rec	include/freetype/freetype/internal/tttypes.h	/^  } TT_Post_25Rec, *TT_Post_25;$/;"	t	typeref:struct:TT_Post_25_
TT_Post_25_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_Post_25_$/;"	s
TT_Post_Names	include/freetype/freetype/internal/tttypes.h	/^  } TT_Post_NamesRec, *TT_Post_Names;$/;"	t	typeref:struct:TT_Post_NamesRec_
TT_Post_NamesRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_Post_NamesRec, *TT_Post_Names;$/;"	t	typeref:struct:TT_Post_NamesRec_
TT_Post_NamesRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_Post_NamesRec_$/;"	s
TT_Postscript	include/freetype/freetype/tttables.h	/^  } TT_Postscript;$/;"	t	typeref:struct:TT_Postscript_
TT_Postscript_	include/freetype/freetype/tttables.h	/^  typedef struct  TT_Postscript_$/;"	s
TT_SBit_Component	include/freetype/freetype/internal/tttypes.h	/^  } TT_SBit_ComponentRec, *TT_SBit_Component;$/;"	t	typeref:struct:TT_SBit_ComponentRec_
TT_SBit_ComponentRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_SBit_ComponentRec, *TT_SBit_Component;$/;"	t	typeref:struct:TT_SBit_ComponentRec_
TT_SBit_ComponentRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_SBit_ComponentRec_$/;"	s
TT_SBit_LineMetrics	include/freetype/freetype/internal/tttypes.h	/^  } TT_SBit_LineMetricsRec, *TT_SBit_LineMetrics;$/;"	t	typeref:struct:TT_SBit_LineMetricsRec_
TT_SBit_LineMetricsRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_SBit_LineMetricsRec, *TT_SBit_LineMetrics;$/;"	t	typeref:struct:TT_SBit_LineMetricsRec_
TT_SBit_LineMetricsRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_SBit_LineMetricsRec_$/;"	s
TT_SBit_Metrics	include/freetype/freetype/internal/tttypes.h	/^  } TT_SBit_MetricsRec, *TT_SBit_Metrics;$/;"	t	typeref:struct:TT_SBit_MetricsRec_
TT_SBit_MetricsRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_SBit_MetricsRec, *TT_SBit_Metrics;$/;"	t	typeref:struct:TT_SBit_MetricsRec_
TT_SBit_MetricsRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_SBit_MetricsRec_$/;"	s
TT_SBit_Range	include/freetype/freetype/internal/tttypes.h	/^  } TT_SBit_RangeRec, *TT_SBit_Range;$/;"	t	typeref:struct:TT_SBit_RangeRec_
TT_SBit_RangeRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_SBit_RangeRec, *TT_SBit_Range;$/;"	t	typeref:struct:TT_SBit_RangeRec_
TT_SBit_RangeRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_SBit_RangeRec_$/;"	s
TT_SBit_Scale	include/freetype/freetype/internal/tttypes.h	/^  } TT_SBit_ScaleRec, *TT_SBit_Scale;$/;"	t	typeref:struct:TT_SBit_ScaleRec_
TT_SBit_ScaleRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_SBit_ScaleRec, *TT_SBit_Scale;$/;"	t	typeref:struct:TT_SBit_ScaleRec_
TT_SBit_ScaleRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_SBit_ScaleRec_$/;"	s
TT_SBit_SmallMetrics	include/freetype/freetype/internal/tttypes.h	/^  } TT_SBit_SmallMetricsRec, *TT_SBit_SmallMetrics;$/;"	t	typeref:struct:TT_SBit_Small_Metrics_
TT_SBit_SmallMetricsRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_SBit_SmallMetricsRec, *TT_SBit_SmallMetrics;$/;"	t	typeref:struct:TT_SBit_Small_Metrics_
TT_SBit_Small_Metrics_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_SBit_Small_Metrics_$/;"	s
TT_SBit_Strike	include/freetype/freetype/internal/tttypes.h	/^  } TT_SBit_StrikeRec, *TT_SBit_Strike;$/;"	t	typeref:struct:TT_SBit_StrikeRec_
TT_SBit_StrikeRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_SBit_StrikeRec, *TT_SBit_Strike;$/;"	t	typeref:struct:TT_SBit_StrikeRec_
TT_SBit_StrikeRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_SBit_StrikeRec_$/;"	s
TT_Set_SBit_Strike_Func	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Set_SBit_Strike_Func)( TT_Face          face,$/;"	t
TT_Set_SBit_Strike_OldFunc	include/freetype/freetype/internal/sfnt.h	/^  (*TT_Set_SBit_Strike_OldFunc)( TT_Face    face,$/;"	t
TT_ShortMetrics	include/freetype/freetype/internal/tttypes.h	/^  typedef FT_Short  TT_ShortMetrics;$/;"	t
TT_Table	include/freetype/freetype/internal/tttypes.h	/^  } TT_TableRec, *TT_Table;$/;"	t	typeref:struct:TT_TableRec_
TT_TableRec	include/freetype/freetype/internal/tttypes.h	/^  } TT_TableRec, *TT_Table;$/;"	t	typeref:struct:TT_TableRec_
TT_TableRec_	include/freetype/freetype/internal/tttypes.h	/^  typedef struct  TT_TableRec_$/;"	s
TT_UCR_ALPHABETIC_PRESENTATION_FORMS	include/freetype/freetype/ttnameid.h	1045;"	d
TT_UCR_ANCIENT_GREEK_NUMBERS	include/freetype/freetype/ttnameid.h	1153;"	d
TT_UCR_ANCIENT_SYMBOLS	include/freetype/freetype/ttnameid.h	1189;"	d
TT_UCR_ARABIC	include/freetype/freetype/ttnameid.h	892;"	d
TT_UCR_ARABIC_PRESENTATIONS_A	include/freetype/freetype/ttnameid.h	1047;"	d
TT_UCR_ARABIC_PRESENTATIONS_B	include/freetype/freetype/ttnameid.h	1057;"	d
TT_UCR_ARABIC_PRESENTATION_FORMS_A	include/freetype/freetype/ttnameid.h	1228;"	d
TT_UCR_ARABIC_PRESENTATION_FORMS_B	include/freetype/freetype/ttnameid.h	1230;"	d
TT_UCR_ARMENIAN	include/freetype/freetype/ttnameid.h	885;"	d
TT_UCR_ARROWS	include/freetype/freetype/ttnameid.h	952;"	d
TT_UCR_BALINESE	include/freetype/freetype/ttnameid.h	923;"	d
TT_UCR_BASIC_LATIN	include/freetype/freetype/ttnameid.h	851;"	d
TT_UCR_BENGALI	include/freetype/freetype/ttnameid.h	899;"	d
TT_UCR_BLOCK_ELEMENTS	include/freetype/freetype/ttnameid.h	975;"	d
TT_UCR_BOPOMOFO	include/freetype/freetype/ttnameid.h	992;"	d
TT_UCR_BOX_DRAWING	include/freetype/freetype/ttnameid.h	973;"	d
TT_UCR_BRAILLE	include/freetype/freetype/ttnameid.h	1093;"	d
TT_UCR_BUGINESE	include/freetype/freetype/ttnameid.h	1137;"	d
TT_UCR_CANADIAN_ABORIGINAL_SYLLABICS	include/freetype/freetype/ttnameid.h	1081;"	d
TT_UCR_CHAM	include/freetype/freetype/ttnameid.h	1187;"	d
TT_UCR_CHEROKEE	include/freetype/freetype/ttnameid.h	1079;"	d
TT_UCR_CJK_COMPATIBILITY	include/freetype/freetype/ttnameid.h	1003;"	d
TT_UCR_CJK_COMPATIBILITY_FORMS	include/freetype/freetype/ttnameid.h	1052;"	d
TT_UCR_CJK_COMPATIBILITY_IDEOGRAPHS	include/freetype/freetype/ttnameid.h	1041;"	d
TT_UCR_CJK_MISC	include/freetype/freetype/ttnameid.h	997;"	d
TT_UCR_CJK_SYMBOLS	include/freetype/freetype/ttnameid.h	983;"	d
TT_UCR_CJK_UNIFIED_IDEOGRAPHS	include/freetype/freetype/ttnameid.h	1029;"	d
TT_UCR_COMBINING_DIACRITICAL_MARKS	include/freetype/freetype/ttnameid.h	1233;"	d
TT_UCR_COMBINING_DIACRITICAL_MARKS_SYMB	include/freetype/freetype/ttnameid.h	1235;"	d
TT_UCR_COMBINING_DIACRITICS	include/freetype/freetype/ttnameid.h	870;"	d
TT_UCR_COMBINING_DIACRITICS_SYMB	include/freetype/freetype/ttnameid.h	943;"	d
TT_UCR_COMBINING_HALF_MARKS	include/freetype/freetype/ttnameid.h	1049;"	d
TT_UCR_CONTROL_PICTURES	include/freetype/freetype/ttnameid.h	967;"	d
TT_UCR_COPTIC	include/freetype/freetype/ttnameid.h	875;"	d
TT_UCR_COUNTING_ROD_NUMERALS	include/freetype/freetype/ttnameid.h	1173;"	d
TT_UCR_CUNEIFORM	include/freetype/freetype/ttnameid.h	1170;"	d
TT_UCR_CURRENCY_SYMBOLS	include/freetype/freetype/ttnameid.h	941;"	d
TT_UCR_CYPRIOT_SYLLABARY	include/freetype/freetype/ttnameid.h	1163;"	d
TT_UCR_CYRILLIC	include/freetype/freetype/ttnameid.h	880;"	d
TT_UCR_DESERET	include/freetype/freetype/ttnameid.h	1111;"	d
TT_UCR_DEVANAGARI	include/freetype/freetype/ttnameid.h	897;"	d
TT_UCR_DINGBATS	include/freetype/freetype/ttnameid.h	981;"	d
TT_UCR_ENCLOSED_ALPHANUMERICS	include/freetype/freetype/ttnameid.h	971;"	d
TT_UCR_ENCLOSED_CJK_LETTERS_MONTHS	include/freetype/freetype/ttnameid.h	1001;"	d
TT_UCR_ETHIOPIC	include/freetype/freetype/ttnameid.h	1075;"	d
TT_UCR_GAME_TILES	include/freetype/freetype/ttnameid.h	1200;"	d
TT_UCR_GENERAL_PUNCTUATION	include/freetype/freetype/ttnameid.h	936;"	d
TT_UCR_GEOMETRIC_SHAPES	include/freetype/freetype/ttnameid.h	977;"	d
TT_UCR_GEORGIAN	include/freetype/freetype/ttnameid.h	920;"	d
TT_UCR_GLAGOLITIC	include/freetype/freetype/ttnameid.h	1139;"	d
TT_UCR_GOTHIC	include/freetype/freetype/ttnameid.h	1109;"	d
TT_UCR_GREEK	include/freetype/freetype/ttnameid.h	873;"	d
TT_UCR_GREEK_EXTENDED	include/freetype/freetype/ttnameid.h	933;"	d
TT_UCR_GUJARATI	include/freetype/freetype/ttnameid.h	903;"	d
TT_UCR_GURMUKHI	include/freetype/freetype/ttnameid.h	901;"	d
TT_UCR_HALFWIDTH_FULLWIDTH_FORMS	include/freetype/freetype/ttnameid.h	1059;"	d
TT_UCR_HANGUL	include/freetype/freetype/ttnameid.h	1005;"	d
TT_UCR_HANGUL_COMPATIBILITY_JAMO	include/freetype/freetype/ttnameid.h	995;"	d
TT_UCR_HANGUL_JAMO	include/freetype/freetype/ttnameid.h	925;"	d
TT_UCR_HEBREW	include/freetype/freetype/ttnameid.h	887;"	d
TT_UCR_HIRAGANA	include/freetype/freetype/ttnameid.h	985;"	d
TT_UCR_IPA_EXTENSIONS	include/freetype/freetype/ttnameid.h	861;"	d
TT_UCR_KANBUN	include/freetype/freetype/ttnameid.h	998;"	d
TT_UCR_KANNADA	include/freetype/freetype/ttnameid.h	911;"	d
TT_UCR_KATAKANA	include/freetype/freetype/ttnameid.h	988;"	d
TT_UCR_KAYAH_LI	include/freetype/freetype/ttnameid.h	1183;"	d
TT_UCR_KHAROSHTHI	include/freetype/freetype/ttnameid.h	1165;"	d
TT_UCR_KHMER	include/freetype/freetype/ttnameid.h	1088;"	d
TT_UCR_LAO	include/freetype/freetype/ttnameid.h	917;"	d
TT_UCR_LATIN1_SUPPLEMENT	include/freetype/freetype/ttnameid.h	853;"	d
TT_UCR_LATIN_EXTENDED_A	include/freetype/freetype/ttnameid.h	855;"	d
TT_UCR_LATIN_EXTENDED_ADDITIONAL	include/freetype/freetype/ttnameid.h	929;"	d
TT_UCR_LATIN_EXTENDED_B	include/freetype/freetype/ttnameid.h	857;"	d
TT_UCR_LEPCHA	include/freetype/freetype/ttnameid.h	1177;"	d
TT_UCR_LETTERLIKE_SYMBOLS	include/freetype/freetype/ttnameid.h	945;"	d
TT_UCR_LIMBU	include/freetype/freetype/ttnameid.h	1131;"	d
TT_UCR_LINEAR_B	include/freetype/freetype/ttnameid.h	1149;"	d
TT_UCR_MALAYALAM	include/freetype/freetype/ttnameid.h	913;"	d
TT_UCR_MATHEMATICAL_OPERATORS	include/freetype/freetype/ttnameid.h	960;"	d
TT_UCR_MATH_ALPHANUMERIC_SYMBOLS	include/freetype/freetype/ttnameid.h	1119;"	d
TT_UCR_MISCELLANEOUS_SYMBOLS	include/freetype/freetype/ttnameid.h	979;"	d
TT_UCR_MISCELLANEOUS_TECHNICAL	include/freetype/freetype/ttnameid.h	965;"	d
TT_UCR_MONGOLIAN	include/freetype/freetype/ttnameid.h	1091;"	d
TT_UCR_MUSICAL_SYMBOLS	include/freetype/freetype/ttnameid.h	1115;"	d
TT_UCR_MYANMAR	include/freetype/freetype/ttnameid.h	1071;"	d
TT_UCR_NEW_TAI_LUE	include/freetype/freetype/ttnameid.h	1135;"	d
TT_UCR_NKO	include/freetype/freetype/ttnameid.h	895;"	d
TT_UCR_NON_PLANE_0	include/freetype/freetype/ttnameid.h	1019;"	d
TT_UCR_NUMBER_FORMS	include/freetype/freetype/ttnameid.h	947;"	d
TT_UCR_OCR	include/freetype/freetype/ttnameid.h	969;"	d
TT_UCR_OGHAM	include/freetype/freetype/ttnameid.h	1083;"	d
TT_UCR_OLD_ANATOLIAN	include/freetype/freetype/ttnameid.h	1195;"	d
TT_UCR_OLD_ITALIC	include/freetype/freetype/ttnameid.h	1107;"	d
TT_UCR_OLD_PERSIAN	include/freetype/freetype/ttnameid.h	1157;"	d
TT_UCR_OL_CHIKI	include/freetype/freetype/ttnameid.h	1179;"	d
TT_UCR_ORIYA	include/freetype/freetype/ttnameid.h	905;"	d
TT_UCR_OSMANYA	include/freetype/freetype/ttnameid.h	1161;"	d
TT_UCR_PHAGSPA	include/freetype/freetype/ttnameid.h	999;"	d
TT_UCR_PHAISTOS_DISC	include/freetype/freetype/ttnameid.h	1191;"	d
TT_UCR_PHILIPPINE	include/freetype/freetype/ttnameid.h	1102;"	d
TT_UCR_PHOENICIAN	include/freetype/freetype/ttnameid.h	1021;"	d
TT_UCR_PRIVATE_USE	include/freetype/freetype/ttnameid.h	1037;"	d
TT_UCR_PRIVATE_USE_SUPPLEMENTARY	include/freetype/freetype/ttnameid.h	1122;"	d
TT_UCR_REJANG	include/freetype/freetype/ttnameid.h	1185;"	d
TT_UCR_RUNIC	include/freetype/freetype/ttnameid.h	1085;"	d
TT_UCR_SAURASHTRA	include/freetype/freetype/ttnameid.h	1181;"	d
TT_UCR_SHAVIAN	include/freetype/freetype/ttnameid.h	1159;"	d
TT_UCR_SINHALA	include/freetype/freetype/ttnameid.h	1069;"	d
TT_UCR_SMALL_FORM_VARIANTS	include/freetype/freetype/ttnameid.h	1055;"	d
TT_UCR_SPACING_MODIFIER	include/freetype/freetype/ttnameid.h	866;"	d
TT_UCR_SPECIALS	include/freetype/freetype/ttnameid.h	1061;"	d
TT_UCR_SUNDANESE	include/freetype/freetype/ttnameid.h	1175;"	d
TT_UCR_SUPERSCRIPTS_SUBSCRIPTS	include/freetype/freetype/ttnameid.h	939;"	d
TT_UCR_SURROGATES	include/freetype/freetype/ttnameid.h	1016;"	d
TT_UCR_SYLOTI_NAGRI	include/freetype/freetype/ttnameid.h	1145;"	d
TT_UCR_SYRIAC	include/freetype/freetype/ttnameid.h	1065;"	d
TT_UCR_TAGS	include/freetype/freetype/ttnameid.h	1129;"	d
TT_UCR_TAI_LE	include/freetype/freetype/ttnameid.h	1133;"	d
TT_UCR_TAI_XUAN_JING	include/freetype/freetype/ttnameid.h	1167;"	d
TT_UCR_TAMIL	include/freetype/freetype/ttnameid.h	907;"	d
TT_UCR_TELUGU	include/freetype/freetype/ttnameid.h	909;"	d
TT_UCR_THAANA	include/freetype/freetype/ttnameid.h	1067;"	d
TT_UCR_THAI	include/freetype/freetype/ttnameid.h	915;"	d
TT_UCR_TIBETAN	include/freetype/freetype/ttnameid.h	1063;"	d
TT_UCR_TIFINAGH	include/freetype/freetype/ttnameid.h	1141;"	d
TT_UCR_UGARITIC	include/freetype/freetype/ttnameid.h	1155;"	d
TT_UCR_VAI	include/freetype/freetype/ttnameid.h	889;"	d
TT_UCR_VARIATION_SELECTORS	include/freetype/freetype/ttnameid.h	1126;"	d
TT_UCR_YI	include/freetype/freetype/ttnameid.h	1096;"	d
TT_UCR_YIJING	include/freetype/freetype/ttnameid.h	1143;"	d
TT_USE_BYTECODE_INTERPRETER	include/freetype/freetype/config/ftoption.h	793;"	d
TT_VertHeader	include/freetype/freetype/tttables.h	/^  } TT_VertHeader;$/;"	t	typeref:struct:TT_VertHeader_
TT_VertHeader_	include/freetype/freetype/tttables.h	/^  typedef struct  TT_VertHeader_$/;"	s
TValue	src/lua/lobject.h	/^} TValue;$/;"	t	typeref:struct:lua_TValue
TValuefields	src/lua/lobject.h	/^    TValuefields;$/;"	m	struct:TKey::__anon95
TValuefields	src/lua/lobject.h	/^  TValuefields;$/;"	m	struct:lua_TValue
TValuefields	src/lua/lobject.h	71;"	d
TXT2PNG	src/util/recorder.cpp	/^QImage Recorder::TXT2PNG(QByteArray txtData){$/;"	f	class:Recorder
Table	src/lua/lobject.h	/^typedef struct Table {$/;"	s
Table	src/lua/lobject.h	/^} Table;$/;"	t	typeref:struct:Table
TablePile	src/ui/TablePile.h	/^    inline TablePile() : GenericCardContainer(), m_currentTime(0) { m_timer = startTimer(S_CLEARANCE_UPDATE_INTERVAL_MSEC); }$/;"	f	class:TablePile
TablePile	src/ui/TablePile.h	/^class TablePile: public GenericCardContainer$/;"	c
Table_Version	include/freetype/freetype/tttables.h	/^    FT_Fixed   Table_Version;$/;"	m	struct:TT_Header_
Tag	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong  Tag;        \/*        table type *\/$/;"	m	struct:TT_TableRec_
Taichen	src/package/yitianpackage.cpp	/^    Taichen():ViewAsSkill("taichen"){$/;"	f	class:Taichen
Taichen	src/package/yitianpackage.cpp	/^class Taichen: public ViewAsSkill{$/;"	c	file:
TaichenCard	src/package/yitianpackage.cpp	/^TaichenCard::TaichenCard(){$/;"	f	class:TaichenCard
TaichenCard	src/package/yitianpackage.h	/^class TaichenCard: public SkillCard{$/;"	c
TaichenFight	src/scenario/fancheng-scenario.cpp	/^    TaichenFight():ZeroCardViewAsSkill("taichen_fight"){$/;"	f	class:TaichenFight
TaichenFight	src/scenario/fancheng-scenario.cpp	/^class TaichenFight: public ZeroCardViewAsSkill{$/;"	c	file:
TaichenFightCard	src/scenario/fancheng-scenario.cpp	/^TaichenFightCard::TaichenFightCard(){$/;"	f	class:TaichenFightCard
TaichenFightCard	src/scenario/fancheng-scenario.h	/^class TaichenFightCard: public SkillCard{$/;"	c
Tanhu	src/package/bgm-package.cpp	/^    Tanhu():PhaseChangeSkill("tanhu"){$/;"	f	class:Tanhu
Tanhu	src/package/bgm-package.cpp	/^class Tanhu: public PhaseChangeSkill{$/;"	c	file:
TanhuCard	src/package/bgm-package.cpp	/^TanhuCard::TanhuCard(){$/;"	f	class:TanhuCard
TanhuCard	src/package/bgm-package.h	/^class TanhuCard: public SkillCard{$/;"	c
TanhuViewAsSkill	src/package/bgm-package.cpp	/^    TanhuViewAsSkill():OneCardViewAsSkill("tanhu"){$/;"	f	class:TanhuViewAsSkill
TanhuViewAsSkill	src/package/bgm-package.cpp	/^class TanhuViewAsSkill: public OneCardViewAsSkill{$/;"	c	file:
Tanlan	src/package/wisdompackage.cpp	/^    Tanlan():TriggerSkill("tanlan"){$/;"	f	class:Tanlan
Tanlan	src/package/wisdompackage.cpp	/^class Tanlan: public TriggerSkill{$/;"	c	file:
Tannang	src/package/lingpackage.cpp	/^    Tannang():DistanceSkill("tannang")$/;"	f	class:Tannang
Tannang	src/package/lingpackage.cpp	/^class Tannang: public DistanceSkill{$/;"	c	file:
TargetConfirmed	src/core/structs.h	/^    TargetConfirmed,$/;"	e	enum:TriggerEvent
TargetConfirming	src/core/structs.h	/^    TargetConfirming,$/;"	e	enum:TriggerEvent
TearDown	src/breakpad/processor/map_serializers_unittest.cc	/^  void TearDown() {$/;"	f	class:TestAddressMapSerializer
TearDown	src/breakpad/processor/map_serializers_unittest.cc	/^  void TearDown() {$/;"	f	class:TestContainedRangeMapSerializer
TearDown	src/breakpad/processor/map_serializers_unittest.cc	/^  void TearDown() {$/;"	f	class:TestRangeMapSerializer
TearDown	src/breakpad/processor/map_serializers_unittest.cc	/^  void TearDown() {$/;"	f	class:TestStdMapSerializer
TearDown	src/breakpad/processor/static_address_map_unittest.cc	/^  void TearDown() {$/;"	f	class:TestStaticAddressMap
TearDown	src/breakpad/processor/static_map_unittest.cc	/^  void TearDown() {$/;"	f	class:TestValidMap
Tell	src/breakpad/processor/minidump.cc	/^off_t Minidump::Tell() {$/;"	f	class:google_breakpad::Minidump
TestAddressMapSerializer	src/breakpad/processor/map_serializers_unittest.cc	/^class TestAddressMapSerializer : public ::testing::Test {$/;"	c	file:
TestBasicSourceLineResolver	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^class TestBasicSourceLineResolver : public ::testing::Test {$/;"	c	namespace:__anon71	file:
TestCodeModule	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  TestCodeModule(string code_file) : code_file_(code_file) {}$/;"	f	class:__anon71::TestCodeModule
TestCodeModule	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^class TestCodeModule : public CodeModule {$/;"	c	namespace:__anon71	file:
TestCodeModule	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  explicit TestCodeModule(string code_file) : code_file_(code_file) {}$/;"	f	class:__anon73::TestCodeModule
TestCodeModule	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^class TestCodeModule : public CodeModule {$/;"	c	namespace:__anon73	file:
TestContainedRangeMapSerializer	src/breakpad/processor/map_serializers_unittest.cc	/^class TestContainedRangeMapSerializer : public ::testing::Test {$/;"	c	file:
TestFastSourceLineResolver	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^class TestFastSourceLineResolver : public ::testing::Test {$/;"	c	namespace:__anon73	file:
TestInvalidMap	src/breakpad/processor/static_map_unittest.cc	/^class TestInvalidMap : public ::testing::Test {$/;"	c	file:
TestMap	src/breakpad/processor/address_map_unittest.cc	/^typedef AddressMap< AddressType, linked_ptr<CountedObject> > TestMap;$/;"	t	namespace:__anon76	file:
TestMap	src/breakpad/processor/range_map_unittest.cc	/^typedef RangeMap< AddressType, linked_ptr<CountedObject> > TestMap;$/;"	t	namespace:__anon84	file:
TestMap	src/breakpad/processor/static_address_map_unittest.cc	/^typedef google_breakpad::StaticAddressMap<int, char> TestMap;$/;"	t	file:
TestMap	src/breakpad/processor/static_contained_range_map_unittest.cc	/^typedef google_breakpad::StaticContainedRangeMap<unsigned int, int> TestMap;$/;"	t	namespace:__anon81	file:
TestMap	src/breakpad/processor/static_map_unittest.cc	/^typedef google_breakpad::StaticMap< KeyType, ValueType > TestMap;$/;"	t	file:
TestMap	src/breakpad/processor/static_range_map_unittest.cc	/^typedef google_breakpad::StaticRangeMap< AddressType, EntryType > TestMap;$/;"	t	namespace:__anon85	file:
TestPackage	src/package/standard-generals.cpp	/^TestPackage::TestPackage()$/;"	f	class:TestPackage
TestPackage	src/package/standard.h	/^class TestPackage: public Package{$/;"	c
TestRangeMapSerializer	src/breakpad/processor/map_serializers_unittest.cc	/^class TestRangeMapSerializer : public ::testing::Test {$/;"	c	file:
TestStaticAddressMap	src/breakpad/processor/static_address_map_unittest.cc	/^class TestStaticAddressMap : public ::testing::Test {$/;"	c	file:
TestStaticCRMMap	src/breakpad/processor/static_contained_range_map_unittest.cc	/^class TestStaticCRMMap : public ::testing::Test {$/;"	c	namespace:google_breakpad	file:
TestStaticRangeMap	src/breakpad/processor/static_range_map_unittest.cc	/^class TestStaticRangeMap : public ::testing::Test {$/;"	c	namespace:google_breakpad	file:
TestStdMapSerializer	src/breakpad/processor/map_serializers_unittest.cc	/^class TestStdMapSerializer : public ::testing::Test {$/;"	c	file:
TestSymbolSupplier	src/breakpad/processor/exploitability_unittest.cc	/^  TestSymbolSupplier() : interrupt_(false) {}$/;"	f	class:__anon74::TestSymbolSupplier
TestSymbolSupplier	src/breakpad/processor/exploitability_unittest.cc	/^class TestSymbolSupplier : public SymbolSupplier {$/;"	c	namespace:__anon74	file:
TestSymbolSupplier	src/breakpad/processor/minidump_processor_unittest.cc	/^  TestSymbolSupplier() : interrupt_(false) {}$/;"	f	class:__anon77::TestSymbolSupplier
TestSymbolSupplier	src/breakpad/processor/minidump_processor_unittest.cc	/^class TestSymbolSupplier : public SymbolSupplier {$/;"	c	namespace:__anon77	file:
TestValidMap	src/breakpad/processor/static_map_unittest.cc	/^class TestValidMap : public ::testing::Test {$/;"	c	file:
TextEditColor	src/core/settings.h	/^    QColor TextEditColor;$/;"	m	class:Settings
ThicketPackage	src/package/thicket.cpp	/^ThicketPackage::ThicketPackage()$/;"	f	class:ThicketPackage
ThicketPackage	src/package/thicket.h	/^class ThicketPackage: public Package{$/;"	c
Thread	src/breakpad/processor/synth_minidump.cc	/^Thread::Thread(const Dump &dump,$/;"	f	class:google_breakpad::SynthMinidump::Thread
Thread	src/breakpad/processor/synth_minidump.h	/^class Thread: public Section {$/;"	c	namespace:google_breakpad::SynthMinidump
Thunder	src/core/structs.h	/^        Thunder \/\/ lightning, thunder slash, and few damage skill (Leiji, etc)$/;"	e	enum:DamageStruct::Nature
ThunderSlash	src/package/maneuvering.cpp	/^ThunderSlash::ThunderSlash(Suit suit, int number)$/;"	f	class:ThunderSlash
ThunderSlash	src/package/maneuvering.h	/^class ThunderSlash: public NatureSlash{$/;"	c
Tiandu	src/package/standard-generals.cpp	/^    Tiandu():TriggerSkill("tiandu"){$/;"	f	class:Tiandu
Tiandu	src/package/standard-generals.cpp	/^class Tiandu:public TriggerSkill{$/;"	c	file:
Tianxiang	src/package/wind.cpp	/^    Tianxiang():TriggerSkill("tianxiang"){$/;"	f	class:Tianxiang
Tianxiang	src/package/wind.cpp	/^class Tianxiang: public TriggerSkill{$/;"	c	file:
TianxiangCard	src/package/wind.cpp	/^TianxiangCard::TianxiangCard()$/;"	f	class:TianxiangCard
TianxiangCard	src/package/wind.h	/^class TianxiangCard: public SkillCard{$/;"	c
TianxiangViewAsSkill	src/package/wind.cpp	/^    TianxiangViewAsSkill():OneCardViewAsSkill("tianxiang"){$/;"	f	class:TianxiangViewAsSkill
TianxiangViewAsSkill	src/package/wind.cpp	/^class TianxiangViewAsSkill: public OneCardViewAsSkill{$/;"	c	file:
Tianyi	src/package/firepackage.cpp	/^    Tianyi():TriggerSkill("tianyi"){$/;"	f	class:Tianyi
Tianyi	src/package/firepackage.cpp	/^class Tianyi: public TriggerSkill{$/;"	c	file:
TianyiCard	src/package/firepackage.cpp	/^TianyiCard::TianyiCard(){$/;"	f	class:TianyiCard
TianyiCard	src/package/firepackage.h	/^class TianyiCard: public SkillCard{$/;"	c
TianyiViewAsSkill	src/package/firepackage.cpp	/^    TianyiViewAsSkill():OneCardViewAsSkill("tianyi"){$/;"	f	class:TianyiViewAsSkill
TianyiViewAsSkill	src/package/firepackage.cpp	/^class TianyiViewAsSkill: public OneCardViewAsSkill{$/;"	c	file:
Tiaoxin	src/package/mountainpackage.cpp	/^    Tiaoxin():ZeroCardViewAsSkill("tiaoxin"){$/;"	f	class:Tiaoxin
Tiaoxin	src/package/mountainpackage.cpp	/^class Tiaoxin: public ZeroCardViewAsSkill{$/;"	c	file:
TiaoxinCard	src/package/mountainpackage.cpp	/^TiaoxinCard::TiaoxinCard(){$/;"	f	class:TiaoxinCard
TiaoxinCard	src/package/mountainpackage.h	/^class TiaoxinCard: public SkillCard{$/;"	c
Tieji	src/package/standard-generals.cpp	/^    Tieji():TriggerSkill("tieji"){$/;"	f	class:Tieji
Tieji	src/package/standard-generals.cpp	/^class Tieji:public TriggerSkill{$/;"	c	file:
TimeFormat	src/server/contestdb.cpp	/^const QString ContestDB::TimeFormat = "MMdd-hhmmss";$/;"	m	class:ContestDB	file:
TimeFormat	src/server/contestdb.h	/^    static const QString TimeFormat;$/;"	m	class:ContestDB
TimedProgressBar	src/ui/TimedProgressBar.h	/^    inline TimedProgressBar():m_hasTimer(false), m_autoHide(false), m_timer(NULL), m_step(0), m_max(0), m_val(0)$/;"	f	class:TimedProgressBar
TimedProgressBar	src/ui/TimedProgressBar.h	/^class TimedProgressBar : public QProgressBar$/;"	c
TinyFont	src/core/settings.h	/^    QFont TinyFont;$/;"	m	class:Settings
TocEntry	scenarios/basara.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	scenarios/couple.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	scenarios/fancheng.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	scenarios/guandu.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	scenarios/hegemony.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	scenarios/hulaopass.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	scenarios/impasse_fight.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	scenarios/miniscene.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
TocEntry	scenarios/zombie_mode.html	/^  function TocEntry(el, text, toclevel) {$/;"	f
Token	src/jsoncpp/include/json/reader.h	/^      class Token$/;"	c	class:Json::Reader
Token	src/lua/llex.h	/^typedef struct Token {$/;"	s
Token	src/lua/llex.h	/^} Token;$/;"	t	typeref:struct:Token
TokenType	src/jsoncpp/include/json/reader.h	/^      enum TokenType$/;"	g	class:Json::Reader
Tokenize	src/breakpad/processor/tokenize.cc	/^bool Tokenize(char *line,$/;"	f	namespace:google_breakpad
Tongxin	src/package/yitianpackage.cpp	/^    Tongxin():MasochismSkill("tongxin"){$/;"	f	class:Tongxin
Tongxin	src/package/yitianpackage.cpp	/^class Tongxin: public MasochismSkill{$/;"	c	file:
Toudu	src/package/yitianpackage.cpp	/^    Toudu():MasochismSkill("toudu"){$/;"	f	class:Toudu
Toudu	src/package/yitianpackage.cpp	/^class Toudu: public MasochismSkill{$/;"	c	file:
TrackKerns	include/freetype/freetype/internal/t1types.h	/^    AFM_TrackKern  TrackKerns;   \/* free if non-NULL *\/$/;"	m	struct:AFM_FontInfoRec_
Trick	src/core/card.h	/^        Trick,$/;"	e	enum:Card::CardType
TrickCard	src/package/standard.cpp	/^TrickCard::TrickCard(Suit suit, int number, bool aggressive)$/;"	f	class:TrickCard
TrickCard	src/package/standard.h	/^class TrickCard:public Card{$/;"	c
TriggerEvent	src/core/structs.h	/^enum TriggerEvent{$/;"	g
TriggerSkill	src/core/skill.cpp	/^TriggerSkill::TriggerSkill(const QString &name)$/;"	f	class:TriggerSkill
TriggerSkill	src/core/skill.h	/^class TriggerSkill:public Skill{$/;"	c
TrustAI	src/server/ai.cpp	/^TrustAI::TrustAI(ServerPlayer *player)$/;"	f	class:TrustAI
TrustAI	src/server/ai.h	/^class TrustAI: public AI{$/;"	c
Tuntian	src/package/mountainpackage.cpp	/^    Tuntian():DistanceSkill("tuntian"){$/;"	f	class:Tuntian
Tuntian	src/package/mountainpackage.cpp	/^class Tuntian: public DistanceSkill{$/;"	c	file:
TuntianGet	src/package/mountainpackage.cpp	/^    TuntianGet():TriggerSkill("#tuntian-get"){$/;"	f	class:TuntianGet
TuntianGet	src/package/mountainpackage.cpp	/^class TuntianGet: public TriggerSkill{$/;"	c	file:
TurnStart	src/core/structs.h	/^    TurnStart,$/;"	e	enum:TriggerEvent
TurnedOver	src/core/structs.h	/^    TurnedOver,$/;"	e	enum:TriggerEvent
Tuxi	src/package/standard-generals.cpp	/^    Tuxi():PhaseChangeSkill("tuxi"){$/;"	f	class:Tuxi
Tuxi	src/package/standard-generals.cpp	/^class Tuxi:public PhaseChangeSkill{$/;"	c	file:
TuxiCard	src/package/standard-skillcards.cpp	/^TuxiCard::TuxiCard(){$/;"	f	class:TuxiCard
TuxiCard	src/package/standard-skillcards.h	/^class TuxiCard: public SkillCard{$/;"	c
TuxiViewAsSkill	src/package/standard-generals.cpp	/^    TuxiViewAsSkill():ZeroCardViewAsSkill("tuxi"){$/;"	f	class:TuxiViewAsSkill
TuxiViewAsSkill	src/package/standard-generals.cpp	/^class TuxiViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
Type	src/package/package.h	/^    enum Type{$/;"	g	class:Package
TypeFace	include/freetype/freetype/tttables.h	/^    FT_Char    TypeFace[16];$/;"	m	struct:TT_PCLT_
TypeFamily	include/freetype/freetype/tttables.h	/^    FT_UShort  TypeFamily;$/;"	m	struct:TT_PCLT_
Typhoon	src/package/joypackage.cpp	/^Typhoon::Typhoon(Card::Suit suit, int number)$/;"	f	class:Typhoon
Typhoon	src/package/joypackage.h	/^class Typhoon: public Disaster{$/;"	c
UIFont	src/core/settings.h	/^    QFont UIFont;$/;"	m	class:Settings
UInt	src/jsoncpp/include/json/config.h	/^   typedef unsigned int UInt;$/;"	t	namespace:Json
UInt	src/jsoncpp/include/json/value.h	/^      typedef Json::UInt UInt;$/;"	t	class:Json::Value
UInt64	src/jsoncpp/include/json/config.h	/^   typedef unsigned __int64 UInt64;$/;"	t	namespace:Json
UInt64	src/jsoncpp/include/json/config.h	/^   typedef unsigned long long int UInt64;$/;"	t	namespace:Json
UInt64	src/jsoncpp/include/json/value.h	/^      typedef Json::UInt64 UInt64;$/;"	t	class:Json::Value
UIntToStringBuffer	src/jsoncpp/src/json_tool.h	/^typedef char UIntToStringBuffer[uintToStringBufferSize];$/;"	t	namespace:Json
UNARY_PRIORITY	src/lua/lparser.c	821;"	d	file:
UNDNAME_NO_ECSU	src/breakpad/common/windows/pdb_source_line_writer.cc	43;"	d	file:
UNUSED	src/lua/llimits.h	70;"	d
UTF16ToUTF8	src/breakpad/processor/minidump.cc	/^static string* UTF16ToUTF8(const vector<u_int16_t>& in,$/;"	f	namespace:google_breakpad
UTF16codeunits	src/breakpad/processor/minidump.cc	/^static size_t UTF16codeunits(const u_int16_t *string, size_t maxlen) {$/;"	f	namespace:google_breakpad
UTF8ToWide	src/breakpad/common/windows/http_upload.cc	/^wstring HTTPUpload::UTF8ToWide(const string &utf8) {$/;"	f	class:google_breakpad::HTTPUpload
UTIL_H	src/core/util.h	2;"	d
Udata	src/lua/lobject.h	/^typedef union Udata {$/;"	u
Udata	src/lua/lobject.h	/^} Udata;$/;"	t	typeref:union:Udata
UdpDetector	src/util/detector.cpp	/^UdpDetector::UdpDetector()$/;"	f	class:UdpDetector
UdpDetector	src/util/detector.h	/^class UdpDetector: public Detector{$/;"	c
UdpDetectorDialog	src/dialog/connectiondialog.cpp	/^UdpDetectorDialog::UdpDetectorDialog(QDialog *parent)$/;"	f	class:UdpDetectorDialog
UdpDetectorDialog	src/dialog/connectiondialog.h	/^class UdpDetectorDialog : public QDialog{$/;"	c
Ui	src/dialog/cardoverview.h	/^namespace Ui {$/;"	n
Ui	src/dialog/configdialog.h	/^namespace Ui {$/;"	n
Ui	src/dialog/connectiondialog.h	/^namespace Ui {$/;"	n
Ui	src/dialog/generaloverview.h	/^namespace Ui {$/;"	n
Ui	src/dialog/mainwindow.h	/^namespace Ui {$/;"	n
UiHelper	src/ui/carditem.h	/^    struct UiHelper$/;"	s	class:CardItem
UnOpr	src/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	g
UnOpr	src/lua/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	t	typeref:enum:UnOpr
Units_Per_EM	include/freetype/freetype/tttables.h	/^    FT_UShort  Units_Per_EM;$/;"	m	struct:TT_Header_
UnloadModule	src/breakpad/processor/source_line_resolver_base.cc	/^void SourceLineResolverBase::UnloadModule(const CodeModule *code_module) {$/;"	f	class:google_breakpad::SourceLineResolverBase
UnregisterWaits	src/breakpad/client/windows/crash_generation/client_info.cc	/^void ClientInfo::UnregisterWaits() {$/;"	f	class:google_breakpad::ClientInfo
Up	src/ui/joystick.h	/^    static const int Up = 3;$/;"	m	class:Joystick
UpVal	src/lua/lobject.h	/^typedef struct UpVal {$/;"	s
UpVal	src/lua/lobject.h	/^} UpVal;$/;"	t	typeref:struct:UpVal
UpdateNextID	src/breakpad/client/windows/handler/exception_handler.cc	/^void ExceptionHandler::UpdateNextID() {$/;"	f	class:google_breakpad::ExceptionHandler
UpperBoundTester	src/breakpad/processor/static_map_unittest.cc	/^  void UpperBoundTester(int test_case, const KeyType &key) {$/;"	f	class:TestValidMap
UserAvatar	src/core/settings.h	/^    QString UserAvatar;$/;"	m	class:Settings
UserName	src/core/settings.h	/^    QString UserName;$/;"	m	class:Settings
UsesGUID	src/breakpad/common/windows/pdb_source_line_writer.cc	/^bool PDBSourceLineWriter::UsesGUID(bool *uses_guid) {$/;"	f	class:google_breakpad::PDBSourceLineWriter
Utils	src/core/jsonutils.h	/^    namespace Utils$/;"	n	namespace:QSanProtocol
Utils	src/core/protocol.h	/^    namespace Utils$/;"	n	namespace:QSanProtocol
UuidCreateType	src/breakpad/client/windows/crash_generation/minidump_generator.h	/^  typedef RPC_STATUS (RPC_ENTRY* UuidCreateType)(UUID* Uuid);$/;"	t	class:google_breakpad::MinidumpGenerator
UuidCreate_type	src/breakpad/client/windows/handler/exception_handler.h	/^  typedef RPC_STATUS (RPC_ENTRY *UuidCreate_type)(UUID* Uuid);$/;"	t	class:google_breakpad::ExceptionHandler
VALID_ALL	src/breakpad/processor/windows_frame_info.h	/^    VALID_ALL            = -1$/;"	e	enum:google_breakpad::WindowsFrameInfo::Validity
VALID_NONE	src/breakpad/processor/windows_frame_info.h	/^    VALID_NONE           = 0,$/;"	e	enum:google_breakpad::WindowsFrameInfo::Validity
VALID_PARAMETER_SIZE	src/breakpad/processor/windows_frame_info.h	/^    VALID_PARAMETER_SIZE = 1,$/;"	e	enum:google_breakpad::WindowsFrameInfo::Validity
VALUEWEAK	src/lua/lgc.c	48;"	d	file:
VALUEWEAKBIT	src/lua/lgc.h	59;"	d
VARARG_HASARG	src/lua/lobject.h	257;"	d
VARARG_ISVARARG	src/lua/lobject.h	258;"	d
VARARG_NEEDSARG	src/lua/lobject.h	259;"	d
VCALL	src/lua/lparser.h	/^  VCALL,	\/* info = instruction pc *\/$/;"	e	enum:__anon98
VFALSE	src/lua/lparser.h	/^  VFALSE,$/;"	e	enum:__anon98
VGLOBAL	src/lua/lparser.h	/^  VGLOBAL,	\/* info = index of table; aux = index of global name in `k' *\/$/;"	e	enum:__anon98
VINDEXED	src/lua/lparser.h	/^  VINDEXED,	\/* info = table register; aux = index register (or `k') *\/$/;"	e	enum:__anon98
VJMP	src/lua/lparser.h	/^  VJMP,		\/* info = instruction pc *\/$/;"	e	enum:__anon98
VK	src/lua/lparser.h	/^  VK,		\/* info = index of constant in `k' *\/$/;"	e	enum:__anon98
VKNUM	src/lua/lparser.h	/^  VKNUM,	\/* nval = numerical value *\/$/;"	e	enum:__anon98
VLOCAL	src/lua/lparser.h	/^  VLOCAL,	\/* info = local register *\/$/;"	e	enum:__anon98
VNIL	src/lua/lparser.h	/^  VNIL,$/;"	e	enum:__anon98
VNONRELOC	src/lua/lparser.h	/^  VNONRELOC,	\/* info = result register *\/$/;"	e	enum:__anon98
VOID	src/lua/print.c	21;"	d	file:
VRELOCABLE	src/lua/lparser.h	/^  VRELOCABLE,	\/* info = instruction pc *\/$/;"	e	enum:__anon98
VTRUE	src/lua/lparser.h	/^  VTRUE,$/;"	e	enum:__anon98
VUPVAL	src/lua/lparser.h	/^  VUPVAL,       \/* info = index of upvalue in `upvalues' *\/$/;"	e	enum:__anon98
VVARARG	src/lua/lparser.h	/^  VVARARG	\/* info = instruction pc *\/$/;"	e	enum:__anon98
VVOID	src/lua/lparser.h	/^  VVOID,	\/* no value *\/$/;"	e	enum:__anon98
ValidateInMemoryStructure	src/breakpad/processor/static_map-inl.h	/^bool StaticMap<Key, Value, Compare>::ValidateInMemoryStructure() const {$/;"	f	class:google_breakpad::StaticMap
ValidateResponse	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^bool CrashGenerationClient::ValidateResponse($/;"	f	class:google_breakpad::CrashGenerationClient
Validity	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  enum Validity {$/;"	g	struct:SimpleCFIWalkerFixture	file:
Validity	src/breakpad/processor/windows_frame_info.h	/^  enum Validity {$/;"	g	struct:google_breakpad::WindowsFrameInfo
Value	src/jsoncpp/include/json/value.h	/^   class JSON_API Value $/;"	c	namespace:Json
Value	src/jsoncpp/src/json_value.cpp	/^Value::Value( Int value )$/;"	f	class:Json::Value
Value	src/jsoncpp/src/json_value.cpp	/^Value::Value( Int64 value )$/;"	f	class:Json::Value
Value	src/jsoncpp/src/json_value.cpp	/^Value::Value( UInt value )$/;"	f	class:Json::Value
Value	src/jsoncpp/src/json_value.cpp	/^Value::Value( UInt64 value )$/;"	f	class:Json::Value
Value	src/jsoncpp/src/json_value.cpp	/^Value::Value( ValueType type )$/;"	f	class:Json::Value
Value	src/jsoncpp/src/json_value.cpp	/^Value::Value( bool value )$/;"	f	class:Json::Value
Value	src/jsoncpp/src/json_value.cpp	/^Value::Value( const CppTL::ConstString &value )$/;"	f	class:Json::Value
Value	src/jsoncpp/src/json_value.cpp	/^Value::Value( const StaticString &value )$/;"	f	class:Json::Value
Value	src/jsoncpp/src/json_value.cpp	/^Value::Value( const Value &other )$/;"	f	class:Json::Value
Value	src/jsoncpp/src/json_value.cpp	/^Value::Value( const char *beginValue, $/;"	f	class:Json::Value
Value	src/jsoncpp/src/json_value.cpp	/^Value::Value( const char *value )$/;"	f	class:Json::Value
Value	src/jsoncpp/src/json_value.cpp	/^Value::Value( const std::string &value )$/;"	f	class:Json::Value
Value	src/jsoncpp/src/json_value.cpp	/^Value::Value( double value )$/;"	f	class:Json::Value
Value	src/lua/lobject.h	/^} Value;$/;"	t	typeref:union:__anon90
ValueArrayAllocator	src/jsoncpp/include/json/value.h	/^   class JSON_API ValueArrayAllocator$/;"	c	namespace:Json
ValueConstIterator	src/jsoncpp/include/json/value.h	/^   class ValueConstIterator : public ValueIteratorBase$/;"	c	namespace:Json
ValueHolder	src/jsoncpp/include/json/value.h	/^      union ValueHolder$/;"	u	class:Json::Value
ValueInternalArray	src/jsoncpp/include/json/value.h	/^   class JSON_API ValueInternalArray$/;"	c	namespace:Json
ValueInternalLink	src/jsoncpp/include/json/value.h	/^   class JSON_API ValueInternalLink$/;"	c	namespace:Json
ValueInternalMap	src/jsoncpp/include/json/value.h	/^   class JSON_API ValueInternalMap$/;"	c	namespace:Json
ValueIterator	src/jsoncpp/include/json/value.h	/^   class ValueIterator : public ValueIteratorBase$/;"	c	namespace:Json
ValueIteratorBase	src/jsoncpp/include/json/value.h	/^   class ValueIteratorBase$/;"	c	namespace:Json
ValueMapAllocator	src/jsoncpp/include/json/value.h	/^   class JSON_API ValueMapAllocator$/;"	c	namespace:Json
ValueType	src/breakpad/processor/static_map_unittest.cc	/^typedef int ValueType;$/;"	t	file:
ValueType	src/jsoncpp/include/json/value.h	/^   enum ValueType$/;"	g	namespace:Json
VerifierEnumerateResourceType	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^  typedef BOOL (WINAPI* VerifierEnumerateResourceType)($/;"	t	class:__anon67::HandleTraceData	file:
VerifyEmpty	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^static bool VerifyEmpty(const StackFrame &frame) {$/;"	f	namespace:__anon71
VerifyEmpty	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^static bool VerifyEmpty(const StackFrame &frame) {$/;"	f	namespace:__anon73
VerifyRegisters	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^static bool VerifyRegisters($/;"	f	namespace:__anon71
VerifyRegisters	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^static bool VerifyRegisters($/;"	f	namespace:__anon73
Version	include/freetype/freetype/tttables.h	/^    FT_Fixed   Version;$/;"	m	struct:TT_HoriHeader_
Version	include/freetype/freetype/tttables.h	/^    FT_Fixed   Version;$/;"	m	struct:TT_PCLT_
Version	include/freetype/freetype/tttables.h	/^    FT_Fixed   Version;$/;"	m	struct:TT_VertHeader_
ViewAsSkill	src/core/skill.cpp	/^ViewAsSkill::ViewAsSkill(const QString &name)$/;"	f	class:ViewAsSkill
ViewAsSkill	src/core/skill.h	/^class ViewAsSkill:public Skill{$/;"	c
ViewHeight	src/core/settings.cpp	/^static const qreal ViewHeight = 800 * 0.8;$/;"	v	file:
ViewWidth	src/core/settings.cpp	/^static const qreal ViewWidth = 1280 * 0.8;$/;"	v	file:
Vine	src/package/maneuvering.cpp	/^Vine::Vine(Suit suit, int number):Armor(suit, number){$/;"	f	class:Vine
Vine	src/package/maneuvering.h	/^class Vine: public Armor{$/;"	c
VineSkill	src/package/maneuvering.cpp	/^    VineSkill():ArmorSkill("Vine"){$/;"	f	class:VineSkill
VineSkill	src/package/maneuvering.cpp	/^class VineSkill: public ArmorSkill{$/;"	c	file:
Volcano	src/package/joypackage.cpp	/^Volcano::Volcano(Card::Suit suit, int number)$/;"	f	class:Volcano
Volcano	src/package/joypackage.h	/^class Volcano: public Disaster{$/;"	c
WARN	src/core/compiler-specific.h	11;"	d
WARN	src/core/compiler-specific.h	13;"	d
WFI	src/breakpad/processor/module_comparer.h	/^  typedef WindowsFrameInfo WFI;$/;"	t	class:google_breakpad::ModuleComparer
WHITE0BIT	src/lua/lgc.h	54;"	d
WHITE1BIT	src/lua/lgc.h	55;"	d
WHITEBITS	src/lua/lgc.h	62;"	d
WINDOW_H	src/ui/window.h	2;"	d
WIND_H	src/package/wind.h	2;"	d
WIN_STRING_FORMAT_LL	src/breakpad/common/windows/string_utils-inl.h	47;"	d
WIN_STRING_FORMAT_LL	src/breakpad/common/windows/string_utils-inl.h	49;"	d
WISDOM_H	src/package/wisdompackage.h	2;"	d
Wake	src/core/skill.h	/^        Wake$/;"	e	enum:Skill::Frequency
Walk	src/breakpad/processor/stackwalker.cc	/^bool Stackwalker::Walk(CallStack *stack) {$/;"	f	class:google_breakpad::Stackwalker
Wansha	src/package/thicket.cpp	/^    Wansha():TriggerSkill("wansha"){$/;"	f	class:Wansha
Wansha	src/package/thicket.cpp	/^class Wansha: public TriggerSkill{$/;"	c	file:
Weapon	src/package/standard.cpp	/^Weapon::Weapon(Suit suit, int number, int range)$/;"	f	class:Weapon
Weapon	src/package/standard.h	/^class Weapon:public EquipCard{$/;"	c
WeaponLocation	src/package/standard.h	/^        WeaponLocation = 0,$/;"	e	enum:EquipCard::Location
WeaponSkill	src/core/skill.cpp	/^WeaponSkill::WeaponSkill(const QString &name)$/;"	f	class:WeaponSkill
WeaponSkill	src/core/skill.h	/^class WeaponSkill: public TriggerSkill{$/;"	c
Weidai	src/package/wisdompackage.cpp	/^    Weidai():TriggerSkill("weidai$"){$/;"	f	class:Weidai
Weidai	src/package/wisdompackage.cpp	/^class Weidai: public TriggerSkill{$/;"	c	file:
WeidaiCard	src/package/wisdompackage.cpp	/^WeidaiCard::WeidaiCard(){$/;"	f	class:WeidaiCard
WeidaiCard	src/package/wisdompackage.h	/^class WeidaiCard: public SkillCard{$/;"	c
WeidaiViewAsSkill	src/package/wisdompackage.cpp	/^    WeidaiViewAsSkill():ZeroCardViewAsSkill("weidai$"){$/;"	f	class:WeidaiViewAsSkill
WeidaiViewAsSkill	src/package/wisdompackage.cpp	/^class WeidaiViewAsSkill:public ZeroCardViewAsSkill{$/;"	c	file:
Weidi	src/package/sp-package.cpp	/^    Weidi():GameStartSkill("weidi"){$/;"	f	class:Weidi
Weidi	src/package/sp-package.cpp	/^class Weidi:public GameStartSkill{$/;"	c	file:
WeidiCard	src/package/sp-package.cpp	/^WeidiCard::WeidiCard(){$/;"	f	class:WeidiCard
WeidiCard	src/package/sp-package.h	/^class WeidiCard: public SkillCard{$/;"	c
WeidiViewAsSkill	src/package/sp-package.cpp	/^    WeidiViewAsSkill():ZeroCardViewAsSkill("weidi"){$/;"	f	class:WeidiViewAsSkill
WeidiViewAsSkill	src/package/sp-package.cpp	/^class WeidiViewAsSkill:public ZeroCardViewAsSkill{$/;"	c	file:
Weimu	src/package/thicket.cpp	/^    Weimu():ProhibitSkill("weimu"){$/;"	f	class:Weimu
Weimu	src/package/thicket.cpp	/^class Weimu: public ProhibitSkill{$/;"	c	file:
WeiwudiGuixin	src/package/yitianpackage.cpp	/^    WeiwudiGuixin():PhaseChangeSkill("weiwudi_guixin"){$/;"	f	class:WeiwudiGuixin
WeiwudiGuixin	src/package/yitianpackage.cpp	/^class WeiwudiGuixin: public PhaseChangeSkill{$/;"	c	file:
Wenjiu	src/package/wisdompackage.cpp	/^    Wenjiu():TriggerSkill("wenjiu"){$/;"	f	class:Wenjiu
Wenjiu	src/package/wisdompackage.cpp	/^class Wenjiu: public TriggerSkill{$/;"	c	file:
WideToUTF8	src/breakpad/common/windows/http_upload.cc	/^string HTTPUpload::WideToUTF8(const wstring &wide) {$/;"	f	class:google_breakpad::HTTPUpload
WidthType	include/freetype/freetype/tttables.h	/^    FT_Char    WidthType;$/;"	m	struct:TT_PCLT_
WindPackage	src/package/wind.cpp	/^WindPackage::WindPackage()$/;"	f	class:WindPackage
WindPackage	src/package/wind.h	/^class WindPackage: public Package{$/;"	c
Window	src/ui/window.cpp	/^Window::Window(const QString &title, const QSizeF &size)$/;"	f	class:Window
Window	src/ui/window.h	/^class Window : public QGraphicsObject$/;"	c
WindowsFrameInfo	src/breakpad/processor/windows_frame_info.h	/^  WindowsFrameInfo() : type_(STACK_INFO_UNKNOWN),$/;"	f	struct:google_breakpad::WindowsFrameInfo
WindowsFrameInfo	src/breakpad/processor/windows_frame_info.h	/^  WindowsFrameInfo(StackInfoTypes type,$/;"	f	struct:google_breakpad::WindowsFrameInfo
WindowsFrameInfo	src/breakpad/processor/windows_frame_info.h	/^struct WindowsFrameInfo {$/;"	s	namespace:google_breakpad
WindowsStringUtils	src/breakpad/common/windows/string_utils-inl.h	/^class WindowsStringUtils {$/;"	c	namespace:google_breakpad
WisdomPackage	src/package/wisdompackage.cpp	/^WisdomPackage::WisdomPackage()$/;"	f	class:WisdomPackage
WisdomPackage	src/package/wisdompackage.h	/^class WisdomPackage: public Package{$/;"	c
WrappedCard	src/core/WrappedCard.cpp	/^WrappedCard::WrappedCard(Card* card):$/;"	f	class:WrappedCard
WrappedCard	src/core/WrappedCard.h	/^class WrappedCard : public Card$/;"	c
Write	src/breakpad/processor/map_serializers-inl.h	/^char *ContainedRangeMapSerializer<AddrType, EntryType>::Write($/;"	f	class:google_breakpad::ContainedRangeMapSerializer
Write	src/breakpad/processor/map_serializers-inl.h	/^char *RangeMapSerializer<Address, Entry>::Write($/;"	f	class:google_breakpad::RangeMapSerializer
Write	src/breakpad/processor/map_serializers-inl.h	/^char *StdMapSerializer<Key, Value>::Write(const std::map<Key, Value> &m,$/;"	f	class:google_breakpad::StdMapSerializer
Write	src/breakpad/processor/map_serializers.h	/^  char* Write(const AddressMap<Addr, Entry> &m, char *dest) const {$/;"	f	class:google_breakpad::AddressMapSerializer
Write	src/breakpad/processor/module_serializer.cc	/^char *ModuleSerializer::Write(const BasicSourceLineResolver::Module &module,$/;"	f	class:google_breakpad::ModuleSerializer
Write	src/breakpad/processor/simple_serializer-inl.h	/^  static char *Write(bool boolean, char *dest) {$/;"	f	class:google_breakpad::SimpleSerializer
Write	src/breakpad/processor/simple_serializer-inl.h	/^  static char *Write(const Function &func, char *dest) {$/;"	f	class:google_breakpad::SimpleSerializer
Write	src/breakpad/processor/simple_serializer-inl.h	/^  static char *Write(const Line &line, char *dest) {$/;"	f	class:google_breakpad::SimpleSerializer
Write	src/breakpad/processor/simple_serializer-inl.h	/^  static char *Write(const PublicSymbol &pubsymbol, char *dest) {$/;"	f	class:google_breakpad::SimpleSerializer
Write	src/breakpad/processor/simple_serializer-inl.h	/^  static char *Write(const WindowsFrameInfo &wfi, char *dest) {$/;"	f	class:google_breakpad::SimpleSerializer
Write	src/breakpad/processor/simple_serializer-inl.h	/^  static char *Write(const char *cstring, char *dest) {$/;"	f	class:google_breakpad::SimpleSerializer
Write	src/breakpad/processor/simple_serializer-inl.h	/^  static char *Write(const linked_ptr<Function> &func, char *dest) {$/;"	f	class:google_breakpad::SimpleSerializer
Write	src/breakpad/processor/simple_serializer-inl.h	/^  static char *Write(const linked_ptr<Line> &lineptr, char *dest) {$/;"	f	class:google_breakpad::SimpleSerializer
Write	src/breakpad/processor/simple_serializer-inl.h	/^  static char *Write(const linked_ptr<PublicSymbol> &pubsymbol, char *dest) {$/;"	f	class:google_breakpad::SimpleSerializer
Write	src/breakpad/processor/simple_serializer-inl.h	/^  static char *Write(const linked_ptr<WindowsFrameInfo> &wfi, char *dest) {$/;"	f	class:google_breakpad::SimpleSerializer
Write	src/breakpad/processor/simple_serializer-inl.h	/^  static char *Write(const string &str, char *dest) {$/;"	f	class:google_breakpad::SimpleSerializer
Write	src/breakpad/processor/simple_serializer.h	/^  static char *Write(const Type &item, char *dest) {$/;"	f	class:google_breakpad::SimpleSerializer
WriteMap	src/breakpad/common/windows/pdb_source_line_writer.cc	/^bool PDBSourceLineWriter::WriteMap(FILE *map_file) {$/;"	f	class:google_breakpad::PDBSourceLineWriter
WriteMinidump	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^bool MinidumpGenerator::WriteMinidump(HANDLE process_handle,$/;"	f	class:google_breakpad::MinidumpGenerator
WriteMinidump	src/breakpad/client/windows/handler/exception_handler.cc	/^bool ExceptionHandler::WriteMinidump() {$/;"	f	class:google_breakpad::ExceptionHandler
WriteMinidump	src/breakpad/client/windows/handler/exception_handler.cc	/^bool ExceptionHandler::WriteMinidump(const wstring &dump_path,$/;"	f	class:google_breakpad::ExceptionHandler
WriteMinidumpForException	src/breakpad/client/windows/handler/exception_handler.cc	/^bool ExceptionHandler::WriteMinidumpForException(EXCEPTION_POINTERS* exinfo) {$/;"	f	class:google_breakpad::ExceptionHandler
WriteMinidumpOnHandlerThread	src/breakpad/client/windows/handler/exception_handler.cc	/^bool ExceptionHandler::WriteMinidumpOnHandlerThread($/;"	f	class:google_breakpad::ExceptionHandler
WriteMinidumpWithException	src/breakpad/client/windows/handler/exception_handler.cc	/^bool ExceptionHandler::WriteMinidumpWithException($/;"	f	class:google_breakpad::ExceptionHandler
Writer	src/jsoncpp/include/json/writer.h	/^   class JSON_API Writer$/;"	c	namespace:Json
Wuhun	src/package/god.cpp	/^    Wuhun():TriggerSkill("wuhun"){$/;"	f	class:Wuhun
Wuhun	src/package/god.cpp	/^class Wuhun: public TriggerSkill{$/;"	c	file:
WuhunRevenge	src/package/god.cpp	/^    WuhunRevenge():TriggerSkill("#wuhun"){$/;"	f	class:WuhunRevenge
WuhunRevenge	src/package/god.cpp	/^class WuhunRevenge: public TriggerSkill{$/;"	c	file:
Wuling	src/package/yitianpackage.cpp	/^    Wuling():PhaseChangeSkill("wuling"){$/;"	f	class:Wuling
Wuling	src/package/yitianpackage.cpp	/^class Wuling: public PhaseChangeSkill{$/;"	c	file:
WulingEffect	src/package/yitianpackage.cpp	/^    WulingEffect():TriggerSkill("#wuling-effect"){$/;"	f	class:WulingEffect
WulingEffect	src/package/yitianpackage.cpp	/^class WulingEffect: public TriggerSkill{$/;"	c	file:
WulingExEffect	src/package/yitianpackage.cpp	/^    WulingExEffect():TriggerSkill("#wuling-ex-effect"){$/;"	f	class:WulingExEffect
WulingExEffect	src/package/yitianpackage.cpp	/^class WulingExEffect: public TriggerSkill{$/;"	c	file:
Wumou	src/package/god.cpp	/^    Wumou():TriggerSkill("wumou"){$/;"	f	class:Wumou
Wumou	src/package/god.cpp	/^class Wumou:public TriggerSkill{$/;"	c	file:
Wuqian	src/package/god.cpp	/^    Wuqian():TriggerSkill("wuqian"){$/;"	f	class:Wuqian
Wuqian	src/package/god.cpp	/^class Wuqian: public TriggerSkill{$/;"	c	file:
WuqianCard	src/package/god.cpp	/^WuqianCard::WuqianCard(){$/;"	f	class:WuqianCard
WuqianCard	src/package/god.h	/^class WuqianCard: public SkillCard{$/;"	c
WuqianViewAsSkill	src/package/god.cpp	/^    WuqianViewAsSkill():ZeroCardViewAsSkill("wuqian"){$/;"	f	class:WuqianViewAsSkill
WuqianViewAsSkill	src/package/god.cpp	/^class WuqianViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
Wushen	src/package/god.cpp	/^    Wushen():FilterSkill("wushen"){$/;"	f	class:Wushen
Wushen	src/package/god.cpp	/^class Wushen: public FilterSkill{$/;"	c	file:
WushenSlash	src/package/god.cpp	/^WushenSlash::WushenSlash(Card::Suit suit, int number)$/;"	f	class:WushenSlash
WushenSlash	src/package/god.h	/^class WushenSlash: public Slash{$/;"	c
Wusheng	src/package/standard-generals.cpp	/^    Wusheng():OneCardViewAsSkill("wusheng"){$/;"	f	class:Wusheng
Wusheng	src/package/standard-generals.cpp	/^class Wusheng:public OneCardViewAsSkill{$/;"	c	file:
Wushuang	src/package/standard-generals.cpp	/^    Wushuang():TriggerSkill("wushuang"){$/;"	f	class:Wushuang
Wushuang	src/package/standard-generals.cpp	/^class Wushuang:public TriggerSkill{$/;"	c	file:
Wuyan	src/package/yjcm-package.cpp	/^    Wuyan():TriggerSkill("wuyan"){$/;"	f	class:Wuyan
Wuyan	src/package/yjcm-package.cpp	/^class Wuyan: public TriggerSkill{$/;"	c	file:
Xiangle	src/package/mountainpackage.cpp	/^    Xiangle():TriggerSkill("xiangle"){$/;"	f	class:Xiangle
Xiangle	src/package/mountainpackage.cpp	/^class Xiangle: public TriggerSkill{$/;"	c	file:
Xiansheng	src/scenario/fancheng-scenario.cpp	/^    Xiansheng():PhaseChangeSkill("xiansheng"){$/;"	f	class:Xiansheng
Xiansheng	src/scenario/fancheng-scenario.cpp	/^class Xiansheng: public PhaseChangeSkill{$/;"	c	file:
Xianzhen	src/package/yjcm-package.cpp	/^    Xianzhen():TriggerSkill("xianzhen"){$/;"	f	class:Xianzhen
Xianzhen	src/package/yjcm-package.cpp	/^class Xianzhen: public TriggerSkill{$/;"	c	file:
XianzhenCard	src/package/yjcm-package.cpp	/^XianzhenCard::XianzhenCard(){$/;"	f	class:XianzhenCard
XianzhenCard	src/package/yjcm-package.h	/^class XianzhenCard: public SkillCard{$/;"	c
XianzhenSlashCard	src/package/yjcm-package.cpp	/^XianzhenSlashCard::XianzhenSlashCard(){$/;"	f	class:XianzhenSlashCard
XianzhenSlashCard	src/package/yjcm-package.h	/^class XianzhenSlashCard: public SkillCard{$/;"	c
XianzhenViewAsSkill	src/package/yjcm-package.cpp	/^    XianzhenViewAsSkill():ViewAsSkill(""){$/;"	f	class:XianzhenViewAsSkill
XianzhenViewAsSkill	src/package/yjcm-package.cpp	/^class XianzhenViewAsSkill: public ViewAsSkill{$/;"	c	file:
Xiaoji	src/package/standard-generals.cpp	/^    Xiaoji():TriggerSkill("xiaoji"){$/;"	f	class:Xiaoji
Xiaoji	src/package/standard-generals.cpp	/^class Xiaoji: public TriggerSkill{$/;"	c	file:
Xiliang	src/package/yitianpackage.cpp	/^    Xiliang():TriggerSkill("xiliang"){$/;"	f	class:Xiliang
Xiliang	src/package/yitianpackage.cpp	/^class Xiliang: public TriggerSkill{$/;"	c	file:
XinZhan	lua/ai/guanxing-ai.lua	/^local function XinZhan(self, cards)$/;"	f
Xingshang	src/package/thicket.cpp	/^    Xingshang():TriggerSkill("xingshang"){$/;"	f	class:Xingshang
Xingshang	src/package/thicket.cpp	/^class Xingshang: public TriggerSkill{$/;"	c	file:
Xinsheng	src/package/mountainpackage.cpp	/^    Xinsheng():MasochismSkill("xinsheng"){$/;"	f	class:Xinsheng
Xinsheng	src/package/mountainpackage.cpp	/^class Xinsheng: public MasochismSkill{$/;"	c	file:
Xinzhan	src/package/yjcm-package.cpp	/^    Xinzhan():ZeroCardViewAsSkill("xinzhan"){$/;"	f	class:Xinzhan
Xinzhan	src/package/yjcm-package.cpp	/^class Xinzhan: public ZeroCardViewAsSkill{$/;"	c	file:
XinzhanCard	src/package/yjcm-package.cpp	/^XinzhanCard::XinzhanCard(){$/;"	f	class:XinzhanCard
XinzhanCard	src/package/yjcm-package.h	/^class XinzhanCard: public SkillCard{$/;"	c
Xiuluo	src/package/sp-package.cpp	/^    Xiuluo():PhaseChangeSkill("xiuluo"){$/;"	f	class:Xiuluo
Xiuluo	src/package/sp-package.cpp	/^class Xiuluo: public PhaseChangeSkill{$/;"	c	file:
Xuanfeng	src/package/yjcm-package.cpp	/^    Xuanfeng():TriggerSkill("xuanfeng"){$/;"	f	class:Xuanfeng
Xuanfeng	src/package/yjcm-package.cpp	/^class Xuanfeng: public TriggerSkill{$/;"	c	file:
XuanfengCard	src/package/yjcm-package.cpp	/^XuanfengCard::XuanfengCard(){$/;"	f	class:XuanfengCard
XuanfengCard	src/package/yjcm-package.h	/^class XuanfengCard: public SkillCard{$/;"	c
XuanfengViewAsSkill	src/package/yjcm-package.cpp	/^    XuanfengViewAsSkill():ZeroCardViewAsSkill("xuanfeng"){$/;"	f	class:XuanfengViewAsSkill
XuanfengViewAsSkill	src/package/yjcm-package.cpp	/^class XuanfengViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
Xuanhuo	src/package/yjcm-package.cpp	/^    Xuanhuo():PhaseChangeSkill("xuanhuo"){$/;"	f	class:Xuanhuo
Xuanhuo	src/package/yjcm-package.cpp	/^class Xuanhuo:public PhaseChangeSkill{$/;"	c	file:
XuanhuoCard	src/package/yjcm-package.cpp	/^XuanhuoCard::XuanhuoCard(){$/;"	f	class:XuanhuoCard
XuanhuoCard	src/package/yjcm-package.h	/^class XuanhuoCard: public SkillCard{$/;"	c
XuanhuoViewAsSkill	src/package/yjcm-package.cpp	/^    XuanhuoViewAsSkill():ZeroCardViewAsSkill("xuanhuo"){$/;"	f	class:XuanhuoViewAsSkill
XuanhuoViewAsSkill	src/package/yjcm-package.cpp	/^class XuanhuoViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
Xueyi	src/package/firepackage.cpp	/^    Xueyi():MaxCardsSkill("xueyi$"){$/;"	f	class:Xueyi
Xueyi	src/package/firepackage.cpp	/^class Xueyi: public MaxCardsSkill{$/;"	c	file:
Xunmeng	src/scenario/zombie-mode-scenario.cpp	/^    Xunmeng():TriggerSkill("xunmeng"){$/;"	f	class:Xunmeng
Xunmeng	src/scenario/zombie-mode-scenario.cpp	/^class Xunmeng: public TriggerSkill{$/;"	c	file:
Xunzhi	src/package/yitianpackage.cpp	/^    Xunzhi():PhaseChangeSkill("xunzhi"){$/;"	f	class:Xunzhi
Xunzhi	src/package/yitianpackage.cpp	/^class Xunzhi: public PhaseChangeSkill{$/;"	c	file:
XunzhiCard	src/package/yitianpackage.cpp	/^XunzhiCard::XunzhiCard(){$/;"	f	class:XunzhiCard
XunzhiCard	src/package/yitianpackage.h	/^class XunzhiCard: public SkillCard{$/;"	c
XunzhiViewAsSkill	src/package/yitianpackage.cpp	/^    XunzhiViewAsSkill():ZeroCardViewAsSkill("#xunzhi"){$/;"	f	class:XunzhiViewAsSkill
XunzhiViewAsSkill	src/package/yitianpackage.cpp	/^class XunzhiViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
YITIANPACKAGE_H	src/package/yitianpackage.h	2;"	d
YJCM2012PACKAGE_H	src/package/yjcm2012-package.h	2;"	d
YJCM2012Package	src/package/yjcm2012-package.cpp	/^YJCM2012Package::YJCM2012Package():Package("YJCM2012"){$/;"	f	class:YJCM2012Package
YJCM2012Package	src/package/yjcm2012-package.h	/^class YJCM2012Package: public Package{$/;"	c
YJCMPACKAGE_H	src/package/yjcm-package.h	2;"	d
YJCMPackage	src/package/yjcm-package.cpp	/^YJCMPackage::YJCMPackage():Package("YJCM"){$/;"	f	class:YJCMPackage
YJCMPackage	src/package/yjcm-package.h	/^class YJCMPackage: public Package{$/;"	c
Yanxiao	src/package/bgm-package.cpp	/^    Yanxiao():PhaseChangeSkill("yanxiao"){$/;"	f	class:Yanxiao
Yanxiao	src/package/bgm-package.cpp	/^class Yanxiao: public PhaseChangeSkill{$/;"	c	file:
YanxiaoCard	src/package/bgm-package.cpp	/^YanxiaoCard::YanxiaoCard(Suit suit, int number)$/;"	f	class:YanxiaoCard
YanxiaoCard	src/package/bgm-package.h	/^class YanxiaoCard:public DelayedTrick{$/;"	c
YanxiaoVeiwAsSkill	src/package/bgm-package.cpp	/^    YanxiaoVeiwAsSkill():OneCardViewAsSkill("yanxiao"){$/;"	f	class:YanxiaoVeiwAsSkill
YanxiaoVeiwAsSkill	src/package/bgm-package.cpp	/^class YanxiaoVeiwAsSkill: public OneCardViewAsSkill{$/;"	c	file:
Yanzheng	src/package/bgm-package.cpp	/^    Yanzheng():OneCardViewAsSkill("yanzheng"){$/;"	f	class:Yanzheng
Yanzheng	src/package/bgm-package.cpp	/^class Yanzheng: public OneCardViewAsSkill{$/;"	c	file:
Yeyan	src/package/god.cpp	/^    Yeyan(): ViewAsSkill("yeyan"){$/;"	f	class:Yeyan
Yeyan	src/package/god.cpp	/^class Yeyan: public ViewAsSkill{$/;"	c	file:
YeyanCard	src/package/god.h	/^class YeyanCard: public SkillCard{$/;"	c
Yicai	src/package/wisdompackage.cpp	/^    Yicai():TriggerSkill("yicai"){$/;"	f	class:Yicai
Yicai	src/package/wisdompackage.cpp	/^class Yicai:public TriggerSkill{$/;"	c	file:
Yicong	src/package/sp-package.cpp	/^    Yicong():DistanceSkill("yicong"){$/;"	f	class:Yicong
Yicong	src/package/sp-package.cpp	/^class Yicong: public DistanceSkill{$/;"	c	file:
Yihun	src/package/standard-generals.cpp	/^    Yihun():ZeroCardViewAsSkill("yihun"){$/;"	f	class:Yihun
Yihun	src/package/standard-generals.cpp	/^class Yihun: public ZeroCardViewAsSkill{$/;"	c	file:
YihunCard	src/package/standard-generals.cpp	/^YihunCard::YihunCard(){$/;"	f	class:YihunCard
YihunCard	src/package/standard-skillcards.h	/^class YihunCard: public SkillCard{$/;"	c
Yiji	src/package/standard-generals.cpp	/^    Yiji():MasochismSkill("yiji"){$/;"	f	class:Yiji
Yiji	src/package/standard-generals.cpp	/^class Yiji:public MasochismSkill{$/;"	c	file:
YijiViewAsSkill	src/client/aux-skills.cpp	/^YijiViewAsSkill::YijiViewAsSkill()$/;"	f	class:YijiViewAsSkill
YijiViewAsSkill	src/client/aux-skills.h	/^class YijiViewAsSkill : public ViewAsSkill{$/;"	c
Yinghun	src/package/thicket.cpp	/^    Yinghun():PhaseChangeSkill("yinghun"){$/;"	f	class:Yinghun
Yinghun	src/package/thicket.cpp	/^class Yinghun: public PhaseChangeSkill{$/;"	c	file:
YinghunCard	src/package/thicket.cpp	/^YinghunCard::YinghunCard(){$/;"	f	class:YinghunCard
YinghunCard	src/package/thicket.h	/^class YinghunCard: public SkillCard{$/;"	c
YinghunViewAsSkill	src/package/thicket.cpp	/^    YinghunViewAsSkill():ZeroCardViewAsSkill("yinghun"){$/;"	f	class:YinghunViewAsSkill
YinghunViewAsSkill	src/package/thicket.cpp	/^class YinghunViewAsSkill: public ZeroCardViewAsSkill{$/;"	c	file:
Yingzi	src/package/standard-generals.cpp	/^    Yingzi():DrawCardsSkill("yingzi"){$/;"	f	class:Yingzi
Yingzi	src/package/standard-generals.cpp	/^class Yingzi:public DrawCardsSkill{$/;"	c	file:
Yishe	src/package/yitianpackage.cpp	/^    Yishe():GameStartSkill("yishe"){$/;"	f	class:Yishe
Yishe	src/package/yitianpackage.cpp	/^class Yishe: public GameStartSkill{$/;"	c	file:
YisheAsk	src/package/yitianpackage.cpp	/^    YisheAsk():ZeroCardViewAsSkill("yisheask"){$/;"	f	class:YisheAsk
YisheAsk	src/package/yitianpackage.cpp	/^class YisheAsk: public ZeroCardViewAsSkill{$/;"	c	file:
YisheAskCard	src/package/yitianpackage.cpp	/^YisheAskCard::YisheAskCard(){$/;"	f	class:YisheAskCard
YisheAskCard	src/package/yitianpackage.h	/^class YisheAskCard: public SkillCard{$/;"	c
YisheCard	src/package/yitianpackage.cpp	/^YisheCard::YisheCard(){$/;"	f	class:YisheCard
YisheCard	src/package/yitianpackage.h	/^class YisheCard: public SkillCard{$/;"	c
YisheViewAsSkill	src/package/yitianpackage.cpp	/^    YisheViewAsSkill():ViewAsSkill(""){$/;"	f	class:YisheViewAsSkill
YisheViewAsSkill	src/package/yitianpackage.cpp	/^class YisheViewAsSkill: public ViewAsSkill{$/;"	c	file:
Yishi	src/package/lingpackage.cpp	/^    Yishi():TriggerSkill("yishi"){$/;"	f	class:Yishi
Yishi	src/package/lingpackage.cpp	/^class Yishi: public TriggerSkill{$/;"	c	file:
Yitian	src/package/yitianpackage.cpp	/^    Yitian():TriggerSkill("yitian"){$/;"	f	class:Yitian
Yitian	src/package/yitianpackage.cpp	/^ADD_PACKAGE(Yitian);$/;"	v
Yitian	src/package/yitianpackage.cpp	/^class Yitian: public TriggerSkill{$/;"	c	file:
YitianCardPackage	src/package/yitianpackage.h	/^class YitianCardPackage: public Package{$/;"	c
YitianPackage	src/package/yitianpackage.cpp	/^YitianPackage::YitianPackage()$/;"	f	class:YitianPackage
YitianPackage	src/package/yitianpackage.h	/^class YitianPackage: public Package{$/;"	c
YitianSwordSkill	src/package/yitianpackage.cpp	/^    YitianSwordSkill():WeaponSkill("YitianSword"){$/;"	f	class:YitianSwordSkill
YitianSwordSkill	src/package/yitianpackage.cpp	/^class YitianSwordSkill : public WeaponSkill{$/;"	c	file:
Yizhong	src/package/yjcm-package.cpp	/^    Yizhong():TriggerSkill("yizhong"){$/;"	f	class:Yizhong
Yizhong	src/package/yjcm-package.cpp	/^class Yizhong: public TriggerSkill{$/;"	c	file:
Yongsi	src/package/sp-package.cpp	/^    Yongsi():TriggerSkill("yongsi"){$/;"	f	class:Yongsi
Yongsi	src/package/sp-package.cpp	/^class Yongsi: public TriggerSkill{$/;"	c	file:
Yuwen	src/package/wisdompackage.cpp	/^    Yuwen():TriggerSkill("yuwen"){$/;"	f	class:Yuwen
Yuwen	src/package/wisdompackage.cpp	/^class Yuwen: public TriggerSkill{$/;"	c	file:
YxSword	src/package/joypackage.cpp	/^YxSword::YxSword(Suit suit, int number)$/;"	f	class:YxSword
YxSword	src/package/joypackage.h	/^class YxSword: public Weapon{$/;"	c
YxSwordSkill	src/package/joypackage.cpp	/^    YxSwordSkill():WeaponSkill("YxSword"){$/;"	f	class:YxSwordSkill
YxSwordSkill	src/package/joypackage.cpp	/^class YxSwordSkill: public WeaponSkill{$/;"	c	file:
Z	src/lua/lundump.c	/^ ZIO* Z;$/;"	m	struct:__anon102	file:
ZIO	src/lua/lzio.h	/^typedef struct Zio ZIO;$/;"	t	typeref:struct:Zio
ZOMBIE_MODE_H	src/scenario/zombie-mode-scenario.h	2;"	d
Zaibian	src/scenario/zombie-mode-scenario.cpp	/^    Zaibian():TriggerSkill("zaibian"){$/;"	f	class:Zaibian
Zaibian	src/scenario/zombie-mode-scenario.cpp	/^class Zaibian: public TriggerSkill{$/;"	c	file:
Zaiqi	src/package/thicket.cpp	/^    Zaiqi():PhaseChangeSkill("zaiqi"){$/;"	f	class:Zaiqi
Zaiqi	src/package/thicket.cpp	/^class Zaiqi: public PhaseChangeSkill{$/;"	c	file:
Zaoxian	src/package/mountainpackage.cpp	/^    Zaoxian():PhaseChangeSkill("zaoxian"){$/;"	f	class:Zaoxian
Zaoxian	src/package/mountainpackage.cpp	/^class Zaoxian: public PhaseChangeSkill{$/;"	c	file:
Zaoyao	src/package/yitianpackage.cpp	/^    Zaoyao():PhaseChangeSkill("zaoyao"){$/;"	f	class:Zaoyao
Zaoyao	src/package/yitianpackage.cpp	/^class Zaoyao: public PhaseChangeSkill{$/;"	c	file:
ZeroCardViewAsSkill	src/core/skill.cpp	/^ZeroCardViewAsSkill::ZeroCardViewAsSkill(const QString &name)$/;"	f	class:ZeroCardViewAsSkill
ZeroCardViewAsSkill	src/core/skill.h	/^class ZeroCardViewAsSkill: public ViewAsSkill{$/;"	c
ZhanShuangxiong	src/scenario/guandu-scenario.cpp	/^    ZhanShuangxiong():ZeroCardViewAsSkill("zhanshuangxiong"){$/;"	f	class:ZhanShuangxiong
ZhanShuangxiong	src/scenario/guandu-scenario.cpp	/^class ZhanShuangxiong: public ZeroCardViewAsSkill{$/;"	c	file:
ZhanShuangxiongCard	src/scenario/guandu-scenario.cpp	/^ZhanShuangxiongCard::ZhanShuangxiongCard(){$/;"	f	class:ZhanShuangxiongCard
ZhanShuangxiongCard	src/scenario/guandu-scenario.h	/^class ZhanShuangxiongCard: public SkillCard{$/;"	c
Zhaolie	src/package/bgm-package.cpp	/^    Zhaolie():DrawCardsSkill("zhaolie"){$/;"	f	class:Zhaolie
Zhaolie	src/package/bgm-package.cpp	/^class Zhaolie:public DrawCardsSkill{$/;"	c	file:
ZhaolieAct	src/package/bgm-package.cpp	/^    ZhaolieAct():TriggerSkill("#zhaolie"){$/;"	f	class:ZhaolieAct
ZhaolieAct	src/package/bgm-package.cpp	/^class ZhaolieAct: public TriggerSkill{$/;"	c	file:
Zhenggong	src/package/yitianpackage.cpp	/^    Zhenggong():TriggerSkill("zhenggong"){$/;"	f	class:Zhenggong
Zhenggong	src/package/yitianpackage.cpp	/^class Zhenggong: public TriggerSkill{$/;"	c	file:
Zhenlie	src/package/yjcm2012-package.cpp	/^    Zhenlie():TriggerSkill("zhenlie"){$/;"	f	class:Zhenlie
Zhenlie	src/package/yjcm2012-package.cpp	/^class Zhenlie: public TriggerSkill{$/;"	c	file:
Zhenwei	src/package/yitianpackage.cpp	/^    Zhenwei():TriggerSkill("zhenwei"){$/;"	f	class:Zhenwei
Zhenwei	src/package/yitianpackage.cpp	/^class Zhenwei: public TriggerSkill{$/;"	c	file:
Zhiba	src/package/standard-generals.cpp	/^    Zhiba(){$/;"	f	class:Zhiba
Zhiba	src/package/standard-generals.cpp	/^class Zhiba: public Zhiheng{$/;"	c	file:
ZhibaCard	src/package/mountainpackage.cpp	/^ZhibaCard::ZhibaCard(){$/;"	f	class:ZhibaCard
ZhibaCard	src/package/mountainpackage.h	/^class ZhibaCard: public SkillCard{$/;"	c
ZhibaPindian	src/package/mountainpackage.cpp	/^    ZhibaPindian():OneCardViewAsSkill("zhiba_pindian"){$/;"	f	class:ZhibaPindian
ZhibaPindian	src/package/mountainpackage.cpp	/^class ZhibaPindian: public OneCardViewAsSkill{$/;"	c	file:
Zhichi	src/package/yjcm-package.cpp	/^    Zhichi():TriggerSkill("zhichi"){$/;"	f	class:Zhichi
Zhichi	src/package/yjcm-package.cpp	/^class Zhichi: public TriggerSkill{$/;"	c	file:
ZhichiClear	src/package/yjcm-package.cpp	/^    ZhichiClear():TriggerSkill("#zhichi-clear"){$/;"	f	class:ZhichiClear
ZhichiClear	src/package/yjcm-package.cpp	/^class ZhichiClear: public TriggerSkill{$/;"	c	file:
Zhiheng	src/package/standard-generals.cpp	/^    Zhiheng():ViewAsSkill("zhiheng"){$/;"	f	class:Zhiheng
Zhiheng	src/package/standard-generals.cpp	/^class Zhiheng:public ViewAsSkill{$/;"	c	file:
ZhihengCard	src/package/standard-skillcards.cpp	/^ZhihengCard::ZhihengCard(){$/;"	f	class:ZhihengCard
ZhihengCard	src/package/standard-skillcards.h	/^class ZhihengCard:public SkillCard{$/;"	c
Zhiji	src/package/mountainpackage.cpp	/^    Zhiji():PhaseChangeSkill("zhiji"){$/;"	f	class:Zhiji
Zhiji	src/package/mountainpackage.cpp	/^class Zhiji: public PhaseChangeSkill{$/;"	c	file:
Zhijian	src/package/mountainpackage.cpp	/^    Zhijian():OneCardViewAsSkill("zhijian"){$/;"	f	class:Zhijian
Zhijian	src/package/mountainpackage.cpp	/^class Zhijian: public OneCardViewAsSkill{$/;"	c	file:
ZhijianCard	src/package/mountainpackage.cpp	/^ZhijianCard::ZhijianCard(){$/;"	f	class:ZhijianCard
ZhijianCard	src/package/mountainpackage.h	/^class ZhijianCard: public SkillCard{$/;"	c
Zhiyu	src/package/yjcm2012-package.cpp	/^    Zhiyu():MasochismSkill("zhiyu"){$/;"	f	class:Zhiyu
Zhiyu	src/package/yjcm2012-package.cpp	/^class Zhiyu: public MasochismSkill{$/;"	c	file:
Zhiyuan	src/scenario/fancheng-scenario.cpp	/^    Zhiyuan():PhaseChangeSkill("zhiyuan"){$/;"	f	class:Zhiyuan
Zhiyuan	src/scenario/fancheng-scenario.cpp	/^class Zhiyuan: public PhaseChangeSkill{$/;"	c	file:
ZhiyuanCard	src/scenario/fancheng-scenario.cpp	/^ZhiyuanCard::ZhiyuanCard(){$/;"	f	class:ZhiyuanCard
ZhiyuanCard	src/scenario/fancheng-scenario.h	/^class ZhiyuanCard: public SkillCard{$/;"	c
ZhiyuanViewAsSkill	src/scenario/fancheng-scenario.cpp	/^    ZhiyuanViewAsSkill():OneCardViewAsSkill(""){$/;"	f	class:ZhiyuanViewAsSkill
ZhiyuanViewAsSkill	src/scenario/fancheng-scenario.cpp	/^class ZhiyuanViewAsSkill: public OneCardViewAsSkill{$/;"	c	file:
Zhuiyi	src/package/yjcm2012-package.cpp	/^    Zhuiyi():TriggerSkill("zhuiyi"){$/;"	f	class:Zhuiyi
Zhuiyi	src/package/yjcm2012-package.cpp	/^class Zhuiyi: public TriggerSkill{$/;"	c	file:
Zhulou	src/package/lingpackage.cpp	/^    Zhulou():PhaseChangeSkill("zhulou"){$/;"	f	class:Zhulou
Zhulou	src/package/lingpackage.cpp	/^class Zhulou:public PhaseChangeSkill{$/;"	c	file:
Zili	src/package/yjcm-package.cpp	/^    Zili():PhaseChangeSkill("zili"){$/;"	f	class:Zili
Zili	src/package/yjcm-package.cpp	/^class Zili: public PhaseChangeSkill{$/;"	c	file:
Zio	src/lua/lzio.h	/^struct Zio {$/;"	s
Zishou	src/package/yjcm2012-package.cpp	/^    Zishou():DrawCardsSkill("zishou"){$/;"	f	class:Zishou
Zishou	src/package/yjcm2012-package.cpp	/^class Zishou:public DrawCardsSkill{$/;"	c	file:
ZombieRule	src/scenario/zombie-mode-scenario.cpp	/^    ZombieRule(Scenario *scenario)$/;"	f	class:ZombieRule
ZombieRule	src/scenario/zombie-mode-scenario.cpp	/^class ZombieRule: public ScenarioRule{$/;"	c	file:
ZombieScenario	src/scenario/zombie-mode-scenario.cpp	/^ZombieScenario::ZombieScenario()$/;"	f	class:ZombieScenario
ZombieScenario	src/scenario/zombie-mode-scenario.h	/^class ZombieScenario : public Scenario{$/;"	c
Zonghuo	src/package/yitianpackage.cpp	/^    Zonghuo():TriggerSkill("zonghuo"){$/;"	f	class:Zonghuo
Zonghuo	src/package/yitianpackage.cpp	/^class Zonghuo: public TriggerSkill{$/;"	c	file:
Zongshi	src/package/yjcm2012-package.cpp	/^    Zongshi():MaxCardsSkill("zongshi"){$/;"	f	class:Zongshi
Zongshi	src/package/yjcm2012-package.cpp	/^class Zongshi: public MaxCardsSkill{$/;"	c	file:
Zuixiang	src/package/bgm-package.cpp	/^    Zuixiang(): TriggerSkill("zuixiang"){$/;"	f	class:Zuixiang
Zuixiang	src/package/bgm-package.cpp	/^class Zuixiang: public TriggerSkill{$/;"	c	file:
_CARDITEM_H	src/ui/carditem.h	2;"	d
_COMPILER_SPECIFIC_H	src/core/compiler-specific.h	2;"	d
_CRT_SECURE_NO_DEPRECATE	swig/sanguosha_wrap.cxx	139;"	d	file:
_DISCARD_PILE_H	src/ui/TablePile.h	2;"	d
_FMOD_CODEC_H	include/fmod/fmod_codec.h	11;"	d
_FMOD_DSP_H	include/fmod/fmod_dsp.h	14;"	d
_FMOD_ERRORS_H	include/fmod/fmod_errors.h	11;"	d
_FMOD_H	include/fmod/fmod.h	11;"	d
_FMOD_HPP	include/fmod/fmod.hpp	9;"	d
_FMOD_MEMORYINFO_H	include/fmod/fmod_memoryinfo.h	10;"	d
_FMOD_OUTPUT_H	include/fmod/fmod_output.h	11;"	d
_FONT_PIXEL	src/ui/uiUtils.cpp	221;"	d	file:
_FONT_PIXEL	src/ui/uiUtils.cpp	328;"	d	file:
_FONT_PIXEL	src/ui/uiUtils.cpp	477;"	d	file:
_FONT_PIXEL	src/ui/uiUtils.cpp	481;"	d	file:
_FT_GASP_H_	include/freetype/freetype/ftgasp.h	20;"	d
_GENERAL_CARD_CONTAINER_UI_H	src/ui/GenericCardContainerUI.h	2;"	d
_H_ROOM_STATE	src/core/RoomState.h	2;"	d
_JS_MAX_AXES	include/js.h	34;"	d
_JS_MAX_BUTTONS	include/js.h	35;"	d
_JS_MAX_HATS	include/js.h	36;"	d
_MAGATAMAS_ITEM_H	src/ui/magatamasItem.h	2;"	d
_MoveCardsClassifier	src/ui/roomscene.h	/^        inline _MoveCardsClassifier(const CardsMoveStruct &move)$/;"	f	struct:RoomScene::_MoveCardsClassifier
_MoveCardsClassifier	src/ui/roomscene.h	/^    struct _MoveCardsClassifier$/;"	s	class:RoomScene
_MoveMergeClassifier	src/server/room.h	/^        inline _MoveMergeClassifier(const CardsMoveStruct &move)$/;"	f	struct:Room::_MoveMergeClassifier
_MoveMergeClassifier	src/server/room.h	/^    struct _MoveMergeClassifier$/;"	s	class:Room
_MoveSourceClassifier	src/server/room.h	/^        inline _MoveSourceClassifier(const CardsMoveStruct &move)$/;"	f	struct:Room::_MoveSourceClassifier
_MoveSourceClassifier	src/server/room.h	/^    struct _MoveSourceClassifier$/;"	s	class:Room
_NEW_PIXEL	src/ui/uiUtils.cpp	20;"	d	file:
_NEW_PIXEL	src/ui/uiUtils.cpp	220;"	d	file:
_NEW_PIXEL	src/ui/uiUtils.cpp	327;"	d	file:
_NEW_PIXEL	src/ui/uiUtils.cpp	476;"	d	file:
_NEW_PIXEL	src/ui/uiUtils.cpp	480;"	d	file:
_NEW_PIXEL	src/ui/uiUtils.cpp	57;"	d	file:
_NEW_PIXEL_CHANNEL	src/ui/uiUtils.cpp	19;"	d	file:
_NEW_PIXEL_CHANNEL	src/ui/uiUtils.cpp	56;"	d	file:
_NullificationAiHelper	src/server/room.h	/^    struct _NullificationAiHelper$/;"	s	class:Room
_OLD_PIXEL	src/ui/uiUtils.cpp	21;"	d	file:
_OLD_PIXEL	src/ui/uiUtils.cpp	58;"	d	file:
_PDB_SOURCE_LINE_WRITER_H__	src/breakpad/common/windows/pdb_source_line_writer.h	34;"	d
_QSAN_BUTTON_H	src/ui/qsanbutton.h	2;"	d
_QSAN_JSON_UTILS_H	src/core/jsonutils.h	2;"	d
_QSAN_PROTOCOL_H	src/core/protocol.h	2;"	d
_SCL_SECURE_NO_DEPRECATE	swig/sanguosha_wrap.cxx	144;"	d	file:
_SKIN_BANK_H	src/ui/SkinBank.h	2;"	d
_SWIG_Lua_AddMetatable	swig/sanguosha_wrap.cxx	/^SWIGINTERN void _SWIG_Lua_AddMetatable(lua_State* L,swig_type_info *type)$/;"	f
_S_CLICK_JITTER_TOLERANCE	src/ui/carditem.cpp	/^const int CardItem::_S_CLICK_JITTER_TOLERANCE = 1600;$/;"	m	class:CardItem	file:
_S_CLICK_JITTER_TOLERANCE	src/ui/carditem.h	/^    static const int _S_CLICK_JITTER_TOLERANCE;$/;"	m	class:CardItem
_S_DEFAULT_HERO	src/scenario/miniscenarios.cpp	/^const QString MiniSceneRule::_S_DEFAULT_HERO = "caocao";$/;"	m	class:MiniSceneRule	file:
_S_DEFAULT_HERO	src/scenario/miniscenarios.h	/^    static const QString _S_DEFAULT_HERO;$/;"	m	class:MiniSceneRule
_S_MOVE_JITTER_TOLERANCE	src/ui/carditem.cpp	/^const int CardItem::_S_MOVE_JITTER_TOLERANCE = 200;$/;"	m	class:CardItem	file:
_S_MOVE_JITTER_TOLERANCE	src/ui/carditem.h	/^    static const int _S_MOVE_JITTER_TOLERANCE;$/;"	m	class:CardItem
_TIMED_PROGRESS_BAR_H	src/ui/TimedProgressBar.h	2;"	d
_UI_UTILS_H	src/ui/uiUtils.h	2;"	d
_WRAPPED_CARD_H	src/core/WrappedCard.h	2;"	d
__AUTOHINT_H__	include/freetype/freetype/internal/autohint.h	28;"	d
__FREETYPE_H__	include/freetype/freetype/freetype.h	20;"	d
__FT2_BUILD_GENERIC_H__	include/freetype/ft2build.h	32;"	d
__FTADVANC_H__	include/freetype/freetype/ftadvanc.h	20;"	d
__FTBBOX_H__	include/freetype/freetype/ftbbox.h	31;"	d
__FTBDF_H__	include/freetype/freetype/ftbdf.h	20;"	d
__FTBITMAP_H__	include/freetype/freetype/ftbitmap.h	20;"	d
__FTBZIP2_H__	include/freetype/freetype/ftbzip2.h	20;"	d
__FTCACHE_H__	include/freetype/freetype/ftcache.h	20;"	d
__FTCALC_H__	include/freetype/freetype/internal/ftcalc.h	20;"	d
__FTCID_H__	include/freetype/freetype/ftcid.h	19;"	d
__FTCONFIG_H__	include/freetype/freetype/config/ftconfig.h	39;"	d
__FTDEBUG_H__	include/freetype/freetype/internal/ftdebug.h	25;"	d
__FTDRIVER_H__	include/freetype/freetype/internal/ftdriver.h	20;"	d
__FTERRORS_H__	include/freetype/freetype/fterrors.h	86;"	d
__FTGLOADR_H__	include/freetype/freetype/internal/ftgloadr.h	20;"	d
__FTGLYPH_H__	include/freetype/freetype/ftglyph.h	33;"	d
__FTGXVAL_H__	include/freetype/freetype/ftgxval.h	29;"	d
__FTGZIP_H__	include/freetype/freetype/ftgzip.h	20;"	d
__FTIMAGE_H__	include/freetype/freetype/ftimage.h	29;"	d
__FTINCREM_H__	include/freetype/freetype/ftincrem.h	20;"	d
__FTLIST_H__	include/freetype/freetype/ftlist.h	28;"	d
__FTLZW_H__	include/freetype/freetype/ftlzw.h	20;"	d
__FTMAC_H__	include/freetype/freetype/ftmac.h	29;"	d
__FTMEMORY_H__	include/freetype/freetype/internal/ftmemory.h	20;"	d
__FTMM_H__	include/freetype/freetype/ftmm.h	20;"	d
__FTMODAPI_H__	include/freetype/freetype/ftmodapi.h	20;"	d
__FTMODERR_H__	include/freetype/freetype/ftmoderr.h	58;"	d
__FTOBJS_H__	include/freetype/freetype/internal/ftobjs.h	27;"	d
__FTOPTION_H__	include/freetype/freetype/config/ftoption.h	20;"	d
__FTOTVAL_H__	include/freetype/freetype/ftotval.h	31;"	d
__FTOUTLN_H__	include/freetype/freetype/ftoutln.h	21;"	d
__FTPFR_H__	include/freetype/freetype/ftpfr.h	20;"	d
__FTPIC_H__	include/freetype/freetype/internal/ftpic.h	27;"	d
__FTRENDER_H__	include/freetype/freetype/ftrender.h	20;"	d
__FTRFORK_H__	include/freetype/freetype/internal/ftrfork.h	25;"	d
__FTSERV_H__	include/freetype/freetype/internal/ftserv.h	32;"	d
__FTSIZES_H__	include/freetype/freetype/ftsizes.h	29;"	d
__FTSTDLIB_H__	include/freetype/freetype/config/ftstdlib.h	33;"	d
__FTSTREAM_H__	include/freetype/freetype/internal/ftstream.h	20;"	d
__FTSYNTH_H__	include/freetype/freetype/ftsynth.h	45;"	d
__FTSYSTEM_H__	include/freetype/freetype/ftsystem.h	20;"	d
__FTTRIGON_H__	include/freetype/freetype/fttrigon.h	20;"	d
__FTTYPES_H__	include/freetype/freetype/fttypes.h	20;"	d
__FTVALID_H__	include/freetype/freetype/internal/ftvalid.h	20;"	d
__FTWINFNT_H__	include/freetype/freetype/ftwinfnt.h	20;"	d
__FTXF86_H__	include/freetype/freetype/ftxf86.h	20;"	d
__FT_HEADER_H__	include/freetype/freetype/config/ftheader.h	19;"	d
__FT_LCD_FILTER_H__	include/freetype/freetype/ftlcdfil.h	21;"	d
__FT_SFNT_NAMES_H__	include/freetype/freetype/ftsnames.h	23;"	d
__FT_STROKE_H__	include/freetype/freetype/ftstroke.h	20;"	d
__INCLUDED_JS_H__	include/js.h	25;"	d
__PSAUX_H__	include/freetype/freetype/internal/psaux.h	21;"	d
__PSHINTS_H__	include/freetype/freetype/internal/pshints.h	22;"	d
__SFNT_H__	include/freetype/freetype/internal/sfnt.h	20;"	d
__STDC_FORMAT_MACROS	src/breakpad/google_breakpad/common/breakpad_types.h	47;"	d
__SVBDF_H__	include/freetype/freetype/internal/services/svbdf.h	20;"	d
__SVCID_H__	include/freetype/freetype/internal/services/svcid.h	19;"	d
__SVGLDICT_H__	include/freetype/freetype/internal/services/svgldict.h	20;"	d
__SVGXVAL_H__	include/freetype/freetype/internal/services/svgxval.h	29;"	d
__SVKERN_H__	include/freetype/freetype/internal/services/svkern.h	20;"	d
__SVMM_H__	include/freetype/freetype/internal/services/svmm.h	20;"	d
__SVOTVAL_H__	include/freetype/freetype/internal/services/svotval.h	20;"	d
__SVPFR_H__	include/freetype/freetype/internal/services/svpfr.h	20;"	d
__SVPOSTNM_H__	include/freetype/freetype/internal/services/svpostnm.h	20;"	d
__SVPSCMAP_H__	include/freetype/freetype/internal/services/svpscmap.h	20;"	d
__SVPSINFO_H__	include/freetype/freetype/internal/services/svpsinfo.h	20;"	d
__SVSFNT_H__	include/freetype/freetype/internal/services/svsfnt.h	20;"	d
__SVTTCMAP_H__	include/freetype/freetype/internal/services/svttcmap.h	25;"	d
__SVTTENG_H__	include/freetype/freetype/internal/services/svtteng.h	20;"	d
__SVTTGLYF_H__	include/freetype/freetype/internal/services/svttglyf.h	18;"	d
__SVWINFNT_H__	include/freetype/freetype/internal/services/svwinfnt.h	20;"	d
__SVXF86NM_H__	include/freetype/freetype/internal/services/svxf86nm.h	20;"	d
__T1TABLES_H__	include/freetype/freetype/t1tables.h	21;"	d
__T1TYPES_H__	include/freetype/freetype/internal/t1types.h	21;"	d
__TTAGS_H__	include/freetype/freetype/tttags.h	20;"	d
__TTNAMEID_H__	include/freetype/freetype/ttnameid.h	20;"	d
__TTTABLES_H__	include/freetype/freetype/tttables.h	21;"	d
__TTTYPES_H__	include/freetype/freetype/internal/tttypes.h	21;"	d
__TTUNPAT_H__	include/freetype/freetype/ttunpat.h	22;"	d
__align	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t            __align;$/;"	m	struct:__anon35
__align	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t __align;$/;"	m	struct:__anon34
__alignment1	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t __alignment1;$/;"	m	struct:__anon45
__alignment2	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t __alignment2;$/;"	m	struct:__anon45
__call 	lua/lib/socket.lua	/^        __call = function()$/;"	f
__call 	lua/lib/socket.lua	/^        __call = function(self, chunk, err)$/;"	f
__call 	lua/lib/socket/http.lua	/^        __call = function()$/;"	f
__call 	lua/lib/socket/http.lua	/^        __call = function(self, chunk, err)$/;"	f
__call     	lua/lib/middleclass.lua	/^    __call     = function(self, ...) return self:new(...) end$/;"	f
__i386__	src/breakpad/processor/stackwalker_selftest.cc	55;"	d	file:
__sparc__	src/breakpad/processor/stackwalker_selftest.cc	58;"	d	file:
__tostring 	lua/lib/middleclass.lua	/^    __tostring = function() return "class " .. klass.name end,$/;"	f
_addCardItems	src/ui/TablePile.cpp	/^bool TablePile::_addCardItems(QList<CardItem*> &card_items, Player::Place place)$/;"	f	class:TablePile
_addCardItems	src/ui/cardcontainer.cpp	/^bool CardContainer::_addCardItems(QList<CardItem*> &card_items, Player::Place place){$/;"	f	class:CardContainer
_addCardItems	src/ui/dashboard.cpp	/^bool Dashboard::_addCardItems(QList<CardItem*> &card_items, Player::Place place)$/;"	f	class:Dashboard
_addCardItems	src/ui/photo.cpp	/^bool Photo::_addCardItems(QList<CardItem*> &card_items, Player::Place place)$/;"	f	class:Photo
_addHandCard	src/ui/dashboard.cpp	/^void Dashboard::_addHandCard(CardItem* card_item)$/;"	f	class:Dashboard
_adjustCards	src/ui/dashboard.cpp	/^void Dashboard::_adjustCards(){$/;"	f	class:Dashboard
_adjustComponentZValues	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::_adjustComponentZValues()$/;"	f	class:PlayerCardContainer
_adjustComponentZValues	src/ui/dashboard.cpp	/^void Dashboard::_adjustComponentZValues()$/;"	f	class:Dashboard
_adjustComponentZValues	src/ui/photo.cpp	/^void Photo::_adjustComponentZValues()$/;"	f	class:Photo
_allZAdjusted	src/ui/GenericCardContainerUI.h	/^    bool _allZAdjusted;$/;"	m	class:PlayerCardContainer
_askForCardOrUseCard	src/client/client.cpp	/^void Client::_askForCardOrUseCard(const Json::Value &cardUsage){$/;"	f	class:Client
_askForNullification	src/server/room.cpp	/^bool Room::_askForNullification(const TrickCard *trick, ServerPlayer *from, ServerPlayer *to, bool positive, _NullificationAiHelper aiHelper){$/;"	f	class:Room
_autoAdjustPos	src/ui/magatamasItem.cpp	/^void MagatamasBoxItem::_autoAdjustPos()$/;"	f	class:MagatamasBoxItem
_bgImages	src/ui/magatamasItem.h	/^    QPixmap _bgImages[6];$/;"	m	class:MagatamasBoxItem
_breakDownCardMoves	src/server/room.cpp	/^QList<CardsMoveStruct> Room::_breakDownCardMoves(QList<CardsMoveStruct> &cards_moves)$/;"	f	class:Room
_cardsToBeDestroyed	src/ui/GenericCardContainerUI.h	/^    QList<CardItem*> _cardsToBeDestroyed;$/;"	m	class:GenericCardContainer
_chooseDefaultGeneral	src/server/room.cpp	/^QString Room::_chooseDefaultGeneral(ServerPlayer* player) const$/;"	f	class:Room
_clearPixmap	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::_clearPixmap(QGraphicsPixmapItem *pixmap)$/;"	f	class:PlayerCardContainer
_createCard	src/ui/GenericCardContainerUI.cpp	/^CardItem* GenericCardContainer::_createCard(int card_id)$/;"	f	class:GenericCardContainer
_createCards	src/ui/GenericCardContainerUI.cpp	/^QList<CardItem*> GenericCardContainer::_createCards(QList<int> card_ids)$/;"	f	class:GenericCardContainer
_createClass	lua/lib/middleclass.lua	/^local function _createClass(name, super)$/;"	f
_createControls	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::_createControls()$/;"	f	class:PlayerCardContainer
_createEquipBorderAnimations	src/ui/dashboard.cpp	/^void Dashboard::_createEquipBorderAnimations()$/;"	f	class:Dashboard
_createExtraButtons	src/ui/dashboard.cpp	/^void Dashboard::_createExtraButtons(){$/;"	f	class:Dashboard
_createLeft	src/ui/dashboard.cpp	/^void Dashboard::_createLeft(){$/;"	f	class:Dashboard
_createLookupMetamethod	lua/lib/middleclass.lua	/^local function _createLookupMetamethod(klass, name)$/;"	f
_createMiddle	src/ui/dashboard.cpp	/^void Dashboard::_createMiddle() {    $/;"	f	class:Dashboard
_createRight	src/ui/dashboard.cpp	/^void Dashboard::_createRight()$/;"	f	class:Dashboard
_createRoleComboBox	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::_createRoleComboBox()$/;"	f	class:PlayerCardContainer
_destroyCard	src/ui/GenericCardContainerUI.cpp	/^void GenericCardContainer::_destroyCard()$/;"	f	class:GenericCardContainer
_disperseCards	src/ui/GenericCardContainerUI.cpp	/^void GenericCardContainer::_disperseCards(QList<CardItem*> &cards, QRectF fillRegion,$/;"	f	class:GenericCardContainer
_dispersePhotos	src/ui/roomscene.cpp	/^void RoomScene::_dispersePhotos(QList<Photo*> &photos, QRectF fillRegion,$/;"	f	class:RoomScene
_dlayout	src/ui/dashboard.h	/^    const QSanRoomSkin::DashboardLayout* _dlayout;$/;"	m	class:Dashboard
_doHpChangeAnimation	src/ui/magatamasItem.cpp	/^void MagatamasBoxItem::_doHpChangeAnimation(int newHp)$/;"	f	class:MagatamasBoxItem
_doUpdate	src/ui/GenericCardContainerUI.cpp	/^void GenericCardContainer::_doUpdate()$/;"	f	class:GenericCardContainer
_fadeOutCardsLocked	src/ui/TablePile.cpp	/^void TablePile::_fadeOutCardsLocked(const QList<CardItem *> &cards)$/;"	f	class:TablePile
_fillMoveInfo	src/server/room.cpp	/^void Room::_fillMoveInfo(CardMoveStruct &move) const$/;"	f	class:Room
_fillMoveInfo	src/server/room.cpp	/^void Room::_fillMoveInfo(CardsMoveStruct &moves, int card_index) const$/;"	f	class:Room
_ftLibInitialized	src/ui/uiUtils.cpp	/^static bool _ftLibInitialized = false;$/;"	v	file:
_ftlib	src/ui/uiUtils.cpp	/^static FT_Library  _ftlib;$/;"	v	file:
_getAvatarIcon	src/ui/GenericCardContainerUI.cpp	/^QPixmap PlayerCardContainer::_getAvatarIcon(QString heroName)$/;"	f	class:PlayerCardContainer
_getAvatarParent	src/ui/dashboard.h	/^    inline virtual QGraphicsItem* _getAvatarParent() { return _m_rightFrame; }$/;"	f	class:Dashboard
_getAvatarParent	src/ui/photo.h	/^    inline virtual QGraphicsItem* _getAvatarParent() { return _m_groupMain; }$/;"	f	class:Photo
_getDeathIconParent	src/ui/dashboard.h	/^    inline virtual QGraphicsItem* _getDeathIconParent() { return _m_middleFrame;}$/;"	f	class:Dashboard
_getDeathIconParent	src/ui/photo.h	/^    inline virtual QGraphicsItem* _getDeathIconParent() { return _m_groupDeath;}$/;"	f	class:Photo
_getDelayedTrickParent	src/ui/dashboard.h	/^    inline virtual QGraphicsItem* _getDelayedTrickParent() { return _m_leftFrame; }$/;"	f	class:Dashboard
_getDelayedTrickParent	src/ui/photo.h	/^    inline virtual QGraphicsItem* _getDelayedTrickParent() { return _m_groupMain; }$/;"	f	class:Photo
_getEquipParent	src/ui/dashboard.h	/^    inline virtual QGraphicsItem* _getEquipParent() { return _m_leftFrame; }$/;"	f	class:Dashboard
_getEquipParent	src/ui/photo.h	/^    inline virtual QGraphicsItem* _getEquipParent() { return _m_groupMain; }$/;"	f	class:Photo
_getEquipPixmap	src/ui/GenericCardContainerUI.cpp	/^QPixmap PlayerCardContainer::_getEquipPixmap(const EquipCard* equip)$/;"	f	class:PlayerCardContainer
_getFocusFrameParent	src/ui/dashboard.h	/^    inline virtual QGraphicsItem* _getFocusFrameParent() { return _m_rightFrame; }$/;"	f	class:Dashboard
_getFocusFrameParent	src/ui/photo.h	/^    inline virtual QGraphicsItem* _getFocusFrameParent() { return _m_groupMain; }$/;"	f	class:Photo
_getGenericCardContainer	src/ui/roomscene.cpp	/^GenericCardContainer* RoomScene::_getGenericCardContainer(Player::Place place, Player* player)$/;"	f	class:RoomScene
_getMarkParent	src/ui/dashboard.h	/^    inline virtual QGraphicsItem* _getMarkParent() { return _m_floatingArea; }$/;"	f	class:Dashboard
_getMarkParent	src/ui/photo.h	/^    inline virtual QGraphicsItem* _getMarkParent() { return _m_floatingArea; }$/;"	f	class:Photo
_getPhaseParent	src/ui/dashboard.h	/^    inline virtual QGraphicsItem* _getPhaseParent() { return _m_floatingArea; }$/;"	f	class:Dashboard
_getPhaseParent	src/ui/photo.h	/^    inline virtual QGraphicsItem* _getPhaseParent() { return _m_groupMain; }$/;"	f	class:Photo
_getPileParent	src/ui/dashboard.h	/^    inline virtual QGraphicsItem* _getPileParent() { return _m_rightFrame; }$/;"	f	class:Dashboard
_getPileParent	src/ui/photo.h	/^    virtual QGraphicsItem* _getPileParent() { return _m_groupMain; }$/;"	f	class:Photo
_getPixmap	src/ui/GenericCardContainerUI.cpp	/^QPixmap PlayerCardContainer::_getPixmap(const QString &key)$/;"	f	class:PlayerCardContainer
_getPixmap	src/ui/GenericCardContainerUI.cpp	/^QPixmap PlayerCardContainer::_getPixmap(const QString &key, const QString &sArg)$/;"	f	class:PlayerCardContainer
_getProgressBarParent	src/ui/dashboard.h	/^    inline virtual QGraphicsItem* _getProgressBarParent() { return _m_floatingArea; }$/;"	f	class:Dashboard
_getProgressBarParent	src/ui/photo.h	/^    inline virtual QGraphicsItem* _getProgressBarParent() { return this;}$/;"	f	class:Photo
_getRoleComboBoxParent	src/ui/dashboard.h	/^    inline virtual QGraphicsItem* _getRoleComboBoxParent() { return _m_rightFrame; }$/;"	f	class:Dashboard
_getRoleComboBoxParent	src/ui/photo.h	/^    inline virtual QGraphicsItem* _getRoleComboBoxParent() { return _m_groupMain; }$/;"	f	class:Photo
_getSceneSizes	src/ui/roomscene.cpp	/^void RoomScene::_getSceneSizes(QSize& minSize, QSize &maxSize)$/;"	f	class:RoomScene
_getSingleCard	src/client/client.cpp	/^bool Client::_getSingleCard(int card_id, CardsMoveStruct move)$/;"	f	class:Client
_horizontalPosLessThan	src/ui/GenericCardContainerUI.cpp	/^bool GenericCardContainer::_horizontalPosLessThan(const CardItem* card1, const CardItem* card2)$/;"	f	class:GenericCardContainer
_icons	src/ui/magatamasItem.h	/^    QPixmap _icons[6];$/;"	m	class:MagatamasBoxItem
_includeMixin	lua/lib/middleclass.lua	/^local function _includeMixin(klass, mixin)$/;"	f
_initLibrary	src/ui/uiUtils.cpp	/^static bool _initLibrary()$/;"	f	file:
_initialize	src/ui/carditem.cpp	/^void CardItem::_initialize()$/;"	f	class:CardItem
_lastZ	src/ui/GenericCardContainerUI.h	/^    int _lastZ;$/;"	m	class:PlayerCardContainer
_layBetween	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::_layBetween(QGraphicsItem* middle, QGraphicsItem* item1,$/;"	f	class:PlayerCardContainer
_layUnder	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::_layUnder(QGraphicsItem* item)$/;"	f	class:PlayerCardContainer
_load	src/ui/QSanSelectableItem.cpp	/^bool QSanSelectableItem::_load(const QString &filename, QSize size, bool useNewSize, bool center_as_origin)$/;"	f	class:QSanSelectableItem
_loadAnimationConfig	src/ui/SkinBank.cpp	/^bool QSanRoomSkin::_loadAnimationConfig(const Json::Value &animationConfig)$/;"	f	class:QSanRoomSkin
_loadImageConfig	src/ui/SkinBank.cpp	/^bool IQSanComponentSkin::_loadImageConfig(const Json::Value &config)$/;"	f	class:IQSanComponentSkin
_loadLayoutConfig	src/ui/SkinBank.cpp	/^bool QSanRoomSkin::_loadLayoutConfig(const Json::Value &layoutConfig)$/;"	f	class:QSanRoomSkin
_loseSingleCard	src/client/client.cpp	/^bool Client::_loseSingleCard(int card_id, CardsMoveStruct move)$/;"	f	class:Client
_m_Id	src/server/room.h	/^    int _m_Id;$/;"	m	class:Room
_m_actionIcon	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_readyIcon, *_m_actionIcon;$/;"	m	class:PlayerCardContainer
_m_animationConfig	src/ui/SkinBank.h	/^    Json::Value _m_animationConfig;$/;"	m	class:IQSanComponentSkin
_m_audioConfig	src/ui/SkinBank.h	/^    Json::Value _m_audioConfig;$/;"	m	class:IQSanComponentSkin
_m_avatarArea	src/ui/GenericCardContainerUI.h	/^    QGraphicsRectItem *_m_avatarArea, *_m_smallAvatarArea;$/;"	m	class:PlayerCardContainer
_m_avatarIcon	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_avatarIcon, *_m_smallAvatarIcon, *_m_circleItem;$/;"	m	class:PlayerCardContainer
_m_avatarName	src/ui/carditem.h	/^    QString _m_frameType, _m_avatarName;$/;"	m	class:CardItem
_m_avatarNameItem	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_avatarNameItem, *_m_smallAvatarNameItem;$/;"	m	class:PlayerCardContainer
_m_background	src/ui/cardcontainer.h	/^    QPixmap _m_background;$/;"	m	class:CardContainer
_m_bgPixmap	src/ui/qsanbutton.h	/^    QPixmap _m_bgPixmap[S_NUM_BUTTON_STATES];$/;"	m	class:QSanButton
_m_boundingRect	src/ui/cardcontainer.h	/^    QRectF _m_boundingRect;$/;"	m	class:CardContainer
_m_buttonName	src/ui/qsanbutton.h	/^    QString _m_buttonName;$/;"	m	class:QSanButton
_m_button_recycle	src/ui/dashboard.h	/^    QList<QSanSkillButton*> _m_button_recycle;$/;"	m	class:Dashboard
_m_buttons	src/ui/qsanbutton.h	/^    QList<QSanInvokeSkillButton*> _m_buttons;$/;"	m	class:QSanInvokeSkillDock
_m_canDisable	src/ui/qsanbutton.h	/^    bool _m_canDisable; $/;"	m	class:QSanSkillButton
_m_canEnable	src/ui/qsanbutton.h	/^    bool _m_canEnable;$/;"	m	class:QSanSkillButton
_m_cardsMoveStash	src/ui/roomscene.h	/^    QMap<int, QList<QList<CardItem*> > > _m_cardsMoveStash;$/;"	m	class:RoomScene
_m_chainIcon	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_chainIcon, *_m_faceTurnedIcon;$/;"	m	class:PlayerCardContainer
_m_circleItem	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_avatarIcon, *_m_smallAvatarIcon, *_m_circleItem;$/;"	m	class:PlayerCardContainer
_m_clientResponse	src/server/serverplayer.h	/^    Json::Value _m_clientResponse;    $/;"	m	class:ServerPlayer
_m_commonLayout	src/ui/SkinBank.h	/^    CommonLayout _m_commonLayout;$/;"	m	class:QSanRoomSkin
_m_commonLayout	src/ui/roomscene.h	/^    const QSanRoomSkin::CommonLayout* _m_commonLayout;$/;"	m	class:RoomScene
_m_dashboardLayout	src/ui/SkinBank.h	/^    DashboardLayout _m_dashboardLayout;$/;"	m	class:QSanRoomSkin
_m_data	src/server/roomthread.h	/^    QVariant *_m_data;$/;"	m	class:EventTriplet
_m_deathIcon	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_deathIcon;$/;"	m	class:PlayerCardContainer
_m_emitActivateSignal	src/ui/qsanbutton.h	/^    bool _m_emitActivateSignal;$/;"	m	class:QSanSkillButton
_m_emitDeactivateSignal	src/ui/qsanbutton.h	/^    bool _m_emitDeactivateSignal;$/;"	m	class:QSanSkillButton
_m_enumWidth	src/ui/qsanbutton.h	/^    SkillButtonWidth _m_enumWidth;$/;"	m	class:QSanInvokeSkillButton
_m_equipAnim	src/ui/GenericCardContainerUI.h	/^    QParallelAnimationGroup* _m_equipAnim[4];$/;"	m	class:PlayerCardContainer
_m_equipBorders	src/ui/dashboard.h	/^    PixmapAnimation* _m_equipBorders[4];$/;"	m	class:Dashboard
_m_equipCards	src/ui/GenericCardContainerUI.h	/^    CardItem* _m_equipCards[4];$/;"	m	class:PlayerCardContainer
_m_equipLabel	src/ui/GenericCardContainerUI.h	/^    QLabel* _m_equipLabel[4];$/;"	m	class:PlayerCardContainer
_m_equipRegions	src/ui/GenericCardContainerUI.h	/^    QGraphicsProxyWidget *_m_equipRegions[4];  $/;"	m	class:PlayerCardContainer
_m_equipSkillBtns	src/ui/dashboard.h	/^    QSanSkillButton* _m_equipSkillBtns[4];$/;"	m	class:Dashboard
_m_event	src/server/roomthread.h	/^    TriggerEvent _m_event;$/;"	m	class:EventTriplet
_m_extraSkillBg	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_extraSkillBg;$/;"	m	class:PlayerCardContainer
_m_extraSkillText	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_extraSkillText;$/;"	m	class:PlayerCardContainer
_m_faceTurnedIcon	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_chainIcon, *_m_faceTurnedIcon;$/;"	m	class:PlayerCardContainer
_m_fixedRole	src/ui/rolecombobox.h	/^    QString _m_fixedRole;$/;"	m	class:RoleComboBox
_m_floatingArea	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_floatingArea;$/;"	m	class:PlayerCardContainer
_m_floatingAreaRect	src/ui/GenericCardContainerUI.h	/^    QRect _m_floatingAreaRect;$/;"	m	class:PlayerCardContainer
_m_focusFrame	src/ui/photo.h	/^    QGraphicsPixmapItem *_m_focusFrame;$/;"	m	class:Photo
_m_fontBank	src/ui/SkinBank.cpp	/^QHash<QString, int*> IQSanComponentSkin::QSanSimpleTextFont::_m_fontBank;$/;"	m	class:IQSanComponentSkin::QSanSimpleTextFont	file:
_m_fontBank	src/ui/SkinBank.h	/^        static QHash<QString, int*> _m_fontBank;$/;"	m	class:IQSanComponentSkin::QSanSimpleTextFont
_m_footnoteImage	src/ui/carditem.h	/^    QImage _m_footnoteImage;$/;"	m	class:CardItem
_m_frameType	src/ui/carditem.h	/^    QString _m_frameType, _m_avatarName;$/;"	m	class:CardItem
_m_frameType	src/ui/photo.h	/^    FrameType _m_frameType;$/;"	m	class:Photo
_m_globalSerial	src/core/protocol.cpp	/^unsigned int QSanProtocol::QSanGeneralPacket::_m_globalSerial = 0;$/;"	m	class:QSanProtocol::QSanGeneralPacket	file:
_m_globalSerial	src/core/protocol.h	/^        static unsigned int _m_globalSerial;$/;"	m	class:QSanProtocol::QSanGeneralPacket
_m_groupDeath	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_groupDeath;$/;"	m	class:PlayerCardContainer
_m_groupMain	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_groupMain;$/;"	m	class:PlayerCardContainer
_m_groupName	src/ui/qsanbutton.h	/^    QString _m_groupName;$/;"	m	class:QSanButton
_m_handCardBg	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_handCardBg, *_m_handCardNumText;$/;"	m	class:PlayerCardContainer
_m_handCardNumText	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_handCardBg, *_m_handCardNumText;$/;"	m	class:PlayerCardContainer
_m_height	src/ui/QSanSelectableItem.h	/^    int _m_width, _m_height;$/;"	m	class:QSanSelectableItem
_m_highestZ	src/ui/GenericCardContainerUI.h	/^    int _m_highestZ;$/;"	m	class:GenericCardContainer
_m_hpBox	src/ui/GenericCardContainerUI.h	/^    MagatamasBoxItem *_m_hpBox;$/;"	m	class:PlayerCardContainer
_m_huashenAnimation	src/ui/GenericCardContainerUI.h	/^    QAbstractAnimation *_m_huashenAnimation;$/;"	m	class:PlayerCardContainer
_m_huashenGeneralName	src/ui/GenericCardContainerUI.h	/^    QString _m_huashenGeneralName;$/;"	m	class:PlayerCardContainer
_m_huashenItem	src/ui/GenericCardContainerUI.h	/^    QGraphicsItem *_m_huashenItem;$/;"	m	class:PlayerCardContainer
_m_huashenSkillName	src/ui/GenericCardContainerUI.h	/^    QString _m_huashenSkillName;$/;"	m	class:PlayerCardContainer
_m_imageConfig	src/ui/SkinBank.h	/^    Json::Value _m_imageConfig;$/;"	m	class:IQSanComponentSkin
_m_isEquipsAnimOn	src/ui/dashboard.h	/^    bool _m_isEquipsAnimOn[4];$/;"	m	class:Dashboard
_m_isFirstSurrenderRequest	src/server/room.h	/^    bool _m_isFirstSurrenderRequest; \/\/ We allow the first surrender poll to go through regardless of the timer.$/;"	m	class:Room
_m_isInDragAndUseMode	src/ui/roomscene.h	/^    bool _m_isInDragAndUseMode;$/;"	m	class:RoomScene
_m_isMouseButtonDown	src/ui/roomscene.h	/^    bool _m_isMouseButtonDown;$/;"	m	class:RoomScene
_m_isReadyIconVisible	src/ui/photo.h	/^    bool _m_isReadyIconVisible;$/;"	m	class:Photo
_m_isUnknownGeneral	src/ui/carditem.h	/^    bool _m_isUnknownGeneral;$/;"	m	class:CardItem
_m_judgeCards	src/ui/GenericCardContainerUI.h	/^    QList<CardItem *> _m_judgeCards;$/;"	m	class:PlayerCardContainer
_m_judgeIcons	src/ui/GenericCardContainerUI.h	/^    QList<QGraphicsPixmapItem *> _m_judgeIcons;$/;"	m	class:PlayerCardContainer
_m_kingdomColorMaskIcon	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_kingdomColorMaskIcon;$/;"	m	class:PlayerCardContainer
_m_kingdomIcon	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_kingdomIcon;$/;"	m	class:PlayerCardContainer
_m_lastMousePressScenePos	src/ui/carditem.h	/^    QPointF _m_lastMousePressScenePos;$/;"	m	class:CardItem
_m_lastMovementId	src/server/room.h	/^    int _m_lastMovementId;$/;"	m	class:Room
_m_lastServerSerial	src/client/client.h	/^    unsigned int _m_lastServerSerial;$/;"	m	class:Client
_m_last_front_ZValue	src/ui/roomscene.h	/^    double _m_last_front_ZValue;$/;"	m	class:RoomScene
_m_last_front_item	src/ui/roomscene.h	/^    QGraphicsItem* _m_last_front_item;$/;"	m	class:RoomScene
_m_layout	src/ui/GenericCardContainerUI.h	/^    const QSanRoomSkin::PlayerCardContainerLayout* _m_layout;$/;"	m	class:PlayerCardContainer
_m_leftFrame	src/ui/dashboard.h	/^    QGraphicsPixmapItem *_m_leftFrame, *_m_middleFrame, *_m_rightFrame;    $/;"	m	class:Dashboard
_m_mainFrame	src/ui/photo.h	/^    QGraphicsPixmapItem *_m_mainFrame;    $/;"	m	class:Photo
_m_mainPixmap	src/ui/QSanSelectableItem.h	/^    QPixmap _m_mainPixmap;$/;"	m	class:QSanSelectableItem
_m_markItem	src/ui/GenericCardContainerUI.h	/^    QGraphicsTextItem *_m_markItem;$/;"	m	class:PlayerCardContainer
_m_mask	src/ui/qsanbutton.h	/^    QRegion _m_mask;$/;"	m	class:QSanButton
_m_maxVotes	src/ui/GenericCardContainerUI.h	/^    int _m_votesGot, _m_maxVotes;$/;"	m	class:PlayerCardContainer
_m_middleFrame	src/ui/dashboard.h	/^    QGraphicsPixmapItem *_m_leftFrame, *_m_middleFrame, *_m_rightFrame;    $/;"	m	class:Dashboard
_m_mouseEntered	src/ui/qsanbutton.h	/^    bool _m_mouseEntered;$/;"	m	class:QSanButton
_m_mutex_pileCards	src/ui/TablePile.h	/^    QMutex _m_mutex_pileCards;$/;"	m	class:TablePile
_m_onlineStatusItem	src/ui/photo.h	/^    QGraphicsPixmapItem *_m_onlineStatusItem;$/;"	m	class:Photo
_m_phaseIcon	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_phaseIcon;$/;"	m	class:PlayerCardContainer
_m_phases_index	src/server/serverplayer.h	/^    int _m_phases_index;$/;"	m	class:ServerPlayer
_m_phases_state	src/server/serverplayer.h	/^    QList<PhaseStruct> _m_phases_state;$/;"	m	class:ServerPlayer
_m_photoLayout	src/ui/SkinBank.h	/^    PhotoLayout _m_photoLayout;$/;"	m	class:QSanRoomSkin
_m_photoLayout	src/ui/roomscene.h	/^    const QSanRoomSkin::PhotoLayout* _m_photoLayout;$/;"	m	class:RoomScene
_m_pixmapBank	src/ui/SkinBank.cpp	/^QHash<QString, QPixmap> QSanPixmapCache::_m_pixmapBank;$/;"	m	class:QSanPixmapCache	file:
_m_pixmapBank	src/ui/SkinBank.h	/^    static QHash<QString, QPixmap> _m_pixmapBank;$/;"	m	class:QSanPixmapCache
_m_posX	src/ui/rolecombobox.h	/^    qreal _m_posX, _m_posY;$/;"	m	class:RoleComboBox
_m_posY	src/ui/rolecombobox.h	/^    qreal _m_posX, _m_posY;$/;"	m	class:RoleComboBox
_m_privatePiles	src/ui/GenericCardContainerUI.h	/^    QMap<QString, QGraphicsProxyWidget*> _m_privatePiles;$/;"	m	class:PlayerCardContainer
_m_progressBar	src/ui/GenericCardContainerUI.h	/^    QSanCommandProgressBar *_m_progressBar;$/;"	m	class:PlayerCardContainer
_m_progressBarItem	src/ui/GenericCardContainerUI.h	/^    QGraphicsProxyWidget *_m_progressBarItem;$/;"	m	class:PlayerCardContainer
_m_raceStarted	src/server/room.h	/^    bool _m_raceStarted; $/;"	m	class:Room
_m_raceWinner	src/server/room.h	/^    ServerPlayer* _m_raceWinner;$/;"	m	class:Room
_m_readyIcon	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_readyIcon, *_m_actionIcon;$/;"	m	class:PlayerCardContainer
_m_rightFrame	src/ui/dashboard.h	/^    QGraphicsPixmapItem *_m_leftFrame, *_m_middleFrame, *_m_rightFrame;    $/;"	m	class:Dashboard
_m_rightFrameBg	src/ui/dashboard.h	/^    QGraphicsPixmapItem *_m_rightFrameBg;$/;"	m	class:Dashboard
_m_roleComboBox	src/ui/GenericCardContainerUI.h	/^    RoleComboBox *_m_roleComboBox;$/;"	m	class:PlayerCardContainer
_m_room	src/server/roomthread.h	/^    Room* _m_room;$/;"	m	class:EventTriplet
_m_roomLayout	src/ui/SkinBank.h	/^    RoomLayout _m_roomLayout;$/;"	m	class:QSanRoomSkin
_m_roomLayout	src/ui/roomscene.h	/^    const QSanRoomSkin::RoomLayout* _m_roomLayout;$/;"	m	class:RoomScene
_m_roomSkin	src/ui/SkinBank.h	/^    QSanRoomSkin _m_roomSkin;$/;"	m	class:QSanSkinScheme
_m_roomSkin	src/ui/roomscene.h	/^    const QSanRoomSkin* _m_roomSkin;$/;"	m	class:RoomScene
_m_roomState	src/client/client.h	/^    RoomState _m_roomState;$/;"	m	class:Client
_m_roomState	src/server/room.h	/^    RoomState _m_roomState;$/;"	m	class:Room
_m_saveMeIcon	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_saveMeIcon;$/;"	m	class:PlayerCardContainer
_m_screenNameItem	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_screenNameItem;$/;"	m	class:PlayerCardContainer
_m_selectedFrame	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_selectedFrame;$/;"	m	class:PlayerCardContainer
_m_semRaceRequest	src/server/room.h	/^    QSemaphore _m_semRaceRequest; \/\/ When race starts, server waits on his semaphore for the first replier$/;"	m	class:Room
_m_semRoomMutex	src/server/room.h	/^    QSemaphore _m_semRoomMutex; \/\/ Provide per-room  (rather than per-player) level protection of any shared variables$/;"	m	class:Room
_m_showFootnote	src/ui/carditem.h	/^    bool _m_showFootnote;$/;"	m	class:CardItem
_m_size	src/ui/qsanbutton.h	/^    QSize _m_size;$/;"	m	class:QSanButton
_m_skill	src/ui/qsanbutton.h	/^    const Skill* _m_skill;$/;"	m	class:QSanSkillButton
_m_skillDock	src/ui/dashboard.h	/^    QSanInvokeSkillDock* _m_skillDock;$/;"	m	class:Dashboard
_m_skillNameItem	src/ui/photo.h	/^    QGraphicsPixmapItem *emotion_item, *_m_skillNameItem;$/;"	m	class:Photo
_m_skillType	src/ui/qsanbutton.h	/^    SkillType _m_skillType;$/;"	m	class:QSanSkillButton
_m_skinList	src/ui/SkinBank.h	/^    Json::Value _m_skinList;$/;"	m	class:QSanSkinFactory
_m_skinName	src/ui/SkinBank.h	/^    QString _m_skinName;$/;"	m	class:QSanSkinFactory
_m_smallAvatarArea	src/ui/GenericCardContainerUI.h	/^    QGraphicsRectItem *_m_avatarArea, *_m_smallAvatarArea;$/;"	m	class:PlayerCardContainer
_m_smallAvatarIcon	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_avatarIcon, *_m_smallAvatarIcon, *_m_circleItem;$/;"	m	class:PlayerCardContainer
_m_smallAvatarNameItem	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_avatarNameItem, *_m_smallAvatarNameItem;$/;"	m	class:PlayerCardContainer
_m_state	src/ui/qsanbutton.h	/^    ButtonState _m_state;$/;"	m	class:QSanButton
_m_style	src/ui/qsanbutton.h	/^    ButtonStyle _m_style;$/;"	m	class:QSanButton
_m_target	src/server/roomthread.h	/^    ServerPlayer *_m_target;$/;"	m	class:EventTriplet
_m_timeSinceLastSurrenderRequest	src/server/room.h	/^    QTime _m_timeSinceLastSurrenderRequest; \/\/ Timer used to ensure that surrender polls are not initiated too frequently$/;"	m	class:Room
_m_timerId	src/ui/pixmapanimation.h	/^    int _m_timerId;$/;"	m	class:PixmapAnimation
_m_viewAsSkill	src/ui/qsanbutton.h	/^    const ViewAsSkill* _m_viewAsSkill;$/;"	m	class:QSanSkillButton
_m_votesGot	src/ui/GenericCardContainerUI.h	/^    int _m_votesGot, _m_maxVotes;$/;"	m	class:PlayerCardContainer
_m_votesItem	src/ui/GenericCardContainerUI.h	/^    QGraphicsPixmapItem *_m_votesItem;$/;"	m	class:PlayerCardContainer
_m_width	src/ui/QSanSelectableItem.h	/^    int _m_width, _m_height;$/;"	m	class:QSanSelectableItem
_m_width	src/ui/dashboard.h	/^    int _m_width;$/;"	m	class:Dashboard
_m_width	src/ui/qsanbutton.h	/^    int _m_width;    $/;"	m	class:QSanInvokeSkillDock
_markClearance	src/ui/TablePile.cpp	/^void TablePile::_markClearance(CardItem* item)$/;"	f	class:TablePile
_mergeMoves	src/server/room.cpp	/^QList<CardsMoveOneTimeStruct> Room::_mergeMoves(QList<CardsMoveStruct> cards_moves){$/;"	f	class:Room
_moveCards	src/server/room.cpp	/^void Room::_moveCards(QList<CardsMoveStruct> cards_moves, bool forceMoveVisible, bool enforceOrigin)$/;"	f	class:Room
_mutexEquipAnim	src/ui/GenericCardContainerUI.h	/^    QMutex _mutexEquipAnim;$/;"	m	class:PlayerCardContainer
_mutex_cardsToBeDestroyed	src/ui/GenericCardContainerUI.h	/^    QMutex _mutex_cardsToBeDestroyed;    $/;"	m	class:GenericCardContainer
_onEquipSelectChanged	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::_onEquipSelectChanged()$/;"	f	class:PlayerCardContainer
_onEquipSelectChanged	src/ui/dashboard.cpp	/^void Dashboard::_onEquipSelectChanged()$/;"	f	class:Dashboard
_onMouseClick	src/ui/qsanbutton.cpp	/^void QSanButton::_onMouseClick(bool inside)$/;"	f	class:QSanButton
_p_AITo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_AITo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_ArmorTo_p_Card	swig/sanguosha_wrap.cxx	/^static void *_p_ArmorTo_p_Card(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_ArmorTo_p_EquipCard	swig/sanguosha_wrap.cxx	/^static void *_p_ArmorTo_p_EquipCard(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_ArmorTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_ArmorTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_BasicCardTo_p_Card	swig/sanguosha_wrap.cxx	/^static void *_p_BasicCardTo_p_Card(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_BasicCardTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_BasicCardTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_CardTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_CardTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_ClientPlayerTo_p_Player	swig/sanguosha_wrap.cxx	/^static void *_p_ClientPlayerTo_p_Player(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_ClientPlayerTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_ClientPlayerTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_DefensiveHorseTo_p_Card	swig/sanguosha_wrap.cxx	/^static void *_p_DefensiveHorseTo_p_Card(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_DefensiveHorseTo_p_EquipCard	swig/sanguosha_wrap.cxx	/^static void *_p_DefensiveHorseTo_p_EquipCard(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_DefensiveHorseTo_p_Horse	swig/sanguosha_wrap.cxx	/^static void *_p_DefensiveHorseTo_p_Horse(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_DefensiveHorseTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_DefensiveHorseTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_DelayedTrickTo_p_Card	swig/sanguosha_wrap.cxx	/^static void *_p_DelayedTrickTo_p_Card(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_DelayedTrickTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_DelayedTrickTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_DelayedTrickTo_p_TrickCard	swig/sanguosha_wrap.cxx	/^static void *_p_DelayedTrickTo_p_TrickCard(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_DistanceSkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_DistanceSkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_DistanceSkillTo_p_Skill	swig/sanguosha_wrap.cxx	/^static void *_p_DistanceSkillTo_p_Skill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_DummyCardTo_p_Card	swig/sanguosha_wrap.cxx	/^static void *_p_DummyCardTo_p_Card(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_DummyCardTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_DummyCardTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_EngineTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_EngineTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_EquipCardTo_p_Card	swig/sanguosha_wrap.cxx	/^static void *_p_EquipCardTo_p_Card(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_EquipCardTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_EquipCardTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_FilterSkillTo_p_OneCardViewAsSkill	swig/sanguosha_wrap.cxx	/^static void *_p_FilterSkillTo_p_OneCardViewAsSkill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_FilterSkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_FilterSkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_FilterSkillTo_p_Skill	swig/sanguosha_wrap.cxx	/^static void *_p_FilterSkillTo_p_Skill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_FilterSkillTo_p_ViewAsSkill	swig/sanguosha_wrap.cxx	/^static void *_p_FilterSkillTo_p_ViewAsSkill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_GameStartSkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_GameStartSkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_GameStartSkillTo_p_Skill	swig/sanguosha_wrap.cxx	/^static void *_p_GameStartSkillTo_p_Skill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_GameStartSkillTo_p_TriggerSkill	swig/sanguosha_wrap.cxx	/^static void *_p_GameStartSkillTo_p_TriggerSkill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_GeneralTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_GeneralTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_HorseTo_p_Card	swig/sanguosha_wrap.cxx	/^static void *_p_HorseTo_p_Card(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_HorseTo_p_EquipCard	swig/sanguosha_wrap.cxx	/^static void *_p_HorseTo_p_EquipCard(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_HorseTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_HorseTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaAITo_p_AI	swig/sanguosha_wrap.cxx	/^static void *_p_LuaAITo_p_AI(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaAITo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_LuaAITo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaAITo_p_TrustAI	swig/sanguosha_wrap.cxx	/^static void *_p_LuaAITo_p_TrustAI(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaDistanceSkillTo_p_DistanceSkill	swig/sanguosha_wrap.cxx	/^static void *_p_LuaDistanceSkillTo_p_DistanceSkill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaDistanceSkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_LuaDistanceSkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaDistanceSkillTo_p_Skill	swig/sanguosha_wrap.cxx	/^static void *_p_LuaDistanceSkillTo_p_Skill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaFilterSkillTo_p_FilterSkill	swig/sanguosha_wrap.cxx	/^static void *_p_LuaFilterSkillTo_p_FilterSkill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaFilterSkillTo_p_OneCardViewAsSkill	swig/sanguosha_wrap.cxx	/^static void *_p_LuaFilterSkillTo_p_OneCardViewAsSkill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaFilterSkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_LuaFilterSkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaFilterSkillTo_p_Skill	swig/sanguosha_wrap.cxx	/^static void *_p_LuaFilterSkillTo_p_Skill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaFilterSkillTo_p_ViewAsSkill	swig/sanguosha_wrap.cxx	/^static void *_p_LuaFilterSkillTo_p_ViewAsSkill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaMaxCardsSkillTo_p_MaxCardsSkill	swig/sanguosha_wrap.cxx	/^static void *_p_LuaMaxCardsSkillTo_p_MaxCardsSkill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaMaxCardsSkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_LuaMaxCardsSkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaMaxCardsSkillTo_p_Skill	swig/sanguosha_wrap.cxx	/^static void *_p_LuaMaxCardsSkillTo_p_Skill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaProhibitSkillTo_p_ProhibitSkill	swig/sanguosha_wrap.cxx	/^static void *_p_LuaProhibitSkillTo_p_ProhibitSkill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaProhibitSkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_LuaProhibitSkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaProhibitSkillTo_p_Skill	swig/sanguosha_wrap.cxx	/^static void *_p_LuaProhibitSkillTo_p_Skill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaSkillCardTo_p_Card	swig/sanguosha_wrap.cxx	/^static void *_p_LuaSkillCardTo_p_Card(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaSkillCardTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_LuaSkillCardTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaSkillCardTo_p_SkillCard	swig/sanguosha_wrap.cxx	/^static void *_p_LuaSkillCardTo_p_SkillCard(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaTriggerSkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_LuaTriggerSkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaTriggerSkillTo_p_Skill	swig/sanguosha_wrap.cxx	/^static void *_p_LuaTriggerSkillTo_p_Skill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaTriggerSkillTo_p_TriggerSkill	swig/sanguosha_wrap.cxx	/^static void *_p_LuaTriggerSkillTo_p_TriggerSkill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaViewAsSkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_LuaViewAsSkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaViewAsSkillTo_p_Skill	swig/sanguosha_wrap.cxx	/^static void *_p_LuaViewAsSkillTo_p_Skill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_LuaViewAsSkillTo_p_ViewAsSkill	swig/sanguosha_wrap.cxx	/^static void *_p_LuaViewAsSkillTo_p_ViewAsSkill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_MaxCardsSkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_MaxCardsSkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_MaxCardsSkillTo_p_Skill	swig/sanguosha_wrap.cxx	/^static void *_p_MaxCardsSkillTo_p_Skill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_OffensiveHorseTo_p_Card	swig/sanguosha_wrap.cxx	/^static void *_p_OffensiveHorseTo_p_Card(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_OffensiveHorseTo_p_EquipCard	swig/sanguosha_wrap.cxx	/^static void *_p_OffensiveHorseTo_p_EquipCard(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_OffensiveHorseTo_p_Horse	swig/sanguosha_wrap.cxx	/^static void *_p_OffensiveHorseTo_p_Horse(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_OffensiveHorseTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_OffensiveHorseTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_OneCardViewAsSkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_OneCardViewAsSkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_OneCardViewAsSkillTo_p_Skill	swig/sanguosha_wrap.cxx	/^static void *_p_OneCardViewAsSkillTo_p_Skill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_OneCardViewAsSkillTo_p_ViewAsSkill	swig/sanguosha_wrap.cxx	/^static void *_p_OneCardViewAsSkillTo_p_ViewAsSkill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_PackageTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_PackageTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_PlayerTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_PlayerTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_ProhibitSkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_ProhibitSkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_ProhibitSkillTo_p_Skill	swig/sanguosha_wrap.cxx	/^static void *_p_ProhibitSkillTo_p_Skill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_QThreadTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_QThreadTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_RoomThreadTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_RoomThreadTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_RoomThreadTo_p_QThread	swig/sanguosha_wrap.cxx	/^static void *_p_RoomThreadTo_p_QThread(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_RoomTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_RoomTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_RoomTo_p_QThread	swig/sanguosha_wrap.cxx	/^static void *_p_RoomTo_p_QThread(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_SPConvertSkillTo_p_GameStartSkill	swig/sanguosha_wrap.cxx	/^static void *_p_SPConvertSkillTo_p_GameStartSkill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_SPConvertSkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_SPConvertSkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_SPConvertSkillTo_p_Skill	swig/sanguosha_wrap.cxx	/^static void *_p_SPConvertSkillTo_p_Skill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_SPConvertSkillTo_p_TriggerSkill	swig/sanguosha_wrap.cxx	/^static void *_p_SPConvertSkillTo_p_TriggerSkill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_ServerPlayerTo_p_Player	swig/sanguosha_wrap.cxx	/^static void *_p_ServerPlayerTo_p_Player(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_ServerPlayerTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_ServerPlayerTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_SkillCardTo_p_Card	swig/sanguosha_wrap.cxx	/^static void *_p_SkillCardTo_p_Card(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_SkillCardTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_SkillCardTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_SkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_SkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_SlashTo_p_BasicCard	swig/sanguosha_wrap.cxx	/^static void *_p_SlashTo_p_BasicCard(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_SlashTo_p_Card	swig/sanguosha_wrap.cxx	/^static void *_p_SlashTo_p_Card(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_SlashTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_SlashTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_TrickCardTo_p_Card	swig/sanguosha_wrap.cxx	/^static void *_p_TrickCardTo_p_Card(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_TrickCardTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_TrickCardTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_TriggerSkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_TriggerSkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_TriggerSkillTo_p_Skill	swig/sanguosha_wrap.cxx	/^static void *_p_TriggerSkillTo_p_Skill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_TrustAITo_p_AI	swig/sanguosha_wrap.cxx	/^static void *_p_TrustAITo_p_AI(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_TrustAITo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_TrustAITo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_ViewAsSkillTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_ViewAsSkillTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_ViewAsSkillTo_p_Skill	swig/sanguosha_wrap.cxx	/^static void *_p_ViewAsSkillTo_p_Skill(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_WeaponTo_p_Card	swig/sanguosha_wrap.cxx	/^static void *_p_WeaponTo_p_Card(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_WeaponTo_p_EquipCard	swig/sanguosha_wrap.cxx	/^static void *_p_WeaponTo_p_EquipCard(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_WeaponTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_WeaponTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_WrappedCardTo_p_Card	swig/sanguosha_wrap.cxx	/^static void *_p_WrappedCardTo_p_Card(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_p_WrappedCardTo_p_QObject	swig/sanguosha_wrap.cxx	/^static void *_p_WrappedCardTo_p_QObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {$/;"	f	file:
_paintPixmap	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::_paintPixmap(QGraphicsPixmapItem* &item, const QRect &rect, const QPixmap &pixmap)$/;"	f	class:PlayerCardContainer
_paintPixmap	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::_paintPixmap(QGraphicsPixmapItem* &item, const QRect &rect, const QString &key)$/;"	f	class:PlayerCardContainer
_paintPixmap	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::_paintPixmap(QGraphicsPixmapItem* &item,$/;"	f	class:PlayerCardContainer
_paintTextMutex	src/ui/uiUtils.cpp	/^static QMutex _paintTextMutex;$/;"	v	file:
_parseViewAsSkill	src/ui/qsanbutton.cpp	/^const ViewAsSkill* QSanSkillButton::_parseViewAsSkill() const$/;"	f	class:QSanSkillButton
_playMoveCardsAnimation	src/ui/GenericCardContainerUI.cpp	/^void GenericCardContainer::_playMoveCardsAnimation(QList<CardItem*> &cards, bool destroyCards)$/;"	f	class:GenericCardContainer
_processCardPattern	src/client/client.cpp	/^QString Client::_processCardPattern(const QString &pattern){$/;"	f	class:Client
_processCardsMove	src/ui/roomscene.cpp	/^bool RoomScene::_processCardsMove(CardsMoveStruct &move, bool isLost){$/;"	f	class:RoomScene
_readConfig	src/ui/SkinBank.cpp	/^QString IQSanComponentSkin::_readConfig(const Json::Value &dict, const QString &key,$/;"	f	class:IQSanComponentSkin
_readImageConfig	src/ui/SkinBank.cpp	/^QString IQSanComponentSkin::_readImageConfig(const QString &key, QRect &rect,$/;"	f	class:IQSanComponentSkin
_repaint	src/ui/qsanbutton.cpp	/^void QSanInvokeSkillButton::_repaint()$/;"	f	class:QSanInvokeSkillButton
_setClassDictionariesMetatables	lua/lib/middleclass.lua	/^local function _setClassDictionariesMetatables(klass)$/;"	f
_setClassMetamethods	lua/lib/middleclass.lua	/^local function _setClassMetamethods(klass)$/;"	f
_setClassMetatable	lua/lib/middleclass.lua	/^local function _setClassMetatable(klass)$/;"	f
_setDefaultInitializeMethod	lua/lib/middleclass.lua	/^local function _setDefaultInitializeMethod(klass, super)$/;"	f
_setEquipBorderAnimation	src/ui/dashboard.cpp	/^void Dashboard::_setEquipBorderAnimation(int index, bool turnOn)$/;"	f	class:Dashboard
_setPlayerGeneral	src/server/room.cpp	/^bool Room::_setPlayerGeneral(ServerPlayer* player, const QString& generalName, bool isFirst)$/;"	f	class:Room
_setSkillType	src/ui/qsanbutton.cpp	/^void QSanSkillButton::_setSkillType(SkillType type)$/;"	f	class:QSanSkillButton
_setupChooseGeneralRequestArgs	src/server/room.cpp	/^void Room::_setupChooseGeneralRequestArgs(ServerPlayer *player){$/;"	f	class:Room
_shouldIgnoreDisplayMove	src/ui/roomscene.cpp	/^bool RoomScene::_shouldIgnoreDisplayMove(Player::Place from, Player::Place to)$/;"	f	class:RoomScene
_sm_currentSkin	src/ui/SkinBank.h	/^    QSanSkinScheme _sm_currentSkin;$/;"	m	class:QSanSkinFactory
_sm_singleton	src/ui/SkinBank.cpp	/^QSanSkinFactory* QSanSkinFactory::_sm_singleton = NULL;$/;"	m	class:QSanSkinFactory	file:
_sm_singleton	src/ui/SkinBank.h	/^    static QSanSkinFactory* _sm_singleton;$/;"	m	class:QSanSkinFactory
_startLaying	src/ui/GenericCardContainerUI.cpp	/^bool PlayerCardContainer::_startLaying()$/;"	f	class:PlayerCardContainer
_swigc__p_AI	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_AI[] = {  {&_swigt__p_AI, 0, 0, 0},  {&_swigt__p_TrustAI, _p_TrustAITo_p_AI, 0, 0},  {&_swigt__p_LuaAI, _p_LuaAITo_p_AI, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_Armor	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_Armor[] = {  {&_swigt__p_Armor, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_BasicCard	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_BasicCard[] = {  {&_swigt__p_Slash, _p_SlashTo_p_BasicCard, 0, 0},  {&_swigt__p_BasicCard, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_Card	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_Card[] = {  {&_swigt__p_BasicCard, _p_BasicCardTo_p_Card, 0, 0},  {&_swigt__p_Card, 0, 0, 0},  {&_swigt__p_DefensiveHorse, _p_DefensiveHorseTo_p_Card, 0, 0},  {&_swigt__p_OffensiveHorse, _p_OffensiveHorseTo_p_Card, 0, 0},  {&_swigt__p_DummyCard, _p_DummyCardTo_p_Card, 0, 0},  {&_swigt__p_WrappedCard, _p_WrappedCardTo_p_Card, 0, 0},  {&_swigt__p_EquipCard, _p_EquipCardTo_p_Card, 0, 0},  {&_swigt__p_DelayedTrick, _p_DelayedTrickTo_p_Card, 0, 0},  {&_swigt__p_Slash, _p_SlashTo_p_Card, 0, 0},  {&_swigt__p_Horse, _p_HorseTo_p_Card, 0, 0},  {&_swigt__p_Armor, _p_ArmorTo_p_Card, 0, 0},  {&_swigt__p_Weapon, _p_WeaponTo_p_Card, 0, 0},  {&_swigt__p_LuaSkillCard, _p_LuaSkillCardTo_p_Card, 0, 0},  {&_swigt__p_SkillCard, _p_SkillCardTo_p_Card, 0, 0},  {&_swigt__p_TrickCard, _p_TrickCardTo_p_Card, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_CardEffectStruct	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_CardEffectStruct[] = {  {&_swigt__p_CardEffectStruct, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_CardItem	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_CardItem[] = {  {&_swigt__p_CardItem, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_CardMoveReason	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_CardMoveReason[] = {  {&_swigt__p_CardMoveReason, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_CardPattern	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_CardPattern[] = {  {&_swigt__p_CardPattern, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_CardUseStruct	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_CardUseStruct[] = {  {&_swigt__p_CardUseStruct, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_Card__Suit	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_Card__Suit[] = {  {&_swigt__p_Card__Suit, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_CardsMoveOneTimeStruct	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_CardsMoveOneTimeStruct[] = {  {&_swigt__p_CardsMoveOneTimeStruct, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_CardsMoveStruct	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_CardsMoveStruct[] = {  {&_swigt__p_CardsMoveStruct, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_Client	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_Client[] = {  {&_swigt__p_Client, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_ClientPlayer	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_ClientPlayer[] = {  {&_swigt__p_ClientPlayer, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_ClientSocket	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_ClientSocket[] = {  {&_swigt__p_ClientSocket, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_DamageStruct	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_DamageStruct[] = {  {&_swigt__p_DamageStruct, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_DefensiveHorse	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_DefensiveHorse[] = {  {&_swigt__p_DefensiveHorse, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_DelayedTrick	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_DelayedTrick[] = {  {&_swigt__p_DelayedTrick, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_DistanceSkill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_DistanceSkill[] = {  {&_swigt__p_DistanceSkill, 0, 0, 0},  {&_swigt__p_LuaDistanceSkill, _p_LuaDistanceSkillTo_p_DistanceSkill, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_DummyCard	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_DummyCard[] = {  {&_swigt__p_DummyCard, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_DyingStruct	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_DyingStruct[] = {  {&_swigt__p_DyingStruct, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_Engine	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_Engine[] = {  {&_swigt__p_Engine, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_EquipCard	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_EquipCard[] = {  {&_swigt__p_Armor, _p_ArmorTo_p_EquipCard, 0, 0},  {&_swigt__p_EquipCard, 0, 0, 0},  {&_swigt__p_OffensiveHorse, _p_OffensiveHorseTo_p_EquipCard, 0, 0},  {&_swigt__p_DefensiveHorse, _p_DefensiveHorseTo_p_EquipCard, 0, 0},  {&_swigt__p_Weapon, _p_WeaponTo_p_EquipCard, 0, 0},  {&_swigt__p_Horse, _p_HorseTo_p_EquipCard, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_FilterSkill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_FilterSkill[] = {  {&_swigt__p_FilterSkill, 0, 0, 0},  {&_swigt__p_LuaFilterSkill, _p_LuaFilterSkillTo_p_FilterSkill, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_GameStartSkill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_GameStartSkill[] = {  {&_swigt__p_GameStartSkill, 0, 0, 0},  {&_swigt__p_SPConvertSkill, _p_SPConvertSkillTo_p_GameStartSkill, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_General	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_General[] = {  {&_swigt__p_General, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_Horse	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_Horse[] = {  {&_swigt__p_OffensiveHorse, _p_OffensiveHorseTo_p_Horse, 0, 0},  {&_swigt__p_DefensiveHorse, _p_DefensiveHorseTo_p_Horse, 0, 0},  {&_swigt__p_Horse, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_JudgeStruct	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_JudgeStruct[] = {  {&_swigt__p_JudgeStruct, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_LogMessage	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_LogMessage[] = {  {&_swigt__p_LogMessage, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_LuaAI	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_LuaAI[] = {  {&_swigt__p_LuaAI, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_LuaDistanceSkill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_LuaDistanceSkill[] = {  {&_swigt__p_LuaDistanceSkill, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_LuaFilterSkill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_LuaFilterSkill[] = {  {&_swigt__p_LuaFilterSkill, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_LuaFunction	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_LuaFunction[] = {  {&_swigt__p_LuaFunction, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_LuaMaxCardsSkill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_LuaMaxCardsSkill[] = {  {&_swigt__p_LuaMaxCardsSkill, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_LuaProhibitSkill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_LuaProhibitSkill[] = {  {&_swigt__p_LuaProhibitSkill, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_LuaSkillCard	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_LuaSkillCard[] = {  {&_swigt__p_LuaSkillCard, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_LuaTriggerSkill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_LuaTriggerSkill[] = {  {&_swigt__p_LuaTriggerSkill, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_LuaViewAsSkill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_LuaViewAsSkill[] = {  {&_swigt__p_LuaViewAsSkill, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_MaxCardsSkill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_MaxCardsSkill[] = {  {&_swigt__p_MaxCardsSkill, 0, 0, 0},  {&_swigt__p_LuaMaxCardsSkill, _p_LuaMaxCardsSkillTo_p_MaxCardsSkill, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_OffensiveHorse	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_OffensiveHorse[] = {  {&_swigt__p_OffensiveHorse, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_OneCardViewAsSkill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_OneCardViewAsSkill[] = {  {&_swigt__p_FilterSkill, _p_FilterSkillTo_p_OneCardViewAsSkill, 0, 0},  {&_swigt__p_LuaFilterSkill, _p_LuaFilterSkillTo_p_OneCardViewAsSkill, 0, 0},  {&_swigt__p_OneCardViewAsSkill, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_Package	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_Package[] = {  {&_swigt__p_Package, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_PhaseChangeStruct	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_PhaseChangeStruct[] = {  {&_swigt__p_PhaseChangeStruct, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_PindianStruct	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_PindianStruct[] = {  {&_swigt__p_PindianStruct, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_Player	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_Player[] = {  {&_swigt__p_ServerPlayer, _p_ServerPlayerTo_p_Player, 0, 0},  {&_swigt__p_ClientPlayer, _p_ClientPlayerTo_p_Player, 0, 0},  {&_swigt__p_Player, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_ProhibitSkill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_ProhibitSkill[] = {  {&_swigt__p_ProhibitSkill, 0, 0, 0},  {&_swigt__p_LuaProhibitSkill, _p_LuaProhibitSkillTo_p_ProhibitSkill, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QColor	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QColor[] = {  {&_swigt__p_QColor, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QDialog	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QDialog[] = {  {&_swigt__p_QDialog, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QListT_CardItem_p_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QListT_CardItem_p_t[] = {  {&_swigt__p_QListT_CardItem_p_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QListT_Card_const_p_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QListT_Card_const_p_t[] = {  {&_swigt__p_QListT_Card_const_p_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QListT_CardsMoveStruct_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QListT_CardsMoveStruct_t[] = {  {&_swigt__p_QListT_CardsMoveStruct_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QListT_DelayedTrick_const_p_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QListT_DelayedTrick_const_p_t[] = {  {&_swigt__p_QListT_DelayedTrick_const_p_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QListT_DistanceSkill_const_p_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QListT_DistanceSkill_const_p_t[] = {  {&_swigt__p_QListT_DistanceSkill_const_p_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QListT_Player__Phase_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QListT_Player__Phase_t[] = {  {&_swigt__p_QListT_Player__Phase_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QListT_Player__Place_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QListT_Player__Place_t[] = {  {&_swigt__p_QListT_Player__Place_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QListT_Player_const_p_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QListT_Player_const_p_t[] = {  {&_swigt__p_QListT_Player_const_p_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QListT_ServerPlayer_p_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QListT_ServerPlayer_p_t[] = {  {&_swigt__p_QListT_ServerPlayer_p_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QListT_Skill_const_p_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QListT_Skill_const_p_t[] = {  {&_swigt__p_QListT_Skill_const_p_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QListT_TriggerEvent_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QListT_TriggerEvent_t[] = {  {&_swigt__p_QListT_TriggerEvent_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QListT_int_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QListT_int_t[] = {  {&_swigt__p_QListT_int_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QMapT_QString_QString_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QMapT_QString_QString_t[] = {  {&_swigt__p_QMapT_QString_QString_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QObject	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QObject[] = {  {&_swigt__p_LuaAI, _p_LuaAITo_p_QObject, 0, 0},  {&_swigt__p_Package, _p_PackageTo_p_QObject, 0, 0},  {&_swigt__p_OneCardViewAsSkill, _p_OneCardViewAsSkillTo_p_QObject, 0, 0},  {&_swigt__p_LuaViewAsSkill, _p_LuaViewAsSkillTo_p_QObject, 0, 0},  {&_swigt__p_ViewAsSkill, _p_ViewAsSkillTo_p_QObject, 0, 0},  {&_swigt__p_Horse, _p_HorseTo_p_QObject, 0, 0},  {&_swigt__p_EquipCard, _p_EquipCardTo_p_QObject, 0, 0},  {&_swigt__p_SkillCard, _p_SkillCardTo_p_QObject, 0, 0},  {&_swigt__p_LuaSkillCard, _p_LuaSkillCardTo_p_QObject, 0, 0},  {&_swigt__p_Room, _p_RoomTo_p_QObject, 0, 0},  {&_swigt__p_Armor, _p_ArmorTo_p_QObject, 0, 0},  {&_swigt__p_MaxCardsSkill, _p_MaxCardsSkillTo_p_QObject, 0, 0},  {&_swigt__p_LuaMaxCardsSkill, _p_LuaMaxCardsSkillTo_p_QObject, 0, 0},  {&_swigt__p_DelayedTrick, _p_DelayedTrickTo_p_QObject, 0, 0},  {&_swigt__p_TrustAI, _p_TrustAITo_p_QObject, 0, 0},  {&_swigt__p_General, _p_GeneralTo_p_QObject, 0, 0},  {&_swigt__p_DummyCard, _p_DummyCardTo_p_QObject, 0, 0},  {&_swigt__p_OffensiveHorse, _p_OffensiveHorseTo_p_QObject, 0, 0},  {&_swigt__p_DefensiveHorse, _p_DefensiveHorseTo_p_QObject, 0, 0},  {&_swigt__p_ServerPlayer, _p_ServerPlayerTo_p_QObject, 0, 0},  {&_swigt__p_ClientPlayer, _p_ClientPlayerTo_p_QObject, 0, 0},  {&_swigt__p_LuaDistanceSkill, _p_LuaDistanceSkillTo_p_QObject, 0, 0},  {&_swigt__p_DistanceSkill, _p_DistanceSkillTo_p_QObject, 0, 0},  {&_swigt__p_TrickCard, _p_TrickCardTo_p_QObject, 0, 0},  {&_swigt__p_LuaTriggerSkill, _p_LuaTriggerSkillTo_p_QObject, 0, 0},  {&_swigt__p_TriggerSkill, _p_TriggerSkillTo_p_QObject, 0, 0},  {&_swigt__p_FilterSkill, _p_FilterSkillTo_p_QObject, 0, 0},  {&_swigt__p_LuaFilterSkill, _p_LuaFilterSkillTo_p_QObject, 0, 0},  {&_swigt__p_QThread, _p_QThreadTo_p_QObject, 0, 0},  {&_swigt__p_RoomThread, _p_RoomThreadTo_p_QObject, 0, 0},  {&_swigt__p_Skill, _p_SkillTo_p_QObject, 0, 0},  {&_swigt__p_ProhibitSkill, _p_ProhibitSkillTo_p_QObject, 0, 0},  {&_swigt__p_LuaProhibitSkill, _p_LuaProhibitSkillTo_p_QObject, 0, 0},  {&_swigt__p_BasicCard, _p_BasicCardTo_p_QObject, 0, 0},  {&_swigt__p_WrappedCard, _p_WrappedCardTo_p_QObject, 0, 0},  {&_swigt__p_QObject, 0, 0, 0},  {&_swigt__p_Slash, _p_SlashTo_p_QObject, 0, 0},  {&_swigt__p_AI, _p_AITo_p_QObject, 0, 0},  {&_swigt__p_Weapon, _p_WeaponTo_p_QObject, 0, 0},  {&_swigt__p_Player, _p_PlayerTo_p_QObject, 0, 0},  {&_swigt__p_Card, _p_CardTo_p_QObject, 0, 0},  {&_swigt__p_SPConvertSkill, _p_SPConvertSkillTo_p_QObject, 0, 0},  {&_swigt__p_GameStartSkill, _p_GameStartSkillTo_p_QObject, 0, 0},  {&_swigt__p_Engine, _p_EngineTo_p_QObject, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QRegExp	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QRegExp[] = {  {&_swigt__p_QRegExp, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QSetT_QString_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QSetT_QString_t[] = {  {&_swigt__p_QSetT_QString_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QSetT_Skill_const_p_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QSetT_Skill_const_p_t[] = {  {&_swigt__p_QSetT_Skill_const_p_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QSetT_TriggerSkill_const_p_t	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QSetT_TriggerSkill_const_p_t[] = {  {&_swigt__p_QSetT_TriggerSkill_const_p_t, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QString	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QString[] = {  {&_swigt__p_QString, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QStringList	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QStringList[] = {  {&_swigt__p_QStringList, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QThread	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QThread[] = {  {&_swigt__p_QThread, 0, 0, 0},  {&_swigt__p_RoomThread, _p_RoomThreadTo_p_QThread, 0, 0},  {&_swigt__p_Room, _p_RoomTo_p_QThread, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_QVariant	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_QVariant[] = {  {&_swigt__p_QVariant, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_RecoverStruct	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_RecoverStruct[] = {  {&_swigt__p_RecoverStruct, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_Room	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_Room[] = {  {&_swigt__p_Room, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_RoomThread	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_RoomThread[] = {  {&_swigt__p_RoomThread, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_SPConvertSkill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_SPConvertSkill[] = {  {&_swigt__p_SPConvertSkill, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_Scenario	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_Scenario[] = {  {&_swigt__p_Scenario, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_ServerPlayer	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_ServerPlayer[] = {  {&_swigt__p_ServerPlayer, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_Skill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_Skill[] = {  {&_swigt__p_MaxCardsSkill, _p_MaxCardsSkillTo_p_Skill, 0, 0},  {&_swigt__p_LuaMaxCardsSkill, _p_LuaMaxCardsSkillTo_p_Skill, 0, 0},  {&_swigt__p_SPConvertSkill, _p_SPConvertSkillTo_p_Skill, 0, 0},  {&_swigt__p_GameStartSkill, _p_GameStartSkillTo_p_Skill, 0, 0},  {&_swigt__p_LuaFilterSkill, _p_LuaFilterSkillTo_p_Skill, 0, 0},  {&_swigt__p_FilterSkill, _p_FilterSkillTo_p_Skill, 0, 0},  {&_swigt__p_LuaTriggerSkill, _p_LuaTriggerSkillTo_p_Skill, 0, 0},  {&_swigt__p_TriggerSkill, _p_TriggerSkillTo_p_Skill, 0, 0},  {&_swigt__p_OneCardViewAsSkill, _p_OneCardViewAsSkillTo_p_Skill, 0, 0},  {&_swigt__p_LuaViewAsSkill, _p_LuaViewAsSkillTo_p_Skill, 0, 0},  {&_swigt__p_ViewAsSkill, _p_ViewAsSkillTo_p_Skill, 0, 0},  {&_swigt__p_LuaProhibitSkill, _p_LuaProhibitSkillTo_p_Skill, 0, 0},  {&_swigt__p_ProhibitSkill, _p_ProhibitSkillTo_p_Skill, 0, 0},  {&_swigt__p_LuaDistanceSkill, _p_LuaDistanceSkillTo_p_Skill, 0, 0},  {&_swigt__p_DistanceSkill, _p_DistanceSkillTo_p_Skill, 0, 0},  {&_swigt__p_Skill, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_SkillCard	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_SkillCard[] = {  {&_swigt__p_SkillCard, 0, 0, 0},  {&_swigt__p_LuaSkillCard, _p_LuaSkillCardTo_p_SkillCard, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_Slash	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_Slash[] = {  {&_swigt__p_Slash, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_SlashEffectStruct	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_SlashEffectStruct[] = {  {&_swigt__p_SlashEffectStruct, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_TrickCard	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_TrickCard[] = {  {&_swigt__p_DelayedTrick, _p_DelayedTrickTo_p_TrickCard, 0, 0},  {&_swigt__p_TrickCard, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_TriggerSkill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_TriggerSkill[] = {  {&_swigt__p_TriggerSkill, 0, 0, 0},  {&_swigt__p_LuaTriggerSkill, _p_LuaTriggerSkillTo_p_TriggerSkill, 0, 0},  {&_swigt__p_GameStartSkill, _p_GameStartSkillTo_p_TriggerSkill, 0, 0},  {&_swigt__p_SPConvertSkill, _p_SPConvertSkillTo_p_TriggerSkill, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_TrustAI	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_TrustAI[] = {  {&_swigt__p_TrustAI, 0, 0, 0},  {&_swigt__p_LuaAI, _p_LuaAITo_p_TrustAI, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_ViewAsSkill	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_ViewAsSkill[] = {  {&_swigt__p_FilterSkill, _p_FilterSkillTo_p_ViewAsSkill, 0, 0},  {&_swigt__p_LuaFilterSkill, _p_LuaFilterSkillTo_p_ViewAsSkill, 0, 0},  {&_swigt__p_ViewAsSkill, 0, 0, 0},  {&_swigt__p_LuaViewAsSkill, _p_LuaViewAsSkillTo_p_ViewAsSkill, 0, 0},  {&_swigt__p_OneCardViewAsSkill, _p_OneCardViewAsSkillTo_p_ViewAsSkill, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_Weapon	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_Weapon[] = {  {&_swigt__p_Weapon, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_WrappedCard	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_WrappedCard[] = {  {&_swigt__p_WrappedCard, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_bool	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigc__p_lua_State	swig/sanguosha_wrap.cxx	/^static swig_cast_info _swigc__p_lua_State[] = {  {&_swigt__p_lua_State, 0, 0, 0},{0, 0, 0, 0}};$/;"	v	file:
_swigt__p_AI	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_AI = {"_p_AI", "AI *", 0, 0, (void*)&_wrap_class_AI, 0};$/;"	v	file:
_swigt__p_Armor	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_Armor = {"_p_Armor", "Armor *", 0, 0, (void*)&_wrap_class_Armor, 0};$/;"	v	file:
_swigt__p_BasicCard	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_BasicCard = {"_p_BasicCard", "BasicCard *", 0, 0, (void*)&_wrap_class_BasicCard, 0};$/;"	v	file:
_swigt__p_Card	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_Card = {"_p_Card", "Card *", 0, 0, (void*)&_wrap_class_Card, 0};$/;"	v	file:
_swigt__p_CardEffectStruct	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_CardEffectStruct = {"_p_CardEffectStruct", "CardEffectStruct *", 0, 0, (void*)&_wrap_class_CardEffectStruct, 0};$/;"	v	file:
_swigt__p_CardItem	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_CardItem = {"_p_CardItem", "CardItem *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_CardMoveReason	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_CardMoveReason = {"_p_CardMoveReason", "CardMoveReason *", 0, 0, (void*)&_wrap_class_CardMoveReason, 0};$/;"	v	file:
_swigt__p_CardPattern	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_CardPattern = {"_p_CardPattern", "CardPattern *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_CardUseStruct	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_CardUseStruct = {"_p_CardUseStruct", "CardUseStruct *", 0, 0, (void*)&_wrap_class_CardUseStruct, 0};$/;"	v	file:
_swigt__p_Card__Suit	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_Card__Suit = {"_p_Card__Suit", "enum Card::Suit *|Card::Suit *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_CardsMoveOneTimeStruct	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_CardsMoveOneTimeStruct = {"_p_CardsMoveOneTimeStruct", "CardsMoveOneTimeStruct *", 0, 0, (void*)&_wrap_class_CardsMoveOneTimeStruct, 0};$/;"	v	file:
_swigt__p_CardsMoveStruct	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_CardsMoveStruct = {"_p_CardsMoveStruct", "CardsMoveStruct *", 0, 0, (void*)&_wrap_class_CardsMoveStruct, 0};$/;"	v	file:
_swigt__p_Client	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_Client = {"_p_Client", "Client *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_ClientPlayer	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_ClientPlayer = {"_p_ClientPlayer", "ClientPlayer *", 0, 0, (void*)&_wrap_class_ClientPlayer, 0};$/;"	v	file:
_swigt__p_ClientSocket	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_ClientSocket = {"_p_ClientSocket", "ClientSocket *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_DamageStruct	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_DamageStruct = {"_p_DamageStruct", "DamageStar|DamageStruct *", 0, 0, (void*)&_wrap_class_DamageStruct, 0};$/;"	v	file:
_swigt__p_DefensiveHorse	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_DefensiveHorse = {"_p_DefensiveHorse", "DefensiveHorse *", 0, 0, (void*)&_wrap_class_DefensiveHorse, 0};$/;"	v	file:
_swigt__p_DelayedTrick	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_DelayedTrick = {"_p_DelayedTrick", "DelayedTrick *", 0, 0, (void*)&_wrap_class_DelayedTrick, 0};$/;"	v	file:
_swigt__p_DistanceSkill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_DistanceSkill = {"_p_DistanceSkill", "DistanceSkill *", 0, 0, (void*)&_wrap_class_DistanceSkill, 0};$/;"	v	file:
_swigt__p_DummyCard	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_DummyCard = {"_p_DummyCard", "DummyCard *", 0, 0, (void*)&_wrap_class_DummyCard, 0};$/;"	v	file:
_swigt__p_DyingStruct	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_DyingStruct = {"_p_DyingStruct", "DyingStruct *", 0, 0, (void*)&_wrap_class_DyingStruct, 0};$/;"	v	file:
_swigt__p_Engine	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_Engine = {"_p_Engine", "Engine *", 0, 0, (void*)&_wrap_class_Engine, 0};$/;"	v	file:
_swigt__p_EquipCard	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_EquipCard = {"_p_EquipCard", "EquipCard *", 0, 0, (void*)&_wrap_class_EquipCard, 0};$/;"	v	file:
_swigt__p_FilterSkill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_FilterSkill = {"_p_FilterSkill", "FilterSkill *", 0, 0, (void*)&_wrap_class_FilterSkill, 0};$/;"	v	file:
_swigt__p_GameStartSkill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_GameStartSkill = {"_p_GameStartSkill", "GameStartSkill *", 0, 0, (void*)&_wrap_class_GameStartSkill, 0};$/;"	v	file:
_swigt__p_General	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_General = {"_p_General", "General *", 0, 0, (void*)&_wrap_class_General, 0};$/;"	v	file:
_swigt__p_Horse	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_Horse = {"_p_Horse", "Horse *", 0, 0, (void*)&_wrap_class_Horse, 0};$/;"	v	file:
_swigt__p_JudgeStruct	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_JudgeStruct = {"_p_JudgeStruct", "JudgeStar|JudgeStruct *", 0, 0, (void*)&_wrap_class_JudgeStruct, 0};$/;"	v	file:
_swigt__p_LogMessage	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_LogMessage = {"_p_LogMessage", "LogMessage *", 0, 0, (void*)&_wrap_class_LogMessage, 0};$/;"	v	file:
_swigt__p_LuaAI	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_LuaAI = {"_p_LuaAI", "LuaAI *", 0, 0, (void*)&_wrap_class_LuaAI, 0};$/;"	v	file:
_swigt__p_LuaDistanceSkill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_LuaDistanceSkill = {"_p_LuaDistanceSkill", "LuaDistanceSkill *", 0, 0, (void*)&_wrap_class_LuaDistanceSkill, 0};$/;"	v	file:
_swigt__p_LuaFilterSkill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_LuaFilterSkill = {"_p_LuaFilterSkill", "LuaFilterSkill *", 0, 0, (void*)&_wrap_class_LuaFilterSkill, 0};$/;"	v	file:
_swigt__p_LuaFunction	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_LuaFunction = {"_p_LuaFunction", "LuaFunction *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_LuaMaxCardsSkill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_LuaMaxCardsSkill = {"_p_LuaMaxCardsSkill", "LuaMaxCardsSkill *", 0, 0, (void*)&_wrap_class_LuaMaxCardsSkill, 0};$/;"	v	file:
_swigt__p_LuaProhibitSkill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_LuaProhibitSkill = {"_p_LuaProhibitSkill", "LuaProhibitSkill *", 0, 0, (void*)&_wrap_class_LuaProhibitSkill, 0};$/;"	v	file:
_swigt__p_LuaSkillCard	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_LuaSkillCard = {"_p_LuaSkillCard", "LuaSkillCard *", 0, 0, (void*)&_wrap_class_LuaSkillCard, 0};$/;"	v	file:
_swigt__p_LuaTriggerSkill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_LuaTriggerSkill = {"_p_LuaTriggerSkill", "LuaTriggerSkill *", 0, 0, (void*)&_wrap_class_LuaTriggerSkill, 0};$/;"	v	file:
_swigt__p_LuaViewAsSkill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_LuaViewAsSkill = {"_p_LuaViewAsSkill", "LuaViewAsSkill *", 0, 0, (void*)&_wrap_class_LuaViewAsSkill, 0};$/;"	v	file:
_swigt__p_MaxCardsSkill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_MaxCardsSkill = {"_p_MaxCardsSkill", "MaxCardsSkill *", 0, 0, (void*)&_wrap_class_MaxCardsSkill, 0};$/;"	v	file:
_swigt__p_OffensiveHorse	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_OffensiveHorse = {"_p_OffensiveHorse", "OffensiveHorse *", 0, 0, (void*)&_wrap_class_OffensiveHorse, 0};$/;"	v	file:
_swigt__p_OneCardViewAsSkill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_OneCardViewAsSkill = {"_p_OneCardViewAsSkill", "OneCardViewAsSkill *", 0, 0, (void*)&_wrap_class_OneCardViewAsSkill, 0};$/;"	v	file:
_swigt__p_Package	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_Package = {"_p_Package", "Package *", 0, 0, (void*)&_wrap_class_Package, 0};$/;"	v	file:
_swigt__p_PhaseChangeStruct	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_PhaseChangeStruct = {"_p_PhaseChangeStruct", "PhaseChangeStruct *", 0, 0, (void*)&_wrap_class_PhaseChangeStruct, 0};$/;"	v	file:
_swigt__p_PindianStruct	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_PindianStruct = {"_p_PindianStruct", "PindianStruct *", 0, 0, (void*)&_wrap_class_PindianStruct, 0};$/;"	v	file:
_swigt__p_Player	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_Player = {"_p_Player", "Player *", 0, 0, (void*)&_wrap_class_Player, 0};$/;"	v	file:
_swigt__p_ProhibitSkill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_ProhibitSkill = {"_p_ProhibitSkill", "ProhibitSkill *", 0, 0, (void*)&_wrap_class_ProhibitSkill, 0};$/;"	v	file:
_swigt__p_QColor	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QColor = {"_p_QColor", "QColor *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_QDialog	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QDialog = {"_p_QDialog", "QDialog *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_QListT_CardItem_p_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QListT_CardItem_p_t = {"_p_QListT_CardItem_p_t", "QList< CardItem * > *", 0, 0, (void*)&_wrap_class_QList_Sl_CardItem_Sm__Sg_, 0};$/;"	v	file:
_swigt__p_QListT_Card_const_p_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QListT_Card_const_p_t = {"_p_QListT_Card_const_p_t", "QList< Card const * > *", 0, 0, (void*)&_wrap_class_QList_Sl_Card_SS_const_Sm__Sg_, 0};$/;"	v	file:
_swigt__p_QListT_CardsMoveStruct_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QListT_CardsMoveStruct_t = {"_p_QListT_CardsMoveStruct_t", "QList< CardsMoveStruct > *", 0, 0, (void*)&_wrap_class_QList_Sl_CardsMoveStruct_Sg_, 0};$/;"	v	file:
_swigt__p_QListT_DelayedTrick_const_p_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QListT_DelayedTrick_const_p_t = {"_p_QListT_DelayedTrick_const_p_t", "QList< DelayedTrick const * > *", 0, 0, (void*)&_wrap_class_QList_Sl_DelayedTrick_SS_const_Sm__Sg_, 0};$/;"	v	file:
_swigt__p_QListT_DistanceSkill_const_p_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QListT_DistanceSkill_const_p_t = {"_p_QListT_DistanceSkill_const_p_t", "QList< DistanceSkill const * > *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_QListT_Player__Phase_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QListT_Player__Phase_t = {"_p_QListT_Player__Phase_t", "QList< Player::Phase > *", 0, 0, (void*)&_wrap_class_QList_Sl_Player_Phase_Sg_, 0};$/;"	v	file:
_swigt__p_QListT_Player__Place_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QListT_Player__Place_t = {"_p_QListT_Player__Place_t", "QList< Player::Place > *", 0, 0, (void*)&_wrap_class_QList_Sl_Player_Place_Sg_, 0};$/;"	v	file:
_swigt__p_QListT_Player_const_p_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QListT_Player_const_p_t = {"_p_QListT_Player_const_p_t", "QList< Player const * > *", 0, 0, (void*)&_wrap_class_QList_Sl_Player_SS_const_Sm__Sg_, 0};$/;"	v	file:
_swigt__p_QListT_ServerPlayer_p_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QListT_ServerPlayer_p_t = {"_p_QListT_ServerPlayer_p_t", "QList< ServerPlayer * > *", 0, 0, (void*)&_wrap_class_QList_Sl_ServerPlayer_Sm__Sg_, 0};$/;"	v	file:
_swigt__p_QListT_Skill_const_p_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QListT_Skill_const_p_t = {"_p_QListT_Skill_const_p_t", "QList< Skill const * > *", 0, 0, (void*)&_wrap_class_QList_Sl_Skill_SS_const_Sm__Sg_, 0};$/;"	v	file:
_swigt__p_QListT_TriggerEvent_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QListT_TriggerEvent_t = {"_p_QListT_TriggerEvent_t", "QList< enum TriggerEvent > *|QList< TriggerEvent > *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_QListT_int_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QListT_int_t = {"_p_QListT_int_t", "QList< int > *", 0, 0, (void*)&_wrap_class_QList_Sl_int_Sg_, 0};$/;"	v	file:
_swigt__p_QMapT_QString_QString_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QMapT_QString_QString_t = {"_p_QMapT_QString_QString_t", "QMap< QString,QString > *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_QObject	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QObject = {"_p_QObject", "QObject *", 0, 0, (void*)&_wrap_class_QObject, 0};$/;"	v	file:
_swigt__p_QRegExp	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QRegExp = {"_p_QRegExp", "QRegExp *", 0, 0, (void*)&_wrap_class_QRegExp, 0};$/;"	v	file:
_swigt__p_QSetT_QString_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QSetT_QString_t = {"_p_QSetT_QString_t", "QSet< QString > *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_QSetT_Skill_const_p_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QSetT_Skill_const_p_t = {"_p_QSetT_Skill_const_p_t", "QSet< Skill const * > *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_QSetT_TriggerSkill_const_p_t	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QSetT_TriggerSkill_const_p_t = {"_p_QSetT_TriggerSkill_const_p_t", "QSet< TriggerSkill const * > *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_QString	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QString = {"_p_QString", "QString *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_QStringList	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QStringList = {"_p_QStringList", "QStringList *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_QThread	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QThread = {"_p_QThread", "QThread *", 0, 0, (void*)&_wrap_class_QThread, 0};$/;"	v	file:
_swigt__p_QVariant	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_QVariant = {"_p_QVariant", "QVariant *", 0, 0, (void*)&_wrap_class_QVariant, 0};$/;"	v	file:
_swigt__p_RecoverStruct	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_RecoverStruct = {"_p_RecoverStruct", "RecoverStruct *", 0, 0, (void*)&_wrap_class_RecoverStruct, 0};$/;"	v	file:
_swigt__p_Room	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_Room = {"_p_Room", "Room *", 0, 0, (void*)&_wrap_class_Room, 0};$/;"	v	file:
_swigt__p_RoomThread	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_RoomThread = {"_p_RoomThread", "RoomThread *", 0, 0, (void*)&_wrap_class_RoomThread, 0};$/;"	v	file:
_swigt__p_SPConvertSkill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_SPConvertSkill = {"_p_SPConvertSkill", "SPConvertSkill *", 0, 0, (void*)&_wrap_class_SPConvertSkill, 0};$/;"	v	file:
_swigt__p_Scenario	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_Scenario = {"_p_Scenario", "Scenario *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_ServerPlayer	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_ServerPlayer = {"_p_ServerPlayer", "ServerPlayer *", 0, 0, (void*)&_wrap_class_ServerPlayer, 0};$/;"	v	file:
_swigt__p_Skill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_Skill = {"_p_Skill", "Skill *", 0, 0, (void*)&_wrap_class_Skill, 0};$/;"	v	file:
_swigt__p_SkillCard	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_SkillCard = {"_p_SkillCard", "SkillCard *", 0, 0, (void*)&_wrap_class_SkillCard, 0};$/;"	v	file:
_swigt__p_Slash	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_Slash = {"_p_Slash", "Slash *", 0, 0, (void*)&_wrap_class_Slash, 0};$/;"	v	file:
_swigt__p_SlashEffectStruct	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_SlashEffectStruct = {"_p_SlashEffectStruct", "SlashEffectStruct *", 0, 0, (void*)&_wrap_class_SlashEffectStruct, 0};$/;"	v	file:
_swigt__p_TrickCard	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_TrickCard = {"_p_TrickCard", "TrickCard *", 0, 0, (void*)&_wrap_class_TrickCard, 0};$/;"	v	file:
_swigt__p_TriggerSkill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_TriggerSkill = {"_p_TriggerSkill", "TriggerSkill *", 0, 0, (void*)&_wrap_class_TriggerSkill, 0};$/;"	v	file:
_swigt__p_TrustAI	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_TrustAI = {"_p_TrustAI", "TrustAI *", 0, 0, (void*)&_wrap_class_TrustAI, 0};$/;"	v	file:
_swigt__p_ViewAsSkill	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_ViewAsSkill = {"_p_ViewAsSkill", "ViewAsSkill *", 0, 0, (void*)&_wrap_class_ViewAsSkill, 0};$/;"	v	file:
_swigt__p_Weapon	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_Weapon = {"_p_Weapon", "Weapon *", 0, 0, (void*)&_wrap_class_Weapon, 0};$/;"	v	file:
_swigt__p_WrappedCard	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_WrappedCard = {"_p_WrappedCard", "WrappedCard *", 0, 0, (void*)&_wrap_class_WrappedCard, 0};$/;"	v	file:
_swigt__p_bool	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_bool = {"_p_bool", "bool *", 0, 0, (void*)0, 0};$/;"	v	file:
_swigt__p_lua_State	swig/sanguosha_wrap.cxx	/^static swig_type_info _swigt__p_lua_State = {"_p_lua_State", "lua_State *", 0, 0, (void*)0, 0};$/;"	v	file:
_translateMovementReason	src/ui/roomscene.cpp	/^QString RoomScene::_translateMovementReason(const CardMoveReason &reason)$/;"	f	class:RoomScene
_updateDeathIcon	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::_updateDeathIcon()$/;"	f	class:PlayerCardContainer
_updateEquips	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::_updateEquips()$/;"	f	class:PlayerCardContainer
_updateFrames	src/ui/dashboard.cpp	/^void Dashboard::_updateFrames()$/;"	f	class:Dashboard
_updateLayout	src/ui/magatamasItem.cpp	/^void MagatamasBoxItem::_updateLayout()$/;"	f	class:MagatamasBoxItem
_updateProgressBar	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::_updateProgressBar()$/;"	f	class:PlayerCardContainer
_virtual	src/server/room.h	/^    bool _virtual;$/;"	m	class:Room
_wrap_AI_activate	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_activate(lua_State* L) {$/;"	f	file:
_wrap_AI_askForAG	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_askForAG(lua_State* L) {$/;"	f	file:
_wrap_AI_askForCard	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_askForCard(lua_State* L) {$/;"	f	file:
_wrap_AI_askForCardChosen	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_askForCardChosen(lua_State* L) {$/;"	f	file:
_wrap_AI_askForCardShow	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_askForCardShow(lua_State* L) {$/;"	f	file:
_wrap_AI_askForChoice	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_askForChoice(lua_State* L) {$/;"	f	file:
_wrap_AI_askForDiscard	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_askForDiscard(lua_State* L) {$/;"	f	file:
_wrap_AI_askForKingdom	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_askForKingdom(lua_State* L) {$/;"	f	file:
_wrap_AI_askForNullification	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_askForNullification(lua_State* L) {$/;"	f	file:
_wrap_AI_askForPindian	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_askForPindian(lua_State* L) {$/;"	f	file:
_wrap_AI_askForPlayerChosen	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_askForPlayerChosen(lua_State* L) {$/;"	f	file:
_wrap_AI_askForSinglePeach	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_askForSinglePeach(lua_State* L) {$/;"	f	file:
_wrap_AI_askForSkillInvoke	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_askForSkillInvoke(lua_State* L) {$/;"	f	file:
_wrap_AI_askForSuit	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_askForSuit(lua_State* L) {$/;"	f	file:
_wrap_AI_askForUseCard	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_askForUseCard(lua_State* L) {$/;"	f	file:
_wrap_AI_getEnemies	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_getEnemies(lua_State* L) {$/;"	f	file:
_wrap_AI_getFriends	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_getFriends(lua_State* L) {$/;"	f	file:
_wrap_AI_isEnemy	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_isEnemy(lua_State* L) {$/;"	f	file:
_wrap_AI_isFriend	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_isFriend(lua_State* L) {$/;"	f	file:
_wrap_AI_relationTo	swig/sanguosha_wrap.cxx	/^static int _wrap_AI_relationTo(lua_State* L) {$/;"	f	file:
_wrap_Armor_getSubtype	swig/sanguosha_wrap.cxx	/^static int _wrap_Armor_getSubtype(lua_State* L) {$/;"	f	file:
_wrap_Armor_label	swig/sanguosha_wrap.cxx	/^static int _wrap_Armor_label(lua_State* L) {$/;"	f	file:
_wrap_Armor_location	swig/sanguosha_wrap.cxx	/^static int _wrap_Armor_location(lua_State* L) {$/;"	f	file:
_wrap_BasicCard_getType	swig/sanguosha_wrap.cxx	/^static int _wrap_BasicCard_getType(lua_State* L) {$/;"	f	file:
_wrap_BasicCard_getTypeId	swig/sanguosha_wrap.cxx	/^static int _wrap_BasicCard_getTypeId(lua_State* L) {$/;"	f	file:
_wrap_CardEffectStruct_card_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardEffectStruct_card_get(lua_State* L) {$/;"	f	file:
_wrap_CardEffectStruct_card_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardEffectStruct_card_set(lua_State* L) {$/;"	f	file:
_wrap_CardEffectStruct_from_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardEffectStruct_from_get(lua_State* L) {$/;"	f	file:
_wrap_CardEffectStruct_from_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardEffectStruct_from_set(lua_State* L) {$/;"	f	file:
_wrap_CardEffectStruct_multiple_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardEffectStruct_multiple_get(lua_State* L) {$/;"	f	file:
_wrap_CardEffectStruct_multiple_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardEffectStruct_multiple_set(lua_State* L) {$/;"	f	file:
_wrap_CardEffectStruct_to_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardEffectStruct_to_get(lua_State* L) {$/;"	f	file:
_wrap_CardEffectStruct_to_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardEffectStruct_to_set(lua_State* L) {$/;"	f	file:
_wrap_CardList_append	swig/sanguosha_wrap.cxx	/^static int _wrap_CardList_append(lua_State* L) {$/;"	f	file:
_wrap_CardList_at	swig/sanguosha_wrap.cxx	/^static int _wrap_CardList_at(lua_State* L) {$/;"	f	file:
_wrap_CardList_contains	swig/sanguosha_wrap.cxx	/^static int _wrap_CardList_contains(lua_State* L) {$/;"	f	file:
_wrap_CardList_first	swig/sanguosha_wrap.cxx	/^static int _wrap_CardList_first(lua_State* L) {$/;"	f	file:
_wrap_CardList_isEmpty	swig/sanguosha_wrap.cxx	/^static int _wrap_CardList_isEmpty(lua_State* L) {$/;"	f	file:
_wrap_CardList_last	swig/sanguosha_wrap.cxx	/^static int _wrap_CardList_last(lua_State* L) {$/;"	f	file:
_wrap_CardList_length	swig/sanguosha_wrap.cxx	/^static int _wrap_CardList_length(lua_State* L) {$/;"	f	file:
_wrap_CardList_prepend	swig/sanguosha_wrap.cxx	/^static int _wrap_CardList_prepend(lua_State* L) {$/;"	f	file:
_wrap_CardList_removeAt	swig/sanguosha_wrap.cxx	/^static int _wrap_CardList_removeAt(lua_State* L) {$/;"	f	file:
_wrap_CardList_removeOne	swig/sanguosha_wrap.cxx	/^static int _wrap_CardList_removeOne(lua_State* L) {$/;"	f	file:
_wrap_CardMoveReason_m_eventName_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardMoveReason_m_eventName_get(lua_State* L) {$/;"	f	file:
_wrap_CardMoveReason_m_eventName_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardMoveReason_m_eventName_set(lua_State* L) {$/;"	f	file:
_wrap_CardMoveReason_m_playerId_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardMoveReason_m_playerId_get(lua_State* L) {$/;"	f	file:
_wrap_CardMoveReason_m_playerId_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardMoveReason_m_playerId_set(lua_State* L) {$/;"	f	file:
_wrap_CardMoveReason_m_reason_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardMoveReason_m_reason_get(lua_State* L) {$/;"	f	file:
_wrap_CardMoveReason_m_reason_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardMoveReason_m_reason_set(lua_State* L) {$/;"	f	file:
_wrap_CardMoveReason_m_skillName_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardMoveReason_m_skillName_get(lua_State* L) {$/;"	f	file:
_wrap_CardMoveReason_m_skillName_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardMoveReason_m_skillName_set(lua_State* L) {$/;"	f	file:
_wrap_CardMoveReason_m_targetId_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardMoveReason_m_targetId_get(lua_State* L) {$/;"	f	file:
_wrap_CardMoveReason_m_targetId_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardMoveReason_m_targetId_set(lua_State* L) {$/;"	f	file:
_wrap_CardUseStruct_card_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardUseStruct_card_get(lua_State* L) {$/;"	f	file:
_wrap_CardUseStruct_card_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardUseStruct_card_set(lua_State* L) {$/;"	f	file:
_wrap_CardUseStruct_from_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardUseStruct_from_get(lua_State* L) {$/;"	f	file:
_wrap_CardUseStruct_from_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardUseStruct_from_set(lua_State* L) {$/;"	f	file:
_wrap_CardUseStruct_isValid	swig/sanguosha_wrap.cxx	/^static int _wrap_CardUseStruct_isValid(lua_State* L) {$/;"	f	file:
_wrap_CardUseStruct_parse	swig/sanguosha_wrap.cxx	/^static int _wrap_CardUseStruct_parse(lua_State* L) {$/;"	f	file:
_wrap_CardUseStruct_to_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardUseStruct_to_get(lua_State* L) {$/;"	f	file:
_wrap_CardUseStruct_to_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardUseStruct_to_set(lua_State* L) {$/;"	f	file:
_wrap_Card_AllSuits_get	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_AllSuits_get(lua_State* L) {$/;"	f	file:
_wrap_Card_Clone	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_Clone(lua_State* L) {$/;"	f	file:
_wrap_Card_CompareByColor	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_CompareByColor(lua_State* L) {$/;"	f	file:
_wrap_Card_CompareBySuitNumber	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_CompareBySuitNumber(lua_State* L) {$/;"	f	file:
_wrap_Card_CompareByType	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_CompareByType(lua_State* L) {$/;"	f	file:
_wrap_Card_IdsToStrings	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_IdsToStrings(lua_State* L) {$/;"	f	file:
_wrap_Card_Number2String	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_Number2String(lua_State* L) {$/;"	f	file:
_wrap_Card_Parse	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_Parse(lua_State* L) {$/;"	f	file:
_wrap_Card_StringsToIds	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_StringsToIds(lua_State* L) {$/;"	f	file:
_wrap_Card_Suit2String	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_Suit2String(lua_State* L) {$/;"	f	file:
_wrap_Card_addSubcard	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_addSubcard(lua_State* L) {$/;"	f	file:
_wrap_Card_addSubcard__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_addSubcard__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Card_addSubcard__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_addSubcard__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Card_addSubcards	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_addSubcards(lua_State* L) {$/;"	f	file:
_wrap_Card_canJilei	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_canJilei(lua_State* L) {$/;"	f	file:
_wrap_Card_clearFlags	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_clearFlags(lua_State* L) {$/;"	f	file:
_wrap_Card_clearSubcards	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_clearSubcards(lua_State* L) {$/;"	f	file:
_wrap_Card_getClassName	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getClassName(lua_State* L) {$/;"	f	file:
_wrap_Card_getDescription	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getDescription(lua_State* L) {$/;"	f	file:
_wrap_Card_getEffectIdString	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getEffectIdString(lua_State* L) {$/;"	f	file:
_wrap_Card_getEffectiveId	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getEffectiveId(lua_State* L) {$/;"	f	file:
_wrap_Card_getFlags	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getFlags(lua_State* L) {$/;"	f	file:
_wrap_Card_getFullName	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getFullName(lua_State* L) {$/;"	f	file:
_wrap_Card_getFullName__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getFullName__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Card_getFullName__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getFullName__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Card_getId	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getId(lua_State* L) {$/;"	f	file:
_wrap_Card_getLogName	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getLogName(lua_State* L) {$/;"	f	file:
_wrap_Card_getName	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getName(lua_State* L) {$/;"	f	file:
_wrap_Card_getNumber	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getNumber(lua_State* L) {$/;"	f	file:
_wrap_Card_getNumberString	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getNumberString(lua_State* L) {$/;"	f	file:
_wrap_Card_getPackage	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getPackage(lua_State* L) {$/;"	f	file:
_wrap_Card_getRealCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getRealCard(lua_State* L) {$/;"	f	file:
_wrap_Card_getSkillName	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getSkillName(lua_State* L) {$/;"	f	file:
_wrap_Card_getSubcards	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getSubcards(lua_State* L) {$/;"	f	file:
_wrap_Card_getSubtype	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getSubtype(lua_State* L) {$/;"	f	file:
_wrap_Card_getSuit	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getSuit(lua_State* L) {$/;"	f	file:
_wrap_Card_getSuitString	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getSuitString(lua_State* L) {$/;"	f	file:
_wrap_Card_getType	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getType(lua_State* L) {$/;"	f	file:
_wrap_Card_getTypeId	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_getTypeId(lua_State* L) {$/;"	f	file:
_wrap_Card_hasFlag	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_hasFlag(lua_State* L) {$/;"	f	file:
_wrap_Card_hasPreAction	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_hasPreAction(lua_State* L) {$/;"	f	file:
_wrap_Card_isAvailable	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_isAvailable(lua_State* L) {$/;"	f	file:
_wrap_Card_isBlack	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_isBlack(lua_State* L) {$/;"	f	file:
_wrap_Card_isCancelable	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_isCancelable(lua_State* L) {$/;"	f	file:
_wrap_Card_isEquipped	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_isEquipped(lua_State* L) {$/;"	f	file:
_wrap_Card_isKindOf	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_isKindOf(lua_State* L) {$/;"	f	file:
_wrap_Card_isModified	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_isModified(lua_State* L) {$/;"	f	file:
_wrap_Card_isMute	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_isMute(lua_State* L) {$/;"	f	file:
_wrap_Card_isNDTrick	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_isNDTrick(lua_State* L) {$/;"	f	file:
_wrap_Card_isOnce	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_isOnce(lua_State* L) {$/;"	f	file:
_wrap_Card_isRed	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_isRed(lua_State* L) {$/;"	f	file:
_wrap_Card_isVirtualCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_isVirtualCard(lua_State* L) {$/;"	f	file:
_wrap_Card_match	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_match(lua_State* L) {$/;"	f	file:
_wrap_Card_onEffect	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_onEffect(lua_State* L) {$/;"	f	file:
_wrap_Card_onUse	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_onUse(lua_State* L) {$/;"	f	file:
_wrap_Card_sameColorWith	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_sameColorWith(lua_State* L) {$/;"	f	file:
_wrap_Card_setFlags	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_setFlags(lua_State* L) {$/;"	f	file:
_wrap_Card_setId	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_setId(lua_State* L) {$/;"	f	file:
_wrap_Card_setNumber	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_setNumber(lua_State* L) {$/;"	f	file:
_wrap_Card_setSkillName	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_setSkillName(lua_State* L) {$/;"	f	file:
_wrap_Card_setSuit	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_setSuit(lua_State* L) {$/;"	f	file:
_wrap_Card_subcardString	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_subcardString(lua_State* L) {$/;"	f	file:
_wrap_Card_subcardsLength	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_subcardsLength(lua_State* L) {$/;"	f	file:
_wrap_Card_targetFilter	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_targetFilter(lua_State* L) {$/;"	f	file:
_wrap_Card_targetFixed	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_targetFixed(lua_State* L) {$/;"	f	file:
_wrap_Card_targetsFeasible	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_targetsFeasible(lua_State* L) {$/;"	f	file:
_wrap_Card_toString	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_toString(lua_State* L) {$/;"	f	file:
_wrap_Card_toWeapon	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_toWeapon(lua_State* L) {$/;"	f	file:
_wrap_Card_toWrapped	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_toWrapped(lua_State* L) {$/;"	f	file:
_wrap_Card_use	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_use(lua_State* L) {$/;"	f	file:
_wrap_Card_validate	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_validate(lua_State* L) {$/;"	f	file:
_wrap_Card_validateInResposing	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_validateInResposing(lua_State* L) {$/;"	f	file:
_wrap_Card_willThrow	swig/sanguosha_wrap.cxx	/^static int _wrap_Card_willThrow(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveList_append	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveList_append(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveList_at	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveList_at(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveList_contains	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveList_contains(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveList_first	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveList_first(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveList_isEmpty	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveList_isEmpty(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveList_last	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveList_last(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveList_length	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveList_length(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveList_prepend	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveList_prepend(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveList_removeAt	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveList_removeAt(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveList_removeOne	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveList_removeOne(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveOneTimeStruct_card_ids_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveOneTimeStruct_card_ids_get(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveOneTimeStruct_card_ids_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveOneTimeStruct_card_ids_set(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveOneTimeStruct_from_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveOneTimeStruct_from_get(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveOneTimeStruct_from_places_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveOneTimeStruct_from_places_get(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveOneTimeStruct_from_places_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveOneTimeStruct_from_places_set(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveOneTimeStruct_from_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveOneTimeStruct_from_set(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveOneTimeStruct_reason_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveOneTimeStruct_reason_get(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveOneTimeStruct_reason_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveOneTimeStruct_reason_set(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveOneTimeStruct_to_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveOneTimeStruct_to_get(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveOneTimeStruct_to_place_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveOneTimeStruct_to_place_get(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveOneTimeStruct_to_place_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveOneTimeStruct_to_place_set(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveOneTimeStruct_to_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveOneTimeStruct_to_set(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveStruct_card_ids_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveStruct_card_ids_get(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveStruct_card_ids_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveStruct_card_ids_set(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveStruct_from_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveStruct_from_get(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveStruct_from_place_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveStruct_from_place_get(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveStruct_from_place_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveStruct_from_place_set(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveStruct_from_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveStruct_from_set(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveStruct_open_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveStruct_open_get(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveStruct_open_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveStruct_open_set(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveStruct_reason_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveStruct_reason_get(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveStruct_reason_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveStruct_reason_set(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveStruct_to_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveStruct_to_get(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveStruct_to_place_get	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveStruct_to_place_get(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveStruct_to_place_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveStruct_to_place_set(lua_State* L) {$/;"	f	file:
_wrap_CardsMoveStruct_to_set	swig/sanguosha_wrap.cxx	/^static int _wrap_CardsMoveStruct_to_set(lua_State* L) {$/;"	f	file:
_wrap_ClientPlayer_addCard	swig/sanguosha_wrap.cxx	/^static int _wrap_ClientPlayer_addCard(lua_State* L) {$/;"	f	file:
_wrap_ClientPlayer_addKnownHandCard	swig/sanguosha_wrap.cxx	/^static int _wrap_ClientPlayer_addKnownHandCard(lua_State* L) {$/;"	f	file:
_wrap_ClientPlayer_aliveCount	swig/sanguosha_wrap.cxx	/^static int _wrap_ClientPlayer_aliveCount(lua_State* L) {$/;"	f	file:
_wrap_ClientPlayer_getHandcardNum	swig/sanguosha_wrap.cxx	/^static int _wrap_ClientPlayer_getHandcardNum(lua_State* L) {$/;"	f	file:
_wrap_ClientPlayer_isLastHandCard	swig/sanguosha_wrap.cxx	/^static int _wrap_ClientPlayer_isLastHandCard(lua_State* L) {$/;"	f	file:
_wrap_ClientPlayer_removeCard	swig/sanguosha_wrap.cxx	/^static int _wrap_ClientPlayer_removeCard(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_card_get	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_card_get(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_card_set	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_card_set(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_chain_get	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_chain_get(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_chain_set	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_chain_set(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_damage_get	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_damage_get(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_damage_set	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_damage_set(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_from_get	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_from_get(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_from_set	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_from_set(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_nature_get	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_nature_get(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_nature_set	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_nature_set(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_to_get	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_to_get(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_to_set	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_to_set(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_transfer_get	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_transfer_get(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_transfer_set	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_transfer_set(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_trigger_chain_get	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_trigger_chain_get(lua_State* L) {$/;"	f	file:
_wrap_DamageStruct_trigger_chain_set	swig/sanguosha_wrap.cxx	/^static int _wrap_DamageStruct_trigger_chain_set(lua_State* L) {$/;"	f	file:
_wrap_DefensiveHorse_getSubtype	swig/sanguosha_wrap.cxx	/^static int _wrap_DefensiveHorse_getSubtype(lua_State* L) {$/;"	f	file:
_wrap_DelayedTrickList_append	swig/sanguosha_wrap.cxx	/^static int _wrap_DelayedTrickList_append(lua_State* L) {$/;"	f	file:
_wrap_DelayedTrickList_at	swig/sanguosha_wrap.cxx	/^static int _wrap_DelayedTrickList_at(lua_State* L) {$/;"	f	file:
_wrap_DelayedTrickList_contains	swig/sanguosha_wrap.cxx	/^static int _wrap_DelayedTrickList_contains(lua_State* L) {$/;"	f	file:
_wrap_DelayedTrickList_first	swig/sanguosha_wrap.cxx	/^static int _wrap_DelayedTrickList_first(lua_State* L) {$/;"	f	file:
_wrap_DelayedTrickList_isEmpty	swig/sanguosha_wrap.cxx	/^static int _wrap_DelayedTrickList_isEmpty(lua_State* L) {$/;"	f	file:
_wrap_DelayedTrickList_last	swig/sanguosha_wrap.cxx	/^static int _wrap_DelayedTrickList_last(lua_State* L) {$/;"	f	file:
_wrap_DelayedTrickList_length	swig/sanguosha_wrap.cxx	/^static int _wrap_DelayedTrickList_length(lua_State* L) {$/;"	f	file:
_wrap_DelayedTrickList_prepend	swig/sanguosha_wrap.cxx	/^static int _wrap_DelayedTrickList_prepend(lua_State* L) {$/;"	f	file:
_wrap_DelayedTrickList_removeAt	swig/sanguosha_wrap.cxx	/^static int _wrap_DelayedTrickList_removeAt(lua_State* L) {$/;"	f	file:
_wrap_DelayedTrickList_removeOne	swig/sanguosha_wrap.cxx	/^static int _wrap_DelayedTrickList_removeOne(lua_State* L) {$/;"	f	file:
_wrap_DistanceSkill_getCorrect	swig/sanguosha_wrap.cxx	/^static int _wrap_DistanceSkill_getCorrect(lua_State* L) {$/;"	f	file:
_wrap_DyingStruct_damage_get	swig/sanguosha_wrap.cxx	/^static int _wrap_DyingStruct_damage_get(lua_State* L) {$/;"	f	file:
_wrap_DyingStruct_damage_set	swig/sanguosha_wrap.cxx	/^static int _wrap_DyingStruct_damage_set(lua_State* L) {$/;"	f	file:
_wrap_DyingStruct_who_get	swig/sanguosha_wrap.cxx	/^static int _wrap_DyingStruct_who_get(lua_State* L) {$/;"	f	file:
_wrap_DyingStruct_who_set	swig/sanguosha_wrap.cxx	/^static int _wrap_DyingStruct_who_set(lua_State* L) {$/;"	f	file:
_wrap_Engine_addBanPackage	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_addBanPackage(lua_State* L) {$/;"	f	file:
_wrap_Engine_addPackage	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_addPackage(lua_State* L) {$/;"	f	file:
_wrap_Engine_addScenario	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_addScenario(lua_State* L) {$/;"	f	file:
_wrap_Engine_addSkills	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_addSkills(lua_State* L) {$/;"	f	file:
_wrap_Engine_addTranslationEntry	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_addTranslationEntry(lua_State* L) {$/;"	f	file:
_wrap_Engine_cloneCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_cloneCard(lua_State* L) {$/;"	f	file:
_wrap_Engine_cloneCard__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_cloneCard__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Engine_cloneCard__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_cloneCard__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Engine_cloneCard__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_cloneCard__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_Engine_cloneSkillCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_cloneSkillCard(lua_State* L) {$/;"	f	file:
_wrap_Engine_correctDistance	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_correctDistance(lua_State* L) {$/;"	f	file:
_wrap_Engine_currentRoom	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_currentRoom(lua_State* L) {$/;"	f	file:
_wrap_Engine_getAvailableModes	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getAvailableModes(lua_State* L) {$/;"	f	file:
_wrap_Engine_getBanPackages	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getBanPackages(lua_State* L) {$/;"	f	file:
_wrap_Engine_getCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getCard(lua_State* L) {$/;"	f	file:
_wrap_Engine_getCardCount	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getCardCount(lua_State* L) {$/;"	f	file:
_wrap_Engine_getDistanceSkills	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getDistanceSkills(lua_State* L) {$/;"	f	file:
_wrap_Engine_getExtensions	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getExtensions(lua_State* L) {$/;"	f	file:
_wrap_Engine_getGeneral	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getGeneral(lua_State* L) {$/;"	f	file:
_wrap_Engine_getGeneralCount	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getGeneralCount(lua_State* L) {$/;"	f	file:
_wrap_Engine_getGeneralCount__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getGeneralCount__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Engine_getGeneralCount__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getGeneralCount__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Engine_getKingdomColor	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getKingdomColor(lua_State* L) {$/;"	f	file:
_wrap_Engine_getKingdoms	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getKingdoms(lua_State* L) {$/;"	f	file:
_wrap_Engine_getLimitedGeneralNames	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getLimitedGeneralNames(lua_State* L) {$/;"	f	file:
_wrap_Engine_getLords	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getLords(lua_State* L) {$/;"	f	file:
_wrap_Engine_getModeName	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getModeName(lua_State* L) {$/;"	f	file:
_wrap_Engine_getPattern	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getPattern(lua_State* L) {$/;"	f	file:
_wrap_Engine_getPlayerCount	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getPlayerCount(lua_State* L) {$/;"	f	file:
_wrap_Engine_getRandomCards	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getRandomCards(lua_State* L) {$/;"	f	file:
_wrap_Engine_getRandomGeneralName	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getRandomGeneralName(lua_State* L) {$/;"	f	file:
_wrap_Engine_getRandomGenerals	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getRandomGenerals(lua_State* L) {$/;"	f	file:
_wrap_Engine_getRandomGenerals__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getRandomGenerals__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Engine_getRandomGenerals__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getRandomGenerals__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Engine_getRandomLords	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getRandomLords(lua_State* L) {$/;"	f	file:
_wrap_Engine_getRelatedSkills	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getRelatedSkills(lua_State* L) {$/;"	f	file:
_wrap_Engine_getRoleIndex	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getRoleIndex(lua_State* L) {$/;"	f	file:
_wrap_Engine_getRoleList	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getRoleList(lua_State* L) {$/;"	f	file:
_wrap_Engine_getRoles	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getRoles(lua_State* L) {$/;"	f	file:
_wrap_Engine_getScenario	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getScenario(lua_State* L) {$/;"	f	file:
_wrap_Engine_getScenarioNames	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getScenarioNames(lua_State* L) {$/;"	f	file:
_wrap_Engine_getSetupString	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getSetupString(lua_State* L) {$/;"	f	file:
_wrap_Engine_getSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getSkill(lua_State* L) {$/;"	f	file:
_wrap_Engine_getTriggerSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getTriggerSkill(lua_State* L) {$/;"	f	file:
_wrap_Engine_getVersion	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getVersion(lua_State* L) {$/;"	f	file:
_wrap_Engine_getVersionName	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getVersionName(lua_State* L) {$/;"	f	file:
_wrap_Engine_getViewAsSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getViewAsSkill(lua_State* L) {$/;"	f	file:
_wrap_Engine_getWrappedCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_getWrappedCard(lua_State* L) {$/;"	f	file:
_wrap_Engine_isProhibited	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_isProhibited(lua_State* L) {$/;"	f	file:
_wrap_Engine_playAudioEffect	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_playAudioEffect(lua_State* L) {$/;"	f	file:
_wrap_Engine_translate	swig/sanguosha_wrap.cxx	/^static int _wrap_Engine_translate(lua_State* L) {$/;"	f	file:
_wrap_EquipCard_getSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_EquipCard_getSkill(lua_State* L) {$/;"	f	file:
_wrap_EquipCard_getType	swig/sanguosha_wrap.cxx	/^static int _wrap_EquipCard_getType(lua_State* L) {$/;"	f	file:
_wrap_EquipCard_getTypeId	swig/sanguosha_wrap.cxx	/^static int _wrap_EquipCard_getTypeId(lua_State* L) {$/;"	f	file:
_wrap_EquipCard_label	swig/sanguosha_wrap.cxx	/^static int _wrap_EquipCard_label(lua_State* L) {$/;"	f	file:
_wrap_EquipCard_location	swig/sanguosha_wrap.cxx	/^static int _wrap_EquipCard_location(lua_State* L) {$/;"	f	file:
_wrap_EquipCard_onInstall	swig/sanguosha_wrap.cxx	/^static int _wrap_EquipCard_onInstall(lua_State* L) {$/;"	f	file:
_wrap_EquipCard_onUninstall	swig/sanguosha_wrap.cxx	/^static int _wrap_EquipCard_onUninstall(lua_State* L) {$/;"	f	file:
_wrap_EquipCard_use	swig/sanguosha_wrap.cxx	/^static int _wrap_EquipCard_use(lua_State* L) {$/;"	f	file:
_wrap_GameStartSkill_onGameStart	swig/sanguosha_wrap.cxx	/^static int _wrap_GameStartSkill_onGameStart(lua_State* L) {$/;"	f	file:
_wrap_GameStartSkill_trigger	swig/sanguosha_wrap.cxx	/^static int _wrap_GameStartSkill_trigger(lua_State* L) {$/;"	f	file:
_wrap_General_addSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_General_addSkill(lua_State* L) {$/;"	f	file:
_wrap_General_addSkill__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_General_addSkill__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_General_addSkill__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_General_addSkill__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_General_getGender	swig/sanguosha_wrap.cxx	/^static int _wrap_General_getGender(lua_State* L) {$/;"	f	file:
_wrap_General_getKingdom	swig/sanguosha_wrap.cxx	/^static int _wrap_General_getKingdom(lua_State* L) {$/;"	f	file:
_wrap_General_getMaxHp	swig/sanguosha_wrap.cxx	/^static int _wrap_General_getMaxHp(lua_State* L) {$/;"	f	file:
_wrap_General_getPackage	swig/sanguosha_wrap.cxx	/^static int _wrap_General_getPackage(lua_State* L) {$/;"	f	file:
_wrap_General_getSkillDescription	swig/sanguosha_wrap.cxx	/^static int _wrap_General_getSkillDescription(lua_State* L) {$/;"	f	file:
_wrap_General_getSkillList	swig/sanguosha_wrap.cxx	/^static int _wrap_General_getSkillList(lua_State* L) {$/;"	f	file:
_wrap_General_getTriggerSkills	swig/sanguosha_wrap.cxx	/^static int _wrap_General_getTriggerSkills(lua_State* L) {$/;"	f	file:
_wrap_General_getVisibleSkillList	swig/sanguosha_wrap.cxx	/^static int _wrap_General_getVisibleSkillList(lua_State* L) {$/;"	f	file:
_wrap_General_getVisibleSkills	swig/sanguosha_wrap.cxx	/^static int _wrap_General_getVisibleSkills(lua_State* L) {$/;"	f	file:
_wrap_General_hasSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_General_hasSkill(lua_State* L) {$/;"	f	file:
_wrap_General_isFemale	swig/sanguosha_wrap.cxx	/^static int _wrap_General_isFemale(lua_State* L) {$/;"	f	file:
_wrap_General_isHidden	swig/sanguosha_wrap.cxx	/^static int _wrap_General_isHidden(lua_State* L) {$/;"	f	file:
_wrap_General_isLord	swig/sanguosha_wrap.cxx	/^static int _wrap_General_isLord(lua_State* L) {$/;"	f	file:
_wrap_General_isMale	swig/sanguosha_wrap.cxx	/^static int _wrap_General_isMale(lua_State* L) {$/;"	f	file:
_wrap_General_isNeuter	swig/sanguosha_wrap.cxx	/^static int _wrap_General_isNeuter(lua_State* L) {$/;"	f	file:
_wrap_General_isTotallyHidden	swig/sanguosha_wrap.cxx	/^static int _wrap_General_isTotallyHidden(lua_State* L) {$/;"	f	file:
_wrap_General_lastWord	swig/sanguosha_wrap.cxx	/^static int _wrap_General_lastWord(lua_State* L) {$/;"	f	file:
_wrap_General_setGender	swig/sanguosha_wrap.cxx	/^static int _wrap_General_setGender(lua_State* L) {$/;"	f	file:
_wrap_Horse_label	swig/sanguosha_wrap.cxx	/^static int _wrap_Horse_label(lua_State* L) {$/;"	f	file:
_wrap_Horse_location	swig/sanguosha_wrap.cxx	/^static int _wrap_Horse_location(lua_State* L) {$/;"	f	file:
_wrap_Horse_onInstall	swig/sanguosha_wrap.cxx	/^static int _wrap_Horse_onInstall(lua_State* L) {$/;"	f	file:
_wrap_Horse_onUninstall	swig/sanguosha_wrap.cxx	/^static int _wrap_Horse_onUninstall(lua_State* L) {$/;"	f	file:
_wrap_IntList_append	swig/sanguosha_wrap.cxx	/^static int _wrap_IntList_append(lua_State* L) {$/;"	f	file:
_wrap_IntList_at	swig/sanguosha_wrap.cxx	/^static int _wrap_IntList_at(lua_State* L) {$/;"	f	file:
_wrap_IntList_contains	swig/sanguosha_wrap.cxx	/^static int _wrap_IntList_contains(lua_State* L) {$/;"	f	file:
_wrap_IntList_first	swig/sanguosha_wrap.cxx	/^static int _wrap_IntList_first(lua_State* L) {$/;"	f	file:
_wrap_IntList_isEmpty	swig/sanguosha_wrap.cxx	/^static int _wrap_IntList_isEmpty(lua_State* L) {$/;"	f	file:
_wrap_IntList_last	swig/sanguosha_wrap.cxx	/^static int _wrap_IntList_last(lua_State* L) {$/;"	f	file:
_wrap_IntList_length	swig/sanguosha_wrap.cxx	/^static int _wrap_IntList_length(lua_State* L) {$/;"	f	file:
_wrap_IntList_prepend	swig/sanguosha_wrap.cxx	/^static int _wrap_IntList_prepend(lua_State* L) {$/;"	f	file:
_wrap_IntList_removeAt	swig/sanguosha_wrap.cxx	/^static int _wrap_IntList_removeAt(lua_State* L) {$/;"	f	file:
_wrap_IntList_removeOne	swig/sanguosha_wrap.cxx	/^static int _wrap_IntList_removeOne(lua_State* L) {$/;"	f	file:
_wrap_ItemList_append	swig/sanguosha_wrap.cxx	/^static int _wrap_ItemList_append(lua_State* L) {$/;"	f	file:
_wrap_ItemList_at	swig/sanguosha_wrap.cxx	/^static int _wrap_ItemList_at(lua_State* L) {$/;"	f	file:
_wrap_ItemList_contains	swig/sanguosha_wrap.cxx	/^static int _wrap_ItemList_contains(lua_State* L) {$/;"	f	file:
_wrap_ItemList_first	swig/sanguosha_wrap.cxx	/^static int _wrap_ItemList_first(lua_State* L) {$/;"	f	file:
_wrap_ItemList_isEmpty	swig/sanguosha_wrap.cxx	/^static int _wrap_ItemList_isEmpty(lua_State* L) {$/;"	f	file:
_wrap_ItemList_last	swig/sanguosha_wrap.cxx	/^static int _wrap_ItemList_last(lua_State* L) {$/;"	f	file:
_wrap_ItemList_length	swig/sanguosha_wrap.cxx	/^static int _wrap_ItemList_length(lua_State* L) {$/;"	f	file:
_wrap_ItemList_prepend	swig/sanguosha_wrap.cxx	/^static int _wrap_ItemList_prepend(lua_State* L) {$/;"	f	file:
_wrap_ItemList_removeAt	swig/sanguosha_wrap.cxx	/^static int _wrap_ItemList_removeAt(lua_State* L) {$/;"	f	file:
_wrap_ItemList_removeOne	swig/sanguosha_wrap.cxx	/^static int _wrap_ItemList_removeOne(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_card_get	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_card_get(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_card_set	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_card_set(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_good_get	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_good_get(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_good_set	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_good_set(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_isBad	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_isBad(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_isEffected	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_isEffected(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_isGood	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_isGood(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_isGood__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_isGood__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_isGood__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_isGood__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_negative_get	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_negative_get(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_negative_set	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_negative_set(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_pattern_get	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_pattern_get(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_pattern_set	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_pattern_set(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_play_animation_get	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_play_animation_get(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_play_animation_set	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_play_animation_set(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_reason_get	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_reason_get(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_reason_set	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_reason_set(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_time_consuming_get	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_time_consuming_get(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_time_consuming_set	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_time_consuming_set(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_who_get	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_who_get(lua_State* L) {$/;"	f	file:
_wrap_JudgeStruct_who_set	swig/sanguosha_wrap.cxx	/^static int _wrap_JudgeStruct_who_set(lua_State* L) {$/;"	f	file:
_wrap_LogMessage_arg2_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LogMessage_arg2_get(lua_State* L) {$/;"	f	file:
_wrap_LogMessage_arg2_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LogMessage_arg2_set(lua_State* L) {$/;"	f	file:
_wrap_LogMessage_arg_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LogMessage_arg_get(lua_State* L) {$/;"	f	file:
_wrap_LogMessage_arg_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LogMessage_arg_set(lua_State* L) {$/;"	f	file:
_wrap_LogMessage_card_str_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LogMessage_card_str_get(lua_State* L) {$/;"	f	file:
_wrap_LogMessage_card_str_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LogMessage_card_str_set(lua_State* L) {$/;"	f	file:
_wrap_LogMessage_from_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LogMessage_from_get(lua_State* L) {$/;"	f	file:
_wrap_LogMessage_from_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LogMessage_from_set(lua_State* L) {$/;"	f	file:
_wrap_LogMessage_toString	swig/sanguosha_wrap.cxx	/^static int _wrap_LogMessage_toString(lua_State* L) {$/;"	f	file:
_wrap_LogMessage_to_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LogMessage_to_get(lua_State* L) {$/;"	f	file:
_wrap_LogMessage_to_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LogMessage_to_set(lua_State* L) {$/;"	f	file:
_wrap_LogMessage_type_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LogMessage_type_get(lua_State* L) {$/;"	f	file:
_wrap_LogMessage_type_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LogMessage_type_set(lua_State* L) {$/;"	f	file:
_wrap_LuaAI_activate	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaAI_activate(lua_State* L) {$/;"	f	file:
_wrap_LuaAI_askForAG	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaAI_askForAG(lua_State* L) {$/;"	f	file:
_wrap_LuaAI_askForCard	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaAI_askForCard(lua_State* L) {$/;"	f	file:
_wrap_LuaAI_askForCardChosen	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaAI_askForCardChosen(lua_State* L) {$/;"	f	file:
_wrap_LuaAI_askForCardShow	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaAI_askForCardShow(lua_State* L) {$/;"	f	file:
_wrap_LuaAI_askForChoice	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaAI_askForChoice(lua_State* L) {$/;"	f	file:
_wrap_LuaAI_askForDiscard	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaAI_askForDiscard(lua_State* L) {$/;"	f	file:
_wrap_LuaAI_askForPindian	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaAI_askForPindian(lua_State* L) {$/;"	f	file:
_wrap_LuaAI_askForPlayerChosen	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaAI_askForPlayerChosen(lua_State* L) {$/;"	f	file:
_wrap_LuaAI_askForSinglePeach	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaAI_askForSinglePeach(lua_State* L) {$/;"	f	file:
_wrap_LuaAI_askForSkillInvoke	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaAI_askForSkillInvoke(lua_State* L) {$/;"	f	file:
_wrap_LuaAI_askForSuit	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaAI_askForSuit(lua_State* L) {$/;"	f	file:
_wrap_LuaAI_callback_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaAI_callback_get(lua_State* L) {$/;"	f	file:
_wrap_LuaAI_callback_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaAI_callback_set(lua_State* L) {$/;"	f	file:
_wrap_LuaDistanceSkill_correct_func_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaDistanceSkill_correct_func_get(lua_State* L) {$/;"	f	file:
_wrap_LuaDistanceSkill_correct_func_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaDistanceSkill_correct_func_set(lua_State* L) {$/;"	f	file:
_wrap_LuaDistanceSkill_getCorrect	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaDistanceSkill_getCorrect(lua_State* L) {$/;"	f	file:
_wrap_LuaFilterSkill_viewAs	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaFilterSkill_viewAs(lua_State* L) {$/;"	f	file:
_wrap_LuaFilterSkill_viewFilter	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaFilterSkill_viewFilter(lua_State* L) {$/;"	f	file:
_wrap_LuaFilterSkill_view_as_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaFilterSkill_view_as_get(lua_State* L) {$/;"	f	file:
_wrap_LuaFilterSkill_view_as_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaFilterSkill_view_as_set(lua_State* L) {$/;"	f	file:
_wrap_LuaFilterSkill_view_filter_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaFilterSkill_view_filter_get(lua_State* L) {$/;"	f	file:
_wrap_LuaFilterSkill_view_filter_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaFilterSkill_view_filter_set(lua_State* L) {$/;"	f	file:
_wrap_LuaMaxCardsSkill_extra_func_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaMaxCardsSkill_extra_func_get(lua_State* L) {$/;"	f	file:
_wrap_LuaMaxCardsSkill_extra_func_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaMaxCardsSkill_extra_func_set(lua_State* L) {$/;"	f	file:
_wrap_LuaMaxCardsSkill_getExtra	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaMaxCardsSkill_getExtra(lua_State* L) {$/;"	f	file:
_wrap_LuaProhibitSkill_isProhibited	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaProhibitSkill_isProhibited(lua_State* L) {$/;"	f	file:
_wrap_LuaProhibitSkill_is_prohibited_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaProhibitSkill_is_prohibited_get(lua_State* L) {$/;"	f	file:
_wrap_LuaProhibitSkill_is_prohibited_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaProhibitSkill_is_prohibited_set(lua_State* L) {$/;"	f	file:
_wrap_LuaSkillCard_clone	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaSkillCard_clone(lua_State* L) {$/;"	f	file:
_wrap_LuaSkillCard_feasible_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaSkillCard_feasible_get(lua_State* L) {$/;"	f	file:
_wrap_LuaSkillCard_feasible_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaSkillCard_feasible_set(lua_State* L) {$/;"	f	file:
_wrap_LuaSkillCard_filter_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaSkillCard_filter_get(lua_State* L) {$/;"	f	file:
_wrap_LuaSkillCard_filter_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaSkillCard_filter_set(lua_State* L) {$/;"	f	file:
_wrap_LuaSkillCard_on_effect_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaSkillCard_on_effect_get(lua_State* L) {$/;"	f	file:
_wrap_LuaSkillCard_on_effect_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaSkillCard_on_effect_set(lua_State* L) {$/;"	f	file:
_wrap_LuaSkillCard_on_use_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaSkillCard_on_use_get(lua_State* L) {$/;"	f	file:
_wrap_LuaSkillCard_on_use_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaSkillCard_on_use_set(lua_State* L) {$/;"	f	file:
_wrap_LuaSkillCard_setTargetFixed	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaSkillCard_setTargetFixed(lua_State* L) {$/;"	f	file:
_wrap_LuaSkillCard_setWillThrow	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaSkillCard_setWillThrow(lua_State* L) {$/;"	f	file:
_wrap_LuaTriggerSkill_addEvent	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaTriggerSkill_addEvent(lua_State* L) {$/;"	f	file:
_wrap_LuaTriggerSkill_can_trigger_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaTriggerSkill_can_trigger_get(lua_State* L) {$/;"	f	file:
_wrap_LuaTriggerSkill_can_trigger_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaTriggerSkill_can_trigger_set(lua_State* L) {$/;"	f	file:
_wrap_LuaTriggerSkill_on_trigger_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaTriggerSkill_on_trigger_get(lua_State* L) {$/;"	f	file:
_wrap_LuaTriggerSkill_on_trigger_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaTriggerSkill_on_trigger_set(lua_State* L) {$/;"	f	file:
_wrap_LuaTriggerSkill_priority_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaTriggerSkill_priority_get(lua_State* L) {$/;"	f	file:
_wrap_LuaTriggerSkill_priority_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaTriggerSkill_priority_set(lua_State* L) {$/;"	f	file:
_wrap_LuaTriggerSkill_setViewAsSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaTriggerSkill_setViewAsSkill(lua_State* L) {$/;"	f	file:
_wrap_LuaTriggerSkill_trigger	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaTriggerSkill_trigger(lua_State* L) {$/;"	f	file:
_wrap_LuaTriggerSkill_triggerable	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaTriggerSkill_triggerable(lua_State* L) {$/;"	f	file:
_wrap_LuaViewAsSkill_enabled_at_nullification_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaViewAsSkill_enabled_at_nullification_get(lua_State* L) {$/;"	f	file:
_wrap_LuaViewAsSkill_enabled_at_nullification_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaViewAsSkill_enabled_at_nullification_set(lua_State* L) {$/;"	f	file:
_wrap_LuaViewAsSkill_enabled_at_play_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaViewAsSkill_enabled_at_play_get(lua_State* L) {$/;"	f	file:
_wrap_LuaViewAsSkill_enabled_at_play_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaViewAsSkill_enabled_at_play_set(lua_State* L) {$/;"	f	file:
_wrap_LuaViewAsSkill_enabled_at_response_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaViewAsSkill_enabled_at_response_get(lua_State* L) {$/;"	f	file:
_wrap_LuaViewAsSkill_enabled_at_response_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaViewAsSkill_enabled_at_response_set(lua_State* L) {$/;"	f	file:
_wrap_LuaViewAsSkill_viewAs	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaViewAsSkill_viewAs(lua_State* L) {$/;"	f	file:
_wrap_LuaViewAsSkill_viewFilter	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaViewAsSkill_viewFilter(lua_State* L) {$/;"	f	file:
_wrap_LuaViewAsSkill_view_as_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaViewAsSkill_view_as_get(lua_State* L) {$/;"	f	file:
_wrap_LuaViewAsSkill_view_as_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaViewAsSkill_view_as_set(lua_State* L) {$/;"	f	file:
_wrap_LuaViewAsSkill_view_filter_get	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaViewAsSkill_view_filter_get(lua_State* L) {$/;"	f	file:
_wrap_LuaViewAsSkill_view_filter_set	swig/sanguosha_wrap.cxx	/^static int _wrap_LuaViewAsSkill_view_filter_set(lua_State* L) {$/;"	f	file:
_wrap_MaxCardsSkill_getExtra	swig/sanguosha_wrap.cxx	/^static int _wrap_MaxCardsSkill_getExtra(lua_State* L) {$/;"	f	file:
_wrap_OffensiveHorse_getSubtype	swig/sanguosha_wrap.cxx	/^static int _wrap_OffensiveHorse_getSubtype(lua_State* L) {$/;"	f	file:
_wrap_OneCardViewAsSkill_viewAs	swig/sanguosha_wrap.cxx	/^static int _wrap_OneCardViewAsSkill_viewAs(lua_State* L) {$/;"	f	file:
_wrap_OneCardViewAsSkill_viewAs__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_OneCardViewAsSkill_viewAs__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_OneCardViewAsSkill_viewAs__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_OneCardViewAsSkill_viewAs__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_OneCardViewAsSkill_viewFilter	swig/sanguosha_wrap.cxx	/^static int _wrap_OneCardViewAsSkill_viewFilter(lua_State* L) {$/;"	f	file:
_wrap_OneCardViewAsSkill_viewFilter__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_OneCardViewAsSkill_viewFilter__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_OneCardViewAsSkill_viewFilter__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_OneCardViewAsSkill_viewFilter__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_PhaseChangeStruct_from_get	swig/sanguosha_wrap.cxx	/^static int _wrap_PhaseChangeStruct_from_get(lua_State* L) {$/;"	f	file:
_wrap_PhaseChangeStruct_from_set	swig/sanguosha_wrap.cxx	/^static int _wrap_PhaseChangeStruct_from_set(lua_State* L) {$/;"	f	file:
_wrap_PhaseChangeStruct_to_get	swig/sanguosha_wrap.cxx	/^static int _wrap_PhaseChangeStruct_to_get(lua_State* L) {$/;"	f	file:
_wrap_PhaseChangeStruct_to_set	swig/sanguosha_wrap.cxx	/^static int _wrap_PhaseChangeStruct_to_set(lua_State* L) {$/;"	f	file:
_wrap_PhaseList_append	swig/sanguosha_wrap.cxx	/^static int _wrap_PhaseList_append(lua_State* L) {$/;"	f	file:
_wrap_PhaseList_at	swig/sanguosha_wrap.cxx	/^static int _wrap_PhaseList_at(lua_State* L) {$/;"	f	file:
_wrap_PhaseList_contains	swig/sanguosha_wrap.cxx	/^static int _wrap_PhaseList_contains(lua_State* L) {$/;"	f	file:
_wrap_PhaseList_first	swig/sanguosha_wrap.cxx	/^static int _wrap_PhaseList_first(lua_State* L) {$/;"	f	file:
_wrap_PhaseList_isEmpty	swig/sanguosha_wrap.cxx	/^static int _wrap_PhaseList_isEmpty(lua_State* L) {$/;"	f	file:
_wrap_PhaseList_last	swig/sanguosha_wrap.cxx	/^static int _wrap_PhaseList_last(lua_State* L) {$/;"	f	file:
_wrap_PhaseList_length	swig/sanguosha_wrap.cxx	/^static int _wrap_PhaseList_length(lua_State* L) {$/;"	f	file:
_wrap_PhaseList_prepend	swig/sanguosha_wrap.cxx	/^static int _wrap_PhaseList_prepend(lua_State* L) {$/;"	f	file:
_wrap_PhaseList_removeAt	swig/sanguosha_wrap.cxx	/^static int _wrap_PhaseList_removeAt(lua_State* L) {$/;"	f	file:
_wrap_PhaseList_removeOne	swig/sanguosha_wrap.cxx	/^static int _wrap_PhaseList_removeOne(lua_State* L) {$/;"	f	file:
_wrap_PindianStruct_from_card_get	swig/sanguosha_wrap.cxx	/^static int _wrap_PindianStruct_from_card_get(lua_State* L) {$/;"	f	file:
_wrap_PindianStruct_from_card_set	swig/sanguosha_wrap.cxx	/^static int _wrap_PindianStruct_from_card_set(lua_State* L) {$/;"	f	file:
_wrap_PindianStruct_from_get	swig/sanguosha_wrap.cxx	/^static int _wrap_PindianStruct_from_get(lua_State* L) {$/;"	f	file:
_wrap_PindianStruct_from_set	swig/sanguosha_wrap.cxx	/^static int _wrap_PindianStruct_from_set(lua_State* L) {$/;"	f	file:
_wrap_PindianStruct_reason_get	swig/sanguosha_wrap.cxx	/^static int _wrap_PindianStruct_reason_get(lua_State* L) {$/;"	f	file:
_wrap_PindianStruct_reason_set	swig/sanguosha_wrap.cxx	/^static int _wrap_PindianStruct_reason_set(lua_State* L) {$/;"	f	file:
_wrap_PindianStruct_to_card_get	swig/sanguosha_wrap.cxx	/^static int _wrap_PindianStruct_to_card_get(lua_State* L) {$/;"	f	file:
_wrap_PindianStruct_to_card_set	swig/sanguosha_wrap.cxx	/^static int _wrap_PindianStruct_to_card_set(lua_State* L) {$/;"	f	file:
_wrap_PindianStruct_to_get	swig/sanguosha_wrap.cxx	/^static int _wrap_PindianStruct_to_get(lua_State* L) {$/;"	f	file:
_wrap_PindianStruct_to_set	swig/sanguosha_wrap.cxx	/^static int _wrap_PindianStruct_to_set(lua_State* L) {$/;"	f	file:
_wrap_PlaceList_append	swig/sanguosha_wrap.cxx	/^static int _wrap_PlaceList_append(lua_State* L) {$/;"	f	file:
_wrap_PlaceList_at	swig/sanguosha_wrap.cxx	/^static int _wrap_PlaceList_at(lua_State* L) {$/;"	f	file:
_wrap_PlaceList_contains	swig/sanguosha_wrap.cxx	/^static int _wrap_PlaceList_contains(lua_State* L) {$/;"	f	file:
_wrap_PlaceList_first	swig/sanguosha_wrap.cxx	/^static int _wrap_PlaceList_first(lua_State* L) {$/;"	f	file:
_wrap_PlaceList_isEmpty	swig/sanguosha_wrap.cxx	/^static int _wrap_PlaceList_isEmpty(lua_State* L) {$/;"	f	file:
_wrap_PlaceList_last	swig/sanguosha_wrap.cxx	/^static int _wrap_PlaceList_last(lua_State* L) {$/;"	f	file:
_wrap_PlaceList_length	swig/sanguosha_wrap.cxx	/^static int _wrap_PlaceList_length(lua_State* L) {$/;"	f	file:
_wrap_PlaceList_prepend	swig/sanguosha_wrap.cxx	/^static int _wrap_PlaceList_prepend(lua_State* L) {$/;"	f	file:
_wrap_PlaceList_removeAt	swig/sanguosha_wrap.cxx	/^static int _wrap_PlaceList_removeAt(lua_State* L) {$/;"	f	file:
_wrap_PlaceList_removeOne	swig/sanguosha_wrap.cxx	/^static int _wrap_PlaceList_removeOne(lua_State* L) {$/;"	f	file:
_wrap_PlayerList_append	swig/sanguosha_wrap.cxx	/^static int _wrap_PlayerList_append(lua_State* L) {$/;"	f	file:
_wrap_PlayerList_at	swig/sanguosha_wrap.cxx	/^static int _wrap_PlayerList_at(lua_State* L) {$/;"	f	file:
_wrap_PlayerList_contains	swig/sanguosha_wrap.cxx	/^static int _wrap_PlayerList_contains(lua_State* L) {$/;"	f	file:
_wrap_PlayerList_first	swig/sanguosha_wrap.cxx	/^static int _wrap_PlayerList_first(lua_State* L) {$/;"	f	file:
_wrap_PlayerList_isEmpty	swig/sanguosha_wrap.cxx	/^static int _wrap_PlayerList_isEmpty(lua_State* L) {$/;"	f	file:
_wrap_PlayerList_last	swig/sanguosha_wrap.cxx	/^static int _wrap_PlayerList_last(lua_State* L) {$/;"	f	file:
_wrap_PlayerList_length	swig/sanguosha_wrap.cxx	/^static int _wrap_PlayerList_length(lua_State* L) {$/;"	f	file:
_wrap_PlayerList_prepend	swig/sanguosha_wrap.cxx	/^static int _wrap_PlayerList_prepend(lua_State* L) {$/;"	f	file:
_wrap_PlayerList_removeAt	swig/sanguosha_wrap.cxx	/^static int _wrap_PlayerList_removeAt(lua_State* L) {$/;"	f	file:
_wrap_PlayerList_removeOne	swig/sanguosha_wrap.cxx	/^static int _wrap_PlayerList_removeOne(lua_State* L) {$/;"	f	file:
_wrap_Player_acquireSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_acquireSkill(lua_State* L) {$/;"	f	file:
_wrap_Player_addCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_addCard(lua_State* L) {$/;"	f	file:
_wrap_Player_addDelayedTrick	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_addDelayedTrick(lua_State* L) {$/;"	f	file:
_wrap_Player_addHistory	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_addHistory(lua_State* L) {$/;"	f	file:
_wrap_Player_addHistory__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_addHistory__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Player_addHistory__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_addHistory__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Player_addMark	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_addMark(lua_State* L) {$/;"	f	file:
_wrap_Player_addSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_addSkill(lua_State* L) {$/;"	f	file:
_wrap_Player_aliveCount	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_aliveCount(lua_State* L) {$/;"	f	file:
_wrap_Player_canSlash	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_canSlash(lua_State* L) {$/;"	f	file:
_wrap_Player_canSlashWithoutCrossbow	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_canSlashWithoutCrossbow(lua_State* L) {$/;"	f	file:
_wrap_Player_canSlash__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_canSlash__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Player_canSlash__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_canSlash__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Player_canSlash__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_canSlash__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_Player_clearFlags	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_clearFlags(lua_State* L) {$/;"	f	file:
_wrap_Player_clearHistory	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_clearHistory(lua_State* L) {$/;"	f	file:
_wrap_Player_containsTrick	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_containsTrick(lua_State* L) {$/;"	f	file:
_wrap_Player_copyFrom	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_copyFrom(lua_State* L) {$/;"	f	file:
_wrap_Player_detachAllSkills	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_detachAllSkills(lua_State* L) {$/;"	f	file:
_wrap_Player_detachSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_detachSkill(lua_State* L) {$/;"	f	file:
_wrap_Player_distanceTo	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_distanceTo(lua_State* L) {$/;"	f	file:
_wrap_Player_distanceTo__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_distanceTo__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Player_distanceTo__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_distanceTo__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Player_faceUp	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_faceUp(lua_State* L) {$/;"	f	file:
_wrap_Player_getAcquiredSkills	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getAcquiredSkills(lua_State* L) {$/;"	f	file:
_wrap_Player_getArmor	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getArmor(lua_State* L) {$/;"	f	file:
_wrap_Player_getAttackRange	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getAttackRange(lua_State* L) {$/;"	f	file:
_wrap_Player_getAvatarGeneral	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getAvatarGeneral(lua_State* L) {$/;"	f	file:
_wrap_Player_getCardCount	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getCardCount(lua_State* L) {$/;"	f	file:
_wrap_Player_getDefensiveHorse	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getDefensiveHorse(lua_State* L) {$/;"	f	file:
_wrap_Player_getEquip	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getEquip(lua_State* L) {$/;"	f	file:
_wrap_Player_getEquips	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getEquips(lua_State* L) {$/;"	f	file:
_wrap_Player_getFlags	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getFlags(lua_State* L) {$/;"	f	file:
_wrap_Player_getGender	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getGender(lua_State* L) {$/;"	f	file:
_wrap_Player_getGeneral	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getGeneral(lua_State* L) {$/;"	f	file:
_wrap_Player_getGeneral2	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getGeneral2(lua_State* L) {$/;"	f	file:
_wrap_Player_getGeneral2Name	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getGeneral2Name(lua_State* L) {$/;"	f	file:
_wrap_Player_getGeneralName	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getGeneralName(lua_State* L) {$/;"	f	file:
_wrap_Player_getHandcardNum	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getHandcardNum(lua_State* L) {$/;"	f	file:
_wrap_Player_getHp	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getHp(lua_State* L) {$/;"	f	file:
_wrap_Player_getJudgingArea	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getJudgingArea(lua_State* L) {$/;"	f	file:
_wrap_Player_getKingdom	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getKingdom(lua_State* L) {$/;"	f	file:
_wrap_Player_getLostHp	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getLostHp(lua_State* L) {$/;"	f	file:
_wrap_Player_getMark	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getMark(lua_State* L) {$/;"	f	file:
_wrap_Player_getMaxCards	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getMaxCards(lua_State* L) {$/;"	f	file:
_wrap_Player_getMaxHp	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getMaxHp(lua_State* L) {$/;"	f	file:
_wrap_Player_getOffensiveHorse	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getOffensiveHorse(lua_State* L) {$/;"	f	file:
_wrap_Player_getPhase	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getPhase(lua_State* L) {$/;"	f	file:
_wrap_Player_getPhaseString	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getPhaseString(lua_State* L) {$/;"	f	file:
_wrap_Player_getPile	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getPile(lua_State* L) {$/;"	f	file:
_wrap_Player_getPileName	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getPileName(lua_State* L) {$/;"	f	file:
_wrap_Player_getRole	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getRole(lua_State* L) {$/;"	f	file:
_wrap_Player_getRoleEnum	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getRoleEnum(lua_State* L) {$/;"	f	file:
_wrap_Player_getSeat	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getSeat(lua_State* L) {$/;"	f	file:
_wrap_Player_getSiblings	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getSiblings(lua_State* L) {$/;"	f	file:
_wrap_Player_getSlashCount	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getSlashCount(lua_State* L) {$/;"	f	file:
_wrap_Player_getState	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getState(lua_State* L) {$/;"	f	file:
_wrap_Player_getTag	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getTag(lua_State* L) {$/;"	f	file:
_wrap_Player_getTriggerSkills	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getTriggerSkills(lua_State* L) {$/;"	f	file:
_wrap_Player_getVisibleSkillList	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getVisibleSkillList(lua_State* L) {$/;"	f	file:
_wrap_Player_getVisibleSkills	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getVisibleSkills(lua_State* L) {$/;"	f	file:
_wrap_Player_getWeapon	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_getWeapon(lua_State* L) {$/;"	f	file:
_wrap_Player_hasArmorEffect	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_hasArmorEffect(lua_State* L) {$/;"	f	file:
_wrap_Player_hasCardLock	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_hasCardLock(lua_State* L) {$/;"	f	file:
_wrap_Player_hasEquip	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_hasEquip(lua_State* L) {$/;"	f	file:
_wrap_Player_hasEquip__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_hasEquip__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Player_hasEquip__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_hasEquip__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Player_hasFlag	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_hasFlag(lua_State* L) {$/;"	f	file:
_wrap_Player_hasInnateSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_hasInnateSkill(lua_State* L) {$/;"	f	file:
_wrap_Player_hasLordSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_hasLordSkill(lua_State* L) {$/;"	f	file:
_wrap_Player_hasLordSkill__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_hasLordSkill__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Player_hasLordSkill__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_hasLordSkill__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Player_hasSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_hasSkill(lua_State* L) {$/;"	f	file:
_wrap_Player_hasUsed	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_hasUsed(lua_State* L) {$/;"	f	file:
_wrap_Player_hasWeapon	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_hasWeapon(lua_State* L) {$/;"	f	file:
_wrap_Player_inMyAttackRange	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_inMyAttackRange(lua_State* L) {$/;"	f	file:
_wrap_Player_isAlive	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_isAlive(lua_State* L) {$/;"	f	file:
_wrap_Player_isAllNude	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_isAllNude(lua_State* L) {$/;"	f	file:
_wrap_Player_isCaoCao	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_isCaoCao(lua_State* L) {$/;"	f	file:
_wrap_Player_isChained	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_isChained(lua_State* L) {$/;"	f	file:
_wrap_Player_isDead	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_isDead(lua_State* L) {$/;"	f	file:
_wrap_Player_isJilei	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_isJilei(lua_State* L) {$/;"	f	file:
_wrap_Player_isKongcheng	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_isKongcheng(lua_State* L) {$/;"	f	file:
_wrap_Player_isLastHandCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_isLastHandCard(lua_State* L) {$/;"	f	file:
_wrap_Player_isLocked	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_isLocked(lua_State* L) {$/;"	f	file:
_wrap_Player_isLord	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_isLord(lua_State* L) {$/;"	f	file:
_wrap_Player_isNude	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_isNude(lua_State* L) {$/;"	f	file:
_wrap_Player_isProhibited	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_isProhibited(lua_State* L) {$/;"	f	file:
_wrap_Player_isWounded	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_isWounded(lua_State* L) {$/;"	f	file:
_wrap_Player_jilei	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_jilei(lua_State* L) {$/;"	f	file:
_wrap_Player_loseSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_loseSkill(lua_State* L) {$/;"	f	file:
_wrap_Player_removeCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_removeCard(lua_State* L) {$/;"	f	file:
_wrap_Player_removeDelayedTrick	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_removeDelayedTrick(lua_State* L) {$/;"	f	file:
_wrap_Player_removeEquip	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_removeEquip(lua_State* L) {$/;"	f	file:
_wrap_Player_removeMark	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_removeMark(lua_State* L) {$/;"	f	file:
_wrap_Player_removeTag	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_removeTag(lua_State* L) {$/;"	f	file:
_wrap_Player_screenName	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_screenName(lua_State* L) {$/;"	f	file:
_wrap_Player_setAlive	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setAlive(lua_State* L) {$/;"	f	file:
_wrap_Player_setCardLocked	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setCardLocked(lua_State* L) {$/;"	f	file:
_wrap_Player_setChained	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setChained(lua_State* L) {$/;"	f	file:
_wrap_Player_setEquip	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setEquip(lua_State* L) {$/;"	f	file:
_wrap_Player_setFaceUp	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setFaceUp(lua_State* L) {$/;"	f	file:
_wrap_Player_setFixedDistance	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setFixedDistance(lua_State* L) {$/;"	f	file:
_wrap_Player_setFlags	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setFlags(lua_State* L) {$/;"	f	file:
_wrap_Player_setGeneral	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setGeneral(lua_State* L) {$/;"	f	file:
_wrap_Player_setGeneral2Name	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setGeneral2Name(lua_State* L) {$/;"	f	file:
_wrap_Player_setGeneralName	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setGeneralName(lua_State* L) {$/;"	f	file:
_wrap_Player_setHp	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setHp(lua_State* L) {$/;"	f	file:
_wrap_Player_setKingdom	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setKingdom(lua_State* L) {$/;"	f	file:
_wrap_Player_setMark	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setMark(lua_State* L) {$/;"	f	file:
_wrap_Player_setMaxHp	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setMaxHp(lua_State* L) {$/;"	f	file:
_wrap_Player_setPhase	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setPhase(lua_State* L) {$/;"	f	file:
_wrap_Player_setPhaseString	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setPhaseString(lua_State* L) {$/;"	f	file:
_wrap_Player_setRole	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setRole(lua_State* L) {$/;"	f	file:
_wrap_Player_setScreenName	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setScreenName(lua_State* L) {$/;"	f	file:
_wrap_Player_setSeat	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setSeat(lua_State* L) {$/;"	f	file:
_wrap_Player_setState	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setState(lua_State* L) {$/;"	f	file:
_wrap_Player_setTag	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_setTag(lua_State* L) {$/;"	f	file:
_wrap_Player_usedTimes	swig/sanguosha_wrap.cxx	/^static int _wrap_Player_usedTimes(lua_State* L) {$/;"	f	file:
_wrap_ProhibitSkill_isProhibited	swig/sanguosha_wrap.cxx	/^static int _wrap_ProhibitSkill_isProhibited(lua_State* L) {$/;"	f	file:
_wrap_QObject_inherits	swig/sanguosha_wrap.cxx	/^static int _wrap_QObject_inherits(lua_State* L) {$/;"	f	file:
_wrap_QObject_objectName	swig/sanguosha_wrap.cxx	/^static int _wrap_QObject_objectName(lua_State* L) {$/;"	f	file:
_wrap_QObject_property	swig/sanguosha_wrap.cxx	/^static int _wrap_QObject_property(lua_State* L) {$/;"	f	file:
_wrap_QObject_setObjectName	swig/sanguosha_wrap.cxx	/^static int _wrap_QObject_setObjectName(lua_State* L) {$/;"	f	file:
_wrap_QObject_setParent	swig/sanguosha_wrap.cxx	/^static int _wrap_QObject_setParent(lua_State* L) {$/;"	f	file:
_wrap_QObject_setProperty	swig/sanguosha_wrap.cxx	/^static int _wrap_QObject_setProperty(lua_State* L) {$/;"	f	file:
_wrap_QRegExp_exactMatch	swig/sanguosha_wrap.cxx	/^static int _wrap_QRegExp_exactMatch(lua_State* L) {$/;"	f	file:
_wrap_QVariant_setValue	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_setValue(lua_State* L) {$/;"	f	file:
_wrap_QVariant_setValue__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_setValue__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_QVariant_setValue__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_setValue__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_QVariant_setValue__SWIG_10	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_setValue__SWIG_10(lua_State* L) {$/;"	f	file:
_wrap_QVariant_setValue__SWIG_11	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_setValue__SWIG_11(lua_State* L) {$/;"	f	file:
_wrap_QVariant_setValue__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_setValue__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_QVariant_setValue__SWIG_3	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_setValue__SWIG_3(lua_State* L) {$/;"	f	file:
_wrap_QVariant_setValue__SWIG_4	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_setValue__SWIG_4(lua_State* L) {$/;"	f	file:
_wrap_QVariant_setValue__SWIG_5	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_setValue__SWIG_5(lua_State* L) {$/;"	f	file:
_wrap_QVariant_setValue__SWIG_6	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_setValue__SWIG_6(lua_State* L) {$/;"	f	file:
_wrap_QVariant_setValue__SWIG_7	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_setValue__SWIG_7(lua_State* L) {$/;"	f	file:
_wrap_QVariant_setValue__SWIG_8	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_setValue__SWIG_8(lua_State* L) {$/;"	f	file:
_wrap_QVariant_setValue__SWIG_9	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_setValue__SWIG_9(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toBool	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toBool(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toCard	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toCard(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toCardEffect	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toCardEffect(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toCardUse	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toCardUse(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toDamage	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toDamage(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toDamageStar	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toDamageStar(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toDying	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toDying(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toInt	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toInt(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toJudge	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toJudge(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toMoveOneTime	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toMoveOneTime(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toPhaseChange	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toPhaseChange(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toPindian	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toPindian(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toPlayer	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toPlayer(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toRecover	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toRecover(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toSlashEffect	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toSlashEffect(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toString	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toString(lua_State* L) {$/;"	f	file:
_wrap_QVariant_toStringList	swig/sanguosha_wrap.cxx	/^static int _wrap_QVariant_toStringList(lua_State* L) {$/;"	f	file:
_wrap_RecoverStruct_card_get	swig/sanguosha_wrap.cxx	/^static int _wrap_RecoverStruct_card_get(lua_State* L) {$/;"	f	file:
_wrap_RecoverStruct_card_set	swig/sanguosha_wrap.cxx	/^static int _wrap_RecoverStruct_card_set(lua_State* L) {$/;"	f	file:
_wrap_RecoverStruct_recover_get	swig/sanguosha_wrap.cxx	/^static int _wrap_RecoverStruct_recover_get(lua_State* L) {$/;"	f	file:
_wrap_RecoverStruct_recover_set	swig/sanguosha_wrap.cxx	/^static int _wrap_RecoverStruct_recover_set(lua_State* L) {$/;"	f	file:
_wrap_RecoverStruct_who_get	swig/sanguosha_wrap.cxx	/^static int _wrap_RecoverStruct_who_get(lua_State* L) {$/;"	f	file:
_wrap_RecoverStruct_who_set	swig/sanguosha_wrap.cxx	/^static int _wrap_RecoverStruct_who_set(lua_State* L) {$/;"	f	file:
_wrap_RoomThread_action3v3	swig/sanguosha_wrap.cxx	/^static int _wrap_RoomThread_action3v3(lua_State* L) {$/;"	f	file:
_wrap_RoomThread_addPlayerSkills	swig/sanguosha_wrap.cxx	/^static int _wrap_RoomThread_addPlayerSkills(lua_State* L) {$/;"	f	file:
_wrap_RoomThread_addPlayerSkills__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_RoomThread_addPlayerSkills__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_RoomThread_addPlayerSkills__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_RoomThread_addPlayerSkills__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_RoomThread_addTriggerSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_RoomThread_addTriggerSkill(lua_State* L) {$/;"	f	file:
_wrap_RoomThread_constructTriggerTable	swig/sanguosha_wrap.cxx	/^static int _wrap_RoomThread_constructTriggerTable(lua_State* L) {$/;"	f	file:
_wrap_RoomThread_delay	swig/sanguosha_wrap.cxx	/^static int _wrap_RoomThread_delay(lua_State* L) {$/;"	f	file:
_wrap_RoomThread_delay__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_RoomThread_delay__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_RoomThread_delay__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_RoomThread_delay__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_RoomThread_run3v3	swig/sanguosha_wrap.cxx	/^static int _wrap_RoomThread_run3v3(lua_State* L) {$/;"	f	file:
_wrap_RoomThread_trigger	swig/sanguosha_wrap.cxx	/^static int _wrap_RoomThread_trigger(lua_State* L) {$/;"	f	file:
_wrap_RoomThread_trigger__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_RoomThread_trigger__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_RoomThread_trigger__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_RoomThread_trigger__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_acquireSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_acquireSkill(lua_State* L) {$/;"	f	file:
_wrap_Room_acquireSkill__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_acquireSkill__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_acquireSkill__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_acquireSkill__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_acquireSkill__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_acquireSkill__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_Room_acquireSkill__SWIG_3	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_acquireSkill__SWIG_3(lua_State* L) {$/;"	f	file:
_wrap_Room_activate	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_activate(lua_State* L) {$/;"	f	file:
_wrap_Room_addSocket	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_addSocket(lua_State* L) {$/;"	f	file:
_wrap_Room_adjustSeats	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_adjustSeats(lua_State* L) {$/;"	f	file:
_wrap_Room_alivePlayerCount	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_alivePlayerCount(lua_State* L) {$/;"	f	file:
_wrap_Room_aliveRoles	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_aliveRoles(lua_State* L) {$/;"	f	file:
_wrap_Room_aliveRoles__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_aliveRoles__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_aliveRoles__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_aliveRoles__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_applyDamage	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_applyDamage(lua_State* L) {$/;"	f	file:
_wrap_Room_askForAG	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForAG(lua_State* L) {$/;"	f	file:
_wrap_Room_askForCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForCard(lua_State* L) {$/;"	f	file:
_wrap_Room_askForCardChosen	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForCardChosen(lua_State* L) {$/;"	f	file:
_wrap_Room_askForCardShow	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForCardShow(lua_State* L) {$/;"	f	file:
_wrap_Room_askForCard__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForCard__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_askForCard__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForCard__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_askForCard__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForCard__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_Room_askForChoice	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForChoice(lua_State* L) {$/;"	f	file:
_wrap_Room_askForChoice__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForChoice__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_askForChoice__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForChoice__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_askForDiscard	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForDiscard(lua_State* L) {$/;"	f	file:
_wrap_Room_askForDiscard__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForDiscard__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_askForDiscard__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForDiscard__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_askForDiscard__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForDiscard__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_Room_askForDiscard__SWIG_3	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForDiscard__SWIG_3(lua_State* L) {$/;"	f	file:
_wrap_Room_askForExchange	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForExchange(lua_State* L) {$/;"	f	file:
_wrap_Room_askForExchange__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForExchange__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_askForExchange__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForExchange__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_askForExchange__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForExchange__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_Room_askForGeneral	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForGeneral(lua_State* L) {$/;"	f	file:
_wrap_Room_askForGeneral__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForGeneral__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_askForGeneral__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForGeneral__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_askForGuanxing	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForGuanxing(lua_State* L) {$/;"	f	file:
_wrap_Room_askForKingdom	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForKingdom(lua_State* L) {$/;"	f	file:
_wrap_Room_askForNullification	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForNullification(lua_State* L) {$/;"	f	file:
_wrap_Room_askForPindian	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForPindian(lua_State* L) {$/;"	f	file:
_wrap_Room_askForPlayerChosen	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForPlayerChosen(lua_State* L) {$/;"	f	file:
_wrap_Room_askForSinglePeach	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForSinglePeach(lua_State* L) {$/;"	f	file:
_wrap_Room_askForSkillInvoke	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForSkillInvoke(lua_State* L) {$/;"	f	file:
_wrap_Room_askForSkillInvoke__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForSkillInvoke__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_askForSkillInvoke__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForSkillInvoke__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_askForSuit	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForSuit(lua_State* L) {$/;"	f	file:
_wrap_Room_askForUseCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForUseCard(lua_State* L) {$/;"	f	file:
_wrap_Room_askForUseCard__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForUseCard__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_askForUseCard__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForUseCard__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_askForUseSlashTo	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForUseSlashTo(lua_State* L) {$/;"	f	file:
_wrap_Room_askForUseSlashTo__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForUseSlashTo__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_askForUseSlashTo__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForUseSlashTo__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_askForYiji	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_askForYiji(lua_State* L) {$/;"	f	file:
_wrap_Room_attachSkillToPlayer	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_attachSkillToPlayer(lua_State* L) {$/;"	f	file:
_wrap_Room_broadcastInvoke	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_broadcastInvoke(lua_State* L) {$/;"	f	file:
_wrap_Room_broadcastInvoke__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_broadcastInvoke__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_broadcastInvoke__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_broadcastInvoke__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_broadcastInvoke__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_broadcastInvoke__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_Room_broadcastResetCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_broadcastResetCard(lua_State* L) {$/;"	f	file:
_wrap_Room_broadcastSkillInvoke	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_broadcastSkillInvoke(lua_State* L) {$/;"	f	file:
_wrap_Room_broadcastSkillInvoke__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_broadcastSkillInvoke__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_broadcastSkillInvoke__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_broadcastSkillInvoke__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_broadcastSkillInvoke__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_broadcastSkillInvoke__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_Room_broadcastSkillInvoke__SWIG_3	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_broadcastSkillInvoke__SWIG_3(lua_State* L) {$/;"	f	file:
_wrap_Room_broadcastUpdateCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_broadcastUpdateCard(lua_State* L) {$/;"	f	file:
_wrap_Room_cardEffect	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_cardEffect(lua_State* L) {$/;"	f	file:
_wrap_Room_cardEffect__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_cardEffect__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_cardEffect__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_cardEffect__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_changePlayerGeneral	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_changePlayerGeneral(lua_State* L) {$/;"	f	file:
_wrap_Room_changePlayerGeneral2	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_changePlayerGeneral2(lua_State* L) {$/;"	f	file:
_wrap_Room_clearCardFlag	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_clearCardFlag(lua_State* L) {$/;"	f	file:
_wrap_Room_clearCardFlag__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_clearCardFlag__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_clearCardFlag__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_clearCardFlag__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_clearCardFlag__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_clearCardFlag__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_Room_clearCardFlag__SWIG_3	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_clearCardFlag__SWIG_3(lua_State* L) {$/;"	f	file:
_wrap_Room_clearPlayerCardLock	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_clearPlayerCardLock(lua_State* L) {$/;"	f	file:
_wrap_Room_copyFrom	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_copyFrom(lua_State* L) {$/;"	f	file:
_wrap_Room_damage	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_damage(lua_State* L) {$/;"	f	file:
_wrap_Room_detachSkillFromPlayer	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_detachSkillFromPlayer(lua_State* L) {$/;"	f	file:
_wrap_Room_doGongxin	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_doGongxin(lua_State* L) {$/;"	f	file:
_wrap_Room_drawCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_drawCard(lua_State* L) {$/;"	f	file:
_wrap_Room_drawCards	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_drawCards(lua_State* L) {$/;"	f	file:
_wrap_Room_drawCards__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_drawCards__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_drawCards__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_drawCards__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_duplicate	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_duplicate(lua_State* L) {$/;"	f	file:
_wrap_Room_enterDying	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_enterDying(lua_State* L) {$/;"	f	file:
_wrap_Room_fillAG	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_fillAG(lua_State* L) {$/;"	f	file:
_wrap_Room_fillAG__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_fillAG__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_fillAG__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_fillAG__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_filterCards	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_filterCards(lua_State* L) {$/;"	f	file:
_wrap_Room_findPlayer	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_findPlayer(lua_State* L) {$/;"	f	file:
_wrap_Room_findPlayerBySkillName	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_findPlayerBySkillName(lua_State* L) {$/;"	f	file:
_wrap_Room_findPlayerBySkillName__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_findPlayerBySkillName__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_findPlayerBySkillName__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_findPlayerBySkillName__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_findPlayer__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_findPlayer__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_findPlayer__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_findPlayer__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_findPlayersBySkillName	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_findPlayersBySkillName(lua_State* L) {$/;"	f	file:
_wrap_Room_findPlayersBySkillName__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_findPlayersBySkillName__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_findPlayersBySkillName__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_findPlayersBySkillName__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_gameOver	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_gameOver(lua_State* L) {$/;"	f	file:
_wrap_Room_getAlivePlayers	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getAlivePlayers(lua_State* L) {$/;"	f	file:
_wrap_Room_getAllPlayers	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getAllPlayers(lua_State* L) {$/;"	f	file:
_wrap_Room_getCardFromPile	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getCardFromPile(lua_State* L) {$/;"	f	file:
_wrap_Room_getCardOwner	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getCardOwner(lua_State* L) {$/;"	f	file:
_wrap_Room_getCardPlace	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getCardPlace(lua_State* L) {$/;"	f	file:
_wrap_Room_getCurrent	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getCurrent(lua_State* L) {$/;"	f	file:
_wrap_Room_getDiscardPile	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getDiscardPile(lua_State* L) {$/;"	f	file:
_wrap_Room_getDrawPile	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getDrawPile(lua_State* L) {$/;"	f	file:
_wrap_Room_getFront	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getFront(lua_State* L) {$/;"	f	file:
_wrap_Room_getLack	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getLack(lua_State* L) {$/;"	f	file:
_wrap_Room_getLieges	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getLieges(lua_State* L) {$/;"	f	file:
_wrap_Room_getLord	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getLord(lua_State* L) {$/;"	f	file:
_wrap_Room_getLuaState	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getLuaState(lua_State* L) {$/;"	f	file:
_wrap_Room_getMode	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getMode(lua_State* L) {$/;"	f	file:
_wrap_Room_getNCards	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getNCards(lua_State* L) {$/;"	f	file:
_wrap_Room_getNCards__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getNCards__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_getNCards__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getNCards__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_getOtherPlayers	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getOtherPlayers(lua_State* L) {$/;"	f	file:
_wrap_Room_getOwner	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getOwner(lua_State* L) {$/;"	f	file:
_wrap_Room_getPlayers	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getPlayers(lua_State* L) {$/;"	f	file:
_wrap_Room_getScenario	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getScenario(lua_State* L) {$/;"	f	file:
_wrap_Room_getTag	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getTag(lua_State* L) {$/;"	f	file:
_wrap_Room_getThread	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_getThread(lua_State* L) {$/;"	f	file:
_wrap_Room_hasWelfare	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_hasWelfare(lua_State* L) {$/;"	f	file:
_wrap_Room_installEquip	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_installEquip(lua_State* L) {$/;"	f	file:
_wrap_Room_isCanceled	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_isCanceled(lua_State* L) {$/;"	f	file:
_wrap_Room_isFinished	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_isFinished(lua_State* L) {$/;"	f	file:
_wrap_Room_isFull	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_isFull(lua_State* L) {$/;"	f	file:
_wrap_Room_isProhibited	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_isProhibited(lua_State* L) {$/;"	f	file:
_wrap_Room_isVirtual	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_isVirtual(lua_State* L) {$/;"	f	file:
_wrap_Room_judge	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_judge(lua_State* L) {$/;"	f	file:
_wrap_Room_killPlayer	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_killPlayer(lua_State* L) {$/;"	f	file:
_wrap_Room_killPlayer__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_killPlayer__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_killPlayer__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_killPlayer__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_loseHp	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_loseHp(lua_State* L) {$/;"	f	file:
_wrap_Room_loseHp__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_loseHp__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_loseHp__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_loseHp__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_loseMaxHp	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_loseMaxHp(lua_State* L) {$/;"	f	file:
_wrap_Room_loseMaxHp__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_loseMaxHp__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_loseMaxHp__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_loseMaxHp__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_marshal	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_marshal(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCardTo	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCardTo(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCardTo__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCardTo__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCardTo__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCardTo__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCardTo__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCardTo__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCardTo__SWIG_3	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCardTo__SWIG_3(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCardTo__SWIG_4	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCardTo__SWIG_4(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCardTo__SWIG_5	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCardTo__SWIG_5(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCardTo__SWIG_6	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCardTo__SWIG_6(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCardTo__SWIG_7	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCardTo__SWIG_7(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCards	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCards(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCardsAtomic	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCardsAtomic(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCardsAtomic__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCardsAtomic__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCardsAtomic__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCardsAtomic__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCards__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCards__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCards__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCards__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCards__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCards__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_Room_moveCards__SWIG_3	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_moveCards__SWIG_3(lua_State* L) {$/;"	f	file:
_wrap_Room_nextPlayer	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_nextPlayer(lua_State* L) {$/;"	f	file:
_wrap_Room_notifyResetCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_notifyResetCard(lua_State* L) {$/;"	f	file:
_wrap_Room_notifyUpdateCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_notifyUpdateCard(lua_State* L) {$/;"	f	file:
_wrap_Room_obtainCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_obtainCard(lua_State* L) {$/;"	f	file:
_wrap_Room_obtainCard__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_obtainCard__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_obtainCard__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_obtainCard__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_obtainCard__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_obtainCard__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_Room_obtainCard__SWIG_3	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_obtainCard__SWIG_3(lua_State* L) {$/;"	f	file:
_wrap_Room_output	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_output(lua_State* L) {$/;"	f	file:
_wrap_Room_outputEventStack	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_outputEventStack(lua_State* L) {$/;"	f	file:
_wrap_Room_peek	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_peek(lua_State* L) {$/;"	f	file:
_wrap_Room_provide	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_provide(lua_State* L) {$/;"	f	file:
_wrap_Room_reconnect	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_reconnect(lua_State* L) {$/;"	f	file:
_wrap_Room_recover	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_recover(lua_State* L) {$/;"	f	file:
_wrap_Room_recover__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_recover__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_recover__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_recover__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_removeTag	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_removeTag(lua_State* L) {$/;"	f	file:
_wrap_Room_resetAI	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_resetAI(lua_State* L) {$/;"	f	file:
_wrap_Room_retrial	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_retrial(lua_State* L) {$/;"	f	file:
_wrap_Room_retrial__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_retrial__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_retrial__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_retrial__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_reverseFor3v3	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_reverseFor3v3(lua_State* L) {$/;"	f	file:
_wrap_Room_revivePlayer	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_revivePlayer(lua_State* L) {$/;"	f	file:
_wrap_Room_sendDamageLog	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_sendDamageLog(lua_State* L) {$/;"	f	file:
_wrap_Room_sendJudgeResult	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_sendJudgeResult(lua_State* L) {$/;"	f	file:
_wrap_Room_sendLog	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_sendLog(lua_State* L) {$/;"	f	file:
_wrap_Room_setCardFlag	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_setCardFlag(lua_State* L) {$/;"	f	file:
_wrap_Room_setCardFlag__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_setCardFlag__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_setCardFlag__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_setCardFlag__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_setCardFlag__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_setCardFlag__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_Room_setCardFlag__SWIG_3	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_setCardFlag__SWIG_3(lua_State* L) {$/;"	f	file:
_wrap_Room_setCardMapping	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_setCardMapping(lua_State* L) {$/;"	f	file:
_wrap_Room_setCurrent	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_setCurrent(lua_State* L) {$/;"	f	file:
_wrap_Room_setEmotion	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_setEmotion(lua_State* L) {$/;"	f	file:
_wrap_Room_setFixedDistance	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_setFixedDistance(lua_State* L) {$/;"	f	file:
_wrap_Room_setPlayerCardLock	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_setPlayerCardLock(lua_State* L) {$/;"	f	file:
_wrap_Room_setPlayerFlag	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_setPlayerFlag(lua_State* L) {$/;"	f	file:
_wrap_Room_setPlayerMark	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_setPlayerMark(lua_State* L) {$/;"	f	file:
_wrap_Room_setPlayerProperty	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_setPlayerProperty(lua_State* L) {$/;"	f	file:
_wrap_Room_setTag	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_setTag(lua_State* L) {$/;"	f	file:
_wrap_Room_setVirtual	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_setVirtual(lua_State* L) {$/;"	f	file:
_wrap_Room_showAllCards	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_showAllCards(lua_State* L) {$/;"	f	file:
_wrap_Room_showAllCards__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_showAllCards__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_showAllCards__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_showAllCards__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_showCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_showCard(lua_State* L) {$/;"	f	file:
_wrap_Room_showCard__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_showCard__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_showCard__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_showCard__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_signup	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_signup(lua_State* L) {$/;"	f	file:
_wrap_Room_slashEffect	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_slashEffect(lua_State* L) {$/;"	f	file:
_wrap_Room_slashResult	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_slashResult(lua_State* L) {$/;"	f	file:
_wrap_Room_swapPile	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_swapPile(lua_State* L) {$/;"	f	file:
_wrap_Room_swapSeat	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_swapSeat(lua_State* L) {$/;"	f	file:
_wrap_Room_takeAG	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_takeAG(lua_State* L) {$/;"	f	file:
_wrap_Room_throwCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_throwCard(lua_State* L) {$/;"	f	file:
_wrap_Room_throwCard__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_throwCard__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_throwCard__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_throwCard__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_throwCard__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_throwCard__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_Room_transfigure	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_transfigure(lua_State* L) {$/;"	f	file:
_wrap_Room_transfigure__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_transfigure__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_transfigure__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_transfigure__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_useCard	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_useCard(lua_State* L) {$/;"	f	file:
_wrap_Room_useCard__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_useCard__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Room_useCard__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_useCard__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Room_writeToConsole	swig/sanguosha_wrap.cxx	/^static int _wrap_Room_writeToConsole(lua_State* L) {$/;"	f	file:
_wrap_SPConvertSkill_onGameStart	swig/sanguosha_wrap.cxx	/^static int _wrap_SPConvertSkill_onGameStart(lua_State* L) {$/;"	f	file:
_wrap_SPConvertSkill_triggerable	swig/sanguosha_wrap.cxx	/^static int _wrap_SPConvertSkill_triggerable(lua_State* L) {$/;"	f	file:
_wrap_SPlayerList_append	swig/sanguosha_wrap.cxx	/^static int _wrap_SPlayerList_append(lua_State* L) {$/;"	f	file:
_wrap_SPlayerList_at	swig/sanguosha_wrap.cxx	/^static int _wrap_SPlayerList_at(lua_State* L) {$/;"	f	file:
_wrap_SPlayerList_contains	swig/sanguosha_wrap.cxx	/^static int _wrap_SPlayerList_contains(lua_State* L) {$/;"	f	file:
_wrap_SPlayerList_first	swig/sanguosha_wrap.cxx	/^static int _wrap_SPlayerList_first(lua_State* L) {$/;"	f	file:
_wrap_SPlayerList_isEmpty	swig/sanguosha_wrap.cxx	/^static int _wrap_SPlayerList_isEmpty(lua_State* L) {$/;"	f	file:
_wrap_SPlayerList_last	swig/sanguosha_wrap.cxx	/^static int _wrap_SPlayerList_last(lua_State* L) {$/;"	f	file:
_wrap_SPlayerList_length	swig/sanguosha_wrap.cxx	/^static int _wrap_SPlayerList_length(lua_State* L) {$/;"	f	file:
_wrap_SPlayerList_prepend	swig/sanguosha_wrap.cxx	/^static int _wrap_SPlayerList_prepend(lua_State* L) {$/;"	f	file:
_wrap_SPlayerList_removeAt	swig/sanguosha_wrap.cxx	/^static int _wrap_SPlayerList_removeAt(lua_State* L) {$/;"	f	file:
_wrap_SPlayerList_removeOne	swig/sanguosha_wrap.cxx	/^static int _wrap_SPlayerList_removeOne(lua_State* L) {$/;"	f	file:
_wrap_Sanguosha_get	swig/sanguosha_wrap.cxx	/^static int _wrap_Sanguosha_get(lua_State* L) {$/;"	f	file:
_wrap_Sanguosha_set	swig/sanguosha_wrap.cxx	/^static int _wrap_Sanguosha_set(lua_State* L) {$/;"	f	file:
_wrap_Self_get	swig/sanguosha_wrap.cxx	/^static int _wrap_Self_get(lua_State* L) {$/;"	f	file:
_wrap_Self_set	swig/sanguosha_wrap.cxx	/^static int _wrap_Self_set(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_addCard	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_addCard(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_addToPile	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_addToPile(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_addToPile__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_addToPile__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_addToPile__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_addToPile__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_addToPile__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_addToPile__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_addToPile__SWIG_3	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_addToPile__SWIG_3(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_addToSelected	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_addToSelected(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_addVictim	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_addVictim(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_aliveCount	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_aliveCount(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_askForSkillInvoke	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_askForSkillInvoke(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_askForSkillInvoke__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_askForSkillInvoke__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_askForSkillInvoke__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_askForSkillInvoke__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_broadcastSkillInvoke	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_broadcastSkillInvoke(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_broadcastSkillInvoke__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_broadcastSkillInvoke__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_broadcastSkillInvoke__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_broadcastSkillInvoke__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_bury	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_bury(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_clearPrivatePiles	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_clearPrivatePiles(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_clearSelected	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_clearSelected(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_drawCard	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_drawCard(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_drawCards	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_drawCards(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_drawCards__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_drawCards__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_drawCards__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_drawCards__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_drawCards__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_drawCards__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_findReasonable	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_findReasonable(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_findReasonable__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_findReasonable__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_findReasonable__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_findReasonable__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_forceToDiscard	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_forceToDiscard(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_gainAnExtraTurn	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_gainAnExtraTurn(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_gainAnExtraTurn__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_gainAnExtraTurn__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_gainAnExtraTurn__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_gainAnExtraTurn__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_gainMark	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_gainMark(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_gainMark__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_gainMark__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_gainMark__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_gainMark__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getAI	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getAI(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getCards	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getCards(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getGameMode	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getGameMode(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getGeneralMaxHp	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getGeneralMaxHp(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getHandcardNum	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getHandcardNum(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getHandcards	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getHandcards(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getIp	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getIp(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getNext	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getNext(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getNextAlive	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getNextAlive(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getPhases	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getPhases(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getRandomHandCard	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getRandomHandCard(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getRandomHandCardId	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getRandomHandCardId(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getRoom	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getRoom(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getSelected	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getSelected(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getSmartAI	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getSmartAI(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_getVictims	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_getVictims(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_handCards	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_handCards(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_hasNullification	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_hasNullification(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_insertPhase	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_insertPhase(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_introduceTo	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_introduceTo(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_invoke	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_invoke(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_invoke__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_invoke__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_invoke__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_invoke__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_isLastHandCard	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_isLastHandCard(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_isSkipped	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_isSkipped(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_kick	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_kick(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_loseAllMarks	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_loseAllMarks(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_loseMark	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_loseMark(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_loseMark__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_loseMark__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_loseMark__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_loseMark__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_marshal	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_marshal(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_obtainCard	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_obtainCard(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_obtainCard__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_obtainCard__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_obtainCard__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_obtainCard__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_pindian	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_pindian(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_pindian__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_pindian__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_pindian__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_pindian__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_play	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_play(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_play__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_play__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_play__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_play__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_removeCard	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_removeCard(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_reportHeader	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_reportHeader(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_saveRecord	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_saveRecord(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_setAI	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_setAI(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_setNext	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_setNext(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_setSocket	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_setSocket(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_skip	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_skip(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_speak	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_speak(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_startRecord	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_startRecord(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_throwAllCards	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_throwAllCards(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_throwAllEquips	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_throwAllEquips(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_throwAllHandCards	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_throwAllHandCards(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_throwAllHandCardsAndEquips	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_throwAllHandCardsAndEquips(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_throwAllMarks	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_throwAllMarks(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_turnOver	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_turnOver(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_unicast	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_unicast(lua_State* L) {$/;"	f	file:
_wrap_ServerPlayer_wholeHandCards	swig/sanguosha_wrap.cxx	/^static int _wrap_ServerPlayer_wholeHandCards(lua_State* L) {$/;"	f	file:
_wrap_SkillCard_getSubtype	swig/sanguosha_wrap.cxx	/^static int _wrap_SkillCard_getSubtype(lua_State* L) {$/;"	f	file:
_wrap_SkillCard_getType	swig/sanguosha_wrap.cxx	/^static int _wrap_SkillCard_getType(lua_State* L) {$/;"	f	file:
_wrap_SkillCard_getTypeId	swig/sanguosha_wrap.cxx	/^static int _wrap_SkillCard_getTypeId(lua_State* L) {$/;"	f	file:
_wrap_SkillCard_setUserString	swig/sanguosha_wrap.cxx	/^static int _wrap_SkillCard_setUserString(lua_State* L) {$/;"	f	file:
_wrap_SkillCard_toString	swig/sanguosha_wrap.cxx	/^static int _wrap_SkillCard_toString(lua_State* L) {$/;"	f	file:
_wrap_SkillList_append	swig/sanguosha_wrap.cxx	/^static int _wrap_SkillList_append(lua_State* L) {$/;"	f	file:
_wrap_SkillList_at	swig/sanguosha_wrap.cxx	/^static int _wrap_SkillList_at(lua_State* L) {$/;"	f	file:
_wrap_SkillList_contains	swig/sanguosha_wrap.cxx	/^static int _wrap_SkillList_contains(lua_State* L) {$/;"	f	file:
_wrap_SkillList_first	swig/sanguosha_wrap.cxx	/^static int _wrap_SkillList_first(lua_State* L) {$/;"	f	file:
_wrap_SkillList_isEmpty	swig/sanguosha_wrap.cxx	/^static int _wrap_SkillList_isEmpty(lua_State* L) {$/;"	f	file:
_wrap_SkillList_last	swig/sanguosha_wrap.cxx	/^static int _wrap_SkillList_last(lua_State* L) {$/;"	f	file:
_wrap_SkillList_length	swig/sanguosha_wrap.cxx	/^static int _wrap_SkillList_length(lua_State* L) {$/;"	f	file:
_wrap_SkillList_prepend	swig/sanguosha_wrap.cxx	/^static int _wrap_SkillList_prepend(lua_State* L) {$/;"	f	file:
_wrap_SkillList_removeAt	swig/sanguosha_wrap.cxx	/^static int _wrap_SkillList_removeAt(lua_State* L) {$/;"	f	file:
_wrap_SkillList_removeOne	swig/sanguosha_wrap.cxx	/^static int _wrap_SkillList_removeOne(lua_State* L) {$/;"	f	file:
_wrap_Skill_getDefaultChoice	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_getDefaultChoice(lua_State* L) {$/;"	f	file:
_wrap_Skill_getDescription	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_getDescription(lua_State* L) {$/;"	f	file:
_wrap_Skill_getDialog	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_getDialog(lua_State* L) {$/;"	f	file:
_wrap_Skill_getEffectIndex	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_getEffectIndex(lua_State* L) {$/;"	f	file:
_wrap_Skill_getFrequency	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_getFrequency(lua_State* L) {$/;"	f	file:
_wrap_Skill_getLocation	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_getLocation(lua_State* L) {$/;"	f	file:
_wrap_Skill_getSources	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_getSources(lua_State* L) {$/;"	f	file:
_wrap_Skill_getText	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_getText(lua_State* L) {$/;"	f	file:
_wrap_Skill_initMediaSource	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_initMediaSource(lua_State* L) {$/;"	f	file:
_wrap_Skill_isLordSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_isLordSkill(lua_State* L) {$/;"	f	file:
_wrap_Skill_isVisible	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_isVisible(lua_State* L) {$/;"	f	file:
_wrap_Skill_playAudioEffect	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_playAudioEffect(lua_State* L) {$/;"	f	file:
_wrap_Skill_playAudioEffect__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_playAudioEffect__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_Skill_playAudioEffect__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_playAudioEffect__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_Skill_setFlag	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_setFlag(lua_State* L) {$/;"	f	file:
_wrap_Skill_unsetFlag	swig/sanguosha_wrap.cxx	/^static int _wrap_Skill_unsetFlag(lua_State* L) {$/;"	f	file:
_wrap_SlashEffectStruct_drank_get	swig/sanguosha_wrap.cxx	/^static int _wrap_SlashEffectStruct_drank_get(lua_State* L) {$/;"	f	file:
_wrap_SlashEffectStruct_drank_set	swig/sanguosha_wrap.cxx	/^static int _wrap_SlashEffectStruct_drank_set(lua_State* L) {$/;"	f	file:
_wrap_SlashEffectStruct_from_get	swig/sanguosha_wrap.cxx	/^static int _wrap_SlashEffectStruct_from_get(lua_State* L) {$/;"	f	file:
_wrap_SlashEffectStruct_from_set	swig/sanguosha_wrap.cxx	/^static int _wrap_SlashEffectStruct_from_set(lua_State* L) {$/;"	f	file:
_wrap_SlashEffectStruct_jink_get	swig/sanguosha_wrap.cxx	/^static int _wrap_SlashEffectStruct_jink_get(lua_State* L) {$/;"	f	file:
_wrap_SlashEffectStruct_jink_set	swig/sanguosha_wrap.cxx	/^static int _wrap_SlashEffectStruct_jink_set(lua_State* L) {$/;"	f	file:
_wrap_SlashEffectStruct_nature_get	swig/sanguosha_wrap.cxx	/^static int _wrap_SlashEffectStruct_nature_get(lua_State* L) {$/;"	f	file:
_wrap_SlashEffectStruct_nature_set	swig/sanguosha_wrap.cxx	/^static int _wrap_SlashEffectStruct_nature_set(lua_State* L) {$/;"	f	file:
_wrap_SlashEffectStruct_slash_get	swig/sanguosha_wrap.cxx	/^static int _wrap_SlashEffectStruct_slash_get(lua_State* L) {$/;"	f	file:
_wrap_SlashEffectStruct_slash_set	swig/sanguosha_wrap.cxx	/^static int _wrap_SlashEffectStruct_slash_set(lua_State* L) {$/;"	f	file:
_wrap_SlashEffectStruct_to_get	swig/sanguosha_wrap.cxx	/^static int _wrap_SlashEffectStruct_to_get(lua_State* L) {$/;"	f	file:
_wrap_SlashEffectStruct_to_set	swig/sanguosha_wrap.cxx	/^static int _wrap_SlashEffectStruct_to_set(lua_State* L) {$/;"	f	file:
_wrap_Slash_IsAvailable	swig/sanguosha_wrap.cxx	/^static int _wrap_Slash_IsAvailable(lua_State* L) {$/;"	f	file:
_wrap_Slash_getNature	swig/sanguosha_wrap.cxx	/^static int _wrap_Slash_getNature(lua_State* L) {$/;"	f	file:
_wrap_Slash_setNature	swig/sanguosha_wrap.cxx	/^static int _wrap_Slash_setNature(lua_State* L) {$/;"	f	file:
_wrap_TrickCard_getType	swig/sanguosha_wrap.cxx	/^static int _wrap_TrickCard_getType(lua_State* L) {$/;"	f	file:
_wrap_TrickCard_getTypeId	swig/sanguosha_wrap.cxx	/^static int _wrap_TrickCard_getTypeId(lua_State* L) {$/;"	f	file:
_wrap_TrickCard_isAggressive	swig/sanguosha_wrap.cxx	/^static int _wrap_TrickCard_isAggressive(lua_State* L) {$/;"	f	file:
_wrap_TrickCard_isCancelable	swig/sanguosha_wrap.cxx	/^static int _wrap_TrickCard_isCancelable(lua_State* L) {$/;"	f	file:
_wrap_TrickCard_setCancelable	swig/sanguosha_wrap.cxx	/^static int _wrap_TrickCard_setCancelable(lua_State* L) {$/;"	f	file:
_wrap_TriggerSkill_getPriority	swig/sanguosha_wrap.cxx	/^static int _wrap_TriggerSkill_getPriority(lua_State* L) {$/;"	f	file:
_wrap_TriggerSkill_getTriggerEvents	swig/sanguosha_wrap.cxx	/^static int _wrap_TriggerSkill_getTriggerEvents(lua_State* L) {$/;"	f	file:
_wrap_TriggerSkill_getViewAsSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_TriggerSkill_getViewAsSkill(lua_State* L) {$/;"	f	file:
_wrap_TriggerSkill_trigger	swig/sanguosha_wrap.cxx	/^static int _wrap_TriggerSkill_trigger(lua_State* L) {$/;"	f	file:
_wrap_TriggerSkill_triggerable	swig/sanguosha_wrap.cxx	/^static int _wrap_TriggerSkill_triggerable(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_activate	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_activate(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_askForAG	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_askForAG(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_askForCard	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_askForCard(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_askForCardChosen	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_askForCardChosen(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_askForCardShow	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_askForCardShow(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_askForChoice	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_askForChoice(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_askForDiscard	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_askForDiscard(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_askForKingdom	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_askForKingdom(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_askForNullification	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_askForNullification(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_askForPindian	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_askForPindian(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_askForPlayerChosen	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_askForPlayerChosen(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_askForSinglePeach	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_askForSinglePeach(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_askForSkillInvoke	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_askForSkillInvoke(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_askForSuit	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_askForSuit(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_askForUseCard	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_askForUseCard(lua_State* L) {$/;"	f	file:
_wrap_TrustAI_useCard	swig/sanguosha_wrap.cxx	/^static int _wrap_TrustAI_useCard(lua_State* L) {$/;"	f	file:
_wrap_ViewAsSkill_isEnabledAtPlay	swig/sanguosha_wrap.cxx	/^static int _wrap_ViewAsSkill_isEnabledAtPlay(lua_State* L) {$/;"	f	file:
_wrap_ViewAsSkill_isEnabledAtResponse	swig/sanguosha_wrap.cxx	/^static int _wrap_ViewAsSkill_isEnabledAtResponse(lua_State* L) {$/;"	f	file:
_wrap_ViewAsSkill_viewAs	swig/sanguosha_wrap.cxx	/^static int _wrap_ViewAsSkill_viewAs(lua_State* L) {$/;"	f	file:
_wrap_ViewAsSkill_viewFilter	swig/sanguosha_wrap.cxx	/^static int _wrap_ViewAsSkill_viewFilter(lua_State* L) {$/;"	f	file:
_wrap_Weapon_getRange	swig/sanguosha_wrap.cxx	/^static int _wrap_Weapon_getRange(lua_State* L) {$/;"	f	file:
_wrap_Weapon_getSubtype	swig/sanguosha_wrap.cxx	/^static int _wrap_Weapon_getSubtype(lua_State* L) {$/;"	f	file:
_wrap_Weapon_label	swig/sanguosha_wrap.cxx	/^static int _wrap_Weapon_label(lua_State* L) {$/;"	f	file:
_wrap_Weapon_location	swig/sanguosha_wrap.cxx	/^static int _wrap_Weapon_location(lua_State* L) {$/;"	f	file:
_wrap_Weapon_onInstall	swig/sanguosha_wrap.cxx	/^static int _wrap_Weapon_onInstall(lua_State* L) {$/;"	f	file:
_wrap_Weapon_onUninstall	swig/sanguosha_wrap.cxx	/^static int _wrap_Weapon_onUninstall(lua_State* L) {$/;"	f	file:
_wrap_WrappedCard_copyEverythingFrom	swig/sanguosha_wrap.cxx	/^static int _wrap_WrappedCard_copyEverythingFrom(lua_State* L) {$/;"	f	file:
_wrap_WrappedCard_setModified	swig/sanguosha_wrap.cxx	/^static int _wrap_WrappedCard_setModified(lua_State* L) {$/;"	f	file:
_wrap_WrappedCard_takeOver	swig/sanguosha_wrap.cxx	/^static int _wrap_WrappedCard_takeOver(lua_State* L) {$/;"	f	file:
_wrap_class_AI	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_AI = { "AI", &SWIGTYPE_p_AI,0, swig_delete_AI, swig_AI_methods, swig_AI_attributes, swig_AI_bases, swig_AI_base_names };$/;"	v	file:
_wrap_class_Armor	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_Armor = { "Armor", &SWIGTYPE_p_Armor,_wrap_new_Armor, swig_delete_Armor, swig_Armor_methods, swig_Armor_attributes, swig_Armor_bases, swig_Armor_base_names };$/;"	v	file:
_wrap_class_BasicCard	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_BasicCard = { "BasicCard", &SWIGTYPE_p_BasicCard,0, swig_delete_BasicCard, swig_BasicCard_methods, swig_BasicCard_attributes, swig_BasicCard_bases, swig_BasicCard_base_names };$/;"	v	file:
_wrap_class_Card	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_Card = { "Card", &SWIGTYPE_p_Card,0, swig_delete_Card, swig_Card_methods, swig_Card_attributes, swig_Card_bases, swig_Card_base_names };$/;"	v	file:
_wrap_class_CardEffectStruct	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_CardEffectStruct = { "CardEffectStruct", &SWIGTYPE_p_CardEffectStruct,_wrap_new_CardEffectStruct, swig_delete_CardEffectStruct, swig_CardEffectStruct_methods, swig_CardEffectStruct_attributes, swig_CardEffectStruct_bases, swig_CardEffectStruct_base_names };$/;"	v	file:
_wrap_class_CardMoveReason	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_CardMoveReason = { "CardMoveReason", &SWIGTYPE_p_CardMoveReason,_wrap_new_CardMoveReason, swig_delete_CardMoveReason, swig_CardMoveReason_methods, swig_CardMoveReason_attributes, swig_CardMoveReason_bases, swig_CardMoveReason_base_names };$/;"	v	file:
_wrap_class_CardUseStruct	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_CardUseStruct = { "CardUseStruct", &SWIGTYPE_p_CardUseStruct,_wrap_new_CardUseStruct, swig_delete_CardUseStruct, swig_CardUseStruct_methods, swig_CardUseStruct_attributes, swig_CardUseStruct_bases, swig_CardUseStruct_base_names };$/;"	v	file:
_wrap_class_CardsMoveOneTimeStruct	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_CardsMoveOneTimeStruct = { "CardsMoveOneTimeStruct", &SWIGTYPE_p_CardsMoveOneTimeStruct,_wrap_new_CardsMoveOneTimeStruct, swig_delete_CardsMoveOneTimeStruct, swig_CardsMoveOneTimeStruct_methods, swig_CardsMoveOneTimeStruct_attributes, swig_CardsMoveOneTimeStruct_bases, swig_CardsMoveOneTimeStruct_base_names };$/;"	v	file:
_wrap_class_CardsMoveStruct	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_CardsMoveStruct = { "CardsMoveStruct", &SWIGTYPE_p_CardsMoveStruct,_wrap_new_CardsMoveStruct, swig_delete_CardsMoveStruct, swig_CardsMoveStruct_methods, swig_CardsMoveStruct_attributes, swig_CardsMoveStruct_bases, swig_CardsMoveStruct_base_names };$/;"	v	file:
_wrap_class_ClientPlayer	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_ClientPlayer = { "ClientPlayer", &SWIGTYPE_p_ClientPlayer,_wrap_new_ClientPlayer, swig_delete_ClientPlayer, swig_ClientPlayer_methods, swig_ClientPlayer_attributes, swig_ClientPlayer_bases, swig_ClientPlayer_base_names };$/;"	v	file:
_wrap_class_DamageStruct	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_DamageStruct = { "DamageStruct", &SWIGTYPE_p_DamageStruct,_wrap_new_DamageStruct, swig_delete_DamageStruct, swig_DamageStruct_methods, swig_DamageStruct_attributes, swig_DamageStruct_bases, swig_DamageStruct_base_names };$/;"	v	file:
_wrap_class_DefensiveHorse	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_DefensiveHorse = { "DefensiveHorse", &SWIGTYPE_p_DefensiveHorse,_wrap_new_DefensiveHorse, swig_delete_DefensiveHorse, swig_DefensiveHorse_methods, swig_DefensiveHorse_attributes, swig_DefensiveHorse_bases, swig_DefensiveHorse_base_names };$/;"	v	file:
_wrap_class_DelayedTrick	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_DelayedTrick = { "DelayedTrick", &SWIGTYPE_p_DelayedTrick,0, swig_delete_DelayedTrick, swig_DelayedTrick_methods, swig_DelayedTrick_attributes, swig_DelayedTrick_bases, swig_DelayedTrick_base_names };$/;"	v	file:
_wrap_class_DistanceSkill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_DistanceSkill = { "DistanceSkill", &SWIGTYPE_p_DistanceSkill,0, swig_delete_DistanceSkill, swig_DistanceSkill_methods, swig_DistanceSkill_attributes, swig_DistanceSkill_bases, swig_DistanceSkill_base_names };$/;"	v	file:
_wrap_class_DummyCard	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_DummyCard = { "DummyCard", &SWIGTYPE_p_DummyCard,0, swig_delete_DummyCard, swig_DummyCard_methods, swig_DummyCard_attributes, swig_DummyCard_bases, swig_DummyCard_base_names };$/;"	v	file:
_wrap_class_DyingStruct	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_DyingStruct = { "DyingStruct", &SWIGTYPE_p_DyingStruct,_wrap_new_DyingStruct, swig_delete_DyingStruct, swig_DyingStruct_methods, swig_DyingStruct_attributes, swig_DyingStruct_bases, swig_DyingStruct_base_names };$/;"	v	file:
_wrap_class_Engine	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_Engine = { "Engine", &SWIGTYPE_p_Engine,_wrap_new_Engine, swig_delete_Engine, swig_Engine_methods, swig_Engine_attributes, swig_Engine_bases, swig_Engine_base_names };$/;"	v	file:
_wrap_class_EquipCard	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_EquipCard = { "EquipCard", &SWIGTYPE_p_EquipCard,0, swig_delete_EquipCard, swig_EquipCard_methods, swig_EquipCard_attributes, swig_EquipCard_bases, swig_EquipCard_base_names };$/;"	v	file:
_wrap_class_FilterSkill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_FilterSkill = { "FilterSkill", &SWIGTYPE_p_FilterSkill,0, swig_delete_FilterSkill, swig_FilterSkill_methods, swig_FilterSkill_attributes, swig_FilterSkill_bases, swig_FilterSkill_base_names };$/;"	v	file:
_wrap_class_GameStartSkill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_GameStartSkill = { "GameStartSkill", &SWIGTYPE_p_GameStartSkill,0, swig_delete_GameStartSkill, swig_GameStartSkill_methods, swig_GameStartSkill_attributes, swig_GameStartSkill_bases, swig_GameStartSkill_base_names };$/;"	v	file:
_wrap_class_General	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_General = { "General", &SWIGTYPE_p_General,_wrap_new_General, swig_delete_General, swig_General_methods, swig_General_attributes, swig_General_bases, swig_General_base_names };$/;"	v	file:
_wrap_class_Horse	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_Horse = { "Horse", &SWIGTYPE_p_Horse,0, swig_delete_Horse, swig_Horse_methods, swig_Horse_attributes, swig_Horse_bases, swig_Horse_base_names };$/;"	v	file:
_wrap_class_JudgeStruct	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_JudgeStruct = { "JudgeStruct", &SWIGTYPE_p_JudgeStruct,_wrap_new_JudgeStruct, swig_delete_JudgeStruct, swig_JudgeStruct_methods, swig_JudgeStruct_attributes, swig_JudgeStruct_bases, swig_JudgeStruct_base_names };$/;"	v	file:
_wrap_class_LogMessage	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_LogMessage = { "LogMessage", &SWIGTYPE_p_LogMessage,_wrap_new_LogMessage, swig_delete_LogMessage, swig_LogMessage_methods, swig_LogMessage_attributes, swig_LogMessage_bases, swig_LogMessage_base_names };$/;"	v	file:
_wrap_class_LuaAI	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_LuaAI = { "LuaAI", &SWIGTYPE_p_LuaAI,_wrap_new_LuaAI, swig_delete_LuaAI, swig_LuaAI_methods, swig_LuaAI_attributes, swig_LuaAI_bases, swig_LuaAI_base_names };$/;"	v	file:
_wrap_class_LuaDistanceSkill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_LuaDistanceSkill = { "LuaDistanceSkill", &SWIGTYPE_p_LuaDistanceSkill,_wrap_new_LuaDistanceSkill, swig_delete_LuaDistanceSkill, swig_LuaDistanceSkill_methods, swig_LuaDistanceSkill_attributes, swig_LuaDistanceSkill_bases, swig_LuaDistanceSkill_base_names };$/;"	v	file:
_wrap_class_LuaFilterSkill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_LuaFilterSkill = { "LuaFilterSkill", &SWIGTYPE_p_LuaFilterSkill,_wrap_new_LuaFilterSkill, swig_delete_LuaFilterSkill, swig_LuaFilterSkill_methods, swig_LuaFilterSkill_attributes, swig_LuaFilterSkill_bases, swig_LuaFilterSkill_base_names };$/;"	v	file:
_wrap_class_LuaMaxCardsSkill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_LuaMaxCardsSkill = { "LuaMaxCardsSkill", &SWIGTYPE_p_LuaMaxCardsSkill,_wrap_new_LuaMaxCardsSkill, swig_delete_LuaMaxCardsSkill, swig_LuaMaxCardsSkill_methods, swig_LuaMaxCardsSkill_attributes, swig_LuaMaxCardsSkill_bases, swig_LuaMaxCardsSkill_base_names };$/;"	v	file:
_wrap_class_LuaProhibitSkill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_LuaProhibitSkill = { "LuaProhibitSkill", &SWIGTYPE_p_LuaProhibitSkill,_wrap_new_LuaProhibitSkill, swig_delete_LuaProhibitSkill, swig_LuaProhibitSkill_methods, swig_LuaProhibitSkill_attributes, swig_LuaProhibitSkill_bases, swig_LuaProhibitSkill_base_names };$/;"	v	file:
_wrap_class_LuaSkillCard	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_LuaSkillCard = { "LuaSkillCard", &SWIGTYPE_p_LuaSkillCard,_wrap_new_LuaSkillCard, swig_delete_LuaSkillCard, swig_LuaSkillCard_methods, swig_LuaSkillCard_attributes, swig_LuaSkillCard_bases, swig_LuaSkillCard_base_names };$/;"	v	file:
_wrap_class_LuaTriggerSkill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_LuaTriggerSkill = { "LuaTriggerSkill", &SWIGTYPE_p_LuaTriggerSkill,_wrap_new_LuaTriggerSkill, swig_delete_LuaTriggerSkill, swig_LuaTriggerSkill_methods, swig_LuaTriggerSkill_attributes, swig_LuaTriggerSkill_bases, swig_LuaTriggerSkill_base_names };$/;"	v	file:
_wrap_class_LuaViewAsSkill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_LuaViewAsSkill = { "LuaViewAsSkill", &SWIGTYPE_p_LuaViewAsSkill,_wrap_new_LuaViewAsSkill, swig_delete_LuaViewAsSkill, swig_LuaViewAsSkill_methods, swig_LuaViewAsSkill_attributes, swig_LuaViewAsSkill_bases, swig_LuaViewAsSkill_base_names };$/;"	v	file:
_wrap_class_MaxCardsSkill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_MaxCardsSkill = { "MaxCardsSkill", &SWIGTYPE_p_MaxCardsSkill,0, swig_delete_MaxCardsSkill, swig_MaxCardsSkill_methods, swig_MaxCardsSkill_attributes, swig_MaxCardsSkill_bases, swig_MaxCardsSkill_base_names };$/;"	v	file:
_wrap_class_OffensiveHorse	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_OffensiveHorse = { "OffensiveHorse", &SWIGTYPE_p_OffensiveHorse,_wrap_new_OffensiveHorse, swig_delete_OffensiveHorse, swig_OffensiveHorse_methods, swig_OffensiveHorse_attributes, swig_OffensiveHorse_bases, swig_OffensiveHorse_base_names };$/;"	v	file:
_wrap_class_OneCardViewAsSkill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_OneCardViewAsSkill = { "OneCardViewAsSkill", &SWIGTYPE_p_OneCardViewAsSkill,0, swig_delete_OneCardViewAsSkill, swig_OneCardViewAsSkill_methods, swig_OneCardViewAsSkill_attributes, swig_OneCardViewAsSkill_bases, swig_OneCardViewAsSkill_base_names };$/;"	v	file:
_wrap_class_Package	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_Package = { "Package", &SWIGTYPE_p_Package,_wrap_new_Package, swig_delete_Package, swig_Package_methods, swig_Package_attributes, swig_Package_bases, swig_Package_base_names };$/;"	v	file:
_wrap_class_PhaseChangeStruct	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_PhaseChangeStruct = { "PhaseChangeStruct", &SWIGTYPE_p_PhaseChangeStruct,_wrap_new_PhaseChangeStruct, swig_delete_PhaseChangeStruct, swig_PhaseChangeStruct_methods, swig_PhaseChangeStruct_attributes, swig_PhaseChangeStruct_bases, swig_PhaseChangeStruct_base_names };$/;"	v	file:
_wrap_class_PindianStruct	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_PindianStruct = { "PindianStruct", &SWIGTYPE_p_PindianStruct,_wrap_new_PindianStruct, swig_delete_PindianStruct, swig_PindianStruct_methods, swig_PindianStruct_attributes, swig_PindianStruct_bases, swig_PindianStruct_base_names };$/;"	v	file:
_wrap_class_Player	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_Player = { "Player", &SWIGTYPE_p_Player,0, swig_delete_Player, swig_Player_methods, swig_Player_attributes, swig_Player_bases, swig_Player_base_names };$/;"	v	file:
_wrap_class_ProhibitSkill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_ProhibitSkill = { "ProhibitSkill", &SWIGTYPE_p_ProhibitSkill,0, swig_delete_ProhibitSkill, swig_ProhibitSkill_methods, swig_ProhibitSkill_attributes, swig_ProhibitSkill_bases, swig_ProhibitSkill_base_names };$/;"	v	file:
_wrap_class_QList_Sl_CardItem_Sm__Sg_	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_QList_Sl_CardItem_Sm__Sg_ = { "ItemList", &SWIGTYPE_p_QListT_CardItem_p_t,_wrap_new_ItemList, swig_delete_ItemList, swig_QList_Sl_CardItem_Sm__Sg__methods, swig_QList_Sl_CardItem_Sm__Sg__attributes, swig_QList_Sl_CardItem_Sm__Sg__bases, swig_QList_Sl_CardItem_Sm__Sg__base_names };$/;"	v	file:
_wrap_class_QList_Sl_Card_SS_const_Sm__Sg_	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_QList_Sl_Card_SS_const_Sm__Sg_ = { "CardList", &SWIGTYPE_p_QListT_Card_const_p_t,_wrap_new_CardList, swig_delete_CardList, swig_QList_Sl_Card_SS_const_Sm__Sg__methods, swig_QList_Sl_Card_SS_const_Sm__Sg__attributes, swig_QList_Sl_Card_SS_const_Sm__Sg__bases, swig_QList_Sl_Card_SS_const_Sm__Sg__base_names };$/;"	v	file:
_wrap_class_QList_Sl_CardsMoveStruct_Sg_	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_QList_Sl_CardsMoveStruct_Sg_ = { "CardsMoveList", &SWIGTYPE_p_QListT_CardsMoveStruct_t,_wrap_new_CardsMoveList, swig_delete_CardsMoveList, swig_QList_Sl_CardsMoveStruct_Sg__methods, swig_QList_Sl_CardsMoveStruct_Sg__attributes, swig_QList_Sl_CardsMoveStruct_Sg__bases, swig_QList_Sl_CardsMoveStruct_Sg__base_names };$/;"	v	file:
_wrap_class_QList_Sl_DelayedTrick_SS_const_Sm__Sg_	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_QList_Sl_DelayedTrick_SS_const_Sm__Sg_ = { "DelayedTrickList", &SWIGTYPE_p_QListT_DelayedTrick_const_p_t,_wrap_new_DelayedTrickList, swig_delete_DelayedTrickList, swig_QList_Sl_DelayedTrick_SS_const_Sm__Sg__methods, swig_QList_Sl_DelayedTrick_SS_const_Sm__Sg__attributes, swig_QList_Sl_DelayedTrick_SS_const_Sm__Sg__bases, swig_QList_Sl_DelayedTrick_SS_const_Sm__Sg__base_names };$/;"	v	file:
_wrap_class_QList_Sl_Player_Phase_Sg_	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_QList_Sl_Player_Phase_Sg_ = { "PhaseList", &SWIGTYPE_p_QListT_Player__Phase_t,_wrap_new_PhaseList, swig_delete_PhaseList, swig_QList_Sl_Player_Phase_Sg__methods, swig_QList_Sl_Player_Phase_Sg__attributes, swig_QList_Sl_Player_Phase_Sg__bases, swig_QList_Sl_Player_Phase_Sg__base_names };$/;"	v	file:
_wrap_class_QList_Sl_Player_Place_Sg_	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_QList_Sl_Player_Place_Sg_ = { "PlaceList", &SWIGTYPE_p_QListT_Player__Place_t,_wrap_new_PlaceList, swig_delete_PlaceList, swig_QList_Sl_Player_Place_Sg__methods, swig_QList_Sl_Player_Place_Sg__attributes, swig_QList_Sl_Player_Place_Sg__bases, swig_QList_Sl_Player_Place_Sg__base_names };$/;"	v	file:
_wrap_class_QList_Sl_Player_SS_const_Sm__Sg_	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_QList_Sl_Player_SS_const_Sm__Sg_ = { "PlayerList", &SWIGTYPE_p_QListT_Player_const_p_t,_wrap_new_PlayerList, swig_delete_PlayerList, swig_QList_Sl_Player_SS_const_Sm__Sg__methods, swig_QList_Sl_Player_SS_const_Sm__Sg__attributes, swig_QList_Sl_Player_SS_const_Sm__Sg__bases, swig_QList_Sl_Player_SS_const_Sm__Sg__base_names };$/;"	v	file:
_wrap_class_QList_Sl_ServerPlayer_Sm__Sg_	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_QList_Sl_ServerPlayer_Sm__Sg_ = { "SPlayerList", &SWIGTYPE_p_QListT_ServerPlayer_p_t,_wrap_new_SPlayerList, swig_delete_SPlayerList, swig_QList_Sl_ServerPlayer_Sm__Sg__methods, swig_QList_Sl_ServerPlayer_Sm__Sg__attributes, swig_QList_Sl_ServerPlayer_Sm__Sg__bases, swig_QList_Sl_ServerPlayer_Sm__Sg__base_names };$/;"	v	file:
_wrap_class_QList_Sl_Skill_SS_const_Sm__Sg_	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_QList_Sl_Skill_SS_const_Sm__Sg_ = { "SkillList", &SWIGTYPE_p_QListT_Skill_const_p_t,_wrap_new_SkillList, swig_delete_SkillList, swig_QList_Sl_Skill_SS_const_Sm__Sg__methods, swig_QList_Sl_Skill_SS_const_Sm__Sg__attributes, swig_QList_Sl_Skill_SS_const_Sm__Sg__bases, swig_QList_Sl_Skill_SS_const_Sm__Sg__base_names };$/;"	v	file:
_wrap_class_QList_Sl_int_Sg_	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_QList_Sl_int_Sg_ = { "IntList", &SWIGTYPE_p_QListT_int_t,_wrap_new_IntList, swig_delete_IntList, swig_QList_Sl_int_Sg__methods, swig_QList_Sl_int_Sg__attributes, swig_QList_Sl_int_Sg__bases, swig_QList_Sl_int_Sg__base_names };$/;"	v	file:
_wrap_class_QObject	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_QObject = { "QObject", &SWIGTYPE_p_QObject,_wrap_new_QObject, swig_delete_QObject, swig_QObject_methods, swig_QObject_attributes, swig_QObject_bases, swig_QObject_base_names };$/;"	v	file:
_wrap_class_QRegExp	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_QRegExp = { "QRegExp", &SWIGTYPE_p_QRegExp,_wrap_new_QRegExp, swig_delete_QRegExp, swig_QRegExp_methods, swig_QRegExp_attributes, swig_QRegExp_bases, swig_QRegExp_base_names };$/;"	v	file:
_wrap_class_QThread	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_QThread = { "QThread", &SWIGTYPE_p_QThread,_wrap_new_QThread, swig_delete_QThread, swig_QThread_methods, swig_QThread_attributes, swig_QThread_bases, swig_QThread_base_names };$/;"	v	file:
_wrap_class_QVariant	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_QVariant = { "QVariant", &SWIGTYPE_p_QVariant,_wrap_new_QVariant, swig_delete_QVariant, swig_QVariant_methods, swig_QVariant_attributes, swig_QVariant_bases, swig_QVariant_base_names };$/;"	v	file:
_wrap_class_RecoverStruct	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_RecoverStruct = { "RecoverStruct", &SWIGTYPE_p_RecoverStruct,_wrap_new_RecoverStruct, swig_delete_RecoverStruct, swig_RecoverStruct_methods, swig_RecoverStruct_attributes, swig_RecoverStruct_bases, swig_RecoverStruct_base_names };$/;"	v	file:
_wrap_class_Room	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_Room = { "Room", &SWIGTYPE_p_Room,_wrap_new_Room, swig_delete_Room, swig_Room_methods, swig_Room_attributes, swig_Room_bases, swig_Room_base_names };$/;"	v	file:
_wrap_class_RoomThread	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_RoomThread = { "RoomThread", &SWIGTYPE_p_RoomThread,_wrap_new_RoomThread, swig_delete_RoomThread, swig_RoomThread_methods, swig_RoomThread_attributes, swig_RoomThread_bases, swig_RoomThread_base_names };$/;"	v	file:
_wrap_class_SPConvertSkill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_SPConvertSkill = { "SPConvertSkill", &SWIGTYPE_p_SPConvertSkill,_wrap_new_SPConvertSkill, swig_delete_SPConvertSkill, swig_SPConvertSkill_methods, swig_SPConvertSkill_attributes, swig_SPConvertSkill_bases, swig_SPConvertSkill_base_names };$/;"	v	file:
_wrap_class_ServerPlayer	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_ServerPlayer = { "ServerPlayer", &SWIGTYPE_p_ServerPlayer,_wrap_new_ServerPlayer, swig_delete_ServerPlayer, swig_ServerPlayer_methods, swig_ServerPlayer_attributes, swig_ServerPlayer_bases, swig_ServerPlayer_base_names };$/;"	v	file:
_wrap_class_Skill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_Skill = { "Skill", &SWIGTYPE_p_Skill,_wrap_new_Skill, swig_delete_Skill, swig_Skill_methods, swig_Skill_attributes, swig_Skill_bases, swig_Skill_base_names };$/;"	v	file:
_wrap_class_SkillCard	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_SkillCard = { "SkillCard", &SWIGTYPE_p_SkillCard,_wrap_new_SkillCard, swig_delete_SkillCard, swig_SkillCard_methods, swig_SkillCard_attributes, swig_SkillCard_bases, swig_SkillCard_base_names };$/;"	v	file:
_wrap_class_Slash	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_Slash = { "Slash", &SWIGTYPE_p_Slash,0, swig_delete_Slash, swig_Slash_methods, swig_Slash_attributes, swig_Slash_bases, swig_Slash_base_names };$/;"	v	file:
_wrap_class_SlashEffectStruct	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_SlashEffectStruct = { "SlashEffectStruct", &SWIGTYPE_p_SlashEffectStruct,_wrap_new_SlashEffectStruct, swig_delete_SlashEffectStruct, swig_SlashEffectStruct_methods, swig_SlashEffectStruct_attributes, swig_SlashEffectStruct_bases, swig_SlashEffectStruct_base_names };$/;"	v	file:
_wrap_class_TrickCard	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_TrickCard = { "TrickCard", &SWIGTYPE_p_TrickCard,0, swig_delete_TrickCard, swig_TrickCard_methods, swig_TrickCard_attributes, swig_TrickCard_bases, swig_TrickCard_base_names };$/;"	v	file:
_wrap_class_TriggerSkill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_TriggerSkill = { "TriggerSkill", &SWIGTYPE_p_TriggerSkill,0, swig_delete_TriggerSkill, swig_TriggerSkill_methods, swig_TriggerSkill_attributes, swig_TriggerSkill_bases, swig_TriggerSkill_base_names };$/;"	v	file:
_wrap_class_TrustAI	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_TrustAI = { "TrustAI", &SWIGTYPE_p_TrustAI,_wrap_new_TrustAI, swig_delete_TrustAI, swig_TrustAI_methods, swig_TrustAI_attributes, swig_TrustAI_bases, swig_TrustAI_base_names };$/;"	v	file:
_wrap_class_ViewAsSkill	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_ViewAsSkill = { "ViewAsSkill", &SWIGTYPE_p_ViewAsSkill,0, swig_delete_ViewAsSkill, swig_ViewAsSkill_methods, swig_ViewAsSkill_attributes, swig_ViewAsSkill_bases, swig_ViewAsSkill_base_names };$/;"	v	file:
_wrap_class_Weapon	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_Weapon = { "Weapon", &SWIGTYPE_p_Weapon,_wrap_new_Weapon, swig_delete_Weapon, swig_Weapon_methods, swig_Weapon_attributes, swig_Weapon_bases, swig_Weapon_base_names };$/;"	v	file:
_wrap_class_WrappedCard	swig/sanguosha_wrap.cxx	/^static swig_lua_class _wrap_class_WrappedCard = { "WrappedCard", &SWIGTYPE_p_WrappedCard,0, swig_delete_WrappedCard, swig_WrappedCard_methods, swig_WrappedCard_attributes, swig_WrappedCard_bases, swig_WrappedCard_base_names };$/;"	v	file:
_wrap_new_Armor	swig/sanguosha_wrap.cxx	/^static int _wrap_new_Armor(lua_State* L) {$/;"	f	file:
_wrap_new_CardEffectStruct	swig/sanguosha_wrap.cxx	/^static int _wrap_new_CardEffectStruct(lua_State* L) {$/;"	f	file:
_wrap_new_CardList	swig/sanguosha_wrap.cxx	/^static int _wrap_new_CardList(lua_State* L) {$/;"	f	file:
_wrap_new_CardMoveReason	swig/sanguosha_wrap.cxx	/^static int _wrap_new_CardMoveReason(lua_State* L) {$/;"	f	file:
_wrap_new_CardMoveReason__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_new_CardMoveReason__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_new_CardMoveReason__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_new_CardMoveReason__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_new_CardMoveReason__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_new_CardMoveReason__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_new_CardMoveReason__SWIG_3	swig/sanguosha_wrap.cxx	/^static int _wrap_new_CardMoveReason__SWIG_3(lua_State* L) {$/;"	f	file:
_wrap_new_CardUseStruct	swig/sanguosha_wrap.cxx	/^static int _wrap_new_CardUseStruct(lua_State* L) {$/;"	f	file:
_wrap_new_CardsMoveList	swig/sanguosha_wrap.cxx	/^static int _wrap_new_CardsMoveList(lua_State* L) {$/;"	f	file:
_wrap_new_CardsMoveOneTimeStruct	swig/sanguosha_wrap.cxx	/^static int _wrap_new_CardsMoveOneTimeStruct(lua_State* L) {$/;"	f	file:
_wrap_new_CardsMoveStruct	swig/sanguosha_wrap.cxx	/^static int _wrap_new_CardsMoveStruct(lua_State* L) {$/;"	f	file:
_wrap_new_ClientPlayer	swig/sanguosha_wrap.cxx	/^static int _wrap_new_ClientPlayer(lua_State* L) {$/;"	f	file:
_wrap_new_DamageStruct	swig/sanguosha_wrap.cxx	/^static int _wrap_new_DamageStruct(lua_State* L) {$/;"	f	file:
_wrap_new_DefensiveHorse	swig/sanguosha_wrap.cxx	/^static int _wrap_new_DefensiveHorse(lua_State* L) {$/;"	f	file:
_wrap_new_DefensiveHorse__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_new_DefensiveHorse__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_new_DefensiveHorse__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_new_DefensiveHorse__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_new_DelayedTrickList	swig/sanguosha_wrap.cxx	/^static int _wrap_new_DelayedTrickList(lua_State* L) {$/;"	f	file:
_wrap_new_DyingStruct	swig/sanguosha_wrap.cxx	/^static int _wrap_new_DyingStruct(lua_State* L) {$/;"	f	file:
_wrap_new_Engine	swig/sanguosha_wrap.cxx	/^static int _wrap_new_Engine(lua_State* L) {$/;"	f	file:
_wrap_new_General	swig/sanguosha_wrap.cxx	/^static int _wrap_new_General(lua_State* L) {$/;"	f	file:
_wrap_new_General__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_new_General__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_new_General__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_new_General__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_new_General__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_new_General__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_new_General__SWIG_3	swig/sanguosha_wrap.cxx	/^static int _wrap_new_General__SWIG_3(lua_State* L) {$/;"	f	file:
_wrap_new_General__SWIG_4	swig/sanguosha_wrap.cxx	/^static int _wrap_new_General__SWIG_4(lua_State* L) {$/;"	f	file:
_wrap_new_IntList	swig/sanguosha_wrap.cxx	/^static int _wrap_new_IntList(lua_State* L) {$/;"	f	file:
_wrap_new_ItemList	swig/sanguosha_wrap.cxx	/^static int _wrap_new_ItemList(lua_State* L) {$/;"	f	file:
_wrap_new_JudgeStruct	swig/sanguosha_wrap.cxx	/^static int _wrap_new_JudgeStruct(lua_State* L) {$/;"	f	file:
_wrap_new_LogMessage	swig/sanguosha_wrap.cxx	/^static int _wrap_new_LogMessage(lua_State* L) {$/;"	f	file:
_wrap_new_LuaAI	swig/sanguosha_wrap.cxx	/^static int _wrap_new_LuaAI(lua_State* L) {$/;"	f	file:
_wrap_new_LuaDistanceSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_new_LuaDistanceSkill(lua_State* L) {$/;"	f	file:
_wrap_new_LuaFilterSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_new_LuaFilterSkill(lua_State* L) {$/;"	f	file:
_wrap_new_LuaMaxCardsSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_new_LuaMaxCardsSkill(lua_State* L) {$/;"	f	file:
_wrap_new_LuaProhibitSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_new_LuaProhibitSkill(lua_State* L) {$/;"	f	file:
_wrap_new_LuaSkillCard	swig/sanguosha_wrap.cxx	/^static int _wrap_new_LuaSkillCard(lua_State* L) {$/;"	f	file:
_wrap_new_LuaTriggerSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_new_LuaTriggerSkill(lua_State* L) {$/;"	f	file:
_wrap_new_LuaViewAsSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_new_LuaViewAsSkill(lua_State* L) {$/;"	f	file:
_wrap_new_OffensiveHorse	swig/sanguosha_wrap.cxx	/^static int _wrap_new_OffensiveHorse(lua_State* L) {$/;"	f	file:
_wrap_new_OffensiveHorse__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_new_OffensiveHorse__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_new_OffensiveHorse__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_new_OffensiveHorse__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_new_Package	swig/sanguosha_wrap.cxx	/^static int _wrap_new_Package(lua_State* L) {$/;"	f	file:
_wrap_new_PhaseChangeStruct	swig/sanguosha_wrap.cxx	/^static int _wrap_new_PhaseChangeStruct(lua_State* L) {$/;"	f	file:
_wrap_new_PhaseList	swig/sanguosha_wrap.cxx	/^static int _wrap_new_PhaseList(lua_State* L) {$/;"	f	file:
_wrap_new_PindianStruct	swig/sanguosha_wrap.cxx	/^static int _wrap_new_PindianStruct(lua_State* L) {$/;"	f	file:
_wrap_new_PlaceList	swig/sanguosha_wrap.cxx	/^static int _wrap_new_PlaceList(lua_State* L) {$/;"	f	file:
_wrap_new_PlayerList	swig/sanguosha_wrap.cxx	/^static int _wrap_new_PlayerList(lua_State* L) {$/;"	f	file:
_wrap_new_QObject	swig/sanguosha_wrap.cxx	/^static int _wrap_new_QObject(lua_State* L) {$/;"	f	file:
_wrap_new_QRegExp	swig/sanguosha_wrap.cxx	/^static int _wrap_new_QRegExp(lua_State* L) {$/;"	f	file:
_wrap_new_QThread	swig/sanguosha_wrap.cxx	/^static int _wrap_new_QThread(lua_State* L) {$/;"	f	file:
_wrap_new_QVariant	swig/sanguosha_wrap.cxx	/^static int _wrap_new_QVariant(lua_State* L) {$/;"	f	file:
_wrap_new_QVariant__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_new_QVariant__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_new_QVariant__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_new_QVariant__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_new_QVariant__SWIG_2	swig/sanguosha_wrap.cxx	/^static int _wrap_new_QVariant__SWIG_2(lua_State* L) {$/;"	f	file:
_wrap_new_QVariant__SWIG_3	swig/sanguosha_wrap.cxx	/^static int _wrap_new_QVariant__SWIG_3(lua_State* L) {$/;"	f	file:
_wrap_new_RecoverStruct	swig/sanguosha_wrap.cxx	/^static int _wrap_new_RecoverStruct(lua_State* L) {$/;"	f	file:
_wrap_new_Room	swig/sanguosha_wrap.cxx	/^static int _wrap_new_Room(lua_State* L) {$/;"	f	file:
_wrap_new_RoomThread	swig/sanguosha_wrap.cxx	/^static int _wrap_new_RoomThread(lua_State* L) {$/;"	f	file:
_wrap_new_SPConvertSkill	swig/sanguosha_wrap.cxx	/^static int _wrap_new_SPConvertSkill(lua_State* L) {$/;"	f	file:
_wrap_new_SPlayerList	swig/sanguosha_wrap.cxx	/^static int _wrap_new_SPlayerList(lua_State* L) {$/;"	f	file:
_wrap_new_ServerPlayer	swig/sanguosha_wrap.cxx	/^static int _wrap_new_ServerPlayer(lua_State* L) {$/;"	f	file:
_wrap_new_Skill	swig/sanguosha_wrap.cxx	/^static int _wrap_new_Skill(lua_State* L) {$/;"	f	file:
_wrap_new_SkillCard	swig/sanguosha_wrap.cxx	/^static int _wrap_new_SkillCard(lua_State* L) {$/;"	f	file:
_wrap_new_SkillList	swig/sanguosha_wrap.cxx	/^static int _wrap_new_SkillList(lua_State* L) {$/;"	f	file:
_wrap_new_Skill__SWIG_0	swig/sanguosha_wrap.cxx	/^static int _wrap_new_Skill__SWIG_0(lua_State* L) {$/;"	f	file:
_wrap_new_Skill__SWIG_1	swig/sanguosha_wrap.cxx	/^static int _wrap_new_Skill__SWIG_1(lua_State* L) {$/;"	f	file:
_wrap_new_SlashEffectStruct	swig/sanguosha_wrap.cxx	/^static int _wrap_new_SlashEffectStruct(lua_State* L) {$/;"	f	file:
_wrap_new_TrustAI	swig/sanguosha_wrap.cxx	/^static int _wrap_new_TrustAI(lua_State* L) {$/;"	f	file:
_wrap_new_Weapon	swig/sanguosha_wrap.cxx	/^static int _wrap_new_Weapon(lua_State* L) {$/;"	f	file:
a	include/freetype/freetype/freetype.h	/^  FT_CeilFix( FT_Fixed  a );$/;"	v
a	include/freetype/freetype/freetype.h	/^  FT_FloorFix( FT_Fixed  a );$/;"	v
a	include/freetype/freetype/freetype.h	/^  FT_RoundFix( FT_Fixed  a );$/;"	v
abitmap	include/freetype/freetype/ftbitmap.h	/^  FT_Bitmap_New( FT_Bitmap  *abitmap );$/;"	v
abs_index	src/lua/lauxlib.c	32;"	d	file:
absolute	lua/lib/socket/url.lua	/^function absolute(base_url, relative_url)$/;"	f
absolute_path	lua/lib/socket/url.lua	/^local function absolute_path(base_path, relative_path)$/;"	f
accept	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::accept(){$/;"	f	class:CustomAssignDialog
accept	src/dialog/customassigndialog.cpp	/^void SkillAssignDialog::accept(){$/;"	f	class:SkillAssignDialog
accept	src/dialog/mainwindow.cpp	/^void BroadcastBox::accept(){$/;"	f	class:BroadcastBox
accept	src/dialog/roleassigndialog.cpp	/^void RoleAssignDialog::accept(){$/;"	f	class:RoleAssignDialog
accept	src/ui/roomscene.cpp	/^void DamageMakerDialog::accept(){$/;"	f	class:DamageMakerDialog
accept	src/ui/roomscene.cpp	/^void DeathNoteDialog::accept(){$/;"	f	class:DeathNoteDialog
access_glyph_frame	include/freetype/freetype/internal/tttypes.h	/^    TT_Loader_StartGlyphFunc  access_glyph_frame;$/;"	m	struct:TT_FaceRec_
achVendID	include/freetype/freetype/tttables.h	/^    FT_Char    achVendID[4];$/;"	m	struct:TT_OS2_
acquireLock	src/server/serverplayer.h	/^    inline void acquireLock(SemaphoreType type){ semas[type]->acquire(); }$/;"	f	class:ServerPlayer
acquireSkill	src/core/player.cpp	/^void Player::acquireSkill(const QString &skill_name){$/;"	f	class:Player
acquireSkill	src/server/room.cpp	/^void Room::acquireSkill(ServerPlayer *player, const QString &skill_name, bool open){$/;"	f	class:Room
acquireSkill	src/server/room.cpp	/^void Room::acquireSkill(ServerPlayer *player, const Skill *skill, bool open){$/;"	f	class:Room
acquireSkill	src/ui/roomscene.cpp	/^void RoomScene::acquireSkill(const ClientPlayer *player, const QString &skill_name){$/;"	f	class:RoomScene
acquired_skills	src/core/player.h	/^    QSet<QString> acquired_skills;$/;"	m	class:Player
action3v3	src/server/roomthread.cpp	/^void RoomThread::action3v3(ServerPlayer *player){$/;"	f	class:RoomThread
activate	src/client/client.cpp	/^void Client::activate(const Json::Value& playerId){    $/;"	f	class:Client
activate	src/server/ai.cpp	/^void TrustAI::activate(CardUseStruct &card_use){$/;"	f	class:TrustAI
activate	src/server/room.cpp	/^void Room::activate(ServerPlayer *player, CardUseStruct &card_use){$/;"	f	class:Room
activate	swig/sanguosha_wrap.cxx	/^void LuaAI::activate(CardUseStruct &card_use) {$/;"	f	class:LuaAI
actvar	src/lua/lparser.h	/^  unsigned short actvar[LUAI_MAXVARS];  \/* declared-variable stack *\/$/;"	m	struct:FuncState
add	include/freetype/freetype/internal/psaux.h	/^    (*add)( PS_Table    table,$/;"	m	struct:PS_Table_FuncsRec_
add2nd	src/server/server.h	/^    QPushButton* add2nd;$/;"	m	class:BanlistDialog
add2ndGeneral	src/server/server.cpp	/^void BanlistDialog::add2ndGeneral(const QString &name){$/;"	f	class:BanlistDialog
addBanPackage	src/core/engine.cpp	/^void Engine::addBanPackage(const QString &package_name){$/;"	f	class:Engine
addButton	src/ui/chatwidget.cpp	/^QPushButton *ChatWidget::addButton(const QString &name, int x){$/;"	f	class:ChatWidget
addButton	src/ui/startscene.cpp	/^void StartScene::addButton(QAction *action){$/;"	f	class:StartScene
addCard	src/client/clientplayer.cpp	/^void ClientPlayer::addCard(const Card *card, Place place){$/;"	f	class:ClientPlayer
addCard	src/dialog/cardoverview.cpp	/^void CardOverview::addCard(int i, const Card *card){$/;"	f	class:CardOverview
addCard	src/dialog/customassigndialog.cpp	/^void CardAssignDialog::addCard(const Card *card){$/;"	f	class:CardAssignDialog
addCard	src/server/serverplayer.cpp	/^void ServerPlayer::addCard(const Card *card, Place place){$/;"	f	class:ServerPlayer
addCardItems	src/ui/GenericCardContainerUI.cpp	/^void GenericCardContainer::addCardItems(QList<CardItem*> &card_items, Player::Place place)$/;"	f	class:GenericCardContainer
addChildValues_	src/jsoncpp/include/json/writer.h	/^      bool addChildValues_;$/;"	m	class:Json::StyledStreamWriter
addChildValues_	src/jsoncpp/include/json/writer.h	/^      bool addChildValues_;$/;"	m	class:Json::StyledWriter
addCloseButton	src/ui/cardcontainer.cpp	/^void CardContainer::addCloseButton(bool dispose){$/;"	f	class:CardContainer
addCloseButton	src/ui/window.cpp	/^void Window::addCloseButton(const QString &label)$/;"	f	class:Window
addComment	src/jsoncpp/src/json_reader.cpp	/^Reader::addComment( Location begin, $/;"	f	class:Json::Reader
addContent	src/ui/window.cpp	/^void Window::addContent(const QString &content){$/;"	f	class:Window
addCopyAction	src/dialog/generaloverview.cpp	/^void GeneralOverview::addCopyAction(QCommandLinkButton *button){$/;"	f	class:GeneralOverview
addDelayedTrick	src/core/player.cpp	/^void Player::addDelayedTrick(const Card *trick){$/;"	f	class:Player
addDelayedTricks	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::addDelayedTricks(QList<CardItem*> &tricks)$/;"	f	class:PlayerCardContainer
addEquips	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::addEquips(QList<CardItem*> &equips)$/;"	f	class:PlayerCardContainer
addError	src/jsoncpp/src/json_reader.cpp	/^Reader::addError( const std::string &message, $/;"	f	class:Json::Reader
addErrorAndRecover	src/jsoncpp/src/json_reader.cpp	/^Reader::addErrorAndRecover( const std::string &message, $/;"	f	class:Json::Reader
addEvent	src/core/lua-wrapper.cpp	/^void LuaTriggerSkill::addEvent(TriggerEvent event){$/;"	f	class:LuaTriggerSkill
addGeneral	src/server/server.cpp	/^void BanlistDialog::addGeneral(const QString &name){$/;"	f	class:BanlistDialog
addGenerals	src/package/standard-generals.cpp	/^void StandardPackage::addGenerals(){$/;"	f	class:StandardPackage
addHandCards	src/ui/dashboard.cpp	/^void Dashboard::addHandCards(QList<CardItem*> &card_items)$/;"	f	class:Dashboard
addHistory	src/client/client.cpp	/^void Client::addHistory(const QString &add_str){$/;"	f	class:Client
addHistory	src/core/player.cpp	/^void Player::addHistory(const QString &name, int times){$/;"	f	class:Player
addKeyFrame	src/ui/sprite.cpp	/^void Sprite::addKeyFrame(int time, const QString &property, qreal value, QEasingCurve::Type easing)$/;"	f	class:Sprite
addKnownHandCard	src/client/clientplayer.cpp	/^void ClientPlayer::addKnownHandCard(const Card *card){$/;"	f	class:ClientPlayer
addLines	src/dialog/generaloverview.cpp	/^void GeneralOverview::addLines(const Skill *skill){$/;"	f	class:GeneralOverview
addMark	src/core/player.cpp	/^void Player::addMark(const QString &mark){$/;"	f	class:Player
addMetaObject	src/package/package.h	/^    void addMetaObject(){$/;"	f	class:Package
addNPC	src/scenario/miniscenarios.cpp	/^void MiniSceneRule::addNPC(QString feature)$/;"	f	class:MiniSceneRule
addPackage	src/core/engine.cpp	/^void Engine::addPackage(Package *package){$/;"	f	class:Engine
addPackage	src/core/engine.cpp	/^void Engine::addPackage(const QString &name){$/;"	f	class:Engine
addPair	src/server/server.cpp	/^void BanlistDialog::addPair(const QString &first, const QString &second){$/;"	f	class:BanlistDialog
addPathInArg	src/jsoncpp/src/json_value.cpp	/^Path::addPathInArg( const std::string &path, $/;"	f	class:Json::Path
addPlayer	src/client/client.cpp	/^void Client::addPlayer(const QString &player_info){$/;"	f	class:Client
addPlayer	src/ui/roomscene.cpp	/^void RoomScene::addPlayer(ClientPlayer *player){$/;"	f	class:RoomScene
addPlayerSkills	src/server/roomthread.cpp	/^void RoomThread::addPlayerSkills(ServerPlayer *player, bool invoke_game_start){$/;"	f	class:RoomThread
addRelateSkill	src/core/general.cpp	/^void General::addRelateSkill(const QString &skill_name){$/;"	f	class:General
addRestartButton	src/ui/roomscene.cpp	/^void RoomScene::addRestartButton(QDialog *dialog){$/;"	f	class:RoomScene
addRobot	src/client/client.cpp	/^void Client::addRobot(){$/;"	f	class:Client
addRobotCommand	src/server/room.cpp	/^void Room::addRobotCommand(ServerPlayer *player, const QString &){$/;"	f	class:Room
addScenario	src/core/engine.cpp	/^void Engine::addScenario(Scenario *scenario){$/;"	f	class:Engine
addScenario	src/core/engine.cpp	/^void Engine::addScenario(const QString &name){$/;"	f	class:Engine
addServerAddress	src/dialog/connectiondialog.cpp	/^void UdpDetectorDialog::addServerAddress(const QString &server_name, const QString &address){$/;"	f	class:UdpDetectorDialog
addSkill	src/core/general.cpp	/^void General::addSkill(Skill *skill){$/;"	f	class:General
addSkill	src/core/general.cpp	/^void General::addSkill(const QString &skill_name){$/;"	f	class:General
addSkill	src/core/player.cpp	/^void Player::addSkill(const QString &skill_name){$/;"	f	class:Player
addSkill	src/dialog/cardeditor.cpp	/^void CardEditor::addSkill(){$/;"	f	class:CardEditor
addSkill	src/dialog/cardeditor.cpp	/^void SkillBox::addSkill(const QString &text){$/;"	f	class:SkillBox
addSkill	src/dialog/customassigndialog.cpp	/^void SkillAssignDialog::addSkill(){$/;"	f	class:SkillAssignDialog
addSkill	src/server/serverplayer.cpp	/^void ServerPlayer::addSkill(const QString &skill_name){$/;"	f	class:ServerPlayer
addSkillButton	src/ui/dashboard.cpp	/^QSanSkillButton *Dashboard::addSkillButton(const QString &skillName)$/;"	f	class:Dashboard
addSkillButton	src/ui/qsanbutton.h	/^    inline void addSkillButton(QSanInvokeSkillButton* button)$/;"	f	class:QSanInvokeSkillDock
addSkillButton	src/ui/roomscene.cpp	/^void RoomScene::addSkillButton(const Skill *skill, bool from_left){$/;"	f	class:RoomScene
addSkillButtonByName	src/ui/qsanbutton.cpp	/^QSanSkillButton* QSanInvokeSkillDock::addSkillButtonByName(const QString& skillName)$/;"	f	class:QSanInvokeSkillDock
addSkills	src/core/engine.cpp	/^void Engine::addSkills(const QList<const Skill *> &all_skills){$/;"	f	class:Engine
addSocket	src/server/room.cpp	/^ServerPlayer *Room::addSocket(ClientSocket *socket){$/;"	f	class:Room
addSubcard	src/core/WrappedCard.h	/^    inline virtual void addSubcard(const Card *card) { Q_ASSERT(false); }$/;"	f	class:WrappedCard
addSubcard	src/core/WrappedCard.h	/^    inline virtual void addSubcard(int card_id) { Q_ASSERT(false); }$/;"	f	class:WrappedCard
addSubcard	src/core/card.cpp	/^void Card::addSubcard(const Card *card){$/;"	f	class:Card
addSubcard	src/core/card.cpp	/^void Card::addSubcard(int card_id){$/;"	f	class:Card
addSubcards	src/core/WrappedCard.h	/^    inline virtual void addSubcards(const QList<const Card *> &cards) { Q_ASSERT(false); }$/;"	f	class:WrappedCard
addSubcards	src/core/card.cpp	/^void Card::addSubcards(const QList<const Card *> &cards){$/;"	f	class:Card
addToPile	src/server/serverplayer.cpp	/^void ServerPlayer::addToPile(const QString &pile_name, QList<int> card_ids, bool open){$/;"	f	class:ServerPlayer
addToPile	src/server/serverplayer.cpp	/^void ServerPlayer::addToPile(const QString &pile_name, const Card *card, bool open){$/;"	f	class:ServerPlayer
addToPile	src/server/serverplayer.cpp	/^void ServerPlayer::addToPile(const QString &pile_name, int card_id, bool open){$/;"	f	class:ServerPlayer
addToSelected	src/server/serverplayer.cpp	/^void ServerPlayer::addToSelected(const QString &general){$/;"	f	class:ServerPlayer
addTranslationEntry	src/core/engine.cpp	/^void Engine::addTranslationEntry(const char *key, const char *value){$/;"	f	class:Engine
addTriggerSkill	src/server/roomthread.cpp	/^void RoomThread::addTriggerSkill(const TriggerSkill *skill){$/;"	f	class:RoomThread
addVictim	src/server/serverplayer.cpp	/^void ServerPlayer::addVictim(ServerPlayer *victim){$/;"	f	class:ServerPlayer
addWidget	src/ui/chatwidget.cpp	/^QGraphicsProxyWidget *ChatWidget::addWidget(QWidget *widget, int x){$/;"	f	class:ChatWidget
add_contour	include/freetype/freetype/internal/psaux.h	/^    T1_Builder_Add_Contour_Func    add_contour;$/;"	m	struct:T1_Builder_FuncsRec_
add_point	include/freetype/freetype/internal/psaux.h	/^    T1_Builder_Add_Point_Func      add_point;$/;"	m	struct:T1_Builder_FuncsRec_
add_point1	include/freetype/freetype/internal/psaux.h	/^    T1_Builder_Add_Point1_Func     add_point1;$/;"	m	struct:T1_Builder_FuncsRec_
add_robot	src/ui/roomscene.h	/^    Button* add_robot, *fill_robots;$/;"	m	class:RoomScene
add_s	src/lua/lstrlib.c	/^static void add_s (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
add_value	src/lua/lstrlib.c	/^static void add_value (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
addfield	src/lua/ltablib.c	/^static void addfield (lua_State *L, luaL_Buffer *b, int i) {$/;"	f	file:
addinfo	src/lua/ldebug.c	/^static void addinfo (lua_State *L, const char *msg) {$/;"	f	file:
addintlen	src/lua/lstrlib.c	/^static void addintlen (char *form) {$/;"	f	file:
addk	src/lua/lcode.c	/^static int addk (FuncState *fs, TValue *k, TValue *v) {$/;"	f	file:
addquoted	src/lua/lstrlib.c	/^static void addquoted (lua_State *L, luaL_Buffer *b, int arg) {$/;"	f	file:
addr_map	src/breakpad/processor/static_address_map_unittest.cc	/^  AddrMap addr_map[kNumberTestCases];$/;"	m	class:TestStaticAddressMap	file:
addr_serializer_	src/breakpad/processor/map_serializers.h	/^  SimpleSerializer<AddrType> addr_serializer_;$/;"	m	class:google_breakpad::ContainedRangeMapSerializer
address	src/breakpad/processor/range_map_unittest.cc	/^  AddressType address;$/;"	m	struct:__anon84::RangeTest	file:
address	src/breakpad/processor/source_line_resolver_base_types.h	/^  MemAddr address;$/;"	m	struct:google_breakpad::SourceLineResolverBase::Function
address	src/breakpad/processor/source_line_resolver_base_types.h	/^  MemAddr address;$/;"	m	struct:google_breakpad::SourceLineResolverBase::Line
address	src/breakpad/processor/source_line_resolver_base_types.h	/^  MemAddr address;$/;"	m	struct:google_breakpad::SourceLineResolverBase::PublicSymbol
address	src/breakpad/processor/static_range_map_unittest.cc	/^  AddressType address;$/;"	m	struct:__anon85::RangeTest	file:
address_	src/breakpad/processor/synth_minidump.h	/^  u_int64_t address_;$/;"	m	class:google_breakpad::SynthMinidump::Memory
address_edit	src/server/server.h	/^    QLineEdit *address_edit;$/;"	m	class:ServerDialog
address_label	src/client/clientstruct.h	/^    QLabel *address_label;$/;"	m	class:ServerInfoWidget
address_map_	src/breakpad/processor/map_serializers_unittest.cc	/^  google_breakpad::AddressMap<AddrType, EntryType> address_map_;$/;"	m	class:TestAddressMapSerializer	file:
address_serializer_	src/breakpad/processor/map_serializers.h	/^  SimpleSerializer<Address> address_serializer_;$/;"	m	class:google_breakpad::RangeMapSerializer
addresses	src/server/server.h	/^    QSet<QString> addresses;$/;"	m	class:Server
adjust	src/ui/cardcontainer.cpp	/^void GuanxingBox::adjust(){$/;"	f	class:GuanxingBox
adjustCards	src/ui/TablePile.cpp	/^void TablePile::adjustCards()$/;"	f	class:TablePile
adjustCards	src/ui/dashboard.cpp	/^void Dashboard::adjustCards(bool playAnimation){$/;"	f	class:Dashboard
adjustItems	src/ui/roomscene.cpp	/^void RoomScene::adjustItems()$/;"	f	class:RoomScene
adjustSeats	src/server/room.cpp	/^void Room::adjustSeats(){$/;"	f	class:Room
adjust_assign	src/lua/lparser.c	/^static void adjust_assign (LexState *ls, int nvars, int nexps, expdesc *e) {$/;"	f	file:
adjust_headers	lua/lib/socket/smtp.lua	/^local function adjust_headers(mesgt)$/;"	f
adjust_varargs	src/lua/ldo.c	/^static StkId adjust_varargs (lua_State *L, Proto *p, int actual) {$/;"	f	file:
adjustheaders	lua/lib/socket/http.lua	/^local function adjustheaders(reqt)$/;"	f
adjustlocalvars	src/lua/lparser.c	/^static void adjustlocalvars (LexState *ls, int nvars) {$/;"	f	file:
adjustproxy	lua/lib/socket/http.lua	/^local function adjustproxy(reqt)$/;"	f
adjustrequest	lua/lib/socket/http.lua	/^local function adjustrequest(reqt)$/;"	f
adjustresults	src/lua/lapi.c	768;"	d	file:
adjuststack	src/lua/lauxlib.c	/^static void adjuststack (luaL_Buffer *B) {$/;"	f	file:
adjusturi	lua/lib/socket/http.lua	/^local function adjusturi(reqt)$/;"	f
advance	include/freetype/freetype/freetype.h	/^    FT_Vector         advance;$/;"	m	struct:FT_GlyphSlotRec_
advance	include/freetype/freetype/ftglyph.h	/^    FT_Vector              advance;$/;"	m	struct:FT_GlyphRec_
advance	include/freetype/freetype/ftincrem.h	/^    FT_Long  advance;$/;"	m	struct:FT_Incremental_MetricsRec_
advance	include/freetype/freetype/internal/psaux.h	/^    FT_Vector       advance;$/;"	m	struct:T1_BuilderRec_
advance	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte  advance;$/;"	m	struct:TT_SBit_Small_Metrics_
advance	include/freetype/freetype/internal/tttypes.h	/^    FT_Int           advance;$/;"	m	struct:TT_LoaderRec_
advance	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  advance;$/;"	m	struct:TT_LongMetricsRec_
advance	src/ui/pixmapanimation.cpp	/^void PixmapAnimation::advance(int phase)$/;"	f	class:PixmapAnimation
advance_Height_Max	include/freetype/freetype/tttables.h	/^    FT_UShort  advance_Height_Max;      \/* advance height maximum *\/$/;"	m	struct:TT_VertHeader_
advance_Width_Max	include/freetype/freetype/tttables.h	/^    FT_UShort  advance_Width_Max;      \/* advance width maximum *\/$/;"	m	struct:TT_HoriHeader_
advance_v	include/freetype/freetype/ftincrem.h	/^    FT_Long  advance_v;     \/* since 2.3.12 *\/$/;"	m	struct:FT_Incremental_MetricsRec_
afm_data	include/freetype/freetype/internal/t1types.h	/^    const void*     afm_data;$/;"	m	struct:T1_FaceRec_
afm_parser_funcs	include/freetype/freetype/internal/psaux.h	/^    const AFM_Parser_FuncsRec*  afm_parser_funcs;$/;"	m	struct:PSAux_ServiceRec_
age	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t  age;               \/* revision of PDB file *\/$/;"	m	struct:__anon28
age	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t age;               \/* Identifies incremental changes to PDB file *\/$/;"	m	struct:__anon29
aggressive	src/package/standard.h	/^    bool aggressive;$/;"	m	class:TrickCard
ai	src/server/serverplayer.h	/^    AI *ai;$/;"	m	class:ServerPlayer
ai_chat_checkbox	src/server/server.h	/^    QCheckBox *ai_chat_checkbox;$/;"	m	class:ServerDialog
ai_delay_spinbox	src/server/server.h	/^    QSpinBox *ai_delay_spinbox;$/;"	m	class:ServerDialog
ai_enable_checkbox	src/server/server.h	/^    QCheckBox *ai_enable_checkbox;$/;"	m	class:ServerDialog
ais	src/server/room.h	/^    QList<AI *> ais;$/;"	m	class:Room
alibrary	include/freetype/freetype/freetype.h	/^  FT_Init_FreeType( FT_Library  *alibrary );$/;"	v
alive	src/core/player.h	/^    bool alive;$/;"	m	class:Player
aliveCount	src/client/clientplayer.cpp	/^int ClientPlayer::aliveCount() const{$/;"	f	class:ClientPlayer
aliveCount	src/server/serverplayer.cpp	/^int ServerPlayer::aliveCount() const{$/;"	f	class:ServerPlayer
alivePlayerCount	src/client/client.cpp	/^int Client::alivePlayerCount() const{$/;"	f	class:Client
alivePlayerCount	src/server/room.cpp	/^int Room::alivePlayerCount() const{$/;"	f	class:Room
aliveRoles	src/server/room.cpp	/^QStringList Room::aliveRoles(ServerPlayer *except) const{$/;"	f	class:Room
alive_count	src/client/client.h	/^    int alive_count;$/;"	m	class:Client
all	src/jsoncpp/src/json_reader.cpp	/^Features::all()$/;"	f	class:Json::Features
alloc	include/freetype/freetype/ftsystem.h	/^    FT_Alloc_Func    alloc;$/;"	m	struct:FT_MemoryRec_
allocate	src/jsoncpp/src/json_batchallocator.h	/^   AllocatedType *allocate()$/;"	f	class:Json::BatchAllocator
allocateBatch	src/jsoncpp/src/json_batchallocator.h	/^   static BatchInfo *allocateBatch( unsigned int objectsPerPage )$/;"	f	class:Json::BatchAllocator
allocates_base_pointer	src/breakpad/processor/windows_frame_info.h	/^  bool allocates_base_pointer;$/;"	m	struct:google_breakpad::WindowsFrameInfo
allocation_base	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int64_t allocation_base;        \/* Base address of a range of pages$/;"	m	struct:__anon45
allocation_protection	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t allocation_protection;  \/* Memory protection when this region$/;"	m	struct:__anon45
allowComments_	src/jsoncpp/include/json/features.h	/^      bool allowComments_;$/;"	m	class:Json::Features
allowhook	src/lua/lstate.h	/^  lu_byte allowhook;$/;"	m	struct:lua_State
alternate_name	src/breakpad/processor/cfi_frame_info.h	/^    const char *alternate_name;$/;"	m	struct:google_breakpad::SimpleCFIWalker::RegisterSet
amd64	src/breakpad/google_breakpad/processor/minidump.h	/^    MDRawContextAMD64* amd64;$/;"	m	union:google_breakpad::MinidumpContext::__anon65
amd_extended_cpu_features	src/breakpad/google_breakpad/common/minidump_format.h	/^    u_int32_t amd_extended_cpu_features;  \/* cpuid 0x80000001, ebx *\/$/;"	m	struct:__anon36::__anon37
analeptic	src/package/yjcm-package.cpp	/^    const Analeptic *analeptic;$/;"	m	class:Jiushi	file:
anchorEnabled	src/ui/magatamasItem.h	/^    bool anchorEnabled;$/;"	m	class:MagatamasBoxItem
anchor_token	src/lua/lparser.c	/^static void anchor_token (LexState *ls) {$/;"	f	file:
angle	include/freetype/freetype/fttrigon.h	/^  FT_Cos( FT_Angle  angle );$/;"	v
angle	include/freetype/freetype/fttrigon.h	/^  FT_Sin( FT_Angle  angle );$/;"	v
angle	include/freetype/freetype/fttrigon.h	/^  FT_Tan( FT_Angle  angle );$/;"	v
animate	src/client/client.cpp	/^void Client::animate(const QString &animate_str){$/;"	f	class:Client
animatePopup	src/ui/roomscene.cpp	/^void RoomScene::animatePopup(const QString &name, const QStringList &args)$/;"	f	class:RoomScene
animations	src/ui/dashboard.h	/^    EffectAnimation *animations;$/;"	m	class:Dashboard
animations	src/ui/roomscene.h	/^    EffectAnimation *animations;$/;"	m	class:RoomScene
announce_ip_checkbox	src/server/server.h	/^    QCheckBox *announce_ip_checkbox;$/;"	m	class:ServerDialog
anonymous_parameters	lua/lib/sqlite3.lua	/^  local function anonymous_parameters(handles)$/;"	f
anxu_skill.getTurnUseCard	lua/ai/yjcm2012-ai.lua	/^anxu_skill.getTurnUseCard=function(self)$/;"	f
api_check	src/lua/llimits.h	58;"	d
api_check	src/lua/llimits.h	64;"	d
api_checknelems	src/lua/lapi.c	41;"	d	file:
api_checkvalidindex	src/lua/lapi.c	43;"	d	file:
api_incr_top	src/lua/lapi.c	45;"	d	file:
appear	src/ui/window.cpp	/^void Window::appear(){$/;"	f	class:Window
append	src/jsoncpp/src/json_value.cpp	/^Value::append( const Value &value )$/;"	f	class:Json::Value
append	src/ui/clientlogbox.cpp	/^void ClientLogBox::append(const QString &text)$/;"	f	class:ClientLogBox
appendChatBox	src/ui/roomscene.cpp	/^void RoomScene::appendChatBox(QString txt){$/;"	f	class:RoomScene
appendChatEdit	src/ui/roomscene.cpp	/^void RoomScene::appendChatEdit(QString txt){$/;"	f	class:RoomScene
appendLog	src/ui/clientlogbox.cpp	/^void ClientLogBox::appendLog($/;"	f	class:ClientLogBox
appendLog	src/ui/clientlogbox.cpp	/^void ClientLogBox::appendLog(const QString &log_str){$/;"	f	class:ClientLogBox
appendSeparator	src/ui/clientlogbox.cpp	/^void ClientLogBox::appendSeparator(){$/;"	f	class:ClientLogBox
apply	include/freetype/freetype/internal/pshints.h	/^    T1_Hints_ApplyFunc     apply;$/;"	m	struct:T1_Hints_FuncsRec_
apply	include/freetype/freetype/internal/pshints.h	/^    T2_Hints_ApplyFunc    apply;$/;"	m	struct:T2_Hints_FuncsRec_
applyDamage	src/server/room.cpp	/^void Room::applyDamage(ServerPlayer *victim, const DamageStruct &damage){$/;"	f	class:Room
arg	src/server/roomthread.h	/^    QString arg;$/;"	m	struct:LogMessage
arg1	include/freetype/freetype/internal/ftgloadr.h	/^    FT_Int     arg1;$/;"	m	struct:FT_SubGlyphRec_
arg2	include/freetype/freetype/internal/ftgloadr.h	/^    FT_Int     arg2;$/;"	m	struct:FT_SubGlyphRec_
arg2	src/server/roomthread.h	/^    QString arg2;$/;"	m	struct:LogMessage
args_	src/jsoncpp/include/json/value.h	/^      Args args_;$/;"	m	class:Json::Path
arith_op	src/lua/lvm.c	360;"	d	file:
arm	src/breakpad/google_breakpad/processor/minidump.h	/^    MDRawContextARM*   arm;$/;"	m	union:google_breakpad::MinidumpContext::__anon65
arm_expected_contents	src/breakpad/processor/synth_minidump_unittest_data.h	/^static const u_int8_t arm_expected_contents[] = {$/;"	v
arm_raw_context	src/breakpad/processor/synth_minidump_unittest_data.h	/^static const MDRawContextARM arm_raw_context = {$/;"	v
armor	src/core/player.h	/^    WrappedCard *weapon, *armor, *defensive_horse, *offensive_horse;$/;"	m	class:Player
arrange	src/client/client.cpp	/^void Client::arrange(const QStringList &order){$/;"	f	class:Client
arrange	src/server/roomthread1v1.cpp	/^void RoomThread1v1::arrange(ServerPlayer *player, const QStringList &arranged){$/;"	f	class:RoomThread1v1
arrange	src/server/roomthread3v3.cpp	/^void RoomThread3v3::arrange(ServerPlayer *player, const QStringList &arranged){$/;"	f	class:RoomThread3v3
arrange1v1	src/server/generalselector.cpp	/^QStringList GeneralSelector::arrange1v1(ServerPlayer *player){$/;"	f	class:GeneralSelector
arrange3v3	src/server/generalselector.cpp	/^QStringList GeneralSelector::arrange3v3(ServerPlayer *player){$/;"	f	class:GeneralSelector
arrangeCommand	src/server/room.cpp	/^void Room::arrangeCommand(ServerPlayer *player, const QString &arg){$/;"	f	class:Room
arrangeSeats	src/client/client.cpp	/^void Client::arrangeSeats(const QString &seats_str){$/;"	f	class:Client
arrangeSeats	src/ui/roomscene.cpp	/^void RoomScene::arrangeSeats(const QList<const ClientPlayer*> &seats){$/;"	f	class:RoomScene
arrange_button	src/ui/roomscene.h	/^    Button *arrange_button;$/;"	m	class:RoomScene
arrange_items	src/ui/roomscene.h	/^    QList<CardItem *> arrange_items;$/;"	m	class:RoomScene
arrange_rects	src/ui/roomscene.h	/^    QList<QGraphicsRectItem *> arrange_rects;$/;"	m	class:RoomScene
array	src/lua/lobject.h	/^  TValue *array;  \/* array part *\/$/;"	m	struct:Table
arrayValue	src/jsoncpp/include/json/value.h	/^      arrayValue,    \/\/\/< array value (ordered list)$/;"	e	enum:Json::ValueType
array_	src/jsoncpp/include/json/value.h	/^         ValueInternalArray *array_;$/;"	m	struct:Json::ValueInternalArray::IteratorState
array_	src/jsoncpp/include/json/value.h	/^         ValueInternalArray *array_;$/;"	m	union:Json::Value::ValueHolder
array_	src/jsoncpp/include/json/value.h	/^         ValueInternalArray::IteratorState array_;$/;"	m	union:Json::ValueIteratorBase::__anon4
array_max	include/freetype/freetype/internal/psaux.h	/^    FT_UInt             array_max;    \/* maximum number of elements for *\/$/;"	m	struct:T1_FieldRec_
arrayindex	src/lua/ltable.c	/^static int arrayindex (const TValue *key) {$/;"	f	file:
asBool	src/jsoncpp/src/json_value.cpp	/^Value::asBool() const$/;"	f	class:Json::Value
asCString	src/jsoncpp/src/json_value.cpp	/^Value::asCString() const$/;"	f	class:Json::Value
asConstString	src/jsoncpp/src/json_value.cpp	/^Value::asConstString() const$/;"	f	class:Json::Value
asDouble	src/jsoncpp/src/json_value.cpp	/^Value::asDouble() const$/;"	f	class:Json::Value
asFloat	src/jsoncpp/src/json_value.cpp	/^Value::asFloat() const$/;"	f	class:Json::Value
asInt	src/jsoncpp/src/json_value.cpp	/^Value::asInt() const$/;"	f	class:Json::Value
asInt64	src/jsoncpp/src/json_value.cpp	/^Value::asInt64() const$/;"	f	class:Json::Value
asLargestInt	src/jsoncpp/src/json_value.cpp	/^Value::asLargestInt() const$/;"	f	class:Json::Value
asLargestUInt	src/jsoncpp/src/json_value.cpp	/^Value::asLargestUInt() const$/;"	f	class:Json::Value
asString	src/jsoncpp/src/json_value.cpp	/^Value::asString() const$/;"	f	class:Json::Value
asUInt	src/jsoncpp/src/json_value.cpp	/^Value::asUInt() const$/;"	f	class:Json::Value
asUInt64	src/jsoncpp/src/json_value.cpp	/^Value::asUInt64() const$/;"	f	class:Json::Value
ascender	include/freetype/freetype/freetype.h	/^    FT_Pos     ascender;    \/* ascender in 26.6 frac. pixels          *\/$/;"	m	struct:FT_Size_Metrics_
ascender	include/freetype/freetype/freetype.h	/^    FT_Short          ascender;$/;"	m	struct:FT_FaceRec_
ascender	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  ascender;$/;"	m	struct:TT_SBit_LineMetricsRec_
ascent	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  ascent;$/;"	m	struct:FT_WinFNT_HeaderRec_
asi	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	/^  u_int64_t     asi;$/;"	m	struct:__anon64
askCard	src/dialog/cardoverview.cpp	/^void CardOverview::askCard(){$/;"	f	class:CardOverview
askCard	src/dialog/customassigndialog.cpp	/^void CardAssignDialog::askCard(){$/;"	f	class:CardAssignDialog
askForAG	src/client/client.cpp	/^void Client::askForAG(const Json::Value &arg){$/;"	f	class:Client
askForAG	src/server/ai.cpp	/^int LuaAI::askForAG(const QList<int> &card_ids, bool refusable, const QString &reason){$/;"	f	class:LuaAI
askForAG	src/server/ai.cpp	/^int TrustAI::askForAG(const QList<int> &card_ids, bool refusable, const QString &){$/;"	f	class:TrustAI
askForAG	src/server/room.cpp	/^int Room::askForAG(ServerPlayer *player, const QList<int> &card_ids, bool refusable, const QString &reason){$/;"	f	class:Room
askForAssign	src/client/client.cpp	/^void Client::askForAssign(const Json::Value &){$/;"	f	class:Client
askForCard	src/client/client.cpp	/^void Client::askForCard(const Json::Value &req){$/;"	f	class:Client
askForCard	src/server/ai.cpp	/^const Card *TrustAI::askForCard(const QString &pattern, const QString &prompt, const QVariant &data){$/;"	f	class:TrustAI
askForCard	src/server/room.cpp	/^const Card *Room::askForCard(ServerPlayer *player, const QString &pattern, const QString &prompt,$/;"	f	class:Room
askForCard	swig/sanguosha_wrap.cxx	/^const Card *LuaAI::askForCard(const QString &pattern, const QString &prompt, const QVariant &data){$/;"	f	class:LuaAI
askForCardChosen	src/client/client.cpp	/^void Client::askForCardChosen(const Json::Value &ask_str){$/;"	f	class:Client
askForCardChosen	src/server/ai.cpp	/^int TrustAI::askForCardChosen(ServerPlayer *who, const QString &flags, const QString &) {$/;"	f	class:TrustAI
askForCardChosen	src/server/room.cpp	/^int Room::askForCardChosen(ServerPlayer *player, ServerPlayer *who, const QString &flags, const QString &reason){$/;"	f	class:Room
askForCardChosen	swig/sanguosha_wrap.cxx	/^int LuaAI::askForCardChosen(ServerPlayer *who, const QString &flags, const QString &reason){$/;"	f	class:LuaAI
askForCardShow	src/client/client.cpp	/^void Client::askForCardShow(const Json::Value &requestor){$/;"	f	class:Client
askForCardShow	src/server/ai.cpp	/^const Card *TrustAI::askForCardShow(ServerPlayer *, const QString &){$/;"	f	class:TrustAI
askForCardShow	src/server/room.cpp	/^const Card *Room::askForCardShow(ServerPlayer *player, ServerPlayer *requestor, const QString &reason){$/;"	f	class:Room
askForCardShow	swig/sanguosha_wrap.cxx	/^const Card *LuaAI::askForCardShow(ServerPlayer *requestor, const QString &reason){$/;"	f	class:LuaAI
askForChoice	src/client/client.cpp	/^void Client::askForChoice(const Json::Value &ask_str){$/;"	f	class:Client
askForChoice	src/server/ai.cpp	/^QString TrustAI::askForChoice(const QString &skill_name, const QString &choice, const QVariant &){$/;"	f	class:TrustAI
askForChoice	src/server/room.cpp	/^QString Room::askForChoice(ServerPlayer *player, const QString &skill_name, const QString &choices, const QVariant &data){$/;"	f	class:Room
askForChoice	swig/sanguosha_wrap.cxx	/^QString LuaAI::askForChoice(const QString &skill_name, const QString &choices, const QVariant &data){$/;"	f	class:LuaAI
askForDirection	src/client/client.cpp	/^void Client::askForDirection(const Json::Value &){$/;"	f	class:Client
askForDiscard	src/client/client.cpp	/^void Client::askForDiscard(const Json::Value &req){$/;"	f	class:Client
askForDiscard	src/server/ai.cpp	/^QList<int> LuaAI::askForDiscard(const QString &reason, int discard_num, int min_num, bool optional, bool include_equip){$/;"	f	class:LuaAI
askForDiscard	src/server/ai.cpp	/^QList<int> TrustAI::askForDiscard(const QString &, int discard_num, int min_num, bool optional, bool include_equip){$/;"	f	class:TrustAI
askForDiscard	src/server/room.cpp	/^bool Room::askForDiscard(ServerPlayer *player, const QString &reason, int discard_num, int min_num,$/;"	f	class:Room
askForDoubleJink	src/package/thicket.cpp	/^    const Card *askForDoubleJink(ServerPlayer *player, const QString &reason) const{$/;"	f	class:Roulin
askForExchange	src/client/client.cpp	/^void Client::askForExchange(const Json::Value &exchange_str){$/;"	f	class:Client
askForExchange	src/server/room.cpp	/^const Card *Room::askForExchange(ServerPlayer *player, const QString &reason, int discard_num, bool include_equip, const QString &prompt){$/;"	f	class:Room
askForGeneral	src/client/client.cpp	/^void Client::askForGeneral(const Json::Value &arg){$/;"	f	class:Client
askForGeneral	src/server/room.cpp	/^QString Room::askForGeneral(ServerPlayer *player, const QStringList &generals, QString default_choice){$/;"	f	class:Room
askForGeneral3v3	src/client/client.cpp	/^void Client::askForGeneral3v3(const QString &){$/;"	f	class:Client
askForGongxin	src/client/client.cpp	/^void Client::askForGongxin(const Json::Value &arg){$/;"	f	class:Client
askForGuanxing	src/client/client.cpp	/^void Client::askForGuanxing(const Json::Value &arg){$/;"	f	class:Client
askForGuanxing	src/server/ai.cpp	/^void LuaAI::askForGuanxing(const QList<int> &cards, QList<int> &up, QList<int> &bottom, bool up_only){$/;"	f	class:LuaAI
askForGuanxing	src/server/ai.cpp	/^void TrustAI::askForGuanxing(const QList<int> &cards, QList<int> &up, QList<int> &bottom, bool up_only){$/;"	f	class:TrustAI
askForGuanxing	src/server/room.cpp	/^void Room::askForGuanxing(ServerPlayer *zhuge, const QList<int> &cards, bool up_only){$/;"	f	class:Room
askForKingdom	src/client/client.cpp	/^void Client::askForKingdom(const Json::Value&){$/;"	f	class:Client
askForKingdom	src/server/ai.cpp	/^QString TrustAI::askForKingdom(){$/;"	f	class:TrustAI
askForKingdom	src/server/room.cpp	/^QString Room::askForKingdom(ServerPlayer *player){$/;"	f	class:Room
askForNullification	src/client/client.cpp	/^void Client::askForNullification(const Json::Value &arg){$/;"	f	class:Client
askForNullification	src/server/ai.cpp	/^const Card *TrustAI::askForNullification(const TrickCard *trick, ServerPlayer *, ServerPlayer *to, bool positive){$/;"	f	class:TrustAI
askForNullification	src/server/room.cpp	/^bool Room::askForNullification(const TrickCard *trick, ServerPlayer *from, ServerPlayer *to, bool positive){$/;"	f	class:Room
askForNullification	swig/sanguosha_wrap.cxx	/^const Card *LuaAI::askForNullification(const TrickCard *trick, ServerPlayer *from, ServerPlayer *to, bool positive){$/;"	f	class:LuaAI
askForOrder	src/client/client.cpp	/^void Client::askForOrder(const Json::Value &arg){$/;"	f	class:Client
askForOrder	src/server/room.cpp	/^QString Room::askForOrder(ServerPlayer *player){$/;"	f	class:Room
askForPindian	src/client/client.cpp	/^void Client::askForPindian(const Json::Value &ask_str){$/;"	f	class:Client
askForPindian	src/server/ai.cpp	/^const Card *TrustAI::askForPindian(ServerPlayer *requestor, const QString &reason){$/;"	f	class:TrustAI
askForPindian	src/server/room.cpp	/^const Card *Room::askForPindian(ServerPlayer *player, ServerPlayer *from, ServerPlayer *to, const QString &reason)$/;"	f	class:Room
askForPindian	swig/sanguosha_wrap.cxx	/^const Card *LuaAI::askForPindian(ServerPlayer *requestor, const QString &reason){$/;"	f	class:LuaAI
askForPlayerChosen	src/client/client.cpp	/^void Client::askForPlayerChosen(const Json::Value &players){$/;"	f	class:Client
askForPlayerChosen	src/server/ai.cpp	/^ServerPlayer *TrustAI::askForPlayerChosen(const QList<ServerPlayer *> &targets, const QString &reason){$/;"	f	class:TrustAI
askForPlayerChosen	src/server/room.cpp	/^ServerPlayer *Room::askForPlayerChosen(ServerPlayer *player, const QList<ServerPlayer *> &targets, const QString &skillName){$/;"	f	class:Room
askForPlayerChosen	swig/sanguosha_wrap.cxx	/^ServerPlayer *LuaAI::askForPlayerChosen(const QList<ServerPlayer *> &targets, const QString &reason){$/;"	f	class:LuaAI
askForRole	src/server/room.cpp	/^QString Room::askForRole(ServerPlayer *player, const QStringList &roles, const QString &scheme){$/;"	f	class:Room
askForRole3v3	src/client/client.cpp	/^void Client::askForRole3v3(const Json::Value &arg){$/;"	f	class:Client
askForSinglePeach	src/client/client.cpp	/^void Client::askForSinglePeach(const Json::Value &arg){$/;"	f	class:Client
askForSinglePeach	src/server/ai.cpp	/^const Card *TrustAI::askForSinglePeach(ServerPlayer *dying) {$/;"	f	class:TrustAI
askForSinglePeach	src/server/room.cpp	/^const Card *Room::askForSinglePeach(ServerPlayer *player, ServerPlayer *dying){$/;"	f	class:Room
askForSinglePeach	swig/sanguosha_wrap.cxx	/^const Card *LuaAI::askForSinglePeach(ServerPlayer *dying){$/;"	f	class:LuaAI
askForSkillInvoke	src/client/client.cpp	/^void Client::askForSkillInvoke(const Json::Value &arg){    $/;"	f	class:Client
askForSkillInvoke	src/server/ai.cpp	/^bool TrustAI::askForSkillInvoke(const QString &, const QVariant &){$/;"	f	class:TrustAI
askForSkillInvoke	src/server/room.cpp	/^bool Room::askForSkillInvoke(ServerPlayer *player, const QString &skill_name, const QVariant &data){$/;"	f	class:Room
askForSkillInvoke	src/server/serverplayer.cpp	/^bool ServerPlayer::askForSkillInvoke(const QString &skill_name, const QVariant &data){$/;"	f	class:ServerPlayer
askForSkillInvoke	swig/sanguosha_wrap.cxx	/^bool LuaAI::askForSkillInvoke(const QString &skill_name, const QVariant &data) {$/;"	f	class:LuaAI
askForSuit	src/client/client.cpp	/^void Client::askForSuit(const Json::Value &){$/;"	f	class:Client
askForSuit	src/server/ai.cpp	/^Card::Suit TrustAI::askForSuit(const QString &){$/;"	f	class:TrustAI
askForSuit	src/server/room.cpp	/^Card::Suit Room::askForSuit(ServerPlayer *player, const QString& reason){$/;"	f	class:Room
askForSuit	swig/sanguosha_wrap.cxx	/^Card::Suit LuaAI::askForSuit(const QString &reason){$/;"	f	class:LuaAI
askForSurrender	src/client/client.cpp	/^void Client::askForSurrender(const Json::Value &initiator){$/;"	f	class:Client
askForTakeGeneral	src/server/roomthread1v1.cpp	/^void RoomThread1v1::askForTakeGeneral(ServerPlayer *player){$/;"	f	class:RoomThread1v1
askForTakeGeneral	src/server/roomthread3v3.cpp	/^void RoomThread3v3::askForTakeGeneral(ServerPlayer *player){$/;"	f	class:RoomThread3v3
askForUseCard	src/client/client.cpp	/^void Client::askForUseCard(const Json::Value &req){$/;"	f	class:Client
askForUseCard	src/server/ai.cpp	/^QString LuaAI::askForUseCard(const QString &pattern, const QString &prompt){$/;"	f	class:LuaAI
askForUseCard	src/server/ai.cpp	/^QString TrustAI::askForUseCard(const QString &, const QString &) {$/;"	f	class:TrustAI
askForUseCard	src/server/room.cpp	/^bool Room::askForUseCard(ServerPlayer *player, const QString &pattern, const QString &prompt, int notice_index){$/;"	f	class:Room
askForUseSlashTo	src/server/room.cpp	/^bool Room::askForUseSlashTo(ServerPlayer *slasher, QList<ServerPlayer *> victims, const QString &prompt){$/;"	f	class:Room
askForUseSlashTo	src/server/room.cpp	/^bool Room::askForUseSlashTo(ServerPlayer *slasher, ServerPlayer *victim, const QString &prompt){$/;"	f	class:Room
askForYiji	src/client/client.cpp	/^void Client::askForYiji(const Json::Value &card_list){$/;"	f	class:Client
askForYiji	src/server/ai.cpp	/^ServerPlayer *TrustAI::askForYiji(const QList<int> &, int &){$/;"	f	class:TrustAI
askForYiji	src/server/room.cpp	/^bool Room::askForYiji(ServerPlayer *guojia, QList<int> &cards){$/;"	f	class:Room
askForYiji	swig/sanguosha_wrap.cxx	/^ServerPlayer *LuaAI::askForYiji(const QList<int> &cards, int &card_id){$/;"	f	class:LuaAI
assert( type(method)	lua/lib/middleclass.lua	/^    assert( type(method)=='function', tostring(klass) .. " doesn't implement metamethod '" .. name .. "'" )$/;"	f
assert(type(spec.correct_func) 	lua/sgs_ex.lua	/^	assert(type(spec.correct_func) == "function")$/;"	f
assert(type(spec.extra_func) 	lua/sgs_ex.lua	/^	assert(type(spec.extra_func) == "function")$/;"	f
assert(type(spec.is_prohibited) 	lua/sgs_ex.lua	/^	assert(type(spec.is_prohibited) == "function")$/;"	f
assert(type(spec.on_damaged) 	lua/sgs_ex.lua	/^	assert(type(spec.on_damaged) == "function")$/;"	f
assert(type(spec.on_gamestart) 	lua/sgs_ex.lua	/^	assert(type(spec.on_gamestart) == "function")$/;"	f
assert(type(spec.on_trigger) 	lua/sgs_ex.lua	/^	assert(type(spec.on_trigger) == "function")$/;"	f
assert(type(spec.view_as) 	lua/sgs_ex.lua	/^	assert(type(spec.view_as) == "function")$/;"	f
assert(type(spec.view_filter) 	lua/sgs_ex.lua	/^	assert(type(spec.view_filter) == "function")$/;"	f
assert_info	src/breakpad/client/windows/common/ipc_protocol.h	/^  MDRawAssertionInfo* assert_info;$/;"	m	struct:google_breakpad::ProtocolMessage
assert_info	src/breakpad/client/windows/crash_generation/client_info.h	/^  MDRawAssertionInfo* assert_info() const { return assert_info_; }$/;"	f	class:google_breakpad::ClientInfo
assert_info_	src/breakpad/client/windows/crash_generation/client_info.h	/^  MDRawAssertionInfo* assert_info_;$/;"	m	class:google_breakpad::ClientInfo
assert_info_	src/breakpad/client/windows/crash_generation/crash_generation_client.h	/^  MDRawAssertionInfo assert_info_;$/;"	m	class:google_breakpad::CrashGenerationClient
assertion	src/breakpad/google_breakpad/processor/minidump.h	/^  const MDRawAssertionInfo* assertion() const {$/;"	f	class:google_breakpad::MinidumpAssertion
assertion	src/breakpad/google_breakpad/processor/process_state.h	/^  string assertion() const { return assertion_; }$/;"	f	class:google_breakpad::ProcessState
assertion_	src/breakpad/client/windows/handler/exception_handler.h	/^  MDRawAssertionInfo* assertion_;$/;"	m	class:google_breakpad::ExceptionHandler
assertion_	src/breakpad/google_breakpad/processor/minidump.h	/^  MDRawAssertionInfo assertion_;$/;"	m	class:google_breakpad::MinidumpAssertion
assertion_	src/breakpad/google_breakpad/processor/process_state.h	/^  string assertion_;$/;"	m	class:google_breakpad::ProcessState
assign	src/scenario/boss-mode-scenario.cpp	/^void ImpasseScenario::assign(QStringList &generals, QStringList &roles) const{$/;"	f	class:ImpasseScenario
assign	src/scenario/couple-scenario.cpp	/^void CoupleScenario::assign(QStringList &generals, QStringList &roles) const{$/;"	f	class:CoupleScenario
assign	src/scenario/miniscenarios.cpp	/^void MiniSceneRule::assign(QStringList &generals, QStringList &roles) const{$/;"	f	class:MiniSceneRule
assign	src/scenario/miniscenarios.h	/^    virtual void assign(QStringList &generals, QStringList &roles) const$/;"	f	class:MiniScene
assign	src/scenario/scenario.cpp	/^void Scenario::assign(QStringList &generals, QStringList &roles) const{$/;"	f	class:Scenario
assign	src/scenario/zombie-mode-scenario.cpp	/^void ZombieScenario::assign(QStringList &generals, QStringList &roles) const{$/;"	f	class:ZombieScenario
assignGeneralsForPlayers	src/server/room.cpp	/^void Room::assignGeneralsForPlayers(const QList<ServerPlayer *> &to_assign){$/;"	f	class:Room
assignRoles	src/server/room.cpp	/^void Room::assignRoles(){$/;"	f	class:Room
assignRoles	src/server/roomthread3v3.cpp	/^void RoomThread3v3::assignRoles(const QString &scheme){$/;"	f	class:RoomThread3v3
assignRoles	src/server/roomthread3v3.cpp	/^void RoomThread3v3::assignRoles(const QStringList &roles, const QString &scheme){$/;"	f	class:RoomThread3v3
assign_nationality	src/dialog/customassigndialog.h	/^    QMap<QString, QString> assign_nationality;$/;"	m	class:CustomAssignDialog
assignment	src/lua/lparser.c	/^static void assignment (LexState *ls, struct LHS_assign *lh, int nvars) {$/;"	f	file:
atom	include/freetype/freetype/ftbdf.h	/^      const char*     atom;$/;"	m	union:BDF_PropertyRec_::__anon104
atomic	src/lua/lgc.c	/^static void atomic (lua_State *L) {$/;"	f	file:
attachSkill	src/client/client.cpp	/^void Client::attachSkill(const QString &skill_name){$/;"	f	class:Client
attachSkill	src/ui/roomscene.cpp	/^void RoomScene::attachSkill(const QString &skill_name, bool from_left)$/;"	f	class:RoomScene
attachSkillToPlayer	src/server/room.cpp	/^void Room::attachSkillToPlayer(ServerPlayer *player, const QString &skill_name){$/;"	f	class:Room
attach_file	include/freetype/freetype/internal/ftdriver.h	/^    FT_Face_AttachFunc        attach_file;$/;"	m	struct:FT_Driver_ClassRec_
attach_skill	src/package/standard.h	/^    bool attach_skill;$/;"	m	class:Weapon
attributes	swig/sanguosha_wrap.cxx	/^  swig_lua_attribute     *attributes;$/;"	m	struct:swig_lua_class	file:
audioqueuepolicy	include/fmod/fmod.h	/^    unsigned int                   audioqueuepolicy;   \/* [w] Optional. Specify 0 or FMOD_AUDIOQUEUE_CODECPOLICY_DEFAULT to ignore. Policy used to determine whether hardware or software is used for decoding, see FMOD_AUDIOQUEUE_CODECPOLICY for options (iOS >= 3.0 required, otherwise only hardware is available) *\/ $/;"	m	struct:FMOD_CREATESOUNDEXINFO
auto_back	src/ui/carditem.h	/^    bool auto_back, frozen;$/;"	m	class:CardItem
auto_hinter	include/freetype/freetype/internal/ftobjs.h	/^    FT_Module          auto_hinter;$/;"	m	struct:FT_LibraryRec_
autofit	include/freetype/freetype/internal/ftpic.h	/^    void* autofit;$/;"	m	struct:FT_PIC_Container_
autohint	include/freetype/freetype/freetype.h	/^    FT_Generic        autohint;   \/* face-specific auto-hinter data *\/$/;"	m	struct:FT_FaceRec_
aux	src/lua/lparser.h	/^    struct { int info, aux; } s;$/;"	m	struct:expdesc::__anon99::__anon100
aux_close	src/lua/liolib.c	/^static int aux_close (lua_State *L) {$/;"	f	file:
aux_getn	src/lua/ltablib.c	19;"	d	file:
aux_lines	src/lua/liolib.c	/^static void aux_lines (lua_State *L, int idx, int toclose) {$/;"	f	file:
aux_upvalue	src/lua/lapi.c	/^static const char *aux_upvalue (StkId fi, int n, TValue **val) {$/;"	f	file:
auxgetinfo	src/lua/ldebug.c	/^static int auxgetinfo (lua_State *L, const char *what, lua_Debug *ar,$/;"	f	file:
auxopen	src/lua/lbaselib.c	/^static void auxopen (lua_State *L, const char *name,$/;"	f	file:
auxresume	src/lua/lbaselib.c	/^static int auxresume (lua_State *L, lua_State *co, int narg) {$/;"	f	file:
auxsort	src/lua/ltablib.c	/^static void auxsort (lua_State *L, int l, int u) {$/;"	f	file:
auxupvalue	src/lua/ldblib.c	/^static int auxupvalue (lua_State *L, int get) {$/;"	f	file:
available_sizes	include/freetype/freetype/freetype.h	/^    FT_Bitmap_Size*   available_sizes;$/;"	m	struct:FT_FaceRec_
available_wake_skills	src/scenario/boss-mode-scenario.cpp	/^    QStringList dummy_skills, available_wake_skills;$/;"	m	class:ImpasseRule	file:
avatars	src/ui/roomscene.h	/^    QSanSelectableItem *avatars[3];$/;"	m	class:KOFOrderBox
avg_width	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  avg_width;$/;"	m	struct:FT_WinFNT_HeaderRec_
avoid_skill	src/package/thicket.cpp	/^    QString avoid_skill;$/;"	m	class:SavageAssaultAvoid	file:
axis	include/freetype/freetype/ftmm.h	/^    FT_MM_Axis  axis[T1_MAX_MM_AXIS];$/;"	m	struct:FT_Multi_Master_
axis	include/freetype/freetype/ftmm.h	/^    FT_Var_Axis*         axis;$/;"	m	struct:FT_MM_Var_
axis_names	include/freetype/freetype/t1tables.h	/^    FT_String*       axis_names[T1_MAX_MM_AXIS];$/;"	m	struct:PS_BlendRec_
b	src/lua/ldo.c	/^  luai_jmpbuf b;$/;"	m	struct:lua_longjmp	file:
b	src/lua/lobject.h	/^  int b;$/;"	m	union:__anon90
b	src/lua/lundump.c	/^ Mbuffer* b;$/;"	m	struct:__anon102	file:
bad_register_	src/breakpad/processor/disassembler_x86.h	/^    libdis::x86_reg_t bad_register_;$/;"	m	class:google_breakpad::DisassemblerX86
ban_list	src/server/server.h	/^    QStringList ban_list;$/;"	m	class:BanlistDialog
ban_package	src/core/engine.h	/^    QSet<QString> ban_package;$/;"	m	class:Engine
ban_packages	src/client/client.h	/^    QStringList ban_packages;$/;"	m	class:Client
basara_checkbox	src/server/server.h	/^    QCheckBox *basara_checkbox;$/;"	m	class:ServerDialog
basara_label	src/client/clientstruct.h	/^    QLabel *basara_label;$/;"	m	class:ServerInfoWidget
base	include/freetype/freetype/ftsystem.h	/^    unsigned char*       base;$/;"	m	struct:FT_StreamRec_
base	include/freetype/freetype/internal/ftgloadr.h	/^    FT_GlyphLoadRec  base;$/;"	m	struct:FT_GlyphLoaderRec_
base	include/freetype/freetype/internal/ftpic.h	/^    void* base;$/;"	m	struct:FT_PIC_Container_
base	include/freetype/freetype/internal/ftvalid.h	/^    const FT_Byte*      base;        \/* address of table in memory       *\/$/;"	m	struct:FT_ValidatorRec_
base	include/freetype/freetype/internal/psaux.h	/^    FT_Byte*   base;$/;"	m	struct:PS_ParserRec_
base	include/freetype/freetype/internal/psaux.h	/^    FT_Byte*  base;$/;"	m	struct:T1_Decoder_ZoneRec_
base	include/freetype/freetype/internal/psaux.h	/^    FT_Outline*     base;$/;"	m	struct:T1_BuilderRec_
base	include/freetype/freetype/internal/tttypes.h	/^    TT_GlyphZoneRec  base;$/;"	m	struct:TT_LoaderRec_
base	src/breakpad/google_breakpad/processor/minidump.h	/^    MDRawContextBase*  base;$/;"	m	union:google_breakpad::MinidumpContext::__anon65
base	src/breakpad/processor/range_map.h	/^    AddressType base() const { return base_; }$/;"	f	class:google_breakpad::RangeMap::Range
base	src/breakpad/processor/static_range_map.h	/^    AddressType base() const {$/;"	f	class:google_breakpad::StaticRangeMap::Range
base	src/lua/lstate.h	/^  StkId base;  \/* base for this function *\/$/;"	m	struct:CallInfo
base	src/lua/lstate.h	/^  StkId base;  \/* base of current function *\/$/;"	m	struct:lua_State
base	src/ui/chatwidget.h	/^    QGraphicsRectItem *base;$/;"	m	class:ChatWidget
baseCcalls	src/lua/lstate.h	/^  unsigned short baseCcalls;  \/* nested C calls when resuming coroutine *\/$/;"	m	struct:lua_State
base_	src/breakpad/processor/contained_range_map.h	/^  const AddressType base_;$/;"	m	class:google_breakpad::ContainedRangeMap
base_	src/breakpad/processor/range_map.h	/^    const AddressType base_;$/;"	m	class:google_breakpad::RangeMap::Range
base_	src/breakpad/processor/static_contained_range_map.h	/^  AddressType base_;$/;"	m	class:google_breakpad::StaticContainedRangeMap
base_	src/breakpad/processor/static_map_iterator.h	/^  const char* base_;$/;"	m	class:google_breakpad::StaticMapIterator
base_address	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int64_t base_address;           \/* Base address of a region of pages *\/$/;"	m	struct:__anon45
base_address	src/breakpad/google_breakpad/processor/minidump.h	/^  virtual u_int64_t base_address() const {$/;"	f	class:google_breakpad::MinidumpModule
base_address	src/breakpad/processor/basic_code_module.h	/^  virtual u_int64_t base_address() const { return base_address_; }$/;"	f	class:google_breakpad::BasicCodeModule
base_address	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  virtual u_int64_t base_address() const { return 0; }$/;"	f	class:__anon71::TestCodeModule
base_address	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  virtual u_int64_t base_address() const { return 0; }$/;"	f	class:__anon73::TestCodeModule
base_address	src/breakpad/processor/stackwalker_unittest_utils.h	/^  u_int64_t base_address()       const { return base_address_; }$/;"	f	class:MockCodeModule
base_address_	src/breakpad/processor/basic_code_module.h	/^  u_int64_t base_address_;$/;"	m	class:google_breakpad::BasicCodeModule
base_address_	src/breakpad/processor/stackwalker_unittest_utils.h	/^  u_int64_t base_address_;$/;"	m	class:MockCodeModule
base_address_	src/breakpad/processor/stackwalker_unittest_utils.h	/^  u_int64_t base_address_;$/;"	m	class:MockMemoryRegion
base_ci	src/lua/lstate.h	/^  CallInfo *base_ci;  \/* array of CallInfo's *\/$/;"	m	struct:lua_State
base_funcs	src/lua/lbaselib.c	/^static const luaL_Reg base_funcs[] = {$/;"	v	file:
base_names	swig/sanguosha_wrap.cxx	/^  const char **base_names;$/;"	m	struct:swig_lua_class	file:
base_of_image	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int64_t            base_of_image;$/;"	m	struct:__anon26
base_open	src/lua/lbaselib.c	/^static void base_open (lua_State *L) {$/;"	f	file:
base_pixmap	src/ui/chatwidget.h	/^    QPixmap base_pixmap;$/;"	m	class:ChatWidget
basehookcount	src/lua/lstate.h	/^  int basehookcount;$/;"	m	struct:lua_State
bases	swig/sanguosha_wrap.cxx	/^  struct swig_lua_class **bases;$/;"	m	struct:swig_lua_class	typeref:struct:swig_lua_class::swig_lua_class	file:
basic_resolver	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  BasicSourceLineResolver basic_resolver;$/;"	m	class:__anon73::TestFastSourceLineResolver	file:
basic_resolver_	src/breakpad/processor/module_comparer.h	/^  BasicSourceLineResolver *basic_resolver_;$/;"	m	class:google_breakpad::ModuleComparer
batches_	src/jsoncpp/src/json_batchallocator.h	/^   BatchInfo *batches_;$/;"	m	class:Json::BatchAllocator
bbox	include/freetype/freetype/freetype.h	/^    FT_BBox           bbox;$/;"	m	struct:FT_FaceRec_
bbox	include/freetype/freetype/internal/psaux.h	/^    FT_BBox         bbox;          \/* bounding box *\/$/;"	m	struct:T1_BuilderRec_
bbox	include/freetype/freetype/internal/tttypes.h	/^    FT_BBox          bbox;$/;"	m	struct:TT_LoaderRec_
bboxes	include/freetype/freetype/t1tables.h	/^    FT_BBox*         bboxes    [T1_MAX_MM_DESIGNS + 1];$/;"	m	struct:PS_BlendRec_
bdf	include/freetype/freetype/internal/tttypes.h	/^    TT_BDFRec             bdf;$/;"	m	struct:TT_FaceRec_
bearing	include/freetype/freetype/internal/tttypes.h	/^    FT_Short   bearing;$/;"	m	struct:TT_LongMetricsRec_
bearingX	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  bearingX;$/;"	m	struct:TT_SBit_Small_Metrics_
bearingY	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  bearingY;$/;"	m	struct:TT_SBit_Small_Metrics_
bearing_x	include/freetype/freetype/ftincrem.h	/^    FT_Long  bearing_x;$/;"	m	struct:FT_Incremental_MetricsRec_
bearing_y	include/freetype/freetype/ftincrem.h	/^    FT_Long  bearing_y;$/;"	m	struct:FT_Incremental_MetricsRec_
before_next	src/dialog/customassigndialog.h	/^    QCheckBox *single_turn, *before_next;$/;"	m	class:CustomAssignDialog
before_next_box	src/dialog/customassigndialog.h	/^    QComboBox *single_turn_box, *before_next_box;$/;"	m	class:CustomAssignDialog
before_next_text	src/dialog/customassigndialog.h	/^    QLabel *single_turn_text, *single_turn_text2, *before_next_text, *before_next_text2;$/;"	m	class:CustomAssignDialog
before_next_text2	src/dialog/customassigndialog.h	/^    QLabel *single_turn_text, *single_turn_text2, *before_next_text, *before_next_text2;$/;"	m	class:CustomAssignDialog
begin	src/breakpad/processor/static_map.h	/^  inline iterator begin() const { return IteratorAtIndex(0); }$/;"	f	class:google_breakpad::StaticMap
begin	src/jsoncpp/src/json_value.cpp	/^Value::begin() const$/;"	f	class:Json::Value
begin	src/jsoncpp/src/json_value.cpp	/^Value::begin()$/;"	f	class:Json::Value
begin_	src/jsoncpp/include/json/reader.h	/^      Location begin_;$/;"	m	class:Json::Reader
big_avatar_rect	src/dialog/cardeditor.h	/^    AvatarRectItem *big_avatar_rect, *small_avatar_rect, *tiny_avatar_rect;$/;"	m	class:CardScene
binary_data	include/freetype/freetype/internal/t1types.h	/^    FT_Byte*         binary_data; \/* used if hex data has been converted *\/$/;"	m	struct:CID_FaceRec_
binarystream	src/breakpad/processor/binarystream.h	/^  explicit binarystream(const char *str, size_t size,$/;"	f	class:google_breakpad::binarystream
binarystream	src/breakpad/processor/binarystream.h	/^  explicit binarystream(const string &str,$/;"	f	class:google_breakpad::binarystream
binarystream	src/breakpad/processor/binarystream.h	/^  explicit binarystream(ios_base::openmode which = ios_base::out|ios_base::in)$/;"	f	class:google_breakpad::binarystream
binarystream	src/breakpad/processor/binarystream.h	/^class binarystream {$/;"	c	namespace:google_breakpad
bind	lua/lib/socket.lua	/^function bind(host, port, backlog)$/;"	f
bind_by_names	lua/lib/sqlite3.lua	/^  local function bind_by_names(parameters)$/;"	f
bind_with_mapping	lua/lib/sqlite3.lua	/^  local function bind_with_mapping(parameters)$/;"	f
bind_without_mapping	lua/lib/sqlite3.lua	/^  local function bind_without_mapping(parameters)$/;"	f
bit2mask	src/lua/lgc.h	31;"	d
bit_depth	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte                 bit_depth;$/;"	m	struct:TT_SBit_StrikeRec_
bit_set	include/freetype/freetype/ftimage.h	/^    FT_Raster_BitSet_Func   bit_set;      \/* doesn't work! *\/$/;"	m	struct:FT_Raster_Params_
bit_test	include/freetype/freetype/ftimage.h	/^    FT_Raster_BitTest_Func  bit_test;     \/* doesn't work! *\/$/;"	m	struct:FT_Raster_Params_
bitmap	include/freetype/freetype/freetype.h	/^    FT_Bitmap         bitmap;$/;"	m	struct:FT_GlyphSlotRec_
bitmap	include/freetype/freetype/ftglyph.h	/^    FT_Bitmap    bitmap;$/;"	m	struct:FT_BitmapGlyphRec_
bitmap_left	include/freetype/freetype/freetype.h	/^    FT_Int            bitmap_left;$/;"	m	struct:FT_GlyphSlotRec_
bitmap_top	include/freetype/freetype/freetype.h	/^    FT_Int            bitmap_top;$/;"	m	struct:FT_GlyphSlotRec_
bitmask	src/lua/lgc.h	30;"	d
bits_offset	include/freetype/freetype/ftwinfnt.h	/^    FT_ULong   bits_offset;$/;"	m	struct:FT_WinFNT_HeaderRec_
bits_pointer	include/freetype/freetype/ftwinfnt.h	/^    FT_ULong   bits_pointer;$/;"	m	struct:FT_WinFNT_HeaderRec_
bl	src/lua/lparser.h	/^  struct BlockCnt *bl;  \/* chain of current blocks *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::BlockCnt
black2gray	src/lua/lgc.c	38;"	d	file:
black_spans	include/freetype/freetype/ftimage.h	/^    FT_SpanFunc             black_spans;  \/* doesn't work! *\/$/;"	m	struct:FT_Raster_Params_
blah	extension-doc/11-Fundamentals.lua	/^function blah(a, b, c) end$/;"	f
blah	extension-doc/11-Fundamentals.lua	/^function blah(a,b) ... end$/;"	f
blah	extension-doc/11-Fundamentals.lua	/^function blah(a,b,c) blahblah end$/;"	f
blah 	extension-doc/11-Fundamentals.lua	/^blah = function(a, b, c) end$/;"	f
blend	include/freetype/freetype/internal/psaux.h	/^    PS_Blend             blend;       \/* for multiple master support *\/$/;"	m	struct:T1_DecoderRec_
blend	include/freetype/freetype/internal/t1types.h	/^    PS_Blend        blend;$/;"	m	struct:T1_FaceRec_
blend	include/freetype/freetype/internal/tttypes.h	/^    GX_Blend              blend;$/;"	m	struct:TT_FaceRec_
blend_bitflags	include/freetype/freetype/t1tables.h	/^    FT_ULong         blend_bitflags;$/;"	m	struct:PS_BlendRec_
blend_points	include/freetype/freetype/t1tables.h	/^    FT_Fixed*  blend_points;$/;"	m	struct:PS_DesignMap_
block	include/freetype/freetype/internal/psaux.h	/^    FT_Byte*           block;          \/* current memory block           *\/$/;"	m	struct:PS_TableRec_
block	src/lua/lparser.c	/^static void block (LexState *ls) {$/;"	f	file:
block_follow	src/lua/lparser.c	/^static int block_follow (int token) {$/;"	f	file:
blockalign	include/fmod/fmod_codec.h	/^    int                blockalign;    \/* [in] Blockalign in decompressed, PCM samples of the optimal decode chunk size for this format.  The codec read callback will be called in multiples of this value. *\/$/;"	m	struct:FMOD_CODEC_WAVEFORMAT
blue_fuzz	include/freetype/freetype/t1tables.h	/^    FT_Int     blue_fuzz;$/;"	m	struct:PS_PrivateRec_
blue_scale	include/freetype/freetype/t1tables.h	/^    FT_Fixed   blue_scale;$/;"	m	struct:PS_PrivateRec_
blue_shift	include/freetype/freetype/t1tables.h	/^    FT_Int     blue_shift;$/;"	m	struct:PS_PrivateRec_
blue_values	include/freetype/freetype/t1tables.h	/^    FT_Short   blue_values[14];$/;"	m	struct:PS_PrivateRec_
body	src/lua/lparser.c	/^static void body (LexState *ls, expdesc *e, int needself, int line) {$/;"	f	file:
bold	src/ui/clientlogbox.cpp	/^QString ClientLogBox::bold(const QString &str, QColor color) const{$/;"	f	class:ClientLogBox
boolK	src/lua/lcode.c	/^static int boolK (FuncState *fs, int b) {$/;"	f	file:
bool_	src/jsoncpp/include/json/value.h	/^         bool bool_;$/;"	m	union:Json::Value::ValueHolder
booleanValue	src/jsoncpp/include/json/value.h	/^      booleanValue,  \/\/\/< bool value$/;"	e	enum:Json::ValueType
boss_banlist	src/scenario/boss-mode-scenario.cpp	/^    QStringList boss_banlist, boss_skillbanned;$/;"	m	class:ImpasseRule	file:
boss_skillbanned	src/scenario/boss-mode-scenario.cpp	/^    QStringList boss_banlist, boss_skillbanned;$/;"	m	class:ImpasseRule	file:
boundingRect	src/dialog/cardeditor.cpp	/^QRectF BlackEdgeTextItem::boundingRect() const{$/;"	f	class:BlackEdgeTextItem
boundingRect	src/dialog/cardeditor.cpp	/^QRectF SkillBox::boundingRect() const{$/;"	f	class:SkillBox
boundingRect	src/ui/QSanSelectableItem.cpp	/^QRectF QSanSelectableItem::boundingRect() const{$/;"	f	class:QSanSelectableItem
boundingRect	src/ui/TablePile.cpp	/^QRectF TablePile::boundingRect() const$/;"	f	class:TablePile
boundingRect	src/ui/button.cpp	/^QRectF Button::boundingRect() const{$/;"	f	class:Button
boundingRect	src/ui/cardcontainer.cpp	/^QRectF CardContainer::boundingRect() const$/;"	f	class:CardContainer
boundingRect	src/ui/carditem.cpp	/^QRectF CardItem::boundingRect() const$/;"	f	class:CardItem
boundingRect	src/ui/chatwidget.cpp	/^QRectF ChatWidget::boundingRect() const{$/;"	f	class:ChatWidget
boundingRect	src/ui/chatwidget.cpp	/^QRectF MyPixmapItem::boundingRect() const$/;"	f	class:MyPixmapItem
boundingRect	src/ui/dashboard.cpp	/^QRectF Dashboard::boundingRect() const{$/;"	f	class:Dashboard
boundingRect	src/ui/indicatoritem.cpp	/^QRectF IndicatorItem::boundingRect() const{$/;"	f	class:IndicatorItem
boundingRect	src/ui/magatamasItem.cpp	/^QRectF MagatamasBoxItem::boundingRect() const$/;"	f	class:MagatamasBoxItem
boundingRect	src/ui/photo.cpp	/^QRectF Photo::boundingRect() const$/;"	f	class:Photo
boundingRect	src/ui/pixmapanimation.cpp	/^QRectF PixmapAnimation::boundingRect() const$/;"	f	class:PixmapAnimation
boundingRect	src/ui/qsanbutton.cpp	/^QRectF QSanButton::boundingRect() const{$/;"	f	class:QSanButton
boundingRect	src/ui/qsanbutton.h	/^    virtual QRectF boundingRect() const {return QRectF(0, -height(), width(), height());}$/;"	f	class:QSanInvokeSkillDock
boundingRect	src/ui/rolecombobox.cpp	/^QRectF RoleComboBox::boundingRect() const$/;"	f	class:RoleComboBox
boundingRect	src/ui/window.cpp	/^QRectF Window::boundingRect() const{$/;"	f	class:Window
boundingRectFor	src/ui/sprite.cpp	/^QRectF EmphasizeEffect::boundingRectFor(const QRectF &sourceRect) const$/;"	f	class:EmphasizeEffect
boundingRectFor	src/ui/sprite.cpp	/^QRectF SentbackEffect::boundingRectFor(const QRectF &sourceRect) const$/;"	f	class:SentbackEffect
break_char	include/freetype/freetype/ftwinfnt.h	/^    FT_Byte    break_char;$/;"	m	struct:FT_WinFNT_HeaderRec_
breaklist	src/lua/lparser.c	/^  int breaklist;  \/* list of jumps out of this loop *\/$/;"	m	struct:BlockCnt	file:
breakpad_info	src/breakpad/google_breakpad/processor/minidump.h	/^  const MDRawBreakpadInfo* breakpad_info() const {$/;"	f	class:google_breakpad::MinidumpBreakpadInfo
breakpad_info_	src/breakpad/google_breakpad/processor/minidump.h	/^  MDRawBreakpadInfo breakpad_info_;$/;"	m	class:google_breakpad::MinidumpBreakpadInfo
breakpad_time_t	src/breakpad/google_breakpad/common/breakpad_types.h	/^typedef u_int64_t breakpad_time_t;$/;"	t
breakstat	src/lua/lparser.c	/^static void breakstat (LexState *ls) {$/;"	f	file:
bringToFront	src/ui/roomscene.cpp	/^void RoomScene::bringToFront(QGraphicsItem* front_item)$/;"	f	class:RoomScene
broadcast	src/server/room.cpp	/^void Room::broadcast(const QString &message, ServerPlayer *except){$/;"	f	class:Room
broadcast	src/server/server.cpp	/^void Server::broadcast(const QString &msg){$/;"	f	class:Server
broadcastInvoke	src/server/room.cpp	/^void Room::broadcastInvoke(const QSanProtocol::QSanPacket* packet, ServerPlayer *except)$/;"	f	class:Room
broadcastInvoke	src/server/room.cpp	/^void Room::broadcastInvoke(const char *method, const QString &arg, ServerPlayer *except){$/;"	f	class:Room
broadcastProperty	src/server/room.cpp	/^bool Room::broadcastProperty(ServerPlayer *player, const char *property_name, const QString &value){$/;"	f	class:Room
broadcastResetCard	src/server/room.cpp	/^bool Room::broadcastResetCard(const QList<ServerPlayer*> &players, int cardId)$/;"	f	class:Room
broadcastSkillInvoke	src/server/room.cpp	/^bool Room::broadcastSkillInvoke(const QString &skill_name) $/;"	f	class:Room
broadcastSkillInvoke	src/server/room.cpp	/^bool Room::broadcastSkillInvoke(const QString &skill_name, bool isMale, int type) $/;"	f	class:Room
broadcastSkillInvoke	src/server/room.cpp	/^bool Room::broadcastSkillInvoke(const QString &skill_name, const QString &category)$/;"	f	class:Room
broadcastSkillInvoke	src/server/room.cpp	/^bool Room::broadcastSkillInvoke(const QString &skill_name, int type) $/;"	f	class:Room
broadcastSkillInvoke	src/server/serverplayer.cpp	/^void ServerPlayer::broadcastSkillInvoke(const Card *card) const{$/;"	f	class:ServerPlayer
broadcastSkillInvoke	src/server/serverplayer.cpp	/^void ServerPlayer::broadcastSkillInvoke(const QString &card_name) const{$/;"	f	class:ServerPlayer
broadcastUpdateCard	src/server/room.cpp	/^bool Room::broadcastUpdateCard(const QList<ServerPlayer*> &players, int cardId, const Card* newCard)$/;"	f	class:Room
browseFiles	src/dialog/packagingeditor.cpp	/^void PackagingEditor::browseFiles(){$/;"	f	class:PackagingEditor
bucketIndex_	src/jsoncpp/include/json/value.h	/^         BucketIndex bucketIndex_;$/;"	m	struct:Json::ValueInternalMap::IteratorState
bucketsSize_	src/jsoncpp/include/json/value.h	/^      BucketIndex bucketsSize_;$/;"	m	class:Json::ValueInternalMap
buckets_	src/jsoncpp/include/json/value.h	/^      ValueInternalLink *buckets_;$/;"	m	class:Json::ValueInternalMap
buff	src/lua/lauxlib.c	/^  char buff[LUAL_BUFFERSIZE];$/;"	m	struct:LoadF	file:
buff	src/lua/ldo.c	/^  Mbuffer buff;  \/* buffer to be used by the scanner *\/$/;"	m	struct:SParser	file:
buff	src/lua/llex.h	/^  Mbuffer *buff;  \/* buffer for tokens *\/$/;"	m	struct:LexState
buff	src/lua/lstate.h	/^  Mbuffer buff;  \/* temporary buffer for string concatentation *\/$/;"	m	struct:global_State
buffer	include/fmod/fmod.h	/^    void           *buffer;         \/* [w] Buffer to read file data into. *\/$/;"	m	struct:__anon108
buffer	include/freetype/freetype/ftcache.h	/^    FT_Byte*  buffer;$/;"	m	struct:FTC_SBitRec_
buffer	include/freetype/freetype/ftimage.h	/^    unsigned char*  buffer;$/;"	m	struct:FT_Bitmap_
buffer	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int16_t buffer[1];  \/* UTF-16-encoded, 0-terminated *\/$/;"	m	struct:__anon23
buffer	src/lua/lauxlib.h	/^  char buffer[LUAL_BUFFERSIZE];$/;"	m	struct:luaL_Buffer
buffer	src/lua/lzio.h	/^  char *buffer;$/;"	m	struct:Mbuffer
buffer_	src/jsoncpp/src/json_batchallocator.h	/^      AllocatedType buffer_[objectPerAllocation];$/;"	m	struct:Json::BatchAllocator::BatchInfo
buffer_t	src/client/client.cpp	/^typedef char buffer_t[1024];$/;"	t	file:
buffer_t	src/util/socket.h	/^typedef char buffer_t[1024];$/;"	t
bufffree	src/lua/lauxlib.c	393;"	d	file:
bufflen	src/lua/lauxlib.c	392;"	d	file:
buffreplace	src/lua/llex.c	/^static void buffreplace (LexState *ls, char from, char to) {$/;"	f	file:
buffsize	src/lua/lzio.h	/^  size_t buffsize;$/;"	m	struct:Mbuffer
build	lua/lib/socket/url.lua	/^function build(parsed)$/;"	f
build_handles	lua/lib/sqlite3.lua	/^  local function build_handles(sql)$/;"	f
build_number	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t        build_number;$/;"	m	struct:__anon39
build_path	lua/lib/socket/url.lua	/^function build_path(parsed, unsafe)$/;"	f
buildchar	include/freetype/freetype/internal/psaux.h	/^    FT_Long*             buildchar;$/;"	m	struct:T1_DecoderRec_
buildchar	include/freetype/freetype/internal/t1types.h	/^    FT_Long*         buildchar;$/;"	m	struct:T1_FaceRec_
builder	include/freetype/freetype/internal/psaux.h	/^    T1_BuilderRec        builder;$/;"	m	struct:T1_DecoderRec_
bury	src/server/serverplayer.cpp	/^void ServerPlayer::bury(){$/;"	f	class:ServerPlayer
button_layout	src/dialog/generaloverview.h	/^    QVBoxLayout *button_layout;$/;"	m	class:GeneralOverview
button_widget	src/ui/dashboard.h	/^    QGraphicsItem *button_widget;$/;"	m	class:Dashboard
buttons	src/ui/startscene.h	/^    QList<Button*> buttons;$/;"	m	class:StartScene
bvalue	src/lua/lobject.h	100;"	d
byte_len	include/freetype/freetype/internal/tttypes.h	/^    FT_Int           byte_len;$/;"	m	struct:TT_LoaderRec_
bytecode_	src/breakpad/processor/disassembler_x86.h	/^    const u_int8_t *bytecode_;$/;"	m	class:google_breakpad::DisassemblerX86
bytes_per_row	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  bytes_per_row;$/;"	m	struct:FT_WinFNT_HeaderRec_
bytesread	include/fmod/fmod.h	/^    unsigned int    bytesread;      \/* [w] Fill this in before setting result code to tell FMOD how many bytes were read. *\/$/;"	m	struct:__anon108
c	src/lua/lobject.h	/^  CClosure c;$/;"	m	union:Closure
c_str	src/jsoncpp/include/json/value.h	/^      const char *c_str() const$/;"	f	class:Json::StaticString
c_str	src/jsoncpp/src/json_value.cpp	/^Value::CZString::c_str() const$/;"	f	class:Json::Value::CZString
callTM	src/lua/lvm.c	/^static void callTM (lua_State *L, const TValue *f, const TValue *p1,$/;"	f	file:
callTMres	src/lua/lvm.c	/^static void callTMres (lua_State *L, StkId res, const TValue *f,$/;"	f	file:
callViewAsSkill	src/ui/roomscene.cpp	/^void RoomScene::callViewAsSkill(){$/;"	f	class:RoomScene
call_binTM	src/lua/lvm.c	/^static int call_binTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
call_frame_info	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  CFIFrameInfo call_frame_info;$/;"	m	struct:SimpleCFIWalkerFixture	file:
call_orderTM	src/lua/lvm.c	/^static int call_orderTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
call_stack	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  CallStack call_stack;$/;"	m	class:StackwalkerAMD64Fixture	file:
call_stack	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  CallStack call_stack;$/;"	m	class:StackwalkerARMFixture	file:
call_stack	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  CallStack call_stack;$/;"	m	class:StackwalkerX86Fixture	file:
call_user_func	lua/lib/sqlite3.lua	/^local function call_user_func(context, func, num_values, values)$/;"	f
callallgcTM	src/lua/lstate.c	/^static void callallgcTM (lua_State *L, void *ud) {$/;"	f	file:
callback	src/breakpad/processor/testdata/linux_test_app.cc	/^static bool callback(const char *dump_path, const char *id,$/;"	f	namespace:__anon79
callback	src/breakpad/processor/testdata/test_app.cc	/^static bool callback(const wchar_t *dump_path, const wchar_t *id,$/;"	f	namespace:__anon80
callback	src/main.cpp	/^static bool callback(const wchar_t *dump_path, const wchar_t *id,$/;"	f	file:
callback	src/server/ai.h	/^    LuaFunction callback;$/;"	m	class:LuaAI
callback_	src/breakpad/client/windows/handler/exception_handler.h	/^  MinidumpCallback callback_;$/;"	m	class:google_breakpad::ExceptionHandler
callback_context_	src/breakpad/client/windows/handler/exception_handler.h	/^  void* callback_context_;$/;"	m	class:google_breakpad::ExceptionHandler
callbacks	src/client/client.h	/^    QHash<QString, Callback> callbacks;$/;"	m	class:Client
callbacks	src/server/room.h	/^    QHash<QString, Callback> callbacks; \/\/ Legacy protocol callbacks$/;"	m	class:Room
callee_context	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  RawContext callee_context, caller_context;$/;"	m	struct:SimpleCFIWalkerFixture	file:
callee_saves	src/breakpad/processor/cfi_frame_info.h	/^    bool callee_saves;$/;"	m	struct:google_breakpad::SimpleCFIWalker::RegisterSet
caller_context	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  RawContext callee_context, caller_context;$/;"	m	struct:SimpleCFIWalkerFixture	file:
caller_registers	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  CFIFrameInfo::RegisterValueMap<u_int64_t> registers, caller_registers;$/;"	m	struct:CFIFixture	file:
callrethooks	src/lua/ldo.c	/^static StkId callrethooks (lua_State *L, StkId firstResult) {$/;"	f	file:
canJilei	src/core/WrappedCard.h	/^    inline virtual bool canJilei() const {$/;"	f	class:WrappedCard
canJilei	src/core/card.cpp	/^bool Card::canJilei() const{$/;"	f	class:Card
canSlash	src/core/player.cpp	/^bool Player::canSlash(const Player *other, bool distance_limit, int rangefix) const{$/;"	f	class:Player
canSlashWithoutCrossbow	src/core/player.cpp	/^bool Player::canSlashWithoutCrossbow() const{$/;"	f	class:Player
can_jilei	src/core/card.h	/^    bool can_jilei;$/;"	m	class:Card
can_trigger	src/core/lua-wrapper.h	/^    LuaFunction can_trigger;$/;"	m	class:LuaTriggerSkill
cancelViewAsSkill	src/ui/roomscene.cpp	/^void RoomScene::cancelViewAsSkill(){$/;"	f	class:RoomScene
cancel_button	src/ui/roomscene.h	/^    QSanButton *ok_button, *cancel_button, *discard_button;$/;"	m	class:RoomScene
cancelable	src/package/standard.h	/^    bool cancelable;$/;"	m	class:TrickCard
capacity	include/freetype/freetype/internal/psaux.h	/^    FT_Offset          capacity;       \/* current size of memory block   *\/$/;"	m	struct:PS_TableRec_
capture	src/breakpad/processor/linked_ptr.h	/^  void capture(T* ptr) {$/;"	f	class:google_breakpad::linked_ptr
capture	src/lua/lstrlib.c	/^  } capture[LUA_MAXCAPTURES];$/;"	m	struct:MatchState	typeref:struct:MatchState::__anon101	file:
capture_to_close	src/lua/lstrlib.c	/^static int capture_to_close (MatchState *ms) {$/;"	f	file:
card	src/client/aux-skills.h	/^    Card *card;$/;"	m	class:YijiViewAsSkill
card	src/client/aux-skills.h	/^    ChoosePlayerCard *card;$/;"	m	class:ChoosePlayerSkill
card	src/client/aux-skills.h	/^    DummyCard *card;$/;"	m	class:DiscardSkill
card	src/client/aux-skills.h	/^    DummyCard *card;$/;"	m	class:FreeDiscardSkill
card	src/core/structs.h	/^    const Card *card;$/;"	m	struct:CardEffectStruct
card	src/core/structs.h	/^    const Card *card;$/;"	m	struct:CardUseStruct
card	src/core/structs.h	/^    const Card *card;$/;"	m	struct:DamageStruct
card	src/core/structs.h	/^    const Card *card;$/;"	m	struct:JudgeStruct
card	src/core/structs.h	/^    const Card *card;$/;"	m	struct:RecoverStruct
card	src/package/yitianpackage.cpp	/^    YisheCard *card;$/;"	m	class:YisheViewAsSkill	file:
cardEffect	src/server/room.cpp	/^bool Room::cardEffect(const Card *card, ServerPlayer *from, ServerPlayer *to){$/;"	f	class:Room
cardEffect	src/server/room.cpp	/^bool Room::cardEffect(const CardEffectStruct &effect){$/;"	f	class:Room
cardLock	src/client/client.cpp	/^void Client::cardLock(const QString &card_str){$/;"	f	class:Client
card_container	src/ui/roomscene.h	/^    CardContainer *card_container;$/;"	m	class:RoomScene
card_for_qiaobian	lua/ai/mountain-ai.lua	/^local function card_for_qiaobian(self, who, return_prompt)$/;"	f
card_id	src/core/structs.h	/^    int card_id;$/;"	m	struct:CardMoveStruct
card_ids	src/core/structs.h	/^    QList<int> card_ids;$/;"	m	struct:CardsMoveOneTimeStruct
card_ids	src/core/structs.h	/^    QList<int> card_ids;$/;"	m	struct:CardsMoveStruct
card_list	src/dialog/customassigndialog.h	/^    QListWidget *card_list;$/;"	m	class:CardAssignDialog
card_pattern	src/client/client.h	/^    QString card_pattern;$/;"	m	class:Client
card_scene	src/dialog/cardeditor.h	/^    CardScene *card_scene;$/;"	m	class:CardEditor
card_str	src/server/roomthread.h	/^    QString card_str;$/;"	m	struct:LogMessage
card_type	src/dialog/customassigndialog.h	/^    QString card_type, class_name;$/;"	m	class:CardAssignDialog
cardinal	include/freetype/freetype/ftbdf.h	/^      FT_UInt32       cardinal;$/;"	m	union:BDF_PropertyRec_::__anon104
cards	src/core/engine.h	/^    QList<Card*> cards;$/;"	m	class:Engine
cardsView	lua/ai/smart-ai.lua	/^local function cardsView(class_name, player)$/;"	f
caret_Offset	include/freetype/freetype/tttables.h	/^    FT_Short   caret_Offset;$/;"	m	struct:TT_HoriHeader_
caret_Offset	include/freetype/freetype/tttables.h	/^    FT_Short   caret_Offset;$/;"	m	struct:TT_VertHeader_
caret_Slope_Rise	include/freetype/freetype/tttables.h	/^    FT_Short   caret_Slope_Rise;$/;"	m	struct:TT_HoriHeader_
caret_Slope_Rise	include/freetype/freetype/tttables.h	/^    FT_Short   caret_Slope_Rise;$/;"	m	struct:TT_VertHeader_
caret_Slope_Run	include/freetype/freetype/tttables.h	/^    FT_Short   caret_Slope_Run;$/;"	m	struct:TT_HoriHeader_
caret_Slope_Run	include/freetype/freetype/tttables.h	/^    FT_Short   caret_Slope_Run;$/;"	m	struct:TT_VertHeader_
caret_offset	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  caret_offset;$/;"	m	struct:TT_SBit_LineMetricsRec_
caret_slope_denominator	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  caret_slope_denominator;$/;"	m	struct:TT_SBit_LineMetricsRec_
caret_slope_numerator	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  caret_slope_numerator;$/;"	m	struct:TT_SBit_LineMetricsRec_
cast	src/lua/llimits.h	75;"	d
cast	swig/sanguosha_wrap.cxx	/^  struct swig_cast_info  *cast;			\/* linked list of types that can cast into this type *\/$/;"	m	struct:swig_type_info	typeref:struct:swig_type_info::swig_cast_info	file:
castMessage	src/server/serverplayer.cpp	/^void ServerPlayer::castMessage(const QString &message){$/;"	f	class:ServerPlayer
cast_byte	src/lua/llimits.h	78;"	d
cast_initial	swig/sanguosha_wrap.cxx	/^  swig_cast_info         **cast_initial;	\/* Array of initially generated casting structures *\/$/;"	m	struct:swig_module_info	file:
cast_int	src/lua/llimits.h	80;"	d
cast_num	src/lua/llimits.h	79;"	d
cbsize	include/fmod/fmod.h	/^    int                            cbsize;             \/* [w] Size of this structure.  This is used so the structure can be expanded in the future and still work on older versions of FMOD Ex. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
cbsize	include/fmod/fmod.h	/^    int             cbsize;                     \/* [w]   Size of this structure.  Use sizeof(FMOD_ADVANCEDSETTINGS)  NOTE: This must be set before calling System::getAdvancedSettings! *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
ccr	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	/^  u_int64_t     ccr;$/;"	m	struct:__anon64
cddaforceaspi	include/fmod/fmod.h	/^    int                            cddaforceaspi;      \/* [w] Optional. Specify 0 to ignore. For CDDA sounds only - if non-zero use ASPI instead of NTSCSI to access the specified CD\/DVD device. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
cdv_idx	include/freetype/freetype/internal/t1types.h	/^    FT_Int           cdv_idx;$/;"	m	struct:T1_FaceRec_
ceillog2	src/lua/lobject.h	367;"	d
center	include/js.h	/^  float center    [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
cfa_rule_	src/breakpad/processor/cfi_frame_info.h	/^  string cfa_rule_;$/;"	m	class:google_breakpad::CFIFrameInfo
cff	include/freetype/freetype/internal/ftpic.h	/^    void* cff;$/;"	m	struct:FT_PIC_Container_
cfi	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  CFIFrameInfo cfi;$/;"	m	struct:CFIFixture	file:
cfi_delta_rules_	src/breakpad/processor/basic_source_line_resolver_types.h	/^  std::map<MemAddr, string> cfi_delta_rules_;$/;"	m	class:google_breakpad::BasicSourceLineResolver::Module
cfi_delta_rules_	src/breakpad/processor/fast_source_line_resolver_types.h	/^  StaticMap<MemAddr, char> cfi_delta_rules_;$/;"	m	class:google_breakpad::FastSourceLineResolver::Module
cfi_delta_rules_serializer_	src/breakpad/processor/module_serializer.h	/^  StdMapSerializer<MemAddr, string> cfi_delta_rules_serializer_;$/;"	m	class:google_breakpad::ModuleSerializer
cfi_frame_info	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  CFIFrameInfo *cfi_frame_info;$/;"	m	struct:google_breakpad::StackFrameX86
cfi_init_rules_serializer_	src/breakpad/processor/module_serializer.h	/^  RangeMapSerializer<MemAddr, string> cfi_init_rules_serializer_;$/;"	m	class:google_breakpad::ModuleSerializer
cfi_initial_rules_	src/breakpad/processor/basic_source_line_resolver_types.h	/^  RangeMap<MemAddr, string> cfi_initial_rules_;$/;"	m	class:google_breakpad::BasicSourceLineResolver::Module
cfi_initial_rules_	src/breakpad/processor/fast_source_line_resolver_types.h	/^  StaticRangeMap<MemAddr, char> cfi_initial_rules_;$/;"	m	class:google_breakpad::FastSourceLineResolver::Module
cfi_register_map_	src/breakpad/processor/stackwalker_amd64.cc	/^StackwalkerAMD64::cfi_register_map_[] = {$/;"	m	class:google_breakpad::StackwalkerAMD64	file:
cfi_register_map_	src/breakpad/processor/stackwalker_amd64.h	/^  static const CFIWalker::RegisterSet cfi_register_map_[];$/;"	m	class:google_breakpad::StackwalkerAMD64
cfi_register_map_	src/breakpad/processor/stackwalker_x86.cc	/^StackwalkerX86::cfi_register_map_[] = {$/;"	m	class:google_breakpad::StackwalkerX86	file:
cfi_register_map_	src/breakpad/processor/stackwalker_x86.h	/^  static const CFIWalker::RegisterSet cfi_register_map_[];$/;"	m	class:google_breakpad::StackwalkerX86
cfi_walker_	src/breakpad/processor/stackwalker_amd64.h	/^  const CFIWalker cfi_walker_;$/;"	m	class:google_breakpad::StackwalkerAMD64
cfi_walker_	src/breakpad/processor/stackwalker_x86.h	/^  const CFIWalker cfi_walker_;$/;"	m	class:google_breakpad::StackwalkerX86
chain	src/core/structs.h	/^    bool chain;$/;"	m	struct:DamageStruct
chained	src/core/player.h	/^    bool chained;$/;"	m	class:Player
changeBackground	src/dialog/mainwindow.cpp	/^void MainWindow::changeBackground(){$/;"	f	class:MainWindow
changeGeneral	src/ui/carditem.cpp	/^void CardItem::changeGeneral(const QString &general_name){$/;"	f	class:CardItem
changeGeneral	src/ui/roomscene.cpp	/^void RoomScene::changeGeneral(const QString &general){$/;"	f	class:RoomScene
changeGeneral1v1	src/server/gamerule.cpp	/^void GameRule::changeGeneral1v1(ServerPlayer *player) const{$/;"	f	class:GameRule
changeHp	src/ui/roomscene.cpp	/^void RoomScene::changeHp(const QString &who, int delta, DamageStruct::Nature nature, bool losthp){$/;"	f	class:RoomScene
changePhase	src/server/serverplayer.cpp	/^bool ServerPlayer::changePhase(Player::Phase from, Player::Phase to){$/;"	f	class:ServerPlayer
changePile	src/client/clientplayer.cpp	/^void ClientPlayer::changePile(const QString &name, bool add, QList<int> card_ids){$/;"	f	class:ClientPlayer
changePlayerGeneral	src/server/room.cpp	/^void Room::changePlayerGeneral(ServerPlayer *player, const QString &new_general){$/;"	f	class:Room
changePlayerGeneral2	src/server/room.cpp	/^void Room::changePlayerGeneral2(ServerPlayer *player, const QString &new_general){$/;"	f	class:Room
changeSkillInfo	src/dialog/customassigndialog.cpp	/^void SkillAssignDialog::changeSkillInfo(){$/;"	f	class:SkillAssignDialog
changeToHeart	src/package/wind.cpp	/^    static WrappedCard *changeToHeart(int cardId){$/;"	f	class:Hongyan
change_general_menu	src/ui/roomscene.h	/^    QMenu *known_cards_menu, *change_general_menu;$/;"	m	class:RoomScene
changewhite	src/lua/lgc.h	72;"	d
channel	include/fmod/fmod_memoryinfo.h	/^    unsigned int channel;                        \/* [out] Channel related memory *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
channel	src/core/audio.cpp	/^    FMOD_CHANNEL *channel;$/;"	m	class:Sound	file:
channelgroup	include/fmod/fmod_memoryinfo.h	/^    unsigned int channelgroup;                   \/* [out] ChannelGroup objects and internals *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
channelmask	include/fmod/fmod_codec.h	/^    unsigned int       channelmask;   \/* [in] Microsoft speaker channel mask, as defined for WAVEFORMATEXTENSIBLE and is found in ksmedia.h.  Leave at 0 to play in natural speaker order. *\/$/;"	m	struct:FMOD_CODEC_WAVEFORMAT
channels	include/fmod/fmod_codec.h	/^    int                channels;      \/* [in] Number of channels used by codec, ie mono = 1, stereo = 2. *\/$/;"	m	struct:FMOD_CODEC_WAVEFORMAT
channels	include/fmod/fmod_dsp.h	/^    int                          channels;           \/* [w] Number of channels.  Use 0 to process whatever number of channels is currently in the network.  >0 would be mostly used if the unit is a unit that only generates sound. *\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
chaofeng 	lua/ai/smart-ai.lua	/^	chaofeng = function(a, b)$/;"	f
char2int	src/lua/lzio.h	20;"	d
char_index	include/freetype/freetype/internal/ftobjs.h	/^    FT_CMap_CharIndexFunc  char_index;$/;"	m	struct:FT_CMap_ClassRec_
char_index	include/freetype/freetype/internal/t1types.h	/^    FT_UShort*   char_index;$/;"	m	struct:T1_EncodingRecRec_
char_name	include/freetype/freetype/internal/t1types.h	/^    FT_String**  char_name;$/;"	m	struct:T1_EncodingRecRec_
char_next	include/freetype/freetype/internal/ftobjs.h	/^    FT_CMap_CharNextFunc   char_next;$/;"	m	struct:FT_CMap_ClassRec_
char_var_default	include/freetype/freetype/internal/ftobjs.h	/^    FT_CMap_CharVarIsDefaultFunc  char_var_default;$/;"	m	struct:FT_CMap_ClassRec_
char_var_index	include/freetype/freetype/internal/ftobjs.h	/^    FT_CMap_CharVarIndexFunc      char_var_index;$/;"	m	struct:FT_CMap_ClassRec_
charmap	include/freetype/freetype/freetype.h	/^    FT_CharMap        charmap;$/;"	m	struct:FT_FaceRec_
charmap	include/freetype/freetype/freetype.h	/^  FT_Get_Charmap_Index( FT_CharMap  charmap );$/;"	v
charmap	include/freetype/freetype/internal/ftobjs.h	/^    FT_CharMapRec  charmap;$/;"	m	struct:FT_CMapRec_
charmap	include/freetype/freetype/tttables.h	/^  FT_Get_CMap_Format( FT_CharMap  charmap );$/;"	v
charmap	include/freetype/freetype/tttables.h	/^  FT_Get_CMap_Language_ID( FT_CharMap  charmap );$/;"	v
charmaprecs	include/freetype/freetype/internal/t1types.h	/^    FT_CharMapRec   charmaprecs[2];$/;"	m	struct:T1_FaceRec_
charmaps	include/freetype/freetype/freetype.h	/^    FT_CharMap*       charmaps;$/;"	m	struct:FT_FaceRec_
charmaps	include/freetype/freetype/internal/t1types.h	/^    FT_CharMap      charmaps[2];$/;"	m	struct:T1_FaceRec_
charset	include/freetype/freetype/ftwinfnt.h	/^    FT_Byte    charset;$/;"	m	struct:FT_WinFNT_HeaderRec_
charstrings	include/freetype/freetype/internal/t1types.h	/^    FT_Byte**        charstrings;       \/* array of glyph charstrings *\/$/;"	m	struct:T1_FontRec_
charstrings_block	include/freetype/freetype/internal/t1types.h	/^    FT_Byte*         charstrings_block;$/;"	m	struct:T1_FontRec_
charstrings_len	include/freetype/freetype/internal/t1types.h	/^    FT_PtrDist*      charstrings_len;$/;"	m	struct:T1_FontRec_
charvariant_list	include/freetype/freetype/internal/ftobjs.h	/^    FT_CMap_CharVariantListFunc   charvariant_list;$/;"	m	struct:FT_CMap_ClassRec_
chat_box	src/ui/roomscene.h	/^    QTextEdit *chat_box;$/;"	m	class:RoomScene
chat_box_widget	src/ui/roomscene.h	/^    QGraphicsProxyWidget *chat_box_widget;$/;"	m	class:RoomScene
chat_edit	src/ui/roomscene.h	/^    QLineEdit *chat_edit;$/;"	m	class:RoomScene
chat_edit_widget	src/ui/roomscene.h	/^    QGraphicsProxyWidget *chat_edit_widget;$/;"	m	class:RoomScene
chat_face_board	src/ui/chatwidget.h	/^    MyPixmapItem *chat_face_board, *easy_text_board;$/;"	m	class:ChatWidget
chat_widget	src/ui/roomscene.h	/^    ChatWidget *chat_widget;$/;"	m	class:RoomScene
chatfaceButton	src/ui/chatwidget.h	/^    QPushButton *chatfaceButton;$/;"	m	class:ChatWidget
check	src/lua/ldebug.c	268;"	d	file:
check	src/lua/ldebug.c	477;"	d	file:
check	src/lua/lparser.c	/^static void check (LexState *ls, int c) {$/;"	f	file:
checkArgMode	src/lua/ldebug.c	/^static int checkArgMode (const Proto *pt, int r, enum OpArgMask mode) {$/;"	f	file:
checkBeforeNextBox	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::checkBeforeNextBox(bool toggled){$/;"	f	class:CustomAssignDialog
checkPassword	src/server/contestdb.cpp	/^bool ContestDB::checkPassword(const QString &username, const QString &password){$/;"	f	class:ContestDB
checkSingleTurnBox	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::checkSingleTurnBox(bool toggled){$/;"	f	class:CustomAssignDialog
checkSizes	src/lua/lgc.c	/^static void checkSizes (lua_State *L) {$/;"	f	file:
checkVersion	src/client/client.cpp	/^void Client::checkVersion(const QString &server_version){$/;"	f	class:Client
checkVersion	src/dialog/mainwindow.cpp	/^void MainWindow::checkVersion(const QString &server_version, const QString &server_mod){$/;"	f	class:MainWindow
check_autoclose	lua/lib/sqlite3.lua	/^  local function check_autoclose()$/;"	f
check_capture	src/lua/lstrlib.c	/^static int check_capture (MatchState *ms, int l) {$/;"	f	file:
check_condition	src/lua/lparser.c	100;"	d	file:
check_conflict	src/lua/lparser.c	/^static void check_conflict (LexState *ls, struct LHS_assign *lh, expdesc *v) {$/;"	f	file:
check_db	lua/lib/sqlite3.lua	/^local function check_db(db)$/;"	f
check_exp	src/lua/llimits.h	57;"	d
check_exp	src/lua/llimits.h	63;"	d
check_match	src/lua/lparser.c	/^static void check_match (LexState *ls, int what, int who, int where) {$/;"	f	file:
check_next	src/lua/llex.c	/^static int check_next (LexState *ls, const char *set) {$/;"	f	file:
check_number	lua/lib/sqlite3.lua	/^local function check_number(num, msg)$/;"	f
check_points	include/freetype/freetype/internal/psaux.h	/^    T1_Builder_Check_Points_Func   check_points;$/;"	m	struct:T1_Builder_FuncsRec_
check_single_stmt	lua/lib/sqlite3.lua	/^local function check_single_stmt(stmt)$/;"	f
check_stmt	lua/lib/sqlite3.lua	/^local function check_stmt(stmt)$/;"	f
check_string	lua/lib/sqlite3.lua	/^local function check_string(str, msg)$/;"	f
check_table	lua/lib/sqlite3.lua	/^local function check_table(tab, msg)$/;"	f
checkconsistency	src/lua/lobject.h	108;"	d
checkint	src/lua/lauxlib.c	/^static int checkint (lua_State *L, int topop) {$/;"	f	file:
checkjump	src/lua/ldebug.c	270;"	d	file:
checkjump	src/lua/ldebug.c	478;"	d	file:
checkliveness	src/lua/lobject.h	111;"	d
checkname	src/lua/lparser.c	/^static void checkname(LexState *ls, expdesc *e) {$/;"	f	file:
checknext	src/lua/lparser.c	/^static void checknext (LexState *ls, int c) {$/;"	f	file:
checkopenop	src/lua/ldebug.c	288;"	d	file:
checkreg	src/lua/ldebug.c	272;"	d	file:
checkreg	src/lua/ldebug.c	479;"	d	file:
checkresults	src/lua/lapi.c	772;"	d	file:
checkstacksizes	src/lua/lgc.c	/^static void checkstacksizes (lua_State *L, StkId max) {$/;"	f	file:
checksum	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t            checksum;         \/* 0 if unknown *\/$/;"	m	struct:__anon26
checksum	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t checksum;              \/* Can be 0.  In fact, that's all that's$/;"	m	struct:__anon19
childValues_	src/jsoncpp/include/json/writer.h	/^      ChildValues childValues_;$/;"	m	class:Json::StyledStreamWriter
childValues_	src/jsoncpp/include/json/writer.h	/^      ChildValues childValues_;$/;"	m	class:Json::StyledWriter
choose	lua/lib/mime.lua	/^local function choose(table)$/;"	f
choose	lua/lib/socket.lua	/^function choose(table)$/;"	f
chooseAddress	src/dialog/connectiondialog.cpp	/^void UdpDetectorDialog::chooseAddress(QListWidgetItem *item){$/;"	f	class:UdpDetectorDialog
chooseCard	src/ui/roomscene.cpp	/^void RoomScene::chooseCard(const ClientPlayer *player, const QString &flags, const QString &reason)$/;"	f	class:RoomScene
chooseDirection	src/ui/roomscene.cpp	/^void RoomScene::chooseDirection()$/;"	f	class:RoomScene
chooseGeneral	src/dialog/choosegeneraldialog.cpp	/^void FreeChooseDialog::chooseGeneral(){$/;"	f	class:FreeChooseDialog
chooseGeneral	src/dialog/customassigndialog.cpp	/^void GeneralAssignDialog::chooseGeneral(){$/;"	f	class:GeneralAssignDialog
chooseGeneral	src/ui/roomscene.cpp	/^void RoomScene::chooseGeneral(const QStringList &generals){$/;"	f	class:RoomScene
chooseGenerals	src/server/room.cpp	/^void Room::chooseGenerals(){$/;"	f	class:Room
chooseItem	src/ui/cardcontainer.cpp	/^void CardContainer::chooseItem(){$/;"	f	class:CardContainer
chooseKingdom	src/ui/roomscene.cpp	/^void RoomScene::chooseKingdom(const QStringList &kingdoms)$/;"	f	class:RoomScene
chooseKingdomForPlayer	lua/ai/yitian-ai.lua	/^local function chooseKingdomForPlayer(self, to_modify)$/;"	f
chooseOption	src/ui/roomscene.cpp	/^void RoomScene::chooseOption(const QString &skillName, const QStringList &options)$/;"	f	class:RoomScene
chooseOrder	src/ui/roomscene.cpp	/^void RoomScene::chooseOrder(QSanProtocol::Game3v3ChooseOrderCommand reason)$/;"	f	class:RoomScene
chooseRole	src/ui/roomscene.cpp	/^void RoomScene::chooseRole(const QString &scheme, const QStringList &roles)$/;"	f	class:RoomScene
chooseSkillButton	src/ui/roomscene.cpp	/^void RoomScene::chooseSkillButton(){$/;"	f	class:RoomScene
chooseSuit	src/ui/roomscene.cpp	/^void RoomScene::chooseSuit(const QStringList &suits)$/;"	f	class:RoomScene
choose_general2	src/dialog/customassigndialog.h	/^    bool choose_general2;$/;"	m	class:CustomAssignDialog
choose_nationality	src/dialog/customassigndialog.h	/^    QCheckBox *choose_nationality;$/;"	m	class:CustomAssignDialog
choose_skill	src/ui/roomscene.h	/^    ChoosePlayerSkill *choose_skill;$/;"	m	class:RoomScene
chunk	src/lua/lparser.c	/^static void chunk (LexState *ls) {$/;"	f	file:
ci	src/lua/lstate.h	/^  CallInfo *ci;  \/* call info for current function *\/$/;"	m	struct:lua_State
ci_func	src/lua/lstate.h	60;"	d
cid	include/freetype/freetype/internal/t1types.h	/^    CID_FaceInfoRec  cid;$/;"	m	struct:CID_FaceRec_
cid_count	include/freetype/freetype/t1tables.h	/^    FT_ULong        cid_count;$/;"	m	struct:CID_FaceInfoRec_
cid_font_name	include/freetype/freetype/t1tables.h	/^    FT_String*      cid_font_name;$/;"	m	struct:CID_FaceInfoRec_
cid_font_type	include/freetype/freetype/t1tables.h	/^    FT_Int          cid_font_type;$/;"	m	struct:CID_FaceInfoRec_
cid_stream	include/freetype/freetype/internal/t1types.h	/^    FT_Stream        cid_stream;$/;"	m	struct:CID_FaceRec_
cid_version	include/freetype/freetype/t1tables.h	/^    FT_Fixed        cid_version;$/;"	m	struct:CID_FaceInfoRec_
cidmap_offset	include/freetype/freetype/t1tables.h	/^    FT_ULong        cidmap_offset;$/;"	m	struct:CID_FaceInfoRec_
ckern_validate_func	include/freetype/freetype/internal/services/svgxval.h	/^  (*ckern_validate_func)( FT_Face   face,$/;"	t
cl	src/lua/lstate.h	/^  union Closure cl;$/;"	m	union:GCObject	typeref:union:GCObject::Closure
class	lua/lib/middleclass.lua	/^function class(name, super, ...)$/;"	f
className2objectName	src/core/engine.h	/^    QHash<QString, QString> className2objectName;$/;"	m	class:Engine
class_name	src/dialog/customassigndialog.h	/^    QString card_type, class_name;$/;"	m	class:CardAssignDialog
classend	src/lua/lstrlib.c	/^static const char *classend (MatchState *ms, const char *p) {$/;"	f	file:
clazz	include/freetype/freetype/ftglyph.h	/^    const FT_Glyph_Class*  clazz;$/;"	m	struct:FT_GlyphRec_
clazz	include/freetype/freetype/internal/ftobjs.h	/^    FT_CMap_Class  clazz;$/;"	m	struct:FT_CMapRec_
clazz	include/freetype/freetype/internal/ftobjs.h	/^    FT_Driver_Class  clazz;$/;"	m	struct:FT_DriverRec_
clazz	include/freetype/freetype/internal/ftobjs.h	/^    FT_Module_Class*  clazz;$/;"	m	struct:FT_ModuleRec_
clazz	include/freetype/freetype/internal/ftobjs.h	/^    FT_Renderer_Class*      clazz;$/;"	m	struct:FT_RendererRec_
cleanup	lua/lib/sqlite3.lua	/^  local function cleanup(handles)$/;"	f
cleanup	src/server/server.cpp	/^void Server::cleanup(){$/;"	f	class:Server
cleanup_item_count_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  volatile LONG cleanup_item_count_;$/;"	m	class:google_breakpad::CrashGenerationServer
clear	src/breakpad/processor/binarystream.h	/^  void clear() { stream_.clear(); }$/;"	f	class:google_breakpad::binarystream
clear	src/client/clientstruct.cpp	/^void ServerInfoWidget::clear(){$/;"	f	class:ServerInfoWidget
clear	src/jsoncpp/src/json_value.cpp	/^Value::clear()$/;"	f	class:Json::Value
clear	src/ui/TablePile.cpp	/^void TablePile::clear(bool delayRequest)$/;"	f	class:TablePile
clear	src/ui/cardcontainer.cpp	/^void CardContainer::clear(){$/;"	f	class:CardContainer
clear	src/ui/cardcontainer.cpp	/^void GuanxingBox::clear()$/;"	f	class:GuanxingBox
clearAG	src/client/client.cpp	/^void Client::clearAG(const QString &){$/;"	f	class:Client
clearCardFlag	src/server/room.cpp	/^void Room::clearCardFlag(const Card *card, ServerPlayer *who){$/;"	f	class:Room
clearCardFlag	src/server/room.cpp	/^void Room::clearCardFlag(int card_id, ServerPlayer *who){$/;"	f	class:Room
clearFlags	src/core/card.cpp	/^void Card::clearFlags() const{$/;"	f	class:Card
clearFlags	src/core/player.cpp	/^void Player::clearFlags(){$/;"	f	class:Player
clearGeneral	src/dialog/customassigndialog.cpp	/^void GeneralAssignDialog::clearGeneral(){$/;"	f	class:GeneralAssignDialog
clearGeneral2	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::clearGeneral2(){$/;"	f	class:CustomAssignDialog
clearHistory	src/core/player.cpp	/^void Player::clearHistory(){$/;"	f	class:Player
clearPlayerCardLock	src/server/room.cpp	/^void Room::clearPlayerCardLock(ServerPlayer *player){$/;"	f	class:Room
clearPrivatePiles	src/server/serverplayer.cpp	/^void ServerPlayer::clearPrivatePiles(){$/;"	f	class:ServerPlayer
clearSelected	src/server/serverplayer.cpp	/^void ServerPlayer::clearSelected(){$/;"	f	class:ServerPlayer
clearSubcards	src/core/card.cpp	/^void Card::clearSubcards(){$/;"	f	class:Card
clearTurnTag	src/client/client.cpp	/^void Client::clearTurnTag(){$/;"	f	class:Client
cleartable	src/lua/lgc.c	/^static void cleartable (GCObject *l) {$/;"	f	file:
click	src/ui/qsanbutton.cpp	/^void QSanButton::click(){$/;"	f	class:QSanButton
client_info_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  ClientInfo* client_info_;$/;"	m	class:google_breakpad::CrashGenerationServer
clientdata	swig/sanguosha_wrap.cxx	/^  void                    *clientdata;		\/* Language specific module data *\/$/;"	m	struct:swig_module_info	file:
clientdata	swig/sanguosha_wrap.cxx	/^  void                   *clientdata;		\/* language specific type data *\/$/;"	m	struct:swig_type_info	file:
clients_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  std::list<ClientInfo*> clients_;$/;"	m	class:google_breakpad::CrashGenerationServer
clip_box	include/freetype/freetype/ftimage.h	/^    FT_BBox                 clip_box;$/;"	m	struct:FT_Raster_Params_
clone	src/core/lua-wrapper.cpp	/^LuaSkillCard *LuaSkillCard::clone() const{$/;"	f	class:LuaSkillCard
cloneAI	swig/sanguosha_wrap.cxx	/^AI *Room::cloneAI(ServerPlayer *player){$/;"	f	class:Room
cloneCard	src/core/engine.cpp	/^Card *Engine::cloneCard(const Card* card) const{$/;"	f	class:Engine
cloneCard	src/core/engine.cpp	/^Card *Engine::cloneCard(const QString &name, Card::Suit suit, int number) const{$/;"	f	class:Engine
cloneCard	src/core/engine.cpp	/^Card *Engine::cloneCard(const QString &name, Card::Suit suit, int number, const QStringList &flags) const{$/;"	f	class:Engine
cloneCardItems	src/ui/GenericCardContainerUI.cpp	/^QList<CardItem*> GenericCardContainer::cloneCardItems(QList<int> card_ids){$/;"	f	class:GenericCardContainer
cloneCardItems	src/ui/dashboard.cpp	/^QList<CardItem*> Dashboard::cloneCardItems(QList<int> card_ids){$/;"	f	class:Dashboard
cloneSkillCard	src/core/engine.cpp	/^SkillCard *Engine::cloneSkillCard(const QString &name) const{$/;"	f	class:Engine
close	include/fmod/fmod_codec.h	/^    FMOD_CODEC_CLOSECALLBACK        close;           \/* [in] Close callback for the codec for when FMOD tries to close a sound using this codec.  *\/$/;"	m	struct:FMOD_CODEC_DESCRIPTION
close	include/fmod/fmod_output.h	/^    FMOD_OUTPUT_CLOSECALLBACK          close;                 \/* [in] Cleanup \/ close down function for the output device.  This is called from System::close. *\/$/;"	m	struct:FMOD_OUTPUT_DESCRIPTION
close	include/freetype/freetype/ftsystem.h	/^    FT_Stream_CloseFunc  close;$/;"	m	struct:FT_StreamRec_
close	include/freetype/freetype/internal/pshints.h	/^    T1_Hints_CloseFunc     close;$/;"	m	struct:T1_Hints_FuncsRec_
close	include/freetype/freetype/internal/pshints.h	/^    T2_Hints_CloseFunc    close;$/;"	m	struct:T2_Hints_FuncsRec_
closeEvent	src/dialog/cardeditor.cpp	/^void CardEditor::closeEvent(QCloseEvent *event){$/;"	f	class:CardEditor
closeEvent	src/dialog/mainwindow.cpp	/^void MainWindow::closeEvent(QCloseEvent *event){$/;"	f	class:MainWindow
close_button	src/ui/cardcontainer.h	/^    CloseButton* close_button;$/;"	m	class:CardContainer
close_contour	include/freetype/freetype/internal/psaux.h	/^    T1_Builder_Close_Contour_Func  close_contour;$/;"	m	struct:T1_Builder_FuncsRec_
close_func	src/lua/lparser.c	/^static void close_func (LexState *ls) {$/;"	f	file:
close_state	src/lua/lstate.c	/^static void close_state (lua_State *L) {$/;"	f	file:
closelistfield	src/lua/lparser.c	/^static void closelistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
clvalue	src/lua/lobject.h	98;"	d
cmap	include/freetype/freetype/internal/ftobjs.h	/^  FT_CMap_Done( FT_CMap  cmap );$/;"	v
cmap	include/freetype/freetype/internal/services/svpscmap.h	/^    FT_CMapRec  cmap;$/;"	m	struct:PS_UnicodesRec_
cmap_size	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              cmap_size;$/;"	m	struct:TT_FaceRec_
cmap_table	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*              cmap_table;   \/* extracted `cmap' table *\/$/;"	m	struct:TT_FaceRec_
cmd	src/util/recorder.h	/^        QString cmd;$/;"	m	struct:Replayer::Pair
co_funcs	src/lua/lbaselib.c	/^static const luaL_Reg co_funcs[] = {$/;"	v	file:
code	include/freetype/freetype/internal/t1types.h	/^    FT_Byte**  code;$/;"	m	struct:CID_SubrsRec_
code	src/lua/lobject.h	/^  Instruction *code;$/;"	m	struct:Proto
codePointToUTF8	src/jsoncpp/src/json_tool.h	/^codePointToUTF8(unsigned int cp)$/;"	f	namespace:Json
code_file	src/breakpad/common/windows/pdb_source_line_writer.h	/^  wstring code_file;$/;"	m	struct:google_breakpad::PEModuleInfo
code_file	src/breakpad/processor/basic_code_module.h	/^  virtual string code_file() const { return code_file_; }$/;"	f	class:google_breakpad::BasicCodeModule
code_file	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  virtual string code_file() const { return code_file_; }$/;"	f	class:__anon71::TestCodeModule
code_file	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  virtual string code_file() const { return code_file_; }$/;"	f	class:__anon73::TestCodeModule
code_file	src/breakpad/processor/minidump.cc	/^string MinidumpModule::code_file() const {$/;"	f	class:google_breakpad::MinidumpModule
code_file	src/breakpad/processor/stackwalker_unittest_utils.h	/^  string code_file()        const { return code_file_; }$/;"	f	class:MockCodeModule
code_file_	src/breakpad/common/windows/pdb_source_line_writer.h	/^  wstring code_file_;$/;"	m	class:google_breakpad::PDBSourceLineWriter
code_file_	src/breakpad/processor/basic_code_module.h	/^  string code_file_;$/;"	m	class:google_breakpad::BasicCodeModule
code_file_	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  string code_file_;$/;"	m	class:__anon71::TestCodeModule	file:
code_file_	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  string code_file_;$/;"	m	class:__anon73::TestCodeModule	file:
code_file_	src/breakpad/processor/stackwalker_unittest_utils.h	/^  string code_file_;$/;"	m	class:MockCodeModule
code_first	include/freetype/freetype/internal/t1types.h	/^    FT_Int       code_first;$/;"	m	struct:T1_EncodingRecRec_
code_identifier	src/breakpad/common/windows/pdb_source_line_writer.h	/^  wstring code_identifier;$/;"	m	struct:google_breakpad::PEModuleInfo
code_identifier	src/breakpad/processor/basic_code_module.h	/^  virtual string code_identifier() const { return code_identifier_; }$/;"	f	class:google_breakpad::BasicCodeModule
code_identifier	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  virtual string code_identifier() const { return ""; }$/;"	f	class:__anon71::TestCodeModule
code_identifier	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  virtual string code_identifier() const { return ""; }$/;"	f	class:__anon73::TestCodeModule
code_identifier	src/breakpad/processor/minidump.cc	/^string MinidumpModule::code_identifier() const {$/;"	f	class:google_breakpad::MinidumpModule
code_identifier	src/breakpad/processor/stackwalker_unittest_utils.h	/^  string code_identifier()  const { return code_file_; }$/;"	f	class:MockCodeModule
code_identifier_	src/breakpad/processor/basic_code_module.h	/^  string code_identifier_;$/;"	m	class:google_breakpad::BasicCodeModule
code_label	src/lua/lcode.c	/^static int code_label (FuncState *fs, int A, int b, int jump) {$/;"	f	file:
code_last	include/freetype/freetype/internal/t1types.h	/^    FT_Int       code_last;$/;"	m	struct:T1_EncodingRecRec_
codearith	src/lua/lcode.c	/^static void codearith (FuncState *fs, OpCode op, expdesc *e1, expdesc *e2) {$/;"	f	file:
codec	include/fmod/fmod_memoryinfo.h	/^    unsigned int codec;                          \/* [out] Codecs allocated for streaming *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
codecomp	src/lua/lcode.c	/^static void codecomp (FuncState *fs, OpCode op, int cond, expdesc *e1,$/;"	f	file:
codenot	src/lua/lcode.c	/^static void codenot (FuncState *fs, expdesc *e) {$/;"	f	file:
codestring	src/lua/lparser.c	/^static void codestring (LexState *ls, expdesc *e, TString *s) {$/;"	f	file:
collapse	src/ui/rolecombobox.cpp	/^void RoleComboBox::collapse(){$/;"	f	class:RoleComboBox
collectComments_	src/jsoncpp/include/json/reader.h	/^      bool collectComments_;$/;"	m	class:Json::Reader
collect_parameter_names	lua/lib/sqlite3.lua	/^  local function collect_parameter_names(handles)$/;"	f
collectvalidlines	src/lua/ldebug.c	/^static void collectvalidlines (lua_State *L, Closure *f) {$/;"	f	file:
color	src/dialog/cardeditor.h	/^    QColor color;$/;"	m	class:BlackEdgeTextItem
color	src/ui/indicatoritem.h	/^    QColor color;$/;"	m	class:IndicatorItem
color_ref	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong                color_ref;$/;"	m	struct:TT_SBit_StrikeRec_
color_table_offset	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  color_table_offset;$/;"	m	struct:FT_WinFNT_HeaderRec_
command 	lua/lib/socket/ftp.lua	/^command = socket.protect(function(cmdt)$/;"	f
commandFormatWarning	src/client/client.cpp	/^void Client::commandFormatWarning(const QString &str, const QRegExp &rx, const char *command){$/;"	f	class:Client
commandProceed	src/util/recorder.cpp	/^QString &Replayer::commandProceed(QString &cmd){$/;"	f	class:Replayer
commentAfter	src/jsoncpp/include/json/value.h	/^      commentAfter,             \/\/\/< a comment on the line after a value (only make sense for root value)$/;"	e	enum:Json::CommentPlacement
commentAfterOnSameLine	src/jsoncpp/include/json/value.h	/^      commentAfterOnSameLine,   \/\/\/< a comment just after a value on the same line$/;"	e	enum:Json::CommentPlacement
commentBefore	src/jsoncpp/include/json/value.h	/^      commentBefore = 0,        \/\/\/< a comment placed on the line before a value$/;"	e	enum:Json::CommentPlacement
comment_	src/jsoncpp/include/json/value.h	/^         char *comment_;$/;"	m	struct:Json::Value::CommentInfo
commentsBefore_	src/jsoncpp/include/json/reader.h	/^      std::string commentsBefore_;$/;"	m	class:Json::Reader
comments_	src/jsoncpp/include/json/value.h	/^      CommentInfo *comments_;$/;"	m	class:Json::Value
compare	src/jsoncpp/src/json_value.cpp	/^Value::compare( const Value &other ) const$/;"	f	class:Json::Value
compare_	src/breakpad/processor/static_map.h	/^  Compare compare_;$/;"	m	class:google_breakpad::StaticMap
compare_func	lua/ai/mountain-ai.lua	/^	local function compare_func(a, b)$/;"	f
compare_func	lua/ai/smart-ai.lua	/^			local function compare_func(a,b)$/;"	f
compare_func	lua/ai/yitian-ai.lua	/^	local function compare_func(a,b)$/;"	f
computesizes	src/lua/ltable.c	/^static int computesizes (int nums[], int *narray) {$/;"	f	file:
cond	src/lua/lparser.c	/^static int cond (LexState *ls) {$/;"	f	file:
condhardstacktests	src/lua/llimits.h	123;"	d
condhardstacktests	src/lua/llimits.h	125;"	d
condjump	src/lua/lcode.c	/^static int condjump (FuncState *fs, OpCode op, int A, int B, int C) {$/;"	f	file:
config	include/fmod/fmod_dsp.h	/^    FMOD_DSP_DIALOGCALLBACK      config;             \/* [w] This is called when the user calls DSP::showConfigDialog.  Can be used to display a dialog to configure the filter.  Can be null. *\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
config	src/server/server.cpp	/^bool ServerDialog::config(){$/;"	f	class:ServerDialog
config_dialog	src/dialog/mainwindow.h	/^    ConfigDialog *config_dialog;$/;"	m	class:MainWindow
configheight	include/fmod/fmod_dsp.h	/^    int                          configheight;       \/* [w] Height of config dialog graphic if there is one.  0 otherwise.*\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
configwidth	include/fmod/fmod_dsp.h	/^    int                          configwidth;        \/* [w] Width of config dialog graphic if there is one.  0 otherwise.*\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
conic_to	include/freetype/freetype/ftimage.h	/^    FT_Outline_ConicToFunc  conic_to;$/;"	m	struct:FT_Outline_Funcs_
connect	lua/lib/socket.lua	/^function connect(address, port, laddress, lport)$/;"	f
connect	lua/lib/socket/tp.lua	/^function connect(host, port, timeout, create)$/;"	f
connectToHost	src/util/nativesocket.cpp	/^void NativeClientSocket::connectToHost(){$/;"	f	class:NativeClientSocket
connect_callback_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  OnClientConnectedCallback connect_callback_;$/;"	m	class:google_breakpad::CrashGenerationServer
connect_context_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  void* connect_context_;$/;"	m	class:google_breakpad::CrashGenerationServer
connection_dialog	src/dialog/mainwindow.h	/^    ConnectionDialog *connection_dialog;$/;"	m	class:MainWindow
const_iterator	src/breakpad/processor/static_map.h	/^  typedef StaticMapIterator<Key, Value, Compare> const_iterator;$/;"	t	class:google_breakpad::StaticMap
const_iterator	src/jsoncpp/include/json/value.h	/^      typedef ValueConstIterator const_iterator;$/;"	t	class:Json::Value
constfolding	src/lua/lcode.c	/^static int constfolding (OpCode op, expdesc *e1, expdesc *e2) {$/;"	f	file:
constructBody	src/core/protocol.h	/^        virtual const Json::Value& constructBody() const { return m_msgBody; }$/;"	f	class:QSanProtocol::QSanGeneralPacket
constructTriggerTable	src/server/roomthread.cpp	/^void RoomThread::constructTriggerTable(){$/;"	f	class:RoomThread
constructor	src/lua/lparser.c	/^static void constructor (LexState *ls, expdesc *t) {$/;"	f	file:
constructor	swig/sanguosha_wrap.cxx	/^  lua_CFunction  constructor;$/;"	m	struct:swig_lua_class	file:
contains	src/ui/SkinBank.cpp	/^bool QSanPixmapCache::contains(const QString &key)$/;"	f	class:QSanPixmapCache
containsControlCharacter	src/jsoncpp/src/json_writer.cpp	/^static bool containsControlCharacter( const char* str )$/;"	f	namespace:Json
containsNewLine	src/jsoncpp/src/json_reader.cpp	/^containsNewLine( Reader::Location begin, $/;"	f	namespace:Json
containsTrick	src/core/player.cpp	/^bool Player::containsTrick(const QString &trick_name) const{$/;"	f	class:Player
content_box	src/dialog/scenario-overview.h	/^    QTextEdit *content_box;$/;"	m	class:ScenarioOverview
contents_	src/breakpad/processor/stackwalker_unittest_utils.h	/^  string contents_;$/;"	m	class:MockMemoryRegion
contest_mode_checkbox	src/server/server.h	/^    QCheckBox *contest_mode_checkbox;$/;"	m	class:ServerDialog
context	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  MDRawContextAMD64 context;$/;"	m	struct:google_breakpad::StackFrameAMD64
context	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  MDRawContextARM context;$/;"	m	struct:google_breakpad::StackFrameARM
context	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  MDRawContextPPC context;$/;"	m	struct:google_breakpad::StackFramePPC
context	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  MDRawContextSPARC context;$/;"	m	struct:google_breakpad::StackFrameSPARC
context	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  MDRawContextX86 context;$/;"	m	struct:google_breakpad::StackFrameX86
contextMenuEvent	src/dialog/cardeditor.cpp	/^void CardScene::contextMenuEvent(QGraphicsSceneContextMenuEvent *event){$/;"	f	class:CardScene
context_	src/breakpad/google_breakpad/processor/minidump.h	/^  MinidumpContext*      context_;$/;"	m	class:google_breakpad::MinidumpThread
context_	src/breakpad/google_breakpad/processor/minidump.h	/^  MinidumpContext*     context_;$/;"	m	class:google_breakpad::MinidumpException
context_	src/breakpad/google_breakpad/processor/minidump.h	/^  } context_;$/;"	m	class:google_breakpad::MinidumpContext	typeref:union:google_breakpad::MinidumpContext::__anon65
context_	src/breakpad/processor/stackwalker_amd64.h	/^  const MDRawContextAMD64 *context_;$/;"	m	class:google_breakpad::StackwalkerAMD64
context_	src/breakpad/processor/stackwalker_arm.h	/^  const MDRawContextARM *context_;$/;"	m	class:google_breakpad::StackwalkerARM
context_	src/breakpad/processor/stackwalker_ppc.h	/^  const MDRawContextPPC *context_;$/;"	m	class:google_breakpad::StackwalkerPPC
context_	src/breakpad/processor/stackwalker_sparc.h	/^  const MDRawContextSPARC *context_;$/;"	m	class:google_breakpad::StackwalkerSPARC
context_	src/breakpad/processor/stackwalker_x86.h	/^  const MDRawContextX86 *context_;$/;"	m	class:google_breakpad::StackwalkerX86
context_flags	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int32_t  context_flags;$/;"	m	struct:__anon56
context_flags	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	/^  u_int32_t	context_flags;$/;"	m	struct:__anon62
context_flags	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int32_t             context_flags;$/;"	m	struct:__anon11
context_flags	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	/^  u_int64_t             context_flags;$/;"	m	struct:__anon8
context_flags	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	/^  u_int32_t	context_flags;$/;"	m	struct:__anon64
context_flags	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             context_flags;$/;"	m	struct:__anon7
context_flags	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t context_flags;$/;"	m	struct:__anon15
context_flags_	src/breakpad/google_breakpad/processor/minidump.h	/^  u_int32_t context_flags_;$/;"	m	class:google_breakpad::MinidumpContext
context_frame_validity	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  int context_frame_validity;$/;"	m	struct:CFIFixture	file:
context_frame_validity_	src/breakpad/processor/stackwalker_arm.h	/^  int context_frame_validity_;$/;"	m	class:google_breakpad::StackwalkerARM
context_member	src/breakpad/processor/cfi_frame_info.h	/^    RegisterType RawContextType::*context_member;$/;"	m	class:google_breakpad::SimpleCFIWalker::RegisterSet::RawContextType
context_validity	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  int context_validity;$/;"	m	struct:google_breakpad::StackFrameAMD64
context_validity	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  int context_validity;$/;"	m	struct:google_breakpad::StackFrameARM
context_validity	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  int context_validity;$/;"	m	struct:google_breakpad::StackFramePPC
context_validity	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  int context_validity;$/;"	m	struct:google_breakpad::StackFrameSPARC
context_validity	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  int context_validity;$/;"	m	struct:google_breakpad::StackFrameX86
contours	include/freetype/freetype/ftimage.h	/^    short*      contours;        \/* the contour end points             *\/$/;"	m	struct:FT_Outline_
contours	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort*  contours;    \/* contour end points          *\/$/;"	m	struct:TT_GlyphZoneRec_
control_data	include/freetype/freetype/freetype.h	/^    void*             control_data;$/;"	m	struct:FT_GlyphSlotRec_
control_len	include/freetype/freetype/freetype.h	/^    long              control_len;$/;"	m	struct:FT_GlyphSlotRec_
control_panel	src/ui/roomscene.h	/^    QGraphicsItem *control_panel;$/;"	m	class:RoomScene
control_word	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int16_t  control_word;$/;"	m	struct:__anon55
control_word	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t control_word;$/;"	m	struct:__anon6
converter	swig/sanguosha_wrap.cxx	/^  swig_converter_func     converter;		\/* function to cast the void pointers *\/$/;"	m	struct:swig_cast_info	file:
cool_leader	src/server/roomthread3v3.h	/^    ServerPlayer *warm_leader, *cool_leader;$/;"	m	class:RoomThread3v3
coords	include/freetype/freetype/ftmm.h	/^    FT_Fixed*  coords;$/;"	m	struct:FT_Var_Named_Style_
copy	src/breakpad/processor/linked_ptr.h	/^  template <typename U> void copy(linked_ptr<U> const* ptr) {$/;"	f	class:google_breakpad::linked_ptr
copyEverythingFrom	src/core/WrappedCard.cpp	/^void WrappedCard::copyEverythingFrom(Card* card)$/;"	f	class:WrappedCard
copyFrom	src/core/player.cpp	/^void Player::copyFrom(Player* p)$/;"	f	class:Player
copyFrom	src/server/room.cpp	/^void Room::copyFrom(Room* rRoom)$/;"	f	class:Room
copyFrom	src/server/serverplayer.cpp	/^void ServerPlayer::copyFrom(ServerPlayer* sp)$/;"	f	class:ServerPlayer
copyLines	src/dialog/generaloverview.cpp	/^void GeneralOverview::copyLines(){$/;"	f	class:GeneralOverview
copyPhoto	src/dialog/cardeditor.cpp	/^void CardEditor::copyPhoto(){$/;"	f	class:CardEditor
copyTo	src/server/room.h	/^        inline void copyTo(CardsMoveStruct & move)$/;"	f	struct:Room::_MoveSourceClassifier
copyright	include/freetype/freetype/ftwinfnt.h	/^    FT_Byte    copyright[60];$/;"	m	struct:FT_WinFNT_HeaderRec_
copyright_text	src/dialog/cardeditor.h	/^    QGraphicsTextItem *copyright_text;$/;"	m	class:SkillBox
correct	src/package/standard.h	/^    int correct;$/;"	m	class:Horse
correctDistance	src/core/engine.cpp	/^int Engine::correctDistance(const Player *from, const Player *to) const{$/;"	f	class:Engine
correctMaxCards	src/core/engine.cpp	/^int Engine::correctMaxCards(const Player *target) const{$/;"	f	class:Engine
correct_func	src/core/lua-wrapper.h	/^    LuaFunction correct_func;$/;"	m	class:LuaDistanceSkill
correct_size	src/breakpad/processor/static_map_unittest.cc	/^  unsigned int correct_size[kNumberTestCases];$/;"	m	class:TestValidMap	file:
correctstack	src/lua/ldo.c	/^static void correctstack (lua_State *L, TValue *oldstack) {$/;"	f	file:
costatus	src/lua/lbaselib.c	/^static int costatus (lua_State *L, lua_State *co) {$/;"	f	file:
count	include/freetype/freetype/internal/tttypes.h	/^    FT_Long    count;$/;"	m	struct:TTC_HeaderRec_
count	src/breakpad/client/windows/common/ipc_protocol.h	/^  size_t count;$/;"	m	struct:google_breakpad::CustomClientInfo
count	src/breakpad/processor/address_map_unittest.cc	/^  static int count() { return count_; }$/;"	f	class:__anon76::CountedObject
count	src/breakpad/processor/range_map_unittest.cc	/^  static int count() { return count_; }$/;"	f	class:__anon84::CountedObject
countAsOneTime	src/core/structs.h	/^    bool countAsOneTime; \/\/ helper to identify distinct move counted as one time$/;"	m	struct:CardsMoveStruct
count_	src/breakpad/processor/address_map_unittest.cc	/^  static int count_;$/;"	m	class:__anon76::CountedObject	file:
count_	src/breakpad/processor/address_map_unittest.cc	/^int CountedObject::count_;$/;"	m	class:__anon76::CountedObject	file:
count_	src/breakpad/processor/range_map_unittest.cc	/^  static int count_;$/;"	m	class:__anon84::CountedObject	file:
count_	src/breakpad/processor/range_map_unittest.cc	/^int CountedObject::count_;$/;"	m	class:__anon84::CountedObject	file:
count_	src/breakpad/processor/synth_minidump.h	/^  size_t count_;$/;"	m	class:google_breakpad::SynthMinidump::List
count_label_	src/breakpad/processor/synth_minidump.h	/^  Label count_label_;$/;"	m	class:google_breakpad::SynthMinidump::List
count_offset	include/freetype/freetype/internal/psaux.h	/^    FT_UInt             count_offset; \/* offset of element count for    *\/$/;"	m	struct:T1_FieldRec_
count_parameters	lua/lib/sqlite3.lua	/^  local function count_parameters(handles)$/;"	f
counter	include/freetype/freetype/internal/pshints.h	/^    T2_Hints_CounterFunc  counter;$/;"	m	struct:T2_Hints_FuncsRec_
countint	src/lua/ltable.c	/^static int countint (const TValue *key, int *nums) {$/;"	f	file:
coverage	include/freetype/freetype/ftimage.h	/^    unsigned char   coverage;$/;"	m	struct:FT_Span_
cplusplus_typeof	include/freetype/freetype/internal/ftmemory.h	/^  cplusplus_typeof(        T*,$/;"	f
cpsr	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	/^  u_int32_t    cpsr;$/;"	m	struct:__anon62
cpu	src/breakpad/common/windows/pdb_source_line_writer.h	/^  wstring cpu;$/;"	m	struct:google_breakpad::PDBModuleInfo
cpu	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDCPUInformation cpu;$/;"	m	struct:__anon39
cpu	src/breakpad/google_breakpad/processor/system_info.h	/^  string cpu;$/;"	m	struct:google_breakpad::SystemInfo
cpu_count	src/breakpad/google_breakpad/processor/system_info.h	/^  int cpu_count;$/;"	m	struct:google_breakpad::SystemInfo
cpu_info	src/breakpad/google_breakpad/processor/system_info.h	/^  string cpu_info;$/;"	m	struct:google_breakpad::SystemInfo
cpu_vendor_	src/breakpad/google_breakpad/processor/minidump.h	/^  const string* cpu_vendor_;$/;"	m	class:google_breakpad::MinidumpSystemInfo
cr	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int32_t             cr;      \/* Condition *\/$/;"	m	struct:__anon11
cr	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	/^  u_int64_t             cr;      \/* Condition *\/$/;"	m	struct:__anon8
cr0_npx_state	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t cr0_npx_state;$/;"	m	struct:__anon6
crash_address	src/breakpad/google_breakpad/processor/process_state.h	/^  u_int64_t crash_address() const { return crash_address_; }$/;"	f	class:google_breakpad::ProcessState
crash_address_	src/breakpad/google_breakpad/processor/process_state.h	/^  u_int64_t crash_address_;$/;"	m	class:google_breakpad::ProcessState
crash_event_	src/breakpad/client/windows/crash_generation/crash_generation_client.h	/^  HANDLE crash_event_;$/;"	m	class:google_breakpad::CrashGenerationClient
crash_generated_	src/breakpad/client/windows/crash_generation/crash_generation_client.h	/^  HANDLE crash_generated_;$/;"	m	class:google_breakpad::CrashGenerationClient
crash_generation_client_	src/breakpad/client/windows/handler/exception_handler.h	/^  scoped_ptr<CrashGenerationClient> crash_generation_client_;$/;"	m	class:google_breakpad::ExceptionHandler
crash_id	src/breakpad/client/windows/crash_generation/client_info.h	/^  DWORD crash_id() const { return crash_id_; }$/;"	f	class:google_breakpad::ClientInfo
crash_id_	src/breakpad/client/windows/crash_generation/client_info.h	/^  DWORD crash_id_;$/;"	m	class:google_breakpad::ClientInfo
crash_reason	src/breakpad/google_breakpad/processor/process_state.h	/^  string crash_reason() const { return crash_reason_; }$/;"	f	class:google_breakpad::ProcessState
crash_reason_	src/breakpad/google_breakpad/processor/process_state.h	/^  string crash_reason_;$/;"	m	class:google_breakpad::ProcessState
crash_server	src/breakpad/client/windows/crash_generation/client_info.h	/^  CrashGenerationServer* crash_server() const { return crash_server_; }$/;"	f	class:google_breakpad::ClientInfo
crash_server_	src/breakpad/client/windows/crash_generation/client_info.h	/^  CrashGenerationServer* crash_server_;$/;"	m	class:google_breakpad::ClientInfo
crashed	src/breakpad/google_breakpad/processor/process_state.h	/^  bool crashed() const { return crashed_; }$/;"	f	class:google_breakpad::ProcessState
crashed_	src/breakpad/google_breakpad/processor/process_state.h	/^  bool crashed_;$/;"	m	class:google_breakpad::ProcessState
create	include/fmod/fmod_dsp.h	/^    FMOD_DSP_CREATECALLBACK      create;             \/* [w] Create callback.  This is called when DSP unit is created.  Can be null. *\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
create	include/freetype/freetype/internal/pshints.h	/^    PSH_Globals_NewFunc       create;$/;"	m	struct:PSH_Globals_FuncsRec_
create3v3Box	src/server/server.cpp	/^QGroupBox *ServerDialog::create3v3Box(){$/;"	f	class:ServerDialog
createAITab	src/server/server.cpp	/^QWidget *ServerDialog::createAITab(){$/;"	f	class:ServerDialog
createAdvancedTab	src/server/server.cpp	/^QWidget *ServerDialog::createAdvancedTab(){$/;"	f	class:ServerDialog
createAvatar	src/dialog/playercarddialog.cpp	/^QWidget *PlayerCardDialog::createAvatar(){$/;"	f	class:PlayerCardDialog
createBasicTab	src/server/server.cpp	/^QWidget *ServerDialog::createBasicTab(){$/;"	f	class:ServerDialog
createButton	src/package/wind.cpp	/^QAbstractButton *GuhuoDialog::createButton(const Card *card){$/;"	f	class:GuhuoDialog
createButton	src/ui/chatwidget.cpp	/^QPushButton *ChatWidget::createButton(const QString &name){$/;"	f	class:ChatWidget
createButtonLayout	src/server/server.cpp	/^QLayout *ServerDialog::createButtonLayout(){$/;"	f	class:ServerDialog
createDashboardButtons	src/ui/roomscene.cpp	/^QGraphicsItem *RoomScene::createDashboardButtons(){$/;"	f	class:RoomScene
createEquipArea	src/dialog/playercarddialog.cpp	/^QWidget *PlayerCardDialog::createEquipArea(){$/;"	f	class:PlayerCardDialog
createGameModeBox	src/server/server.cpp	/^QGroupBox *ServerDialog::createGameModeBox(){$/;"	f	class:ServerDialog
createGeneralLayout	src/dialog/cardeditor.cpp	/^QLayout *CardEditor::createGeneralLayout(){$/;"	f	class:CardEditor
createHandcardButton	src/dialog/playercarddialog.cpp	/^QWidget *PlayerCardDialog::createHandcardButton(){$/;"	f	class:PlayerCardDialog
createHuaShenAnimation	src/ui/SkinBank.cpp	/^QSanRoomSkin::createHuaShenAnimation(QPixmap &huashenAvatar, QPoint topLeft, QGraphicsItem *parent,$/;"	f	class:QSanRoomSkin
createJudgingArea	src/dialog/playercarddialog.cpp	/^QWidget *PlayerCardDialog::createJudgingArea(){$/;"	f	class:PlayerCardDialog
createLeft	src/dialog/cardeditor.cpp	/^QWidget *CardEditor::createLeft(){$/;"	f	class:CardEditor
createLeft	src/package/wind.cpp	/^QGroupBox *GuhuoDialog::createLeft(){$/;"	f	class:GuhuoDialog
createManagerTab	src/dialog/packagingeditor.cpp	/^QWidget *PackagingEditor::createManagerTab(){$/;"	f	class:PackagingEditor
createNewRoom	src/server/server.cpp	/^Room *Server::createNewRoom(){$/;"	f	class:Server
createPackageTab	src/server/server.cpp	/^QWidget *ServerDialog::createPackageTab(){$/;"	f	class:ServerDialog
createPackagingTab	src/dialog/packagingeditor.cpp	/^QWidget *PackagingEditor::createPackagingTab(){$/;"	f	class:PackagingEditor
createReplayControlBar	src/ui/roomscene.cpp	/^void RoomScene::createReplayControlBar(){$/;"	f	class:RoomScene
createRight	src/package/wind.cpp	/^QGroupBox *GuhuoDialog::createRight(){$/;"	f	class:GuhuoDialog
createRoom	src/dialog/halldialog.cpp	/^void HallDialog::createRoom(){$/;"	f	class:HallDialog
createSkillBox	src/dialog/cardeditor.cpp	/^QWidget *CardEditor::createSkillBox(){$/;"	f	class:CardEditor
createTab	src/dialog/choosegeneraldialog.cpp	/^QWidget *FreeChooseDialog::createTab(const QList<const General *> &generals){$/;"	f	class:FreeChooseDialog
createTab	src/dialog/customassigndialog.cpp	/^QWidget *GeneralAssignDialog::createTab(const QList<const General *> &generals){$/;"	f	class:GeneralAssignDialog
createTextItemBox	src/dialog/cardeditor.cpp	/^QGroupBox *CardEditor::createTextItemBox(const QString &text, const QFont &font, int skip, BlackEdgeTextItem *item){$/;"	f	class:CardEditor
create_mapping	lua/lib/sqlite3.lua	/^  local function create_mapping(handles, paranames)$/;"	f
create_registry	lua/lib/sqlite3.lua	/^local function create_registry()$/;"	f
create_stmt	lua/lib/sqlite3.lua	/^  local function create_stmt(db, handles, parameter_count)$/;"	f
create_uuid_	src/breakpad/client/windows/crash_generation/minidump_generator.h	/^  UuidCreateType create_uuid_;$/;"	m	class:google_breakpad::MinidumpGenerator
createmeta	src/lua/liolib.c	/^static void createmeta (lua_State *L) {$/;"	f	file:
createmetatable	src/lua/lstrlib.c	/^static void createmetatable (lua_State *L) {$/;"	f	file:
createstdfile	src/lua/liolib.c	/^static void createstdfile (lua_State *L, FILE *f, int k, const char *fname) {$/;"	f	file:
crm_map_	src/breakpad/processor/map_serializers_unittest.cc	/^  google_breakpad::ContainedRangeMap<AddrType, EntryType> crm_map_;$/;"	m	class:TestContainedRangeMapSerializer	file:
crm_map_	src/breakpad/processor/static_contained_range_map_unittest.cc	/^  google_breakpad::ContainedRangeMap<unsigned int, int> crm_map_;$/;"	m	class:google_breakpad::TestStaticCRMMap	file:
cs	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int16_t  cs;$/;"	m	struct:__anon56
cs	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             cs;      \/* WinNT.h says "must be sanitized" *\/$/;"	m	struct:__anon7
cs_	src/breakpad/client/windows/common/auto_critical_section.h	/^  CRITICAL_SECTION* cs_;$/;"	m	class:google_breakpad::AutoCriticalSection
csd_version_	src/breakpad/google_breakpad/processor/minidump.h	/^  const string* csd_version_;$/;"	m	class:google_breakpad::MinidumpSystemInfo
csd_version_rva	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDRVA            csd_version_rva;  \/* MDString further identifying the$/;"	m	struct:__anon39
cstr_	src/jsoncpp/include/json/value.h	/^         const char *cstr_;$/;"	m	class:Json::Value::CZString
ctr	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int32_t             ctr;     \/* Count *\/$/;"	m	struct:__anon11
ctr	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	/^  u_int64_t             ctr;     \/* Count *\/$/;"	m	struct:__anon8
ctx_sparc	src/breakpad/google_breakpad/processor/minidump.h	/^    MDRawContextSPARC* ctx_sparc;$/;"	m	union:google_breakpad::MinidumpContext::__anon65
ctxt	src/dialog/mainwindow.h	/^    QDeclarativeContext *ctxt;$/;"	m	class:AcknowledgementScene
cubic_to	include/freetype/freetype/ftimage.h	/^    FT_Outline_CubicToFunc  cubic_to;$/;"	m	struct:FT_Outline_Funcs_
cur	include/freetype/freetype/internal/tttypes.h	/^    FT_Vector*  cur;         \/* current point coordinates   *\/$/;"	m	struct:TT_GlyphZoneRec_
cur_renderer	include/freetype/freetype/internal/ftobjs.h	/^    FT_Renderer        cur_renderer;     \/* current outline renderer *\/$/;"	m	struct:FT_LibraryRec_
currIsNewline	src/lua/llex.c	33;"	d	file:
curr_func	src/lua/lstate.h	59;"	d
current	include/freetype/freetype/internal/ftgloadr.h	/^    FT_GlyphLoadRec  current;$/;"	m	struct:FT_GlyphLoaderRec_
current	include/freetype/freetype/internal/psaux.h	/^    FT_Outline*     current;$/;"	m	struct:T1_BuilderRec_
current	src/lua/llex.h	/^  int current;  \/* current character (charint) *\/$/;"	m	struct:LexState
current	src/server/room.h	/^    ServerPlayer *current;$/;"	m	class:Room
current	src/server/server.h	/^    Room *current;$/;"	m	class:Server
current	src/ui/pixmapanimation.h	/^    int current,off_x,off_y;$/;"	m	class:PixmapAnimation
currentBatch_	src/jsoncpp/src/json_batchallocator.h	/^   BatchInfo *currentBatch_;$/;"	m	class:Json::BatchAllocator
currentInstruction	src/breakpad/processor/disassembler_x86.h	/^    const libdis::x86_insn_t* currentInstruction() {$/;"	f	class:google_breakpad::DisassemblerX86
currentInstructionGroup	src/breakpad/processor/disassembler_x86.h	/^    libdis::x86_insn_group currentInstructionGroup() {$/;"	f	class:google_breakpad::DisassemblerX86
currentInstructionValid	src/breakpad/processor/disassembler_x86.h	/^    bool currentInstructionValid() { return instr_valid_; }$/;"	f	class:google_breakpad::DisassemblerX86
currentItemIndex_	src/jsoncpp/include/json/value.h	/^         unsigned int currentItemIndex_;$/;"	m	struct:Json::ValueInternalArray::IteratorState
currentPageIndex_	src/jsoncpp/include/json/value.h	/^         Value **currentPageIndex_;$/;"	m	struct:Json::ValueInternalArray::IteratorState
currentRoom	src/core/engine.cpp	/^Room* Engine::currentRoom(){$/;"	f	class:Engine
currentRoomObject	src/core/engine.cpp	/^QObject* Engine::currentRoomObject() {$/;"	f	class:Engine
currentSkill	src/ui/dashboard.cpp	/^const ViewAsSkill *Dashboard::currentSkill() const{$/;"	f	class:Dashboard
currentValue	src/jsoncpp/src/json_reader.cpp	/^Reader::currentValue()$/;"	f	class:Json::Reader
current_	src/jsoncpp/include/json/reader.h	/^      Location current_;$/;"	m	class:Json::Reader
current_	src/jsoncpp/include/json/value.h	/^      Value::ObjectValues::iterator current_;$/;"	m	class:Json::ValueIteratorBase
current_byte_offset_	src/breakpad/processor/disassembler_x86.h	/^    u_int32_t current_byte_offset_;$/;"	m	class:google_breakpad::DisassemblerX86
current_inst_offset_	src/breakpad/processor/disassembler_x86.h	/^    u_int32_t current_inst_offset_;$/;"	m	class:google_breakpad::DisassemblerX86
current_instr_	src/breakpad/processor/disassembler_x86.h	/^    libdis::x86_insn_t current_instr_;$/;"	m	class:google_breakpad::DisassemblerX86
current_page	src/dialog/halldialog.h	/^    int current_page;$/;"	m	class:HallDialog
currentline	src/lua/ldebug.c	/^static int currentline (lua_State *L, CallInfo *ci) {$/;"	f	file:
currentline	src/lua/lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug
currentpc	src/lua/ldebug.c	/^static int currentpc (lua_State *L, CallInfo *ci) {$/;"	f	file:
currentwhite	src/lua/lstate.h	/^  lu_byte currentwhite;$/;"	m	struct:global_State
cursor	include/freetype/freetype/ftsystem.h	/^    unsigned char*       cursor;$/;"	m	struct:FT_StreamRec_
cursor	include/freetype/freetype/internal/psaux.h	/^    FT_Byte*   cursor;$/;"	m	struct:PS_ParserRec_
cursor	include/freetype/freetype/internal/psaux.h	/^    FT_Byte*  cursor;$/;"	m	struct:T1_Decoder_ZoneRec_
cursor	include/freetype/freetype/internal/psaux.h	/^    FT_Offset          cursor;         \/* current cursor in memory block *\/$/;"	m	struct:PS_TableRec_
cursor	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*         cursor;$/;"	m	struct:TT_LoaderRec_
custom	include/freetype/freetype/internal/psaux.h	/^    FT_CMap_Class  custom;$/;"	m	struct:T1_CMap_ClassesRec_
custom_client_info	src/breakpad/client/windows/common/ipc_protocol.h	/^  CustomClientInfo custom_client_info;$/;"	m	struct:google_breakpad::ProtocolMessage
custom_client_info_	src/breakpad/client/windows/crash_generation/client_info.h	/^  CustomClientInfo custom_client_info_;$/;"	m	class:google_breakpad::ClientInfo
custom_info_	src/breakpad/client/windows/crash_generation/crash_generation_client.h	/^  CustomClientInfo custom_info_;$/;"	m	class:google_breakpad::CrashGenerationClient
custom_info_entries_	src/breakpad/client/windows/crash_generation/client_info.h	/^  scoped_array<CustomInfoEntry> custom_info_entries_;$/;"	m	class:google_breakpad::ClientInfo
cv_header	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDCVHeader cv_header;$/;"	m	struct:__anon28
cv_record	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDLocationDescriptor cv_record;$/;"	m	struct:__anon26
cv_record_	src/breakpad/google_breakpad/processor/minidump.h	/^  vector<u_int8_t>* cv_record_;$/;"	m	class:google_breakpad::MinidumpModule
cv_record_signature_	src/breakpad/google_breakpad/processor/minidump.h	/^  u_int32_t cv_record_signature_;$/;"	m	class:google_breakpad::MinidumpModule
cv_signature	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t cv_signature;$/;"	m	struct:__anon29
cvt	include/freetype/freetype/internal/tttypes.h	/^    FT_Short*             cvt;$/;"	m	struct:TT_FaceRec_
cvt_program	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*              cvt_program;$/;"	m	struct:TT_FaceRec_
cvt_program_size	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              cvt_program_size;$/;"	m	struct:TT_FaceRec_
cvt_size	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              cvt_size;$/;"	m	struct:TT_FaceRec_
daemon	src/util/nativesocket.h	/^    QUdpSocket *daemon;$/;"	m	class:NativeServerSocket
daemonize	src/server/server.cpp	/^void Server::daemonize(){$/;"	f	class:Server
daemonize	src/util/nativesocket.cpp	/^void NativeServerSocket::daemonize(){$/;"	f	class:NativeServerSocket
dahe_skill.getTurnUseCard	lua/ai/bgm-ai.lua	/^dahe_skill.getTurnUseCard=function(self)$/;"	f
damage	src/core/structs.h	/^    DamageStruct *damage; \/\/ if it is NULL that means the dying is caused by losing hp$/;"	m	struct:DyingStruct
damage	src/core/structs.h	/^    int damage;$/;"	m	struct:DamageStruct
damage	src/package/god.cpp	/^void YeyanCard::damage(ServerPlayer *shenzhouyu, ServerPlayer *target, int point) const{$/;"	f	class:YeyanCard
damage	src/server/room.cpp	/^void Room::damage(DamageStruct &damage_data){$/;"	f	class:Room
damage_nature	src/ui/roomscene.h	/^    QComboBox *damage_nature;$/;"	m	class:DamageMakerDialog
damage_point	src/ui/roomscene.h	/^    QSpinBox *damage_point;$/;"	m	class:DamageMakerDialog
damage_source	src/ui/roomscene.h	/^    QComboBox *damage_source;$/;"	m	class:DamageMakerDialog
damage_target	src/ui/roomscene.h	/^    QComboBox *damage_target;$/;"	m	class:DamageMakerDialog
dashboard	src/ui/roomscene.h	/^    Dashboard *dashboard;$/;"	m	class:RoomScene
data	include/fmod/fmod.h	/^    void             *data;         \/* [r] Pointer to the tag data - its format is determined by the datatype member *\/$/;"	m	struct:FMOD_TAG
data	include/freetype/freetype/freetype.h	/^    FT_Pointer  data;$/;"	m	struct:FT_Parameter_
data	include/freetype/freetype/fttypes.h	/^    void*                 data;$/;"	m	struct:FT_Generic_
data	include/freetype/freetype/fttypes.h	/^    void*        data;$/;"	m	struct:FT_ListNodeRec_
data	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int8_t  data[1];$/;"	m	struct:__anon31
data	src/breakpad/processor/static_map_unittest.cc	/^  char data[kMemorySize];$/;"	m	class:TestInvalidMap	file:
data	src/lua/ldump.c	/^ void* data;$/;"	m	struct:__anon87	file:
data	src/lua/lzio.h	/^  void* data;			\/* additional data *\/$/;"	m	struct:Zio
data	src/util/recorder.h	/^    QByteArray data;$/;"	m	class:Recorder
data	swig/sanguosha_wrap.cxx	/^  char data[1];       \/* arbitary amount of data *\/    $/;"	m	struct:__anon150	file:
data1	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t data1;$/;"	m	struct:__anon14
data1	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t data1[2];$/;"	m	struct:__anon30
data2	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int16_t data2;$/;"	m	struct:__anon14
data2	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t data2;$/;"	m	struct:__anon30
data3	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int16_t data3;$/;"	m	struct:__anon14
data3	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t data3;$/;"	m	struct:__anon30
data4	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t data4;$/;"	m	struct:__anon30
data4	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int8_t  data4[8];$/;"	m	struct:__anon14
data5	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t data5[3];$/;"	m	struct:__anon30
data_offset	include/freetype/freetype/t1tables.h	/^    FT_ULong        data_offset;$/;"	m	struct:CID_FaceInfoRec_
data_offset	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int32_t  data_offset;$/;"	m	struct:__anon55
data_offset	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t data_offset;$/;"	m	struct:__anon6
data_selector	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int16_t  data_selector;$/;"	m	struct:__anon55
data_selector	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t data_selector;$/;"	m	struct:__anon6
data_size	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t data_size;$/;"	m	struct:__anon17
data_type	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t data_type;    \/* IMAGE_DEBUG_TYPE_*, not defined here because$/;"	m	struct:__anon31
datalen	include/fmod/fmod.h	/^    unsigned int      datalen;      \/* [r] Length of the data contained in this tag *\/$/;"	m	struct:FMOD_TAG
datatype	include/fmod/fmod.h	/^    FMOD_TAGDATATYPE  datatype;     \/* [r] The type of data that this tag contains *\/$/;"	m	struct:FMOD_TAG
db_class.changes	lua/lib/sqlite3.lua	/^function db_class.changes(db)$/;"	f
db_class.close	lua/lib/sqlite3.lua	/^function db_class.close(db)$/;"	f
db_class.cols	lua/lib/sqlite3.lua	/^function db_class.cols(db, sql)$/;"	f
db_class.exec	lua/lib/sqlite3.lua	/^function db_class.exec(db, sql)$/;"	f
db_class.first_cols	lua/lib/sqlite3.lua	/^function db_class.first_cols(db, sql)$/;"	f
db_class.first_irow	lua/lib/sqlite3.lua	/^function db_class.first_irow(db, sql, tab)$/;"	f
db_class.first_row	lua/lib/sqlite3.lua	/^function db_class.first_row(db, sql, tab)$/;"	f
db_class.interrupt	lua/lib/sqlite3.lua	/^function db_class.interrupt(db)$/;"	f
db_class.irows	lua/lib/sqlite3.lua	/^function db_class.irows(db, sql, tab)$/;"	f
db_class.last_insert_rowid	lua/lib/sqlite3.lua	/^function db_class.last_insert_rowid(db)$/;"	f
db_class.prepare	lua/lib/sqlite3.lua	/^function db_class.prepare(db, paranames, sql)$/;"	f
db_class.rows	lua/lib/sqlite3.lua	/^function db_class.rows(db, sql, tab)$/;"	f
db_class.set_aggregate	lua/lib/sqlite3.lua	/^function db_class.set_aggregate(db, name, num_args, create_funcs)$/;"	f
db_class.set_busy_handler	lua/lib/sqlite3.lua	/^function db_class.set_busy_handler(db, func)$/;"	f
db_class.set_busy_timeout	lua/lib/sqlite3.lua	/^function db_class.set_busy_timeout(db, ms)$/;"	f
db_class.set_function	lua/lib/sqlite3.lua	/^function db_class.set_function(db, name, num_args, func)$/;"	f
db_class.set_trace_handler	lua/lib/sqlite3.lua	/^function db_class.set_trace_handler(db, func)$/;"	f
db_class.total_changes	lua/lib/sqlite3.lua	/^function db_class.total_changes(db)$/;"	f
db_debug	src/lua/ldblib.c	/^static int db_debug (lua_State *L) {$/;"	f	file:
db_errorfb	src/lua/ldblib.c	/^static int db_errorfb (lua_State *L) {$/;"	f	file:
db_getfenv	src/lua/ldblib.c	/^static int db_getfenv (lua_State *L) {$/;"	f	file:
db_gethook	src/lua/ldblib.c	/^static int db_gethook (lua_State *L) {$/;"	f	file:
db_getinfo	src/lua/ldblib.c	/^static int db_getinfo (lua_State *L) {$/;"	f	file:
db_getlocal	src/lua/ldblib.c	/^static int db_getlocal (lua_State *L) {$/;"	f	file:
db_getmetatable	src/lua/ldblib.c	/^static int db_getmetatable (lua_State *L) {$/;"	f	file:
db_getregistry	src/lua/ldblib.c	/^static int db_getregistry (lua_State *L) {$/;"	f	file:
db_getupvalue	src/lua/ldblib.c	/^static int db_getupvalue (lua_State *L) {$/;"	f	file:
db_setfenv	src/lua/ldblib.c	/^static int db_setfenv (lua_State *L) {$/;"	f	file:
db_sethook	src/lua/ldblib.c	/^static int db_sethook (lua_State *L) {$/;"	f	file:
db_setlocal	src/lua/ldblib.c	/^static int db_setlocal (lua_State *L) {$/;"	f	file:
db_setmetatable	src/lua/ldblib.c	/^static int db_setmetatable (lua_State *L) {$/;"	f	file:
db_setupvalue	src/lua/ldblib.c	/^static int db_setupvalue (lua_State *L) {$/;"	f	file:
dbghelp_module_	src/breakpad/client/windows/crash_generation/minidump_generator.h	/^  HMODULE dbghelp_module_;$/;"	m	class:google_breakpad::MinidumpGenerator
dbghelp_module_	src/breakpad/client/windows/handler/exception_handler.h	/^  HMODULE dbghelp_module_;$/;"	m	class:google_breakpad::ExceptionHandler
dblib	src/lua/ldblib.c	/^static const luaL_Reg dblib[] = {$/;"	v	file:
dcast	swig/sanguosha_wrap.cxx	/^  swig_dycast_func        dcast;		\/* dynamic cast function down a hierarchy *\/$/;"	m	struct:swig_type_info	file:
dead_band	include/js.h	/^  float dead_band [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
debugLogFilename	include/fmod/fmod.h	/^    char           *debugLogFilename;           \/* [r\/w] Optional. Specify 0 to ignore. Gives fmod's logging system a path\/filename.  Normally the log is placed in the same directory as the executable and called fmod.log. When using System::getAdvancedSettings, provide at least 256 bytes of memory to copy into. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
debug_control	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t debug_control;$/;"	m	struct:__anon56
debug_file	src/breakpad/common/windows/pdb_source_line_writer.h	/^  wstring debug_file;$/;"	m	struct:google_breakpad::PDBModuleInfo
debug_file	src/breakpad/processor/basic_code_module.h	/^  virtual string debug_file() const { return debug_file_; }$/;"	f	class:google_breakpad::BasicCodeModule
debug_file	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  virtual string debug_file() const { return ""; }$/;"	f	class:__anon71::TestCodeModule
debug_file	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  virtual string debug_file() const { return ""; }$/;"	f	class:__anon73::TestCodeModule
debug_file	src/breakpad/processor/minidump.cc	/^string MinidumpModule::debug_file() const {$/;"	f	class:google_breakpad::MinidumpModule
debug_file	src/breakpad/processor/stackwalker_unittest_utils.h	/^  string debug_file()       const { return code_file_; }$/;"	f	class:MockCodeModule
debug_file_	src/breakpad/processor/basic_code_module.h	/^  string debug_file_;$/;"	m	class:google_breakpad::BasicCodeModule
debug_hooks	include/freetype/freetype/internal/ftobjs.h	/^    FT_DebugHook_Func  debug_hooks[4];$/;"	m	struct:FT_LibraryRec_
debug_identifier	src/breakpad/common/windows/pdb_source_line_writer.h	/^  wstring debug_identifier;$/;"	m	struct:google_breakpad::PDBModuleInfo
debug_identifier	src/breakpad/processor/basic_code_module.h	/^  virtual string debug_identifier() const { return debug_identifier_; }$/;"	f	class:google_breakpad::BasicCodeModule
debug_identifier	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  virtual string debug_identifier() const { return ""; }$/;"	f	class:__anon71::TestCodeModule
debug_identifier	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  virtual string debug_identifier() const { return ""; }$/;"	f	class:__anon73::TestCodeModule
debug_identifier	src/breakpad/processor/minidump.cc	/^string MinidumpModule::debug_identifier() const {$/;"	f	class:google_breakpad::MinidumpModule
debug_identifier	src/breakpad/processor/stackwalker_unittest_utils.h	/^  string debug_identifier() const { return code_file_; }$/;"	f	class:MockCodeModule
debug_identifier_	src/breakpad/processor/basic_code_module.h	/^  string debug_identifier_;$/;"	m	class:google_breakpad::BasicCodeModule
decodeDouble	src/jsoncpp/src/json_reader.cpp	/^Reader::decodeDouble( Token &token )$/;"	f	class:Json::Reader
decodeNumber	src/jsoncpp/src/json_reader.cpp	/^Reader::decodeNumber( Token &token )$/;"	f	class:Json::Reader
decodeString	src/jsoncpp/src/json_reader.cpp	/^Reader::decodeString( Token &token )$/;"	f	class:Json::Reader
decodeString	src/jsoncpp/src/json_reader.cpp	/^Reader::decodeString( Token &token, std::string &decoded )$/;"	f	class:Json::Reader
decodeUnicodeCodePoint	src/jsoncpp/src/json_reader.cpp	/^Reader::decodeUnicodeCodePoint( Token &token, $/;"	f	class:Json::Reader
decodeUnicodeEscapeSequence	src/jsoncpp/src/json_reader.cpp	/^Reader::decodeUnicodeEscapeSequence( Token &token, $/;"	f	class:Json::Reader
decodebuffersize	include/fmod/fmod.h	/^    unsigned int                   decodebuffersize;   \/* [w] Optional. Specify 0 to ignore. For streams.  This determines the size of the double buffer (in PCM samples) that a stream uses.  Use this for user created streams if you want to determine the size of the callback buffer passed to you.  Specify 0 to use FMOD's default size which is currently equivalent to 400ms of the sound format created\/loaded. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
decodet['base64'] 	lua/lib/mime.lua	/^decodet['base64'] = function()$/;"	f
decodet['quoted-printable'] 	lua/lib/mime.lua	/^decodet['quoted-printable'] = function()$/;"	f
decpoint	src/lua/llex.h	/^  char decpoint;  \/* locale decimal point *\/$/;"	m	struct:LexState
def	include/freetype/freetype/ftmm.h	/^    FT_Fixed    def;$/;"	m	struct:FT_Var_Axis_
defaultDecodeBufferSize	include/fmod/fmod.h	/^    unsigned int    defaultDecodeBufferSize;    \/* [r\/w] Optional. Specify 0 to ignore. For streams. This determines the default size of the double buffer (in milliseconds) that a stream uses.  Default = 400ms *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
default_char	include/freetype/freetype/ftwinfnt.h	/^    FT_Byte    default_char;$/;"	m	struct:FT_WinFNT_HeaderRec_
default_choice	src/core/skill.h	/^    QString default_choice;$/;"	m	class:Skill
default_design_vector	include/freetype/freetype/t1tables.h	/^    FT_UInt          default_design_vector[T1_MAX_MM_DESIGNS];$/;"	m	struct:PS_BlendRec_
default_weight_vector	include/freetype/freetype/t1tables.h	/^    FT_Fixed*        default_weight_vector;$/;"	m	struct:PS_BlendRec_
defaultasstream	include/fmod/fmod_codec.h	/^    int                             defaultasstream; \/* [in] Tells FMOD to open the file as a stream when calling System::createSound, and not a static sample.  Should normally be 0 (FALSE), because generally the user wants to decode the file into memory when using System::createSound.   Mainly used for formats that decode for a very long time, or could use large amounts of memory when decoded.  Usually sequenced formats such as mod\/s3m\/xm\/it\/midi fall into this category.   It is mainly to stop users that don't know what they're doing from getting FMOD_ERR_MEMORY returned from createSound when they should have in fact called System::createStream or used FMOD_CREATESTREAM in System::createSound. *\/$/;"	m	struct:FMOD_CODEC_DESCRIPTION
defaultfrequency	include/fmod/fmod.h	/^    int                            defaultfrequency;   \/* [w] Optional. Specify 0 to ignore. Default frequency of sound in a sound mandatory if FMOD_OPENUSER or FMOD_OPENRAW is used.  Other formats use the frequency determined by the file format. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
defaultval	include/fmod/fmod_dsp.h	/^    float       defaultval;                         \/* [w] Default value of parameter. *\/$/;"	m	struct:FMOD_DSP_PARAMETERDESC
defense 	lua/ai/smart-ai.lua	/^	defense = function(a,b)$/;"	f
defensive_horse	src/core/player.h	/^    WrappedCard *weapon, *armor, *defensive_horse, *offensive_horse;$/;"	m	class:Player
degree	include/freetype/freetype/internal/t1types.h	/^    FT_Int    degree;$/;"	m	struct:AFM_TrackKernRec_
delay	src/server/roomthread.cpp	/^void RoomThread::delay(unsigned long secs){$/;"	f	class:RoomThread
deleteEffect	src/ui/sprite.cpp	/^void EffectAnimation::deleteEffect()$/;"	f	class:EffectAnimation
deleteEffect	src/ui/sprite.cpp	/^void EffectAnimation::deleteEffect(QAnimatedEffect *effect)$/;"	f	class:EffectAnimation
deleteSkill	src/dialog/customassigndialog.cpp	/^void SkillAssignDialog::deleteSkill(){$/;"	f	class:SkillAssignDialog
delete_skill	src/dialog/customassigndialog.h	/^    QPushButton *select_skill, *delete_skill;$/;"	m	class:SkillAssignDialog
delta	include/freetype/freetype/ftimage.h	/^    FT_Pos                  delta;$/;"	m	struct:FT_Outline_Funcs_
depart	src/breakpad/processor/linked_ptr.h	/^  bool depart() {$/;"	f	class:google_breakpad::linked_ptr_internal
depart	src/breakpad/processor/linked_ptr.h	/^  void depart() {$/;"	f	class:google_breakpad::linked_ptr
descender	include/freetype/freetype/freetype.h	/^    FT_Pos     descender;   \/* descender in 26.6 frac. pixels         *\/$/;"	m	struct:FT_Size_Metrics_
descender	include/freetype/freetype/freetype.h	/^    FT_Short          descender;$/;"	m	struct:FT_FaceRec_
descender	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  descender;$/;"	m	struct:TT_SBit_LineMetricsRec_
description	include/fmod/fmod_dsp.h	/^    const char *description;                        \/* [w] Description of the parameter to be displayed as a help item \/ tooltip for this parameter. *\/$/;"	m	struct:FMOD_DSP_PARAMETERDESC
description_edit	src/dialog/packagingeditor.h	/^    QTextEdit *description_edit;$/;"	m	class:MetaInfoWidget
descriptor	include/freetype/freetype/ftsystem.h	/^    FT_StreamDesc        descriptor;$/;"	m	struct:FT_StreamRec_
descriptor_	src/breakpad/google_breakpad/processor/minidump.h	/^  MDMemoryDescriptor* descriptor_;$/;"	m	class:google_breakpad::MinidumpMemoryRegion
descriptors_	src/breakpad/google_breakpad/processor/minidump.h	/^  MemoryDescriptors *descriptors_;$/;"	m	class:google_breakpad::MinidumpMemoryList
design_map	include/freetype/freetype/t1tables.h	/^    PS_DesignMapRec  design_map[T1_MAX_MM_AXIS];$/;"	m	struct:PS_BlendRec_
design_points	include/freetype/freetype/t1tables.h	/^    FT_Long*   design_points;$/;"	m	struct:PS_DesignMap_
design_pos	include/freetype/freetype/t1tables.h	/^    FT_Fixed*        design_pos[T1_MAX_MM_DESIGNS];$/;"	m	struct:PS_BlendRec_
destroy	include/freetype/freetype/internal/pshints.h	/^    PSH_Globals_DestroyFunc   destroy;$/;"	m	struct:PSH_Globals_FuncsRec_
destructor	swig/sanguosha_wrap.cxx	/^  void    (*destructor)(void *);$/;"	m	struct:swig_lua_class	file:
detachAllSkills	src/core/player.cpp	/^void Player::detachAllSkills(){$/;"	f	class:Player
detachSkill	src/core/player.cpp	/^void Player::detachSkill(const QString &skill_name){$/;"	f	class:Player
detachSkill	src/ui/roomscene.cpp	/^void RoomScene::detachSkill(const QString &skill_name){$/;"	f	class:RoomScene
detachSkillFromPlayer	src/server/room.cpp	/^void Room::detachSkillFromPlayer(ServerPlayer *player, const QString &skill_name){$/;"	f	class:Room
detect	src/util/detector.cpp	/^void UdpDetector::detect(){$/;"	f	class:UdpDetector
detect_button	src/dialog/connectiondialog.h	/^    QPushButton *detect_button;$/;"	m	class:UdpDetectorDialog
detector	src/dialog/connectiondialog.h	/^    UdpDetector *detector;$/;"	m	class:UdpDetectorDialog
device_offset	include/freetype/freetype/ftwinfnt.h	/^    FT_ULong   device_offset;$/;"	m	struct:FT_WinFNT_HeaderRec_
dialog2button	src/dialog/cardeditor.h	/^    QMap<QFontDialog *, QPushButton *> dialog2button;$/;"	m	class:CardEditor
dict	include/freetype/freetype/internal/psaux.h	/^    FT_UInt             dict;         \/* where we expect it             *\/$/;"	m	struct:T1_FieldRec_
dictionary	src/breakpad/processor/postfix_evaluator.h	/^  DictionaryType* dictionary() const { return dictionary_; }$/;"	f	class:google_breakpad::PostfixEvaluator
dictionary	src/breakpad/processor/postfix_evaluator_unittest.cc	/^  PostfixEvaluator<unsigned int>::DictionaryType *dictionary;$/;"	m	struct:__anon75::EvaluateTestSet	file:
dictionary_	src/breakpad/processor/postfix_evaluator.h	/^  DictionaryType *dictionary_;$/;"	m	class:google_breakpad::PostfixEvaluator
difference_type	src/jsoncpp/include/json/value.h	/^      typedef int difference_type;$/;"	t	class:Json::ValueConstIterator
difference_type	src/jsoncpp/include/json/value.h	/^      typedef int difference_type;$/;"	t	class:Json::ValueIterator
difference_type	src/jsoncpp/include/json/value.h	/^      typedef int difference_type;$/;"	t	class:Json::ValueIteratorBase
dimeng_skill.getTurnUseCard	lua/ai/thicket-ai.lua	/^dimeng_skill.getTurnUseCard=function(self)$/;"	f
dir_tables	include/freetype/freetype/internal/tttypes.h	/^    TT_Table              dir_tables;$/;"	m	struct:TT_FaceRec_
directory_	src/breakpad/google_breakpad/processor/minidump.h	/^  MinidumpDirectoryEntries* directory_;$/;"	m	class:google_breakpad::Minidump
dirty 	lua/lib/socket.lua	/^        dirty = function() return sock:dirty() end$/;"	f
dirty 	lua/lib/socket/http.lua	/^        dirty = function() return sock:dirty() end$/;"	f
disableAllCards	src/ui/dashboard.cpp	/^void Dashboard::disableAllCards(){$/;"	f	class:Dashboard
disableSource	src/ui/roomscene.cpp	/^void DamageMakerDialog::disableSource(){$/;"	f	class:DamageMakerDialog
disable_chat_checkbox	src/server/server.h	/^    QCheckBox *disable_chat_checkbox;$/;"	m	class:ServerDialog
disappear	src/ui/window.cpp	/^void Window::disappear(){$/;"	f	class:Window
discard_button	src/ui/roomscene.h	/^    QSanButton *ok_button, *cancel_button, *discard_button;$/;"	m	class:RoomScene
discard_num	src/client/client.h	/^    int discard_num;$/;"	m	class:Client
discard_pile	src/server/room.h	/^    QList<int> *draw_pile, *discard_pile;$/;"	m	class:Room
discard_skill	src/ui/roomscene.h	/^    DiscardSkill *discard_skill;$/;"	m	class:RoomScene
discarded_list	src/client/client.h	/^    QList<const Card*> discarded_list;$/;"	m	class:Client
discharge2anyreg	src/lua/lcode.c	/^static void discharge2anyreg (FuncState *fs, expdesc *e) {$/;"	f	file:
discharge2reg	src/lua/lcode.c	/^static void discharge2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
dischargejpc	src/lua/lcode.c	/^static void dischargejpc (FuncState *fs) {$/;"	f	file:
disconnectFromHost	src/client/client.cpp	/^void Client::disconnectFromHost(){$/;"	f	class:Client
disconnectFromHost	src/util/nativesocket.cpp	/^void NativeClientSocket::disconnectFromHost(){    $/;"	f	class:NativeClientSocket
distanceFilterCenterFreq	include/fmod/fmod.h	/^    float           distanceFilterCenterFreq;   \/* [r\/w] Optional. Specify 0 to ignore. For use with FMOD_INIT_DISTANCE_FILTERING.  The default center frequency in Hz for the distance filtering effect. Default = 1500.0. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
distanceTo	src/core/player.cpp	/^int Player::distanceTo(const Player *other, int distance_fix) const{$/;"	f	class:Player
distance_edits	src/dialog/distanceviewdialog.cpp	/^    QList<QLineEdit *> distance_edits;$/;"	m	struct:DistanceViewDialogUI	file:
distance_skills	src/core/engine.h	/^    QList<const DistanceSkill *> distance_skills;$/;"	m	class:Engine
dlsname	include/fmod/fmod.h	/^    const char                    *dlsname;            \/* [w] Optional. Specify 0 to ignore. Filename for a DLS or SF2 sample set when loading a MIDI file. If not specified, on Windows it will attempt to open \/windows\/system32\/drivers\/gm.dls or \/windows\/system32\/drivers\/etc\/gm.dls, on Mac it will attempt to load \/System\/Library\/Components\/CoreAudio.component\/Contents\/Resources\/gs_instruments.dls, otherwise the MIDI will fail to open. Current DLS support is for level 1 of the specification. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
doAdd2ndButton	src/server/server.cpp	/^void BanlistDialog::doAdd2ndButton(){$/;"	f	class:BanlistDialog
doAddButton	src/server/server.cpp	/^void BanlistDialog::doAddButton(){$/;"	f	class:BanlistDialog
doAnimation	src/ui/indicatoritem.cpp	/^void IndicatorItem::doAnimation(){$/;"	f	class:IndicatorItem
doAnimation	src/ui/roomscene.cpp	/^void RoomScene::doAnimation(const QString &name, const QStringList &args){$/;"	f	class:RoomScene
doAppearingAnimation	src/ui/roomscene.cpp	/^void RoomScene::doAppearingAnimation(const QString &name, const QStringList &args){$/;"	f	class:RoomScene
doBroadcastNotify	src/server/room.cpp	/^bool Room::doBroadcastNotify(QSanProtocol::CommandType command, const Json::Value &arg)$/;"	f	class:Room
doBroadcastNotify	src/server/room.cpp	/^bool Room::doBroadcastNotify(const QList<ServerPlayer*> &players, QSanProtocol::CommandType command, const Json::Value &arg)$/;"	f	class:Room
doBroadcastRaceRequest	src/server/room.cpp	/^ServerPlayer* Room::doBroadcastRaceRequest(QList<ServerPlayer*> &players, QSanProtocol::CommandType command, $/;"	f	class:Room
doBroadcastRequest	src/server/room.cpp	/^bool Room::doBroadcastRequest(QList<ServerPlayer*> &players, QSanProtocol::CommandType command)$/;"	f	class:Room
doBroadcastRequest	src/server/room.cpp	/^bool Room::doBroadcastRequest(QList<ServerPlayer*> &players, QSanProtocol::CommandType command, time_t timeOut)$/;"	f	class:Room
doCancelButton	src/ui/roomscene.cpp	/^void RoomScene::doCancelButton(){$/;"	f	class:RoomScene
doCollateral	src/package/standard-cards.cpp	/^bool Collateral::doCollateral(Room *room, ServerPlayer *killer, ServerPlayer *victim, const QString &prompt) const{$/;"	f	class:Collateral
doCustomAssign	src/server/server.cpp	/^void ServerDialog::doCustomAssign(){$/;"	f	class:ServerDialog
doDiscardButton	src/ui/roomscene.cpp	/^void RoomScene::doDiscardButton(){$/;"	f	class:RoomScene
doEquipCardAssign	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::doEquipCardAssign(){$/;"	f	class:CustomAssignDialog
doGeneralAssign	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::doGeneralAssign(){$/;"	f	class:CustomAssignDialog
doGeneralAssign2	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::doGeneralAssign2(){$/;"	f	class:CustomAssignDialog
doGongxin	src/server/room.cpp	/^void Room::doGongxin(ServerPlayer *shenlvmeng, ServerPlayer *target){    $/;"	f	class:Room
doGongxin	src/ui/roomscene.cpp	/^void RoomScene::doGongxin(const QList<int> &card_ids, bool enable_heart){$/;"	f	class:RoomScene
doGuanxing	src/ui/cardcontainer.cpp	/^void GuanxingBox::doGuanxing(const QList<int> &card_ids, bool up_only){$/;"	f	class:GuanxingBox
doHandCardAssign	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::doHandCardAssign(){$/;"	f	class:CustomAssignDialog
doHuashen	src/ui/roomscene.cpp	/^void RoomScene::doHuashen(const QString &, const QStringList &args){$/;"	f	class:RoomScene
doIndicate	src/ui/roomscene.cpp	/^void RoomScene::doIndicate(const QString &, const QStringList &args){$/;"	f	class:RoomScene
doJudgeCardAssign	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::doJudgeCardAssign(){$/;"	f	class:CustomAssignDialog
doLightboxAnimation	src/ui/roomscene.cpp	/^void RoomScene::doLightboxAnimation(const QString &, const QStringList &args){$/;"	f	class:RoomScene
doManjuan	src/package/bgm-package.cpp	/^    void doManjuan(ServerPlayer *sp_pangtong, int card_id) const{$/;"	f	class:Manjuan
doMovingAnimation	src/ui/roomscene.cpp	/^void RoomScene::doMovingAnimation(const QString &name, const QStringList &args){$/;"	f	class:RoomScene
doNotify	src/server/room.cpp	/^bool Room::doNotify(ServerPlayer* player, QSanProtocol::CommandType command, const Json::Value &arg)$/;"	f	class:Room
doOkButton	src/ui/roomscene.cpp	/^void RoomScene::doOkButton(){$/;"	f	class:RoomScene
doPileCardAssign	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::doPileCardAssign(){$/;"	f	class:CustomAssignDialog
doPlayerChains	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::doPlayerChains(bool toggled){$/;"	f	class:CustomAssignDialog
doPlayerTurns	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::doPlayerTurns(bool toggled){$/;"	f	class:CustomAssignDialog
doPreAction	src/core/WrappedCard.h	/^    inline virtual void doPreAction(Room *room, const CardUseStruct &cardUse) const $/;"	f	class:WrappedCard
doPreAction	src/core/card.cpp	/^void Card::doPreAction(Room *, const CardUseStruct &) const{$/;"	f	class:Card
doPreAction	src/package/standard-cards.cpp	/^void AmazingGrace::doPreAction(Room *room, const CardUseStruct &card_use) const{$/;"	f	class:AmazingGrace
doRemoveButton	src/server/server.cpp	/^void BanlistDialog::doRemoveButton(){$/;"	f	class:BanlistDialog
doRequest	src/server/room.cpp	/^bool Room::doRequest(ServerPlayer* player, QSanProtocol::CommandType command, const Json::Value &arg, bool wait)$/;"	f	class:Room
doRequest	src/server/room.cpp	/^bool Room::doRequest(ServerPlayer* player, QSanProtocol::CommandType command, const Json::Value &arg, time_t timeOut, bool wait)$/;"	f	class:Room
doScript	src/ui/roomscene.cpp	/^void RoomScene::doScript(){$/;"	f	class:RoomScene
doScript	src/ui/roomscene.cpp	/^void ScriptExecutor::doScript(){$/;"	f	class:ScriptExecutor
doScript	swig/sanguosha_wrap.cxx	/^void Room::doScript(const QString &script){$/;"	f	class:Room
doSkillSelect	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::doSkillSelect(){$/;"	f	class:CustomAssignDialog
doTimeout	src/ui/roomscene.cpp	/^void RoomScene::doTimeout(){$/;"	f	class:RoomScene
doZuixiang	src/package/bgm-package.cpp	/^    void doZuixiang(ServerPlayer *player) const{$/;"	f	class:Zuixiang
doblend	include/freetype/freetype/internal/tttypes.h	/^    FT_Bool               doblend;$/;"	m	struct:TT_FaceRec_
document_	src/jsoncpp/include/json/reader.h	/^      std::string document_;$/;"	m	class:Json::Reader
document_	src/jsoncpp/include/json/writer.h	/^      std::ostream* document_;$/;"	m	class:Json::StyledStreamWriter
document_	src/jsoncpp/include/json/writer.h	/^      std::string document_;$/;"	m	class:Json::FastWriter
document_	src/jsoncpp/include/json/writer.h	/^      std::string document_;$/;"	m	class:Json::StyledWriter
dojump	src/lua/lvm.c	354;"	d	file:
done	include/freetype/freetype/internal/ftobjs.h	/^    FT_CMap_DoneFunc       done;$/;"	m	struct:FT_CMap_ClassRec_
done	include/freetype/freetype/internal/psaux.h	/^    (*done)( AFM_Parser  parser );$/;"	m	struct:AFM_Parser_FuncsRec_
done	include/freetype/freetype/internal/psaux.h	/^    (*done)( PS_Parser  parser );$/;"	m	struct:PS_Parser_FuncsRec_
done	include/freetype/freetype/internal/psaux.h	/^    (*done)( PS_Table  table );$/;"	m	struct:PS_Table_FuncsRec_
done	include/freetype/freetype/internal/psaux.h	/^    (*done)( T1_Builder   builder );$/;"	m	struct:T1_Builder_FuncsRec_
done	include/freetype/freetype/internal/psaux.h	/^    (*done)( T1_Decoder  decoder );$/;"	m	struct:T1_Decoder_FuncsRec_
done	src/dialog/choosegeneraldialog.cpp	/^void ChooseGeneralDialog::done(int result)$/;"	f	class:ChooseGeneralDialog
done7zProcess	src/dialog/packagingeditor.cpp	/^void PackagingEditor::done7zProcess(int exit_code){$/;"	f	class:PackagingEditor
doneMakingAvatar	src/dialog/cardeditor.cpp	/^void CardScene::doneMakingAvatar(){$/;"	f	class:CardScene
done_face	include/freetype/freetype/internal/ftdriver.h	/^    FT_Face_DoneFunc          done_face;$/;"	m	struct:FT_Driver_ClassRec_
done_face	include/freetype/freetype/internal/sfnt.h	/^    TT_Done_Face_Func            done_face;$/;"	m	struct:SFNT_Interface_
done_global_hints	include/freetype/freetype/internal/autohint.h	/^    FT_AutoHinter_GlobalDoneFunc   done_global_hints;$/;"	m	struct:FT_AutoHinter_ServiceRec_
done_menu	src/dialog/cardeditor.h	/^    QMenu *menu, *done_menu;$/;"	m	class:CardScene
done_size	include/freetype/freetype/internal/ftdriver.h	/^    FT_Size_DoneFunc          done_size;$/;"	m	struct:FT_Driver_ClassRec_
done_slot	include/freetype/freetype/internal/ftdriver.h	/^    FT_Slot_DoneFunc          done_slot;$/;"	m	struct:FT_Driver_ClassRec_
dooptions	src/lua/loadlib.c	/^static void dooptions (lua_State *L, int n) {$/;"	f	file:
down	src/dialog/cardeditor.h	/^    QPixmap up, middle, down;$/;"	m	class:SkillBox
down_generals	src/ui/roomscene.h	/^    QList<CardItem *> general_items, up_generals, down_generals;$/;"	m	class:RoomScene
down_items	src/ui/cardcontainer.h	/^    QList<CardItem *> up_items, down_items;$/;"	m	class:GuanxingBox
dr0	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  dr0;$/;"	m	struct:__anon56
dr0	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             dr0;$/;"	m	struct:__anon7
dr1	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  dr1;$/;"	m	struct:__anon56
dr1	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             dr1;$/;"	m	struct:__anon7
dr2	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  dr2;$/;"	m	struct:__anon56
dr2	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             dr2;$/;"	m	struct:__anon7
dr3	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  dr3;$/;"	m	struct:__anon56
dr3	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             dr3;$/;"	m	struct:__anon7
dr6	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  dr6;$/;"	m	struct:__anon56
dr6	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             dr6;$/;"	m	struct:__anon7
dr7	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  dr7;$/;"	m	struct:__anon56
dr7	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             dr7;$/;"	m	struct:__anon7
drainAllLocks	src/server/serverplayer.h	/^    inline void drainAllLocks(){$/;"	f	class:ServerPlayer
drainLock	src/server/serverplayer.h	/^    inline void drainLock(SemaphoreType type){ while ((semas[type]->tryAcquire())) ; }$/;"	f	class:ServerPlayer
drank	src/core/structs.h	/^    bool drank;$/;"	m	struct:SlashEffectStruct
draw	src/ui/sprite.cpp	/^void EmphasizeEffect::draw(QPainter *painter){$/;"	f	class:EmphasizeEffect
draw	src/ui/sprite.cpp	/^void FadeEffect::draw(QPainter *painter)$/;"	f	class:FadeEffect
draw	src/ui/sprite.cpp	/^void SentbackEffect::draw(QPainter *painter)$/;"	f	class:SentbackEffect
drawCard	src/server/room.cpp	/^int Room::drawCard(){$/;"	f	class:Room
drawCard	src/server/serverplayer.cpp	/^void ServerPlayer::drawCard(const Card *card){$/;"	f	class:ServerPlayer
drawCards	src/server/room.cpp	/^void Room::drawCards(QList<ServerPlayer*> players, int n, const QString &reason)$/;"	f	class:Room
drawCards	src/server/room.cpp	/^void Room::drawCards(ServerPlayer* player, int n, const QString &reason)$/;"	f	class:Room
drawCards	src/server/serverplayer.cpp	/^void ServerPlayer::drawCards(int n, bool set_emotion, const QString &reason){$/;"	f	class:ServerPlayer
draw_pile	src/server/room.h	/^    QList<int> *draw_pile, *discard_pile;$/;"	m	class:Room
driver	include/freetype/freetype/freetype.h	/^    FT_Driver         driver;$/;"	m	struct:FT_FaceRec_
driver	include/freetype/freetype/freetype.h	/^    FT_Module       driver;$/;"	m	struct:FT_Open_Args_
dropNullPlaceholders	src/jsoncpp/src/json_writer.cpp	/^FastWriter::dropNullPlaceholders()$/;"	f	class:Json::FastWriter
dropNullPlaceholders_	src/jsoncpp/include/json/writer.h	/^      bool dropNullPlaceholders_;$/;"	m	class:Json::FastWriter
ds	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int16_t  ds;$/;"	m	struct:__anon56
ds	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             ds;$/;"	m	struct:__anon7
dsp	include/fmod/fmod_memoryinfo.h	/^    unsigned int dsp;                            \/* [out] DSP implementation objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
dspcodec	include/fmod/fmod_memoryinfo.h	/^    unsigned int dspcodec;                       \/* [out] Realtime file format decoding DSP objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
dspconnection	include/fmod/fmod_memoryinfo.h	/^    unsigned int dspconnection;                  \/* [out] DSPConnection objects and internals *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
duanliang_skill.getTurnUseCard	lua/ai/thicket-ai.lua	/^duanliang_skill.getTurnUseCard=function(self)$/;"	f
dummy	src/lua/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for `local' udata *\/$/;"	m	union:Udata
dummy	src/lua/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for strings *\/$/;"	m	union:TString
dummy_skills	src/scenario/boss-mode-scenario.cpp	/^    QStringList dummy_skills, available_wake_skills;$/;"	m	class:ImpasseRule	file:
dummynode	src/lua/ltable.c	73;"	d	file:
dummynode_	src/lua/ltable.c	/^static const Node dummynode_ = {$/;"	v	file:
dump_	src/breakpad/google_breakpad/processor/exploitability.h	/^  Minidump *dump_;$/;"	m	class:google_breakpad::Exploitability
dump_callback_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  OnClientDumpRequestCallback dump_callback_;$/;"	m	class:google_breakpad::CrashGenerationServer
dump_context_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  void* dump_context_;$/;"	m	class:google_breakpad::CrashGenerationServer
dump_generated_handle	src/breakpad/client/windows/common/ipc_protocol.h	/^  HANDLE dump_generated_handle;$/;"	m	struct:google_breakpad::ProtocolMessage
dump_generated_handle	src/breakpad/client/windows/crash_generation/client_info.h	/^  HANDLE dump_generated_handle() const { return dump_generated_handle_; }$/;"	f	class:google_breakpad::ClientInfo
dump_generated_handle_	src/breakpad/client/windows/crash_generation/client_info.h	/^  HANDLE dump_generated_handle_;$/;"	m	class:google_breakpad::ClientInfo
dump_generator_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  scoped_ptr<MinidumpGenerator> dump_generator_;$/;"	m	class:google_breakpad::CrashGenerationServer
dump_path	src/breakpad/client/windows/handler/exception_handler.h	/^  wstring dump_path() const { return dump_path_; }$/;"	f	class:google_breakpad::ExceptionHandler
dump_path_	src/breakpad/client/windows/crash_generation/minidump_generator.h	/^  std::wstring dump_path_;$/;"	m	class:google_breakpad::MinidumpGenerator
dump_path_	src/breakpad/client/windows/handler/exception_handler.h	/^  wstring dump_path_;$/;"	m	class:google_breakpad::ExceptionHandler
dump_path_c_	src/breakpad/client/windows/handler/exception_handler.h	/^  const wchar_t* dump_path_c_;$/;"	m	class:google_breakpad::ExceptionHandler
dump_request_handle	src/breakpad/client/windows/common/ipc_protocol.h	/^  HANDLE dump_request_handle;$/;"	m	struct:google_breakpad::ProtocolMessage
dump_request_wait_handle	src/breakpad/client/windows/crash_generation/client_info.h	/^  HANDLE dump_request_wait_handle() const {$/;"	f	class:google_breakpad::ClientInfo
dump_request_wait_handle_	src/breakpad/client/windows/crash_generation/client_info.h	/^  HANDLE dump_request_wait_handle_;$/;"	m	class:google_breakpad::ClientInfo
dump_requested_handle	src/breakpad/client/windows/crash_generation/client_info.h	/^  HANDLE dump_requested_handle() const { return dump_requested_handle_; }$/;"	f	class:google_breakpad::ClientInfo
dump_requested_handle_	src/breakpad/client/windows/crash_generation/client_info.h	/^  HANDLE dump_requested_handle_;$/;"	m	class:google_breakpad::ClientInfo
dump_thread_id	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t dump_thread_id;$/;"	m	struct:__anon49
dump_type	src/breakpad/client/windows/common/ipc_protocol.h	/^  MINIDUMP_TYPE dump_type;$/;"	m	struct:google_breakpad::ProtocolMessage
dump_type	src/breakpad/client/windows/crash_generation/client_info.h	/^  MINIDUMP_TYPE dump_type() const { return dump_type_; }$/;"	f	class:google_breakpad::ClientInfo
dump_type_	src/breakpad/client/windows/crash_generation/client_info.h	/^  MINIDUMP_TYPE dump_type_;$/;"	m	class:google_breakpad::ClientInfo
dump_type_	src/breakpad/client/windows/crash_generation/crash_generation_client.h	/^  MINIDUMP_TYPE dump_type_;$/;"	m	class:google_breakpad::CrashGenerationClient
dump_type_	src/breakpad/client/windows/handler/exception_handler.h	/^  MINIDUMP_TYPE dump_type_;$/;"	m	class:google_breakpad::ExceptionHandler
duplicate	src/jsoncpp/include/json/value.h	/^            duplicate,$/;"	e	enum:Json::Value::CZString::DuplicationPolicy
duplicate	src/server/room.cpp	/^Room* Room::duplicate()$/;"	f	class:Room
duplicateOnCopy	src/jsoncpp/include/json/value.h	/^            duplicateOnCopy$/;"	e	enum:Json::Value::CZString::DuplicationPolicy
duplicateStringValue	src/jsoncpp/src/json_value.cpp	/^duplicateStringValue( const char *value, $/;"	f	namespace:Json
duration_str	src/ui/roomscene.h	/^    QString duration_str;$/;"	m	class:ReplayerControlBar
dvalue	swig/sanguosha_wrap.cxx	/^    double dvalue;$/;"	m	struct:__anon146	file:
easings	src/ui/sprite.h	/^        QMap<int,QEasingCurve::Type> easings;$/;"	m	struct:Sprite::AnimationLine
easy_text_board	src/ui/chatwidget.h	/^    MyPixmapItem *chat_face_board, *easy_text_board;$/;"	m	class:ChatWidget
easytext	src/ui/chatwidget.h	/^    QList <QString> easytext;$/;"	m	class:MyPixmapItem
easytextButton	src/ui/chatwidget.h	/^    QPushButton *easytextButton;$/;"	m	class:ChatWidget
easytextPos	src/ui/chatwidget.h	/^    QList <QRect> easytextPos;$/;"	m	class:MyPixmapItem
eax	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             eax;$/;"	m	struct:__anon7
ebp	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             ebp;$/;"	m	struct:__anon7
ebx	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             ebx;$/;"	m	struct:__anon7
ecx	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             ecx;$/;"	m	struct:__anon7
edi	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             edi;$/;"	m	struct:__anon7
edit1v1Banlist	src/server/server.cpp	/^void ServerDialog::edit1v1Banlist(){$/;"	f	class:ServerDialog
editSkill	src/dialog/cardeditor.cpp	/^void CardEditor::editSkill(){$/;"	f	class:CardEditor
edx	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             edx;$/;"	m	struct:__anon7
effectOut	src/ui/sprite.cpp	/^void EffectAnimation::effectOut(QGraphicsItem *map)$/;"	f	class:EffectAnimation
effects	src/ui/sprite.h	/^    QMap<QGraphicsItem*,QAnimatedEffect*> effects;$/;"	m	class:EffectAnimation
eflags	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int32_t  eflags;$/;"	m	struct:__anon56
eflags	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             eflags;  \/* WinNT.h says "must be sanitized" *\/$/;"	m	struct:__anon7
eip	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             eip;$/;"	m	struct:__anon7
elapsed	src/util/recorder.h	/^        int elapsed;$/;"	m	struct:Replayer::Pair
element_type	src/breakpad/processor/linked_ptr.h	/^  typedef T element_type;$/;"	t	class:google_breakpad::linked_ptr
element_type	src/breakpad/processor/scoped_ptr.h	/^  typedef T element_type;$/;"	t	class:google_breakpad::scoped_array
element_type	src/breakpad/processor/scoped_ptr.h	/^  typedef T element_type;$/;"	t	class:google_breakpad::scoped_ptr
element_type	src/breakpad/processor/scoped_ptr.h	/^  typedef T element_type;$/;"	t	class:google_breakpad::scoped_ptr_malloc
elements	include/freetype/freetype/internal/psaux.h	/^    FT_Byte**          elements;       \/* addresses of table elements *\/$/;"	m	struct:PS_TableRec_
elist	lua/lib/expand.lua	/^  local function elist(var, v, str, sep)$/;"	f
elseif base.type(mesgt.body) 	lua/lib/socket/smtp.lua	/^    elseif base.type(mesgt.body) == "function" then send_source(mesgt)$/;"	f
elseif type(callback) 	lua/ai/smart-ai.lua	/^		elseif type(callback) == "function" then$/;"	f
elseif type(choice) 	lua/ai/smart-ai.lua	/^	elseif type(choice) == "function" then$/;"	f
elseif type(invoke) 	lua/ai/smart-ai.lua	/^	elseif type(invoke) == "function" then$/;"	f
emitId	src/dialog/playercarddialog.cpp	/^void PlayerCardDialog::emitId(){$/;"	f	class:PlayerCardDialog
emotion_item	src/ui/photo.h	/^    QGraphicsPixmapItem *emotion_item, *_m_skillNameItem;$/;"	m	class:Photo
emphasize	src/ui/sprite.cpp	/^void EffectAnimation::emphasize(QGraphicsItem *map,bool stay)$/;"	f	class:EffectAnimation
empty	lua/lib/ltn12.lua	/^local function empty()$/;"	f
empty	src/breakpad/processor/static_map.h	/^  inline bool empty() const { return num_nodes_ == 0; }$/;"	f	class:google_breakpad::StaticMap
empty	src/jsoncpp/src/json_value.cpp	/^Value::empty() const$/;"	f	class:Json::Value
emptybuffer	src/lua/lauxlib.c	/^static int emptybuffer (luaL_Buffer *B) {$/;"	f	file:
enableAllCards	src/ui/dashboard.cpp	/^void Dashboard::enableAllCards(){$/;"	f	class:Dashboard
enableCards	src/ui/dashboard.cpp	/^void Dashboard::enableCards(){$/;"	f	class:Dashboard
enableTargets	src/ui/roomscene.cpp	/^void RoomScene::enableTargets(const Card *card) {$/;"	f	class:RoomScene
enableYAMLCompatibility	src/jsoncpp/src/json_writer.cpp	/^FastWriter::enableYAMLCompatibility()$/;"	f	class:Json::FastWriter
enable_ai_label	src/client/clientstruct.h	/^    QLabel *enable_ai_label;$/;"	m	class:ServerInfoWidget
enable_exploitability_	src/breakpad/google_breakpad/processor/minidump_processor.h	/^  bool enable_exploitability_;$/;"	m	class:google_breakpad::MinidumpProcessor
enabled_at_nullification	src/core/lua-wrapper.h	/^    LuaFunction enabled_at_nullification;$/;"	m	class:LuaViewAsSkill
enabled_at_play	extension-doc/2-ViewAsSkill.lua	/^enabled_at_play=function(self,player)$/;"	f
enabled_at_play	extension-doc/5-Applications.lua	/^enabled_at_play=function()$/;"	f
enabled_at_play	src/core/lua-wrapper.h	/^    LuaFunction enabled_at_play;$/;"	m	class:LuaViewAsSkill
enabled_at_play 	extensions/0tagen.lua	/^	enabled_at_play = function(self, player)$/;"	f
enabled_at_response	extension-doc/2-ViewAsSkill.lua	/^enabled_at_response=function()$/;"	f
enabled_at_response	extension-doc/5-Applications.lua	/^enabled_at_response=function()$/;"	f
enabled_at_response	src/core/lua-wrapper.h	/^    LuaFunction enabled_at_response;$/;"	m	class:LuaViewAsSkill
enabled_at_response 	extensions/0tagen.lua	/^  enabled_at_response = function(self, player, pattern)$/;"	f
encodet['base64'] 	lua/lib/mime.lua	/^encodet['base64'] = function()$/;"	f
encodet['quoted-printable'] 	lua/lib/mime.lua	/^encodet['quoted-printable'] = function(mode)$/;"	f
encoding	include/freetype/freetype/freetype.h	/^    FT_Encoding  encoding;$/;"	m	struct:FT_CharMapRec_
encoding	include/freetype/freetype/internal/t1types.h	/^    T1_EncodingRec   encoding;$/;"	m	struct:T1_FontRec_
encodingID	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  encodingID;$/;"	m	struct:TT_NameEntryRec_
encoding_id	include/freetype/freetype/freetype.h	/^    FT_UShort    encoding_id;$/;"	m	struct:FT_CharMapRec_
encoding_id	include/freetype/freetype/ftsnames.h	/^    FT_UShort  encoding_id;$/;"	m	struct:FT_SfntName_
encoding_type	include/freetype/freetype/internal/t1types.h	/^    T1_EncodingType  encoding_type;$/;"	m	struct:T1_FontRec_
encryptionkey	include/fmod/fmod.h	/^    const char                    *encryptionkey;      \/* [w] Optional. Specify 0 to ignore. Key for encrypted FSB file.  Without this key an encrypted FSB file will not load. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
end	src/breakpad/processor/static_map.h	/^  inline iterator end() const { return IteratorAtIndex(num_nodes_); }$/;"	f	class:google_breakpad::StaticMap
end	src/jsoncpp/src/json_value.cpp	/^Value::end() const$/;"	f	class:Json::Value
end	src/jsoncpp/src/json_value.cpp	/^Value::end()$/;"	f	class:Json::Value
endNetworkDelayTest	src/server/serverplayer.cpp	/^qint64 ServerPlayer::endNetworkDelayTest(){$/;"	f	class:ServerPlayer
endOfBlock	src/breakpad/processor/disassembler_x86.h	/^    bool endOfBlock() { return end_of_block_; }$/;"	f	class:google_breakpad::DisassemblerX86
end_	src/jsoncpp/include/json/reader.h	/^         Location end_;$/;"	m	class:Json::Reader::Token
end_	src/jsoncpp/include/json/reader.h	/^      Location end_;$/;"	m	class:Json::Reader
end_	src/jsoncpp/src/json_batchallocator.h	/^      AllocatedType *end_;$/;"	m	struct:Json::BatchAllocator::BatchInfo
end_capture	src/lua/lstrlib.c	/^static const char *end_capture (MatchState *ms, const char *s,$/;"	f	file:
end_ci	src/lua/lstate.h	/^  CallInfo *end_ci;  \/* points after end of ci array*\/$/;"	m	struct:lua_State
end_glyph	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort               end_glyph;$/;"	m	struct:TT_SBit_StrikeRec_
end_of_block_	src/breakpad/processor/disassembler_x86.h	/^    bool end_of_block_;$/;"	m	class:google_breakpad::DisassemblerX86
endpc	src/lua/lobject.h	/^  int endpc;    \/* first point where variable is dead *\/$/;"	m	struct:LocVar
enemy_box	src/ui/roomscene.h	/^    KOFOrderBox *enemy_box, *self_box;$/;"	m	class:RoomScene
ensureEnableAI	src/server/server.cpp	/^void ServerDialog::ensureEnableAI(){$/;"	f	class:ServerDialog
enterDying	src/server/room.cpp	/^void Room::enterDying(ServerPlayer *player, DamageStruct *reason){$/;"	f	class:Room
enterRoom	src/dialog/mainwindow.cpp	/^void MainWindow::enterRoom(){$/;"	f	class:MainWindow
enterblock	src/lua/lparser.c	/^static void enterblock (FuncState *fs, BlockCnt *bl, lu_byte isbreakable) {$/;"	f	file:
enterlevel	src/lua/lparser.c	/^static void enterlevel (LexState *ls) {$/;"	f	file:
entries	src/breakpad/client/windows/common/ipc_protocol.h	/^  const CustomInfoEntry* entries;$/;"	m	struct:google_breakpad::CustomClientInfo
entry	src/breakpad/processor/range_map.h	/^    EntryType entry() const { return entry_; }$/;"	f	class:google_breakpad::RangeMap::Range
entry_	src/breakpad/processor/contained_range_map.h	/^  const EntryType entry_;$/;"	m	class:google_breakpad::ContainedRangeMap
entry_	src/breakpad/processor/range_map.h	/^    const EntryType entry_;$/;"	m	class:google_breakpad::RangeMap::Range
entry_ptr_	src/breakpad/processor/static_contained_range_map.h	/^  const EntryType *entry_ptr_;$/;"	m	class:google_breakpad::StaticContainedRangeMap
entry_selector	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  entry_selector;$/;"	m	struct:SFNT_HeaderRec_
entry_serializer_	src/breakpad/processor/map_serializers.h	/^  SimpleSerializer<Entry> entry_serializer_;$/;"	m	class:google_breakpad::RangeMapSerializer
entry_serializer_	src/breakpad/processor/map_serializers.h	/^  SimpleSerializer<EntryType> entry_serializer_;$/;"	m	class:google_breakpad::ContainedRangeMapSerializer
entry_size_	src/breakpad/processor/static_contained_range_map.h	/^  u_int32_t entry_size_;$/;"	m	class:google_breakpad::StaticContainedRangeMap
entryptr	src/breakpad/processor/static_range_map.h	/^    const EntryType* entryptr() const {$/;"	f	class:google_breakpad::StaticRangeMap::Range
enumerate_resource_	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^  VerifierEnumerateResourceType enumerate_resource_;$/;"	m	class:__anon67::HandleTraceData	file:
env	src/lua/lobject.h	/^    struct Table *env;$/;"	m	struct:Udata::__anon92	typeref:struct:Udata::__anon92::Table
env	src/lua/lstate.h	/^  TValue env;  \/* temporary place for environments *\/$/;"	m	struct:lua_State
eof	src/breakpad/processor/binarystream.h	/^  bool eof() const { return stream_.eof(); }$/;"	f	class:google_breakpad::binarystream
epilog_size	src/breakpad/processor/windows_frame_info.h	/^  u_int32_t epilog_size;$/;"	m	struct:google_breakpad::WindowsFrameInfo
equalobj	src/lua/lvm.h	21;"	d
equip_list	src/dialog/customassigndialog.h	/^    QListWidget *list, *equip_list, *hand_list, *judge_list, *pile_list;$/;"	m	class:CustomAssignDialog
equipped	src/dialog/mainwindow.h	/^    QList<QObject*> tokens,equipped,loaded;$/;"	m	class:AcknowledgementScene
errfile	src/lua/lauxlib.c	/^static int errfile (lua_State *L, const char *what, int fnameindex) {$/;"	f	file:
errfunc	src/lua/lstate.h	/^  ptrdiff_t errfunc;  \/* current error handling function (stack index) *\/$/;"	m	struct:lua_State
errmsg	lua/lib/sqlite3.lua	/^local function errmsg(db_handle)$/;"	f
error	include/freetype/freetype/internal/ftvalid.h	/^    FT_Error            error;       \/* error returned. 0 means success  *\/$/;"	m	struct:FT_ValidatorRec_
error	include/freetype/freetype/internal/psaux.h	/^    FT_Error   error;$/;"	m	struct:PS_ParserRec_
error	include/js.h	/^  int          error        ;$/;"	m	class:jsJoystick
error	src/lua/lundump.c	/^static void error(LoadState* S, const char* why)$/;"	f	file:
error	src/lua/lundump.c	32;"	d	file:
errorJmp	src/lua/lstate.h	/^  struct lua_longjmp *errorJmp;  \/* current error recover point *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_longjmp
error_expected	src/lua/lparser.c	/^static void error_expected (LexState *ls, int token) {$/;"	f	file:
error_offset	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int32_t  error_offset;$/;"	m	struct:__anon55
error_offset	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t error_offset;$/;"	m	struct:__anon6
error_opcode	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int16_t  error_opcode;$/;"	m	struct:__anon55
error_selector	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int16_t  error_selector;$/;"	m	struct:__anon55
error_selector	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t error_selector;$/;"	m	struct:__anon6
errorfromcode	src/lua/loadlib.c	/^static const char *errorfromcode (NSObjectFileImageReturnCode ret) {$/;"	f	file:
errorlimit	src/lua/lparser.c	/^static void errorlimit (FuncState *fs, int limit, const char *what) {$/;"	f	file:
errors_	src/jsoncpp/include/json/reader.h	/^      Errors errors_;$/;"	m	class:Json::Reader
es	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int16_t  es;$/;"	m	struct:__anon56
es	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             es;$/;"	m	struct:__anon7
escape	lua/lib/socket/url.lua	/^function escape(s)$/;"	f
esi	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             esi;$/;"	m	struct:__anon7
esp	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             esp;$/;"	m	struct:__anon7
estimate	src/lua/lstate.h	/^  lu_mem estimate;  \/* an estimate of number of bytes actually in use *\/$/;"	m	struct:global_State
estring	lua/lib/expand.lua	/^  function estring(str)$/;"	f
evaluable	src/breakpad/processor/postfix_evaluator_unittest.cc	/^  bool evaluable;$/;"	m	struct:__anon75::EvaluateForValueTest	file:
evaluable	src/breakpad/processor/postfix_evaluator_unittest.cc	/^  bool evaluable;$/;"	m	struct:__anon75::EvaluateTest	file:
evaluate_test_count	src/breakpad/processor/postfix_evaluator_unittest.cc	/^  unsigned int evaluate_test_count;$/;"	m	struct:__anon75::EvaluateTestSet	file:
evaluate_tests	src/breakpad/processor/postfix_evaluator_unittest.cc	/^  const EvaluateTest *evaluate_tests;$/;"	m	struct:__anon75::EvaluateTestSet	file:
evar	lua/lib/expand.lua	/^  function evar(var)$/;"	f
event	src/lua/lua.h	/^  int event;$/;"	m	struct:lua_Debug
event_stack	src/server/roomthread.h	/^    QList<EventTriplet> event_stack;$/;"	m	class:RoomThread
eventcategory	include/fmod/fmod_memoryinfo.h	/^    unsigned int eventcategory;                  \/* [out] Event category objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
eventenvelope	include/fmod/fmod_memoryinfo.h	/^    unsigned int eventenvelope;                  \/* [out] Event envelope objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
eventenvelopedef	include/fmod/fmod_memoryinfo.h	/^    unsigned int eventenvelopedef;               \/* [out] Event envelope definition objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
eventenvelopepoint	include/fmod/fmod_memoryinfo.h	/^    unsigned int eventenvelopepoint;             \/* [out] Event envelope point objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
eventgroupi	include/fmod/fmod_memoryinfo.h	/^    unsigned int eventgroupi;                    \/* [out] EventGroup objects and internals *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
eventinstance	include/fmod/fmod_memoryinfo.h	/^    unsigned int eventinstance;                  \/* [out] Event instance base objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
eventinstance_complex	include/fmod/fmod_memoryinfo.h	/^    unsigned int eventinstance_complex;          \/* [out] Complex event instance objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
eventinstance_layer	include/fmod/fmod_memoryinfo.h	/^    unsigned int eventinstance_layer;            \/* [out] Event layer instance objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
eventinstance_simple	include/fmod/fmod_memoryinfo.h	/^    unsigned int eventinstance_simple;           \/* [out] Simple event instance objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
eventinstance_sound	include/fmod/fmod_memoryinfo.h	/^    unsigned int eventinstance_sound;            \/* [out] Event sound instance objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
eventinstancepool	include/fmod/fmod_memoryinfo.h	/^    unsigned int eventinstancepool;              \/* [out] Event instance pool memory *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
eventparameter	include/fmod/fmod_memoryinfo.h	/^    unsigned int eventparameter;                 \/* [out] Event parameter objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
eventproject	include/fmod/fmod_memoryinfo.h	/^    unsigned int eventproject;                   \/* [out] EventProject objects and internals *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
eventqueuesize	include/fmod/fmod.h	/^    int             eventqueuesize;             \/* [r\/w] Optional. Specify 0 to ignore. For use with FMOD Event system only.  Specifies the number of slots available for simultaneous non blocking loads, across all threads.  Default = 32. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
eventreverb	include/fmod/fmod_memoryinfo.h	/^    unsigned int eventreverb;                    \/* [out] Reverb objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
events	src/core/skill.h	/^    QList<TriggerEvent> events;$/;"	m	class:TriggerSkill
eventsystem	include/fmod/fmod_memoryinfo.h	/^    unsigned int eventsystem;                    \/* [out] EventSystem and various internals *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
ex_generals	src/server/server.h	/^    QSet<QString> ex_generals;$/;"	m	class:Select3v3GeneralDialog
ex_info	src/breakpad/client/windows/crash_generation/client_info.h	/^  EXCEPTION_POINTERS** ex_info() const { return ex_info_; }$/;"	f	class:google_breakpad::ClientInfo
ex_info_	src/breakpad/client/windows/crash_generation/client_info.h	/^  EXCEPTION_POINTERS** ex_info_;$/;"	m	class:google_breakpad::ClientInfo
ex_options	src/scenario/miniscenarios.h	/^    QMap<QString, QVariant> ex_options;$/;"	m	class:MiniSceneRule
exception	src/breakpad/google_breakpad/processor/minidump.h	/^  const MDRawExceptionStream* exception() const {$/;"	f	class:google_breakpad::MinidumpException
exception_	src/breakpad/google_breakpad/processor/minidump.h	/^  MDRawExceptionStream exception_;$/;"	m	class:google_breakpad::MinidumpException
exception_address	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int64_t exception_address;  \/* The address that caused the exception.$/;"	m	struct:__anon34
exception_code	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t exception_code;     \/* Windows: MDExceptionCodeWin,$/;"	m	struct:__anon34
exception_flags	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t exception_flags;    \/* Windows: 1 if noncontinuable,$/;"	m	struct:__anon34
exception_info_	src/breakpad/client/windows/handler/exception_handler.h	/^  EXCEPTION_POINTERS* exception_info_;$/;"	m	class:google_breakpad::ExceptionHandler
exception_information	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int64_t exception_information[MD_EXCEPTION_MAXIMUM_PARAMETERS];$/;"	m	struct:__anon34
exception_pointers	src/breakpad/client/windows/common/ipc_protocol.h	/^  EXCEPTION_POINTERS** exception_pointers;$/;"	m	struct:google_breakpad::ProtocolMessage
exception_pointers_	src/breakpad/client/windows/crash_generation/crash_generation_client.h	/^  EXCEPTION_POINTERS* exception_pointers_;$/;"	m	class:google_breakpad::CrashGenerationClient
exception_record	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDException          exception_record;$/;"	m	struct:__anon35
exception_record	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int64_t exception_record;   \/* Address (in the minidump-producing host's$/;"	m	struct:__anon34
exchangeListItem	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::exchangeListItem(){$/;"	f	class:CustomAssignDialog
exchangePlayersInfo	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::exchangePlayersInfo(QListWidgetItem *first, QListWidgetItem *second){$/;"	f	class:CustomAssignDialog
exclude_disaster_checkbox	src/server/server.h	/^    QCheckBox *exclude_disaster_checkbox;$/;"	m	class:ServerDialog
excluded_card	src/dialog/customassigndialog.h	/^    QList<int> excluded_card;$/;"	m	class:CardAssignDialog
exec	include/freetype/freetype/internal/tttypes.h	/^    TT_ExecContext   exec;$/;"	m	struct:TT_LoaderRec_
existedGenerals	src/scenario/miniscenarios.cpp	/^QStringList MiniSceneRule::existedGenerals() const$/;"	f	class:MiniSceneRule
exit_callback_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  OnClientExitedCallback exit_callback_;$/;"	m	class:google_breakpad::CrashGenerationServer
exit_context_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  void* exit_context_;$/;"	m	class:google_breakpad::CrashGenerationServer
exp	src/package/exppattern.h	/^    QString exp;$/;"	m	class:ExpPattern
exp1	src/lua/lparser.c	/^static int exp1 (LexState *ls) {$/;"	f	file:
exp2reg	src/lua/lcode.c	/^static void exp2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
expand	lua/lib/expand.lua	/^local function expand(str, ...)$/;"	f
expand	src/ui/rolecombobox.cpp	/^void RoleComboBox::expand() {$/;"	f	class:RoleComboBox
expansion_factor	include/freetype/freetype/t1tables.h	/^    FT_Fixed       expansion_factor;$/;"	m	struct:CID_FaceDictRec_
expansion_factor	include/freetype/freetype/t1tables.h	/^    FT_Fixed   expansion_factor;$/;"	m	struct:PS_PrivateRec_
expdesc	src/lua/lparser.h	/^typedef struct expdesc {$/;"	s
expdesc	src/lua/lparser.h	/^} expdesc;$/;"	t	typeref:struct:expdesc
expectToken	src/jsoncpp/src/json_reader.cpp	/^Reader::expectToken( TokenType type, Token &token, const char *message )$/;"	f	class:Json::Reader
expect_storable	src/breakpad/processor/range_map_unittest.cc	/^  bool expect_storable;$/;"	m	struct:__anon84::RangeTest	file:
expect_storable	src/breakpad/processor/static_range_map_unittest.cc	/^  bool expect_storable;$/;"	m	struct:__anon85::RangeTest	file:
expected	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  MDRawContextAMD64 expected;$/;"	m	struct:CFIFixture	file:
expected	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  MDRawContextARM expected;$/;"	m	struct:CFIFixture	file:
expected	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  MDRawContextX86 expected;$/;"	m	struct:CFIFixture	file:
expected_validity	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  int expected_validity;$/;"	m	struct:CFIFixture	file:
expert	include/freetype/freetype/internal/psaux.h	/^    FT_CMap_Class  expert;$/;"	m	struct:T1_CMap_ClassesRec_
expkind	src/lua/lparser.h	/^} expkind;$/;"	t	typeref:enum:__anon98
explist1	src/lua/lparser.c	/^static int explist1 (LexState *ls, expdesc *v) {$/;"	f	file:
exploitability	src/breakpad/google_breakpad/processor/process_state.h	/^  ExploitabilityRating exploitability() const { return exploitability_; }$/;"	f	class:google_breakpad::ProcessState
exploitability_	src/breakpad/google_breakpad/processor/process_state.h	/^  ExploitabilityRating exploitability_;$/;"	m	class:google_breakpad::ProcessState
exposeRoles	src/scenario/boss-mode-scenario.cpp	/^bool ImpasseScenario::exposeRoles() const{$/;"	f	class:ImpasseScenario
exposeRoles	src/scenario/scenario.cpp	/^bool Scenario::exposeRoles() const{$/;"	f	class:Scenario
exposeRoles	src/scenario/zombie-mode-scenario.cpp	/^bool ZombieScenario::exposeRoles() const{$/;"	f	class:ZombieScenario
expr	src/lua/lparser.c	/^static void expr (LexState *ls, expdesc *v) {$/;"	f	file:
expression	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int16_t expression[128];  \/* Assertion that failed... *\/$/;"	m	struct:__anon51
expression	src/breakpad/google_breakpad/processor/minidump.h	/^  string expression() const {$/;"	f	class:google_breakpad::MinidumpAssertion
expression	src/breakpad/processor/postfix_evaluator_unittest.cc	/^  const string expression;$/;"	m	struct:__anon75::EvaluateForValueTest	file:
expression	src/breakpad/processor/postfix_evaluator_unittest.cc	/^  const string expression;$/;"	m	struct:__anon75::EvaluateTest	file:
expression_	src/breakpad/google_breakpad/processor/minidump.h	/^  string expression_;$/;"	m	class:google_breakpad::MinidumpAssertion
expression_	src/breakpad/processor/cfi_frame_info.h	/^  string name_, expression_;$/;"	m	class:google_breakpad::CFIRuleParser
exprstat	src/lua/lparser.c	/^static void exprstat (LexState *ls) {$/;"	f	file:
extended_registers	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int8_t              extended_registers[$/;"	m	struct:__anon7
extension_group	src/server/server.h	/^    QButtonGroup *extension_group;$/;"	m	class:ServerDialog
extensions	include/freetype/freetype/freetype.h	/^    void*             extensions; \/* unused                         *\/$/;"	m	struct:FT_FaceRec_
external_leading	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  external_leading;$/;"	m	struct:FT_WinFNT_HeaderRec_
extra	include/freetype/freetype/internal/tttypes.h	/^    FT_Generic            extra;$/;"	m	struct:TT_FaceRec_
extra	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	/^  u_int32_t     extra[MD_FLOATINGSAVEAREA_ARM_FPEXTRA_COUNT];$/;"	m	struct:__anon61
extra	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int8_t extra[2];$/;"	m	struct:__anon30
extra_	src/jsoncpp/include/json/reader.h	/^         Location extra_;$/;"	m	class:Json::Reader::ErrorInfo
extra_func	src/core/lua-wrapper.h	/^    LuaFunction extra_func;$/;"	m	class:LuaMaxCardsSkill
extra_points	include/freetype/freetype/internal/ftgloadr.h	/^    FT_Vector*   extra_points;  \/* extra points table        *\/$/;"	m	struct:FT_GlyphLoadRec_
extra_points2	include/freetype/freetype/internal/ftgloadr.h	/^    FT_Vector*   extra_points2; \/* second extra points table *\/$/;"	m	struct:FT_GlyphLoadRec_
extra_set	src/core/general.h	/^    QSet<QString> extra_set;$/;"	m	class:General
extra_skill_set	src/dialog/customassigndialog.h	/^    QPushButton *extra_skill_set;$/;"	m	class:CustomAssignDialog
extract	lua/tools/genpro.lua	/^function extract(dir)$/;"	f
extraline	src/lua/lauxlib.c	/^  int extraline;$/;"	m	struct:LoadF	file:
f	src/lua/lauxlib.c	/^  FILE *f;$/;"	m	struct:LoadF	file:
f	src/lua/lobject.h	/^  lua_CFunction f;$/;"	m	struct:CClosure
f	src/lua/lparser.h	/^  Proto *f;  \/* current function header *\/$/;"	m	struct:FuncState
f	src/lua/lparser.h	/^  int f;  \/* patch list of `exit when false' *\/$/;"	m	struct:expdesc
f.try 	lua/lib/socket/ftp.lua	/^    f.try = socket.newtry(function() f:close() end)$/;"	f
f_Ccall	src/lua/lapi.c	/^static void f_Ccall (lua_State *L, void *ud) {$/;"	f	file:
f_call	src/lua/lapi.c	/^static void f_call (lua_State *L, void *ud) {$/;"	f	file:
f_flush	src/lua/liolib.c	/^static int f_flush (lua_State *L) {$/;"	f	file:
f_isLua	src/lua/lstate.h	61;"	d
f_lines	src/lua/liolib.c	/^static int f_lines (lua_State *L) {$/;"	f	file:
f_luaopen	src/lua/lstate.c	/^static void f_luaopen (lua_State *L, void *ud) {$/;"	f	file:
f_parser	src/lua/ldo.c	/^static void f_parser (lua_State *L, void *ud) {$/;"	f	file:
f_read	src/lua/liolib.c	/^static int f_read (lua_State *L) {$/;"	f	file:
f_seek	src/lua/liolib.c	/^static int f_seek (lua_State *L) {$/;"	f	file:
f_setvbuf	src/lua/liolib.c	/^static int f_setvbuf (lua_State *L) {$/;"	f	file:
f_write	src/lua/liolib.c	/^static int f_write (lua_State *L) {$/;"	f	file:
face	include/freetype/freetype/freetype.h	/^    FT_Face           face;      \/* parent face object              *\/$/;"	m	struct:FT_SizeRec_
face	include/freetype/freetype/freetype.h	/^    FT_Face           face;$/;"	m	struct:FT_GlyphSlotRec_
face	include/freetype/freetype/freetype.h	/^    FT_Face      face;$/;"	m	struct:FT_CharMapRec_
face	include/freetype/freetype/freetype.h	/^  FT_Done_Face( FT_Face  face );$/;"	v
face	include/freetype/freetype/freetype.h	/^  FT_Face_CheckTrueTypePatents( FT_Face  face );$/;"	v
face	include/freetype/freetype/freetype.h	/^  FT_Face_GetVariantSelectors( FT_Face  face );$/;"	v
face	include/freetype/freetype/freetype.h	/^  FT_Get_FSType_Flags( FT_Face  face );$/;"	v
face	include/freetype/freetype/freetype.h	/^  FT_Get_Postscript_Name( FT_Face  face );$/;"	v
face	include/freetype/freetype/freetype.h	/^  FT_Reference_Face( FT_Face  face );$/;"	v
face	include/freetype/freetype/ftsnames.h	/^  FT_Get_Sfnt_Name_Count( FT_Face  face );$/;"	v
face	include/freetype/freetype/ftxf86.h	/^  FT_Get_X11_Font_Format( FT_Face  face );$/;"	v
face	include/freetype/freetype/internal/psaux.h	/^    FT_Face         face;$/;"	m	struct:T1_BuilderRec_
face	include/freetype/freetype/internal/tttypes.h	/^    FT_Face          face;$/;"	m	struct:TT_LoaderRec_
face	include/freetype/freetype/t1tables.h	/^  FT_Has_PS_Glyph_Names( FT_Face  face );$/;"	v
faceUp	src/core/player.cpp	/^bool Player::faceUp() const{$/;"	f	class:Player
face_flags	include/freetype/freetype/freetype.h	/^    FT_Long           face_flags;$/;"	m	struct:FT_FaceRec_
face_id	include/freetype/freetype/ftcache.h	/^    FTC_FaceID  face_id;$/;"	m	struct:FTC_FontRec_
face_id	include/freetype/freetype/ftcache.h	/^    FTC_FaceID  face_id;$/;"	m	struct:FTC_ImageTypeRec_
face_id	include/freetype/freetype/ftcache.h	/^    FTC_FaceID  face_id;$/;"	m	struct:FTC_ScalerRec_
face_index	include/freetype/freetype/freetype.h	/^    FT_Long           face_index;$/;"	m	struct:FT_FaceRec_
face_name_offset	include/freetype/freetype/ftwinfnt.h	/^    FT_ULong   face_name_offset;$/;"	m	struct:FT_WinFNT_HeaderRec_
face_object_size	include/freetype/freetype/internal/ftdriver.h	/^    FT_Long                   face_object_size;$/;"	m	struct:FT_Driver_ClassRec_
face_up	src/core/player.h	/^    bool face_up;$/;"	m	class:Player
faceboardPos	src/ui/chatwidget.h	/^    QList <QRect> faceboardPos;$/;"	m	class:MyPixmapItem
faces_list	include/freetype/freetype/internal/ftobjs.h	/^    FT_ListRec       faces_list;$/;"	m	struct:FT_DriverRec_
factorial	lua/ai/standard_cards-ai.lua	/^local function factorial(n)$/;"	f
fade	src/ui/sprite.cpp	/^void EffectAnimation::fade(QGraphicsItem *map)$/;"	f	class:EffectAnimation
family_blues	include/freetype/freetype/t1tables.h	/^    FT_Short   family_blues      [14];$/;"	m	struct:PS_PrivateRec_
family_name	include/freetype/freetype/freetype.h	/^    FT_String*        family_name;$/;"	m	struct:FT_FaceRec_
family_name	include/freetype/freetype/t1tables.h	/^    FT_String*  family_name;$/;"	m	struct:PS_FontInfoRec_
family_other_blues	include/freetype/freetype/t1tables.h	/^    FT_Short   family_other_blues[10];$/;"	m	struct:PS_PrivateRec_
fan_skill.getTurnUseCard	lua/ai/maneuvering-ai.lua	/^fan_skill.getTurnUseCard=function(self)$/;"	f
fanjian_skill.getTurnUseCard	lua/ai/standard-ai.lua	/^fanjian_skill.getTurnUseCard=function(self)$/;"	f
fast_resolver	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  FastSourceLineResolver fast_resolver;$/;"	m	class:__anon73::TestFastSourceLineResolver	file:
fast_resolver_	src/breakpad/processor/module_comparer.h	/^  FastSourceLineResolver *fast_resolver_;$/;"	m	class:google_breakpad::ModuleComparer
fasttm	src/lua/ltm.h	44;"	d
fd_bytes	include/freetype/freetype/t1tables.h	/^    FT_Int          fd_bytes;$/;"	m	struct:CID_FaceInfoRec_
feasible	extension-doc/4-SkillCard.lua	/^feasible=function(self,targets)$/;"	f
feasible	src/core/lua-wrapper.h	/^    LuaFunction feasible;$/;"	m	class:LuaSkillCard
feature_information	src/breakpad/google_breakpad/common/minidump_format.h	/^    u_int32_t feature_information;        \/* cpuid 1: edx *\/$/;"	m	struct:__anon36::__anon37
features_	src/jsoncpp/include/json/reader.h	/^      Features features_;$/;"	m	class:Json::Reader
females	src/scenario/zombie-mode-scenario.h	/^    QStringList females;$/;"	m	class:ZombieScenario
fev	include/fmod/fmod_memoryinfo.h	/^    unsigned int fev;                            \/* [out] Definition of objects contained in all loaded projects e.g. events, groups, categories *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
field	src/lua/lparser.c	/^static void field (LexState *ls, expdesc *v) {$/;"	f	file:
file	include/fmod/fmod_memoryinfo.h	/^    unsigned int file;                           \/* [out] File buffers and structures *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
file	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int16_t file[128];        \/* ...in this file... *\/$/;"	m	struct:__anon51
file	src/breakpad/google_breakpad/processor/minidump.h	/^  string file() const {$/;"	f	class:google_breakpad::MinidumpAssertion
file_	src/breakpad/google_breakpad/processor/minidump.h	/^  string file_;$/;"	m	class:google_breakpad::MinidumpAssertion
file_	src/breakpad/processor/source_line_resolver_base_types.h	/^  FILE *file_;$/;"	m	class:google_breakpad::SourceLineResolverBase::AutoFileCloser
file_date_hi	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t file_date_hi;$/;"	m	struct:__anon16
file_date_lo	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t file_date_lo;$/;"	m	struct:__anon16
file_exists	src/breakpad/processor/simple_symbol_supplier.cc	/^static bool file_exists(const string &file_name) {$/;"	f	namespace:google_breakpad
file_flags	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t file_flags;$/;"	m	struct:__anon16
file_flags_mask	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t file_flags_mask;    \/* Identifies valid bits in fileFlags *\/$/;"	m	struct:__anon16
file_ids_	src/breakpad/common/windows/pdb_source_line_writer.h	/^  hash_map<DWORD, DWORD> file_ids_;$/;"	m	class:google_breakpad::PDBSourceLineWriter
file_list	src/dialog/packagingeditor.h	/^    QListWidget *file_list;$/;"	m	class:PackagingEditor
file_list_meta	src/dialog/packagingeditor.h	/^    MetaInfoWidget *file_list_meta;$/;"	m	class:PackagingEditor
file_offset_	src/breakpad/processor/synth_minidump.h	/^  Label file_offset_, size_;$/;"	m	class:google_breakpad::SynthMinidump::Section
file_os	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t file_os;$/;"	m	struct:__anon16
file_size	include/freetype/freetype/ftwinfnt.h	/^    FT_ULong   file_size;$/;"	m	struct:FT_WinFNT_HeaderRec_
file_start_	src/breakpad/processor/synth_minidump.h	/^  Label file_start_;$/;"	m	class:google_breakpad::SynthMinidump::Dump
file_subtype	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t file_subtype;$/;"	m	struct:__anon16
file_type	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  file_type;$/;"	m	struct:FT_WinFNT_HeaderRec_
file_type	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t file_type;$/;"	m	struct:__anon16
file_version_hi	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t file_version_hi;$/;"	m	struct:__anon16
file_version_lo	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t file_version_lo;$/;"	m	struct:__anon16
fileerror	src/lua/liolib.c	/^static void fileerror (lua_State *L, int arg, const char *filename) {$/;"	f	file:
filehandle	include/fmod/fmod_codec.h	/^    void                       *filehandle;    \/* [out] This will return an internal FMOD file handle to use with the callbacks provided.  *\/$/;"	m	struct:FMOD_CODEC_STATE
filename	src/util/recorder.h	/^    QString filename;$/;"	m	class:Replayer
fileoffset	include/fmod/fmod.h	/^    unsigned int                   fileoffset;         \/* [w] Optional. Specify 0 to ignore. Offset from start of the file to start loading from.  This is useful for loading files from inside big data files. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
fileread	include/fmod/fmod_codec.h	/^    FMOD_FILE_READCALLBACK      fileread;      \/* [out] This will return a callable FMOD file function to use from codec. *\/$/;"	m	struct:FMOD_CODEC_STATE
files_	src/breakpad/processor/basic_source_line_resolver_types.h	/^  FileMap files_;$/;"	m	class:google_breakpad::BasicSourceLineResolver::Module
files_	src/breakpad/processor/fast_source_line_resolver_types.h	/^  StaticMap<int, char> files_;$/;"	m	class:google_breakpad::FastSourceLineResolver::Module
files_serializer_	src/breakpad/processor/module_serializer.h	/^  StdMapSerializer<int, string> files_serializer_;$/;"	m	class:google_breakpad::ModuleSerializer
fileseek	include/fmod/fmod_codec.h	/^    FMOD_FILE_SEEKCALLBACK      fileseek;      \/* [out] This will return a callable FMOD file function to use from codec.  *\/$/;"	m	struct:FMOD_CODEC_STATE
filesize	include/fmod/fmod_codec.h	/^    unsigned int                filesize;      \/* [out] This will contain the size of the file in bytes. *\/$/;"	m	struct:FMOD_CODEC_STATE
fill	src/client/clientstruct.cpp	/^void ServerInfoWidget::fill(const ServerInfoStruct &info, const QString &address){$/;"	f	class:ServerInfoWidget
fillAG	src/client/client.cpp	/^void Client::fillAG(const QString &cards_str){$/;"	f	class:Client
fillAG	src/server/room.cpp	/^void Room::fillAG(const QList<int> &card_ids, ServerPlayer *who){$/;"	f	class:Room
fillCards	src/ui/cardcontainer.cpp	/^void CardContainer::fillCards(const QList<int> &card_ids){$/;"	f	class:CardContainer
fillCards	src/ui/roomscene.cpp	/^void RoomScene::fillCards(const QList<int> &card_ids)$/;"	f	class:RoomScene
fillGenerals	src/client/client.cpp	/^void Client::fillGenerals(const QString &generals){$/;"	f	class:Client
fillGenerals	src/dialog/generaloverview.cpp	/^void GeneralOverview::fillGenerals(const QList<const General *> &generals){$/;"	f	class:GeneralOverview
fillGenerals	src/ui/roomscene.cpp	/^void RoomScene::fillGenerals(const QStringList &names){$/;"	f	class:RoomScene
fillGenerals1v1	src/ui/roomscene.cpp	/^void RoomScene::fillGenerals1v1(const QStringList &names){$/;"	f	class:RoomScene
fillGenerals3v3	src/ui/roomscene.cpp	/^void RoomScene::fillGenerals3v3(const QStringList &names){$/;"	f	class:RoomScene
fillListWidget	src/server/server.cpp	/^void Select3v3GeneralDialog::fillListWidget(QListWidget *list, const Package *pack){$/;"	f	class:Select3v3GeneralDialog
fillRobots	src/client/client.cpp	/^void Client::fillRobots(){$/;"	f	class:Client
fillRobotsCommand	src/server/room.cpp	/^void Room::fillRobotsCommand(ServerPlayer *player, const QString &){$/;"	f	class:Room
fillTabWidget	src/server/server.cpp	/^void Select3v3GeneralDialog::fillTabWidget(){$/;"	f	class:Select3v3GeneralDialog
fillTable	src/ui/roomscene.cpp	/^void RoomScene::fillTable(QTableWidget *table, const QList<const ClientPlayer *> &players){$/;"	f	class:RoomScene
fill_robots	src/ui/roomscene.h	/^    Button* add_robot, *fill_robots;$/;"	m	class:RoomScene
filler	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	/^  u_int64_t	filler;$/;"	m	struct:__anon63
filter	extension-doc/4-SkillCard.lua	/^filter=function(self,targets,to_select)$/;"	f
filter	extension-doc/5-Applications.lua	/^filter=function(self,targets,to_select)$/;"	f
filter	src/core/lua-wrapper.h	/^    LuaFunction filter;$/;"	m	class:LuaSkillCard
filter	src/ui/dashboard.h	/^    const FilterSkill *filter;$/;"	m	class:Dashboard
filter 	extensions/0tagen.lua	/^	filter = function(self, targets, to_select, player)$/;"	f
filter.chain	lua/lib/ltn12.lua	/^function filter.chain(...)$/;"	f
filter.cycle	lua/lib/ltn12.lua	/^function filter.cycle(low, ctx, extra)$/;"	f
filterCards	src/server/room.cpp	/^void Room::filterCards(ServerPlayer* player, QList<const Card *> cards, bool refilter){$/;"	f	class:Room
filterEvent	src/server/ai.cpp	/^void AI::filterEvent(TriggerEvent , ServerPlayer *, const QVariant &){$/;"	f	class:AI
filterEvent	swig/sanguosha_wrap.cxx	/^void LuaAI::filterEvent(TriggerEvent event, ServerPlayer *player, const QVariant &data){$/;"	f	class:LuaAI
filter_	src/breakpad/client/windows/handler/exception_handler.h	/^  FilterCallback filter_;$/;"	m	class:google_breakpad::ExceptionHandler
final	src/dialog/distanceviewdialog.cpp	/^    QLineEdit *final;$/;"	m	struct:DistanceViewDialogUI	file:
finalizer	include/freetype/freetype/fttypes.h	/^    FT_Generic_Finalizer  finalizer;$/;"	m	struct:FT_Generic_
find	src/breakpad/processor/static_map-inl.h	/^StaticMap<Key, Value, Compare>::find(const Key &key) const {$/;"	f	class:google_breakpad::StaticMap
findPlayer	src/server/room.cpp	/^ServerPlayer *Room::findPlayer(const QString &general_name, bool include_dead) const{$/;"	f	class:Room
findPlayerBySkillName	src/server/room.cpp	/^ServerPlayer *Room::findPlayerBySkillName(const QString &skill_name, bool include_dead) const{$/;"	f	class:Room
findPlayerForModifyKingdom	lua/ai/yitian-ai.lua	/^local function findPlayerForModifyKingdom(self, players)$/;"	f
findPlayersBySkillName	src/server/room.cpp	/^QList<ServerPlayer *>Room::findPlayersBySkillName(const QString &skill_name, bool include_dead) const{$/;"	f	class:Room
findReasonable	src/server/serverplayer.cpp	/^QString ServerPlayer::findReasonable(const QStringList &generals, bool no_unreasonable){$/;"	f	class:ServerPlayer
find_sbit_image	include/freetype/freetype/internal/sfnt.h	/^    TT_Find_SBit_Image_Func      find_sbit_image;$/;"	m	struct:SFNT_Interface_
findfile	src/lua/loadlib.c	/^static const char *findfile (lua_State *L, const char *name,$/;"	f	file:
findindex	src/lua/ltable.c	/^static int findindex (lua_State *L, Table *t, StkId key) {$/;"	f	file:
findlocal	src/lua/ldebug.c	/^static const char *findlocal (lua_State *L, CallInfo *ci, int n) {$/;"	f	file:
finish	src/ui/indicatoritem.h	/^    QPointF start, finish, real_finish;$/;"	m	class:IndicatorItem
finish	src/ui/roomscene.cpp	/^void SpeakThread::finish(){$/;"	f	class:SpeakThread
finishArrange	src/ui/roomscene.cpp	/^void RoomScene::finishArrange(){$/;"	f	class:RoomScene
finished	src/breakpad/client/windows/handler/exception_handler.cc	/^  bool finished;$/;"	m	struct:google_breakpad::__anon66	file:
finished	src/core/structs.h	/^    bool finished;$/;"	m	struct:PhaseStruct
first_char	include/freetype/freetype/ftwinfnt.h	/^    FT_Byte    first_char;$/;"	m	struct:FT_WinFNT_HeaderRec_
first_general_table	src/server/generalselector.h	/^    QHash<QString, qreal> first_general_table;$/;"	m	class:GeneralSelector
first_glyph	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort           first_glyph;$/;"	m	struct:TT_SBit_RangeRec_
first_point	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort   first_point; \/* offset of first (#0) point  *\/$/;"	m	struct:TT_GlyphZoneRec_
first_row	lua/lib/sqlite3.lua	/^local function first_row(stmt, get_row_func, tab, autoclose)$/;"	f
fix	src/ui/rolecombobox.cpp	/^void RoleComboBox::fix(const QString &role){$/;"	f	class:RoleComboBox
fix_parameter_names	lua/lib/sqlite3.lua	/^  local function fix_parameter_names(unfixed_parameters)$/;"	f
fixed_distance	src/core/player.h	/^    QHash<const Player *, int> fixed_distance;$/;"	m	class:Player
fixjump	src/lua/lcode.c	/^static void fixjump (FuncState *fs, int pc, int dest) {$/;"	f	file:
flagAvailable	src/jsoncpp/include/json/value.h	/^         flagAvailable = 0,$/;"	e	enum:Json::ValueInternalLink::InternalFlags
flagUsed	src/jsoncpp/include/json/value.h	/^         flagUsed = 1$/;"	e	enum:Json::ValueInternalLink::InternalFlags
flag_pad	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	/^  u_int32_t	flag_pad;$/;"	m	struct:__anon64
flags	include/freetype/freetype/freetype.h	/^    FT_UInt         flags;$/;"	m	struct:FT_Open_Args_
flags	include/freetype/freetype/ftcache.h	/^    FT_Int32    flags;$/;"	m	struct:FTC_ImageTypeRec_
flags	include/freetype/freetype/ftimage.h	/^    int                     flags;$/;"	m	struct:FT_Raster_Params_
flags	include/freetype/freetype/ftimage.h	/^    int         flags;           \/* outline masks                      *\/$/;"	m	struct:FT_Outline_
flags	include/freetype/freetype/ftwinfnt.h	/^    FT_ULong   flags;$/;"	m	struct:FT_WinFNT_HeaderRec_
flags	include/freetype/freetype/internal/ftgloadr.h	/^    FT_UShort  flags;$/;"	m	struct:FT_SubGlyphRec_
flags	include/freetype/freetype/internal/ftobjs.h	/^    FT_UInt         flags;$/;"	m	struct:FT_Slot_InternalRec_
flags	include/freetype/freetype/internal/tttypes.h	/^    FT_Char                 flags;$/;"	m	struct:TT_SBit_StrikeRec_
flags	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int64_t flags;$/;"	m	struct:__anon19
flags	src/breakpad/processor/disassembler_x86.h	/^    u_int16_t flags() { return flags_; }$/;"	f	class:google_breakpad::DisassemblerX86
flags	src/core/card.h	/^    mutable QStringList flags;$/;"	m	class:Card
flags	src/core/player.h	/^    QSet<QString> flags;$/;"	m	class:Player
flags	src/lua/lobject.h	/^  lu_byte flags;  \/* 1<<p means tagmethod(p) is not present *\/ $/;"	m	struct:Table
flags1	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t flags1;$/;"	m	struct:__anon42
flags_	src/breakpad/processor/disassembler_x86.h	/^    u_int16_t flags_;$/;"	m	class:google_breakpad::DisassemblerX86
flatten	src/core/structs.cpp	/^QList<CardMoveStruct> CardsMoveStruct::flatten()$/;"	f	class:CardsMoveStruct
flex_state	include/freetype/freetype/internal/psaux.h	/^    FT_Int               flex_state;$/;"	m	struct:T1_DecoderRec_
flex_vectors	include/freetype/freetype/internal/psaux.h	/^    FT_Vector            flex_vectors[7];$/;"	m	struct:T1_DecoderRec_
flib	src/lua/liolib.c	/^static const luaL_Reg flib[] = {$/;"	v	file:
float_registers	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int128_t float_registers[8];$/;"	m	struct:__anon55
float_save	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	/^  MDFloatingSaveAreaARM float_save;$/;"	m	struct:__anon62
float_save	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  MDFloatingSaveAreaPPC float_save;$/;"	m	struct:__anon11
float_save	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	/^  MDFloatingSaveAreaPPC float_save;$/;"	m	struct:__anon8
float_save	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	/^  MDFloatingSaveAreaSPARC float_save;$/;"	m	struct:__anon64
float_save	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  MDFloatingSaveAreaX86 float_save;$/;"	m	struct:__anon7
flood_skill.getTurnUseCard	lua/ai/fancheng-ai.lua	/^flood_skill.getTurnUseCard=function(self)$/;"	f
flt_save	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^    MDXmmSaveArea32AMD64 flt_save;$/;"	m	union:__anon56::__anon57
fnames	src/lua/liolib.c	/^static const char *const fnames[] = {"input", "output"};$/;"	v	file:
focusInEvent	src/dialog/cardeditor.cpp	/^    virtual void focusInEvent(QFocusEvent *event){$/;"	f	class:SkillTitle
focusOutEvent	src/dialog/cardeditor.cpp	/^    virtual void focusOutEvent(QFocusEvent *event){$/;"	f	class:SkillTitle
focused	src/ui/roomscene.h	/^    Photo *focused;$/;"	m	class:RoomScene
font	src/dialog/cardeditor.cpp	/^    QFont font() const{$/;"	f	class:SkillTitle
font	src/dialog/cardeditor.h	/^    QFont font;$/;"	m	class:BlackEdgeTextItem
font	src/ui/button.h	/^    QFont font;$/;"	m	class:Button
font_bbox	include/freetype/freetype/internal/t1types.h	/^    FT_BBox          font_bbox;$/;"	m	struct:T1_FontRec_
font_bbox	include/freetype/freetype/t1tables.h	/^    FT_BBox         font_bbox;$/;"	m	struct:CID_FaceInfoRec_
font_dicts	include/freetype/freetype/t1tables.h	/^    CID_FaceDict    font_dicts;$/;"	m	struct:CID_FaceInfoRec_
font_extra	include/freetype/freetype/internal/t1types.h	/^    PS_FontExtraRec  font_extra;        \/* font info extra fields *\/$/;"	m	struct:T1_FontRec_
font_extra	include/freetype/freetype/internal/t1types.h	/^    PS_FontExtraRec  font_extra;$/;"	m	struct:CID_FaceRec_
font_id	include/freetype/freetype/internal/t1types.h	/^    FT_Long          font_id;$/;"	m	struct:T1_FontRec_
font_info	include/freetype/freetype/internal/t1types.h	/^    PS_FontInfoRec   font_info;         \/* font info dictionary   *\/$/;"	m	struct:T1_FontRec_
font_info	include/freetype/freetype/t1tables.h	/^    PS_FontInfoRec  font_info;$/;"	m	struct:CID_FaceInfoRec_
font_infos	include/freetype/freetype/t1tables.h	/^    PS_FontInfo      font_infos[T1_MAX_MM_DESIGNS + 1];$/;"	m	struct:PS_BlendRec_
font_matrix	include/freetype/freetype/internal/psaux.h	/^    FT_Matrix            font_matrix;$/;"	m	struct:T1_DecoderRec_
font_matrix	include/freetype/freetype/internal/t1types.h	/^    FT_Matrix        font_matrix;$/;"	m	struct:T1_FontRec_
font_matrix	include/freetype/freetype/t1tables.h	/^    FT_Matrix      font_matrix;$/;"	m	struct:CID_FaceDictRec_
font_name	include/freetype/freetype/internal/t1types.h	/^    FT_String*       font_name;         \/* top-level dictionary   *\/$/;"	m	struct:T1_FontRec_
font_offset	include/freetype/freetype/internal/psaux.h	/^    FT_Vector            font_offset;$/;"	m	struct:T1_DecoderRec_
font_offset	include/freetype/freetype/internal/t1types.h	/^    FT_Vector        font_offset;$/;"	m	struct:T1_FontRec_
font_offset	include/freetype/freetype/t1tables.h	/^    FT_Vector      font_offset;$/;"	m	struct:CID_FaceDictRec_
font_program	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*              font_program;$/;"	m	struct:TT_FaceRec_
font_program_size	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              font_program_size;$/;"	m	struct:TT_FaceRec_
font_type	include/freetype/freetype/internal/t1types.h	/^    FT_Byte          font_type;$/;"	m	struct:T1_FontRec_
font_type	include/freetype/freetype/t1tables.h	/^    FT_Byte        font_type;$/;"	m	struct:CID_FaceDictRec_
forbid_same_ip_checkbox	src/server/server.h	/^    QCheckBox *forbid_same_ip_checkbox;$/;"	m	class:ServerDialog
forbody	src/lua/lparser.c	/^static void forbody (LexState *ls, int base, int line, int nvars, int isnum) {$/;"	f	file:
forceToDiscard	src/server/serverplayer.cpp	/^QList<int> ServerPlayer::forceToDiscard(int discard_num, bool include_equip){$/;"	f	class:ServerPlayer
force_bold	include/freetype/freetype/t1tables.h	/^    FT_Bool    force_bold;$/;"	m	struct:PS_PrivateRec_
forcebold_threshold	include/freetype/freetype/t1tables.h	/^    FT_Fixed       forcebold_threshold;$/;"	m	struct:CID_FaceDictRec_
foreach	src/lua/ltablib.c	/^static int foreach (lua_State *L) {$/;"	f	file:
foreachi	src/lua/ltablib.c	/^static int foreachi (lua_State *L) {$/;"	f	file:
forget_glyph_frame	include/freetype/freetype/internal/tttypes.h	/^    TT_Loader_EndGlyphFunc    forget_glyph_frame;$/;"	m	struct:TT_FaceRec_
forlist	src/lua/lparser.c	/^static void forlist (LexState *ls, TString *indexname) {$/;"	f	file:
format	include/fmod/fmod.h	/^    FMOD_SOUND_FORMAT              format;             \/* [w] Optional. Specify 0 or FMOD_SOUND_FORMAT_NONE to ignore. Format of the sound mandatory if FMOD_OPENUSER or FMOD_OPENRAW is used.  Other formats use the format determined by the file format.   *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
format	include/fmod/fmod_codec.h	/^    FMOD_SOUND_FORMAT  format;        \/* [in] Format for (decompressed) codec output, ie FMOD_SOUND_FORMAT_PCM8, FMOD_SOUND_FORMAT_PCM16.*\/$/;"	m	struct:FMOD_CODEC_WAVEFORMAT
format	include/freetype/freetype/freetype.h	/^    FT_Glyph_Format   format;$/;"	m	struct:FT_GlyphSlotRec_
format	include/freetype/freetype/ftcache.h	/^    FT_Byte   format;$/;"	m	struct:FTC_SBitRec_
format	include/freetype/freetype/ftglyph.h	/^    FT_Glyph_Format        format;$/;"	m	struct:FT_GlyphRec_
format	include/freetype/freetype/internal/services/svttcmap.h	/^    FT_Long   format;$/;"	m	struct:TT_CMapInfo_
format	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort         format;$/;"	m	struct:TT_NameTableRec_
format	lua/lib/mime.lua	/^local function format(chunk)$/;"	f
format_20	include/freetype/freetype/internal/tttypes.h	/^      TT_Post_20Rec  format_20;$/;"	m	union:TT_Post_NamesRec_::__anon103
format_25	include/freetype/freetype/internal/tttypes.h	/^      TT_Post_25Rec  format_25;$/;"	m	union:TT_Post_NamesRec_::__anon103
format_tag	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              format_tag;$/;"	m	struct:TT_FaceRec_
format_tag	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong   format_tag;$/;"	m	struct:SFNT_HeaderRec_
fornum	src/lua/lparser.c	/^static void fornum (LexState *ls, TString *varname, int line) {$/;"	f	file:
forstat	src/lua/lparser.c	/^static void forstat (LexState *ls, int line) {$/;"	f	file:
fp_register_	src/breakpad/processor/stackwalker_arm.h	/^  int fp_register_;$/;"	m	class:google_breakpad::StackwalkerARM
fpregs	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int64_t fpregs[MD_FLOATINGSAVEAREA_PPC_FPR_COUNT];$/;"	m	struct:__anon9
fprs	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	/^  u_int64_t     fprs;$/;"	m	struct:__anon64
fpscr	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	/^  u_int64_t	fpscr;      \/* FPU status register *\/$/;"	m	struct:__anon61
fpscr	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int32_t fpscr;      \/* Status\/control *\/$/;"	m	struct:__anon9
fpscr_pad	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int32_t fpscr_pad;$/;"	m	struct:__anon9
frame	include/fmod/fmod.h	/^    int frame[100];                 \/* [r] The start offset of each track in frames *\/$/;"	m	struct:FMOD_CDTOC
frame	src/dialog/cardeditor.cpp	/^    QGraphicsRectItem *frame;$/;"	m	class:SkillTitle	file:
frame	src/dialog/cardeditor.h	/^    QGraphicsPixmapItem *frame;$/;"	m	class:CardScene
frame_info_	src/breakpad/processor/cfi_frame_info.h	/^  CFIFrameInfo *frame_info_;$/;"	m	class:google_breakpad::CFIFrameInfoParseHandler
frames	src/breakpad/google_breakpad/processor/call_stack.h	/^  const vector<StackFrame*>* frames() const { return &frames_; }$/;"	f	class:google_breakpad::CallStack
frames	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  const vector<StackFrame *> *frames;$/;"	m	class:StackwalkerAMD64Fixture	file:
frames	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  const vector<StackFrame *> *frames;$/;"	m	class:StackwalkerARMFixture	file:
frames	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  const vector<StackFrame *> *frames;$/;"	m	class:StackwalkerX86Fixture	file:
frames	src/ui/pixmapanimation.h	/^    QList<QPixmap> frames;$/;"	m	class:PixmapAnimation
frames	src/ui/sprite.h	/^        QMap<int,qreal> frames;$/;"	m	struct:Sprite::AnimationLine
frames_	src/breakpad/google_breakpad/processor/call_stack.h	/^  vector<StackFrame*> frames_;$/;"	m	class:google_breakpad::CallStack
frealloc	src/lua/lstate.h	/^  lua_Alloc frealloc;  \/* function to reallocate memory *\/$/;"	m	struct:global_State
free	include/freetype/freetype/ftsystem.h	/^    FT_Free_Func     free;$/;"	m	struct:FT_MemoryRec_
freeChoose	src/dialog/choosegeneraldialog.cpp	/^void ChooseGeneralDialog::freeChoose(){$/;"	f	class:ChooseGeneralDialog
freeChoose	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::freeChoose(bool toggled){$/;"	f	class:CustomAssignDialog
freeChoose2	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::freeChoose2(bool toggled){$/;"	f	class:CustomAssignDialog
freeHead_	src/jsoncpp/src/json_batchallocator.h	/^   AllocatedType *freeHead_;$/;"	m	class:Json::BatchAllocator
free_	src/breakpad/processor/scoped_ptr.h	/^  static FreeProc const free_;$/;"	m	class:google_breakpad::scoped_ptr_malloc
free_	src/breakpad/processor/scoped_ptr.h	/^FP const scoped_ptr_malloc<T,FP>::free_ = FP();$/;"	m	class:google_breakpad::scoped_ptr_malloc
free_assign_checkbox	src/server/server.h	/^    QCheckBox *free_assign_checkbox;$/;"	m	class:ServerDialog
free_assign_self_checkbox	src/server/server.h	/^    QCheckBox *free_assign_self_checkbox;$/;"	m	class:ServerDialog
free_charmap_stub	include/freetype/freetype/internal/sfnt.h	/^    TT_CharMap_Free_Func         free_charmap_stub;$/;"	m	struct:SFNT_Interface_
free_choose_checkbox	src/server/server.h	/^    QCheckBox *free_choose_checkbox;$/;"	m	class:ServerDialog
free_choose_general	src/dialog/customassigndialog.h	/^    QMap<QString, bool> free_choose_general, free_choose_general2;$/;"	m	class:CustomAssignDialog
free_choose_general2	src/dialog/customassigndialog.h	/^    QMap<QString, bool> free_choose_general, free_choose_general2;$/;"	m	class:CustomAssignDialog
free_choose_label	src/client/clientstruct.h	/^    QLabel *free_choose_label;$/;"	m	class:ServerInfoWidget
free_eblc	include/freetype/freetype/internal/sfnt.h	/^    TT_Free_Table_Func           free_eblc;$/;"	m	struct:SFNT_Interface_
free_glyph_data	include/freetype/freetype/ftincrem.h	/^    FT_Incremental_FreeGlyphDataFunc    free_glyph_data;$/;"	m	struct:FT_Incremental_FuncsRec_
free_hdmx_stub	include/freetype/freetype/internal/sfnt.h	/^    TT_Free_Table_Func           free_hdmx_stub;$/;"	m	struct:SFNT_Interface_
free_name	include/freetype/freetype/internal/sfnt.h	/^    TT_Free_Table_Func           free_name;$/;"	m	struct:SFNT_Interface_
free_psnames	include/freetype/freetype/internal/sfnt.h	/^    TT_Free_Table_Func           free_psnames;$/;"	m	struct:SFNT_Interface_
free_sbits_stub	include/freetype/freetype/internal/sfnt.h	/^    TT_Free_Table_Func           free_sbits_stub;$/;"	m	struct:SFNT_Interface_
freeexp	src/lua/lcode.c	/^static void freeexp (FuncState *fs, expdesc *e) {$/;"	f	file:
freeobj	src/lua/lgc.c	/^static void freeobj (lua_State *L, GCObject *o) {$/;"	f	file:
freereg	src/lua/lcode.c	/^static void freereg (FuncState *fs, int reg) {$/;"	f	file:
freereg	src/lua/lparser.h	/^  int freereg;  \/* first free register *\/$/;"	m	struct:FuncState
freestack	src/lua/lstate.c	/^static void freestack (lua_State *L, lua_State *L1) {$/;"	f	file:
freeze	src/ui/roomscene.cpp	/^void RoomScene::freeze(){$/;"	f	class:RoomScene
freezeCards	src/ui/cardcontainer.cpp	/^void CardContainer::freezeCards(bool is_frozen){$/;"	f	class:CardContainer
frequency	include/fmod/fmod_codec.h	/^    int                frequency;     \/* [in] Default frequency in hz of the codec, ie 44100. *\/$/;"	m	struct:FMOD_CODEC_WAVEFORMAT
frequency	src/core/skill.h	/^    Frequency frequency;$/;"	m	class:Skill
from	src/core/skill.h	/^    QString from, to;$/;"	m	class:SPConvertSkill
from	src/core/structs.h	/^    Player *from, *to;$/;"	m	struct:CardMoveStruct
from	src/core/structs.h	/^    Player *from, *to;$/;"	m	struct:CardsMoveOneTimeStruct
from	src/core/structs.h	/^    Player *from, *to;$/;"	m	struct:CardsMoveStruct
from	src/core/structs.h	/^    Player::Phase from;$/;"	m	struct:PhaseChangeStruct
from	src/core/structs.h	/^    ServerPlayer *from;$/;"	m	struct:CardEffectStruct
from	src/core/structs.h	/^    ServerPlayer *from;$/;"	m	struct:CardUseStruct
from	src/core/structs.h	/^    ServerPlayer *from;$/;"	m	struct:DamageStruct
from	src/core/structs.h	/^    ServerPlayer *from;$/;"	m	struct:PindianStruct
from	src/core/structs.h	/^    ServerPlayer *from;$/;"	m	struct:SlashEffectStruct
from	src/dialog/distanceviewdialog.cpp	/^    QComboBox *from, *to;$/;"	m	struct:DistanceViewDialogUI	file:
from	src/server/roomthread.h	/^    ServerPlayer *from;$/;"	m	struct:LogMessage
from_card	src/core/structs.h	/^    const Card *from_card;$/;"	m	struct:PindianStruct
from_pile_name	src/core/structs.h	/^    QString from_pile_name, to_pile_name;$/;"	m	struct:CardMoveStruct
from_pile_name	src/core/structs.h	/^    QString from_pile_name, to_pile_name;$/;"	m	struct:CardsMoveStruct
from_place	src/core/structs.h	/^    Player::Place from_place, to_place;$/;"	m	struct:CardMoveStruct
from_place	src/core/structs.h	/^    Player::Place from_place, to_place;$/;"	m	struct:CardsMoveStruct
from_places	src/core/structs.h	/^    QList<Player::Place> from_places;$/;"	m	struct:CardsMoveOneTimeStruct
from_player_name	src/core/structs.h	/^    QString from_player_name, to_player_name;$/;"	m	struct:CardMoveStruct
from_player_name	src/core/structs.h	/^    QString from_player_name, to_player_name;$/;"	m	struct:CardsMoveStruct
from_seat	src/dialog/distanceviewdialog.cpp	/^    QLineEdit *from_seat, *to_seat;$/;"	m	struct:DistanceViewDialogUI	file:
fromstate	src/lua/lstate.c	28;"	d	file:
frozen	src/ui/carditem.h	/^    bool auto_back, frozen;$/;"	m	class:CardItem
fs	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int16_t  fs;$/;"	m	struct:__anon56
fs	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             fs;$/;"	m	struct:__anon7
fs	src/lua/llex.h	/^  struct FuncState *fs;  \/* `FuncState' is private to the parser *\/$/;"	m	struct:LexState	typeref:struct:LexState::FuncState
fsSelection	include/freetype/freetype/tttables.h	/^    FT_UShort  fsSelection;$/;"	m	struct:TT_OS2_
fsType	include/freetype/freetype/tttables.h	/^    FT_Short   fsType;$/;"	m	struct:TT_OS2_
fs_type	include/freetype/freetype/internal/t1types.h	/^    FT_UShort  fs_type;$/;"	m	struct:PS_FontExtraRec_
fsr	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	/^  u_int64_t	fsr;        \/* FPU status register *\/$/;"	m	struct:__anon63
ft_atol	include/freetype/freetype/config/ftstdlib.h	144;"	d
ft_encoding_adobe_custom	include/freetype/freetype/freetype.h	713;"	d
ft_encoding_adobe_expert	include/freetype/freetype/freetype.h	712;"	d
ft_encoding_adobe_standard	include/freetype/freetype/freetype.h	711;"	d
ft_encoding_apple_roman	include/freetype/freetype/freetype.h	714;"	d
ft_encoding_big5	include/freetype/freetype/freetype.h	707;"	d
ft_encoding_gb2312	include/freetype/freetype/freetype.h	706;"	d
ft_encoding_johab	include/freetype/freetype/freetype.h	709;"	d
ft_encoding_latin_1	include/freetype/freetype/freetype.h	703;"	d
ft_encoding_latin_2	include/freetype/freetype/freetype.h	704;"	d
ft_encoding_none	include/freetype/freetype/freetype.h	700;"	d
ft_encoding_sjis	include/freetype/freetype/freetype.h	705;"	d
ft_encoding_symbol	include/freetype/freetype/freetype.h	702;"	d
ft_encoding_unicode	include/freetype/freetype/freetype.h	701;"	d
ft_encoding_wansung	include/freetype/freetype/freetype.h	708;"	d
ft_fclose	include/freetype/freetype/config/ftstdlib.h	104;"	d
ft_fopen	include/freetype/freetype/config/ftstdlib.h	105;"	d
ft_frame_byte	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_byte      = FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTE,  0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_bytes	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_bytes     = FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTES, 0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_end	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_end       = 0,$/;"	e	enum:FT_Frame_Op_
ft_frame_long_be	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_long_be   = FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 0, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_long_le	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_long_le   = FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 1, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_off3_be	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_off3_be   = FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 0, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_off3_le	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_off3_le   = FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 1, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_schar	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_schar     = FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTE,  0, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_short_be	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_short_be  = FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 0, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_short_le	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_short_le  = FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 1, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_skip	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_skip      = FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTES, 0, 1 )$/;"	e	enum:FT_Frame_Op_
ft_frame_start	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_start     = FT_MAKE_FRAME_OP( FT_FRAME_OP_START, 0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_ulong_be	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_ulong_be  = FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_ulong_le	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_ulong_le  = FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 1, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_uoff3_be	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_uoff3_be  = FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_uoff3_le	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_uoff3_le  = FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 1, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_ushort_be	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_ushort_be = FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_ushort_le	include/freetype/freetype/internal/ftstream.h	/^    ft_frame_ushort_le = FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 1, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_fread	include/freetype/freetype/config/ftstdlib.h	106;"	d
ft_fseek	include/freetype/freetype/config/ftstdlib.h	107;"	d
ft_ftell	include/freetype/freetype/config/ftstdlib.h	108;"	d
ft_glyph_bbox_gridfit	include/freetype/freetype/ftglyph.h	346;"	d
ft_glyph_bbox_pixels	include/freetype/freetype/ftglyph.h	348;"	d
ft_glyph_bbox_subpixels	include/freetype/freetype/ftglyph.h	345;"	d
ft_glyph_bbox_truncate	include/freetype/freetype/ftglyph.h	347;"	d
ft_glyph_bbox_unscaled	include/freetype/freetype/ftglyph.h	344;"	d
ft_glyph_format_bitmap	include/freetype/freetype/ftimage.h	808;"	d
ft_glyph_format_composite	include/freetype/freetype/ftimage.h	807;"	d
ft_glyph_format_none	include/freetype/freetype/ftimage.h	806;"	d
ft_glyph_format_outline	include/freetype/freetype/ftimage.h	809;"	d
ft_glyph_format_plotter	include/freetype/freetype/ftimage.h	810;"	d
ft_isalnum	include/freetype/freetype/internal/ftobjs.h	109;"	d
ft_isalpha	include/freetype/freetype/internal/ftobjs.h	108;"	d
ft_isdigit	include/freetype/freetype/internal/ftobjs.h	98;"	d
ft_islower	include/freetype/freetype/internal/ftobjs.h	106;"	d
ft_isupper	include/freetype/freetype/internal/ftobjs.h	105;"	d
ft_isxdigit	include/freetype/freetype/internal/ftobjs.h	100;"	d
ft_jmp_buf	include/freetype/freetype/config/ftstdlib.h	157;"	d
ft_kerning_default	include/freetype/freetype/freetype.h	2815;"	d
ft_kerning_unfitted	include/freetype/freetype/freetype.h	2827;"	d
ft_kerning_unscaled	include/freetype/freetype/freetype.h	2839;"	d
ft_labs	include/freetype/freetype/config/ftstdlib.h	145;"	d
ft_longjmp	include/freetype/freetype/config/ftstdlib.h	161;"	d
ft_memchr	include/freetype/freetype/config/ftstdlib.h	79;"	d
ft_memcmp	include/freetype/freetype/config/ftstdlib.h	80;"	d
ft_memcpy	include/freetype/freetype/config/ftstdlib.h	81;"	d
ft_memmove	include/freetype/freetype/config/ftstdlib.h	82;"	d
ft_memset	include/freetype/freetype/config/ftstdlib.h	83;"	d
ft_module_driver_has_hinter	include/freetype/freetype/ftmodapi.h	76;"	d
ft_module_driver_no_outlines	include/freetype/freetype/ftmodapi.h	75;"	d
ft_module_driver_scalable	include/freetype/freetype/ftmodapi.h	74;"	d
ft_module_font_driver	include/freetype/freetype/ftmodapi.h	69;"	d
ft_module_hinter	include/freetype/freetype/ftmodapi.h	71;"	d
ft_module_renderer	include/freetype/freetype/ftmodapi.h	70;"	d
ft_module_styler	include/freetype/freetype/ftmodapi.h	72;"	d
ft_open_driver	include/freetype/freetype/freetype.h	1745;"	d
ft_open_memory	include/freetype/freetype/freetype.h	1742;"	d
ft_open_params	include/freetype/freetype/freetype.h	1746;"	d
ft_open_pathname	include/freetype/freetype/freetype.h	1744;"	d
ft_open_stream	include/freetype/freetype/freetype.h	1743;"	d
ft_outline_even_odd_fill	include/freetype/freetype/ftimage.h	506;"	d
ft_outline_high_precision	include/freetype/freetype/ftimage.h	509;"	d
ft_outline_ignore_dropouts	include/freetype/freetype/ftimage.h	508;"	d
ft_outline_none	include/freetype/freetype/ftimage.h	504;"	d
ft_outline_owner	include/freetype/freetype/ftimage.h	505;"	d
ft_outline_reverse_fill	include/freetype/freetype/ftimage.h	507;"	d
ft_outline_single_pass	include/freetype/freetype/ftimage.h	510;"	d
ft_pixel_mode_grays	include/freetype/freetype/ftimage.h	205;"	d
ft_pixel_mode_mono	include/freetype/freetype/ftimage.h	204;"	d
ft_pixel_mode_none	include/freetype/freetype/ftimage.h	203;"	d
ft_pixel_mode_pal2	include/freetype/freetype/ftimage.h	206;"	d
ft_pixel_mode_pal4	include/freetype/freetype/ftimage.h	207;"	d
ft_ptrdiff_t	include/freetype/freetype/config/ftstdlib.h	38;"	d
ft_qsort	include/freetype/freetype/config/ftstdlib.h	121;"	d
ft_raccess_guess_func	include/freetype/freetype/internal/ftrfork.h	/^  (*ft_raccess_guess_func)( FT_Library  library,$/;"	t
ft_raccess_guess_rec	include/freetype/freetype/internal/ftrfork.h	/^  } ft_raccess_guess_rec;$/;"	t	typeref:struct:ft_raccess_guess_rec_
ft_raccess_guess_rec_	include/freetype/freetype/internal/ftrfork.h	/^  typedef struct ft_raccess_guess_rec_ {$/;"	s
ft_raster_flag_aa	include/freetype/freetype/ftimage.h	1049;"	d
ft_raster_flag_clip	include/freetype/freetype/ftimage.h	1051;"	d
ft_raster_flag_default	include/freetype/freetype/ftimage.h	1048;"	d
ft_raster_flag_direct	include/freetype/freetype/ftimage.h	1050;"	d
ft_render_mode_mono	include/freetype/freetype/freetype.h	2748;"	d
ft_render_mode_normal	include/freetype/freetype/freetype.h	2747;"	d
ft_scalloc	include/freetype/freetype/config/ftstdlib.h	131;"	d
ft_setjmp	include/freetype/freetype/config/ftstdlib.h	162;"	d
ft_sfnt_head	include/freetype/freetype/tttables.h	/^    ft_sfnt_head = 0,    \/* TT_Header     *\/$/;"	e	enum:FT_Sfnt_Tag_
ft_sfnt_hhea	include/freetype/freetype/tttables.h	/^    ft_sfnt_hhea = 3,    \/* TT_HoriHeader *\/$/;"	e	enum:FT_Sfnt_Tag_
ft_sfnt_maxp	include/freetype/freetype/tttables.h	/^    ft_sfnt_maxp = 1,    \/* TT_MaxProfile *\/$/;"	e	enum:FT_Sfnt_Tag_
ft_sfnt_os2	include/freetype/freetype/tttables.h	/^    ft_sfnt_os2  = 2,    \/* TT_OS2        *\/$/;"	e	enum:FT_Sfnt_Tag_
ft_sfnt_pclt	include/freetype/freetype/tttables.h	/^    ft_sfnt_pclt = 6,    \/* TT_PCLT       *\/$/;"	e	enum:FT_Sfnt_Tag_
ft_sfnt_post	include/freetype/freetype/tttables.h	/^    ft_sfnt_post = 5,    \/* TT_Postscript *\/$/;"	e	enum:FT_Sfnt_Tag_
ft_sfnt_vhea	include/freetype/freetype/tttables.h	/^    ft_sfnt_vhea = 4,    \/* TT_VertHeader *\/$/;"	e	enum:FT_Sfnt_Tag_
ft_sfree	include/freetype/freetype/config/ftstdlib.h	132;"	d
ft_smalloc	include/freetype/freetype/config/ftstdlib.h	133;"	d
ft_sprintf	include/freetype/freetype/config/ftstdlib.h	109;"	d
ft_srealloc	include/freetype/freetype/config/ftstdlib.h	134;"	d
ft_strcat	include/freetype/freetype/config/ftstdlib.h	84;"	d
ft_strcmp	include/freetype/freetype/config/ftstdlib.h	85;"	d
ft_strcpy	include/freetype/freetype/config/ftstdlib.h	86;"	d
ft_strlen	include/freetype/freetype/config/ftstdlib.h	87;"	d
ft_strncmp	include/freetype/freetype/config/ftstdlib.h	88;"	d
ft_strncpy	include/freetype/freetype/config/ftstdlib.h	89;"	d
ft_strrchr	include/freetype/freetype/config/ftstdlib.h	90;"	d
ft_strstr	include/freetype/freetype/config/ftstdlib.h	91;"	d
full_map	src/scenario/couple-scenario.h	/^    QMap<QString, QString> full_map;$/;"	m	class:CoupleScenario
full_name	include/freetype/freetype/t1tables.h	/^    FT_String*  full_name;$/;"	m	struct:PS_FontInfoRec_
func	include/freetype/freetype/internal/ftrfork.h	/^    ft_raccess_guess_func  func;$/;"	m	struct:ft_raccess_guess_rec_
func	src/lua/lapi.c	/^  StkId func;$/;"	m	struct:CallS	file:
func	src/lua/lapi.c	/^  lua_CFunction func;$/;"	m	struct:CCallS	file:
func	src/lua/lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg
func	src/lua/lstate.h	/^  StkId func;  \/* function index in the stack *\/$/;"	m	struct:CallInfo
funcargs	src/lua/lparser.c	/^static void funcargs (LexState *ls, expdesc *f) {$/;"	f	file:
funcinfo	src/lua/ldebug.c	/^static void funcinfo (lua_Debug *ar, Closure *cl) {$/;"	f	file:
funcname	src/lua/lparser.c	/^static int funcname (LexState *ls, expdesc *v) {$/;"	f	file:
funcs	include/freetype/freetype/ftincrem.h	/^    const FT_Incremental_FuncsRec*  funcs;$/;"	m	struct:FT_Incremental_InterfaceRec_
funcs	include/freetype/freetype/internal/psaux.h	/^    PS_Parser_FuncsRec  funcs;$/;"	m	struct:PS_ParserRec_
funcs	include/freetype/freetype/internal/psaux.h	/^    PS_Table_FuncsRec  funcs;$/;"	m	struct:PS_TableRec_
funcs	include/freetype/freetype/internal/psaux.h	/^    T1_Builder_FuncsRec  funcs;$/;"	m	struct:T1_BuilderRec_
funcs	include/freetype/freetype/internal/psaux.h	/^    T1_Decoder_FuncsRec  funcs;$/;"	m	struct:T1_DecoderRec_
funcstat	src/lua/lparser.c	/^static void funcstat (LexState *ls, int line) {$/;"	f	file:
function	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int16_t function[128];    \/* ...within this function... *\/$/;"	m	struct:__anon51
function	src/breakpad/google_breakpad/processor/minidump.h	/^  string function() const {$/;"	f	class:google_breakpad::MinidumpAssertion
function(p) parsed.password 	lua/lib/socket/url.lua	/^        function(p) parsed.password = p; return "" end)$/;"	f
function(p) parsed.port 	lua/lib/socket/url.lua	/^        function(p) parsed.port = p; return "" end)$/;"	f
function(s) parsed.scheme 	lua/lib/socket/url.lua	/^        function(s) parsed.scheme = s; return "" end)$/;"	f
function(u) parsed.userinfo 	lua/lib/socket/url.lua	/^        function(u) parsed.userinfo = u; return "" end)$/;"	f
function_	src/breakpad/google_breakpad/processor/minidump.h	/^  string function_;$/;"	m	class:google_breakpad::MinidumpAssertion
function_base	src/breakpad/google_breakpad/processor/stack_frame.h	/^  u_int64_t function_base;$/;"	m	struct:google_breakpad::StackFrame
function_name	src/breakpad/google_breakpad/processor/stack_frame.h	/^  string function_name;$/;"	m	struct:google_breakpad::StackFrame
functions_	src/breakpad/processor/basic_source_line_resolver_types.h	/^  RangeMap< MemAddr, linked_ptr<Function> > functions_;$/;"	m	class:google_breakpad::BasicSourceLineResolver::Module
functions_	src/breakpad/processor/fast_source_line_resolver_types.h	/^  StaticRangeMap<MemAddr, Function> functions_;$/;"	m	class:google_breakpad::FastSourceLineResolver::Module
functions_serializer_	src/breakpad/processor/module_serializer.h	/^  RangeMapSerializer<MemAddr, linked_ptr<Function> > functions_serializer_;$/;"	m	class:google_breakpad::ModuleSerializer
g	src/lua/lstate.c	/^  global_State g;$/;"	m	struct:LG	file:
g_iofile	src/lua/liolib.c	/^static int g_iofile (lua_State *L, int f, const char *mode) {$/;"	f	file:
g_r	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	/^  u_int64_t     g_r[MD_CONTEXT_SPARC_GPR_COUNT];$/;"	m	struct:__anon64
g_read	src/lua/liolib.c	/^static int g_read (lua_State *L, FILE *f, int first) {$/;"	f	file:
g_write	src/lua/liolib.c	/^static int g_write (lua_State *L, FILE *f, int arg) {$/;"	f	file:
gainAnExtraTurn	src/server/serverplayer.cpp	/^void ServerPlayer::gainAnExtraTurn(ServerPlayer *clearflag){$/;"	f	class:ServerPlayer
gainMark	src/server/serverplayer.cpp	/^void ServerPlayer::gainMark(const QString &mark, int n){$/;"	f	class:ServerPlayer
gameOver	src/client/client.cpp	/^void Client::gameOver(const Json::Value &arg){$/;"	f	class:Client
gameOver	src/server/room.cpp	/^void Room::gameOver(const QString &winner){$/;"	f	class:Room
gameOver	src/server/server.cpp	/^void Server::gameOver(){$/;"	f	class:Server
game_finished	src/server/room.h	/^    bool game_finished;$/;"	m	class:Room
game_mode_label	src/client/clientstruct.h	/^    QLabel *game_mode_label;$/;"	m	class:ServerInfoWidget
game_started	src/server/room.h	/^    bool game_started;$/;"	m	class:Room
game_started	src/ui/roomscene.h	/^    bool game_started;$/;"	m	class:RoomScene
gamesOver	src/server/server.cpp	/^void Server::gamesOver(){$/;"	f	class:Server
ganlu_skill.getTurnUseCard	lua/ai/yjcm-ai.lua	/^ganlu_skill.getTurnUseCard=function(self)$/;"	f
ganran_skill.getTurnUseCard	lua/ai/fancheng-ai.lua	/^ganran_skill.getTurnUseCard=function(self)$/;"	f
ganran_skill.getTurnUseCard	lua/ai/zombie_mode-ai.lua	/^	function ganran_skill.getTurnUseCard(self)$/;"	f
gasp	include/freetype/freetype/internal/tttypes.h	/^    TT_GaspRec            gasp;                 \/* the `gasp' table *\/$/;"	m	struct:TT_FaceRec_
gaspFlag	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  gaspFlag;$/;"	m	struct:TT_GaspRangeRec_
gaspRanges	include/freetype/freetype/internal/tttypes.h	/^    TT_GaspRange  gaspRanges;$/;"	m	struct:TT_Gasp_
gc	src/lua/lobject.h	/^  GCObject *gc;$/;"	m	union:__anon90
gcdept	src/lua/lstate.h	/^  lu_mem gcdept;  \/* how much GC is `behind schedule' *\/$/;"	m	struct:global_State
gch	src/lua/lstate.h	/^  GCheader gch;$/;"	m	union:GCObject
gclist	src/lua/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Proto
gclist	src/lua/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Table
gclist	src/lua/lstate.h	/^  GCObject *gclist;$/;"	m	struct:lua_State
gco2cl	src/lua/lstate.h	153;"	d
gco2h	src/lua/lstate.h	154;"	d
gco2p	src/lua/lstate.h	155;"	d
gco2th	src/lua/lstate.h	159;"	d
gco2ts	src/lua/lstate.h	150;"	d
gco2u	src/lua/lstate.h	152;"	d
gco2uv	src/lua/lstate.h	156;"	d
gcpause	src/lua/lstate.h	/^  int gcpause;  \/* size of pause between successive GCs *\/$/;"	m	struct:global_State
gcstate	src/lua/lstate.h	/^  lu_byte gcstate;  \/* state of garbage collector *\/$/;"	m	struct:global_State
gcstepmul	src/lua/lstate.h	/^  int gcstepmul;  \/* GC `granularity' *\/$/;"	m	struct:global_State
gctm	src/lua/loadlib.c	/^static int gctm (lua_State *L) {$/;"	f	file:
gcvalue	src/lua/lobject.h	91;"	d
gd_bytes	include/freetype/freetype/t1tables.h	/^    FT_Int          gd_bytes;$/;"	m	struct:CID_FaceInfoRec_
gender	src/core/general.h	/^    Gender gender;$/;"	m	class:General
general	src/core/player.h	/^    const General *general, *general2;$/;"	m	class:Player
general2	src/core/player.h	/^    const General *general, *general2;$/;"	m	class:Player
general2_mapping	src/dialog/customassigndialog.h	/^    QMap<QString, QString> role_mapping, general_mapping, general2_mapping;$/;"	m	class:CustomAssignDialog
generalSelection	src/scenario/boss-mode-scenario.cpp	/^bool ImpasseScenario::generalSelection() const{$/;"	f	class:ImpasseScenario
generalSelection	src/scenario/scenario.cpp	/^bool Scenario::generalSelection() const{$/;"	f	class:Scenario
generalSelection	src/scenario/zombie-mode-scenario.cpp	/^bool ZombieScenario::generalSelection() const{$/;"	f	class:ZombieScenario
generalShowed	src/server/gamerule.cpp	/^void BasaraMode::generalShowed(ServerPlayer *player, QString general_name) const$/;"	f	class:BasaraMode
general_items	src/ui/roomscene.h	/^    QList<CardItem *> general_items, up_generals, down_generals;$/;"	m	class:RoomScene
general_label	src/dialog/customassigndialog.h	/^    LabelButton *general_label, *general_label2;$/;"	m	class:CustomAssignDialog
general_label2	src/dialog/customassigndialog.h	/^    LabelButton *general_label, *general_label2;$/;"	m	class:CustomAssignDialog
general_mapping	src/dialog/customassigndialog.h	/^    QMap<QString, QString> role_mapping, general_mapping, general2_mapping;$/;"	m	class:CustomAssignDialog
general_name	src/dialog/customassigndialog.h	/^    QString general_name, general_name2;$/;"	m	class:CustomAssignDialog
general_name2	src/dialog/customassigndialog.h	/^    QString general_name, general_name2;$/;"	m	class:CustomAssignDialog
general_names	src/server/roomthread1v1.h	/^    QStringList general_names;$/;"	m	class:RoomThread1v1
general_names	src/server/roomthread3v3.h	/^    QStringList general_names;$/;"	m	class:RoomThread3v3
generals	src/core/engine.h	/^    QHash<QString, const General *> generals, hidden_generals;$/;"	m	class:Engine
generatePlayerName	src/server/room.cpp	/^QString Room::generatePlayerName(){$/;"	f	class:Room
generate_dumps_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  bool generate_dumps_;$/;"	m	class:google_breakpad::CrashGenerationServer
generic	include/freetype/freetype/freetype.h	/^    FT_Generic        generic;   \/* generic pointer for client uses *\/$/;"	m	struct:FT_SizeRec_
generic	include/freetype/freetype/freetype.h	/^    FT_Generic        generic;$/;"	m	struct:FT_FaceRec_
generic	include/freetype/freetype/freetype.h	/^    FT_Generic        generic;$/;"	m	struct:FT_GlyphSlotRec_
generic_reader	src/lua/lbaselib.c	/^static const char *generic_reader (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
geometry	include/fmod/fmod_memoryinfo.h	/^    unsigned int geometry;                       \/* [out] Geometry objects and internals *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
geometryMaxFadeTime	include/fmod/fmod.h	/^    unsigned int    geometryMaxFadeTime;        \/* [r\/w] Optional. Specify 0 to ignore. The maximum time in miliseconds it takes for a channel to fade to the new level when its occlusion changes. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
get	lua/lib/expand.lua	/^  local function get(tab,index)$/;"	f
get	src/breakpad/common/windows/http_upload.cc	/^  HINTERNET get() { return handle_; }$/;"	f	class:google_breakpad::HTTPUpload::AutoInternetHandle
get	src/breakpad/processor/linked_ptr.h	/^  T* get() const { return value_; }$/;"	f	class:google_breakpad::linked_ptr
get	src/breakpad/processor/scoped_ptr.h	/^  T* get() const  {$/;"	f	class:google_breakpad::scoped_ptr
get	src/breakpad/processor/scoped_ptr.h	/^  T* get() const {$/;"	f	class:google_breakpad::scoped_array
get	src/breakpad/processor/scoped_ptr.h	/^  T* get() const {$/;"	f	class:google_breakpad::scoped_ptr_malloc
get	src/jsoncpp/src/json_value.cpp	/^Value::get( ArrayIndex index, $/;"	f	class:Json::Value
get	src/jsoncpp/src/json_value.cpp	/^Value::get( const CppTL::ConstString &key,$/;"	f	class:Json::Value
get	src/jsoncpp/src/json_value.cpp	/^Value::get( const char *key, $/;"	f	class:Json::Value
get	src/jsoncpp/src/json_value.cpp	/^Value::get( const std::string &key,$/;"	f	class:Json::Value
get	src/server/ai.cpp	/^    AI::Relation get(const QString &role1, const QString &role2){$/;"	f	struct:RoleMapping
get	swig/sanguosha_wrap.cxx	/^  lua_CFunction get;$/;"	m	struct:__anon145	file:
get 	lua/lib/socket/ftp.lua	/^get = socket.protect(function(gett)$/;"	f
get1v1ArrangeValue	src/server/generalselector.cpp	/^int GeneralSelector::get1v1ArrangeValue(const QString &name){$/;"	f	class:GeneralSelector
getAI	src/server/serverplayer.cpp	/^AI *ServerPlayer::getAI() const{$/;"	f	class:ServerPlayer
getAcquiredSkills	src/core/player.cpp	/^QSet<QString> Player::getAcquiredSkills() const{$/;"	f	class:Player
getAlivePlayers	src/server/room.cpp	/^QList<ServerPlayer *> Room::getAlivePlayers() const{$/;"	f	class:Room
getAllBanSet	src/core/banpair.cpp	/^const QSet<QString> BanPair::getAllBanSet(){$/;"	f	class:BanPair
getAllPlayers	src/server/room.cpp	/^QList<ServerPlayer *> Room::getAllPlayers() const{$/;"	f	class:Room
getAllSkillButtons	src/ui/qsanbutton.h	/^    inline QList<QSanInvokeSkillButton*> getAllSkillButtons(){return _m_buttons;}$/;"	f	class:QSanInvokeSkillDock
getAnimationFileNames	src/ui/SkinBank.cpp	/^QStringList IQSanComponentSkin::getAnimationFileNames() const$/;"	f	class:IQSanComponentSkin
getAnimationObject	src/ui/roomscene.cpp	/^QGraphicsObject *RoomScene::getAnimationObject(const QString &name) const{$/;"	f	class:RoomScene
getArmor	src/core/player.cpp	/^WrappedCard *Player::getArmor() const{$/;"	f	class:Player
getAttackRange	src/core/player.cpp	/^int Player::getAttackRange() const{$/;"	f	class:Player
getAudioFileNames	src/ui/SkinBank.cpp	/^QStringList IQSanComponentSkin::getAudioFileNames(const QString &key) const$/;"	f	class:IQSanComponentSkin
getAvailableModes	src/core/engine.cpp	/^QMap<QString, QString> Engine::getAvailableModes() const{$/;"	f	class:Engine
getAvatarArea	src/ui/dashboard.h	/^    inline QRectF getAvatarArea()$/;"	f	class:Dashboard
getAvatarGeneral	src/core/player.cpp	/^const General *Player::getAvatarGeneral() const{$/;"	f	class:Player
getBMode	src/lua/lopcodes.h	255;"	d
getBackToId	lua/ai/guanxing-ai.lua	/^local function getBackToId(self, cards)$/;"	f
getBanPackages	src/core/engine.cpp	/^QStringList Engine::getBanPackages() const{$/;"	f	class:Engine
getBanPairSet	src/core/banpair.cpp	/^const QSet<BanPair> BanPair::getBanPairSet(){$/;"	f	class:BanPair
getBeggar	lua/ai/thicket-ai.lua	/^local function getBeggar(self)$/;"	f
getButtonName	src/ui/qsanbutton.h	/^    inline QString getButtonName() { return _m_buttonName; }$/;"	f	class:QSanButton
getButtonPixmap	src/ui/SkinBank.cpp	/^QPixmap QSanRoomSkin::getButtonPixmap(const QString &groupName,$/;"	f	class:QSanRoomSkin
getButtonPixmapPath	src/ui/SkinBank.cpp	/^QString QSanRoomSkin::getButtonPixmapPath(const QString &groupName,$/;"	f	class:QSanRoomSkin
getButtonWidgetWidth	src/ui/dashboard.cpp	/^int Dashboard::getButtonWidgetWidth() const{$/;"	f	class:Dashboard
getButtonWidth	src/ui/qsanbutton.h	/^    inline SkillButtonWidth getButtonWidth() { return _m_enumWidth; }$/;"	f	class:QSanInvokeSkillButton
getCMode	src/lua/lopcodes.h	256;"	d
getCard	src/client/client.h	/^    inline virtual Card* getCard(int cardId) const { return _m_roomState.getCard(cardId); }$/;"	f	class:Client
getCard	src/core/RoomState.cpp	/^Card* RoomState::getCard(int cardId) const$/;"	f	class:RoomState
getCard	src/core/engine.cpp	/^Card *Engine::getCard(int cardId) {$/;"	f	class:Engine
getCard	src/package/yjcm2012-package.cpp	/^    const Card *getCard(ServerPlayer *player) const{$/;"	f	class:Fuhun
getCard	src/server/room.h	/^    inline virtual Card* getCard(int cardId) const { return _m_roomState.getCard(cardId); }$/;"	f	class:Room
getCard	src/ui/carditem.cpp	/^const Card *CardItem::getCard() const{$/;"	f	class:CardItem
getCardAvatarPixmap	src/ui/SkinBank.cpp	/^QPixmap QSanRoomSkin::getCardAvatarPixmap(const QString &generalName) const{$/;"	f	class:QSanRoomSkin
getCardCount	src/core/engine.cpp	/^int Engine::getCardCount() const{$/;"	f	class:Engine
getCardCount	src/core/player.cpp	/^int Player::getCardCount(bool include_equip) const{$/;"	f	class:Player
getCardFramePixmap	src/ui/SkinBank.cpp	/^QPixmap QSanRoomSkin::getCardFramePixmap(const QString &frameType) const$/;"	f	class:QSanRoomSkin
getCardFromPile	src/server/room.cpp	/^int Room::getCardFromPile(const QString &card_pattern){$/;"	f	class:Room
getCardJudgeIconPixmap	src/ui/SkinBank.cpp	/^QPixmap QSanRoomSkin::getCardJudgeIconPixmap(const QString &judgeName) const{$/;"	f	class:QSanRoomSkin
getCardMainPixmap	src/ui/SkinBank.cpp	/^QPixmap QSanRoomSkin::getCardMainPixmap(const QString &cardName) const$/;"	f	class:QSanRoomSkin
getCardMainPixmapPath	src/ui/SkinBank.cpp	/^QString QSanRoomSkin::getCardMainPixmapPath(const QString &cardName) const$/;"	f	class:QSanRoomSkin
getCardNumberPixmap	src/ui/SkinBank.cpp	/^QPixmap QSanRoomSkin::getCardNumberPixmap(int point, bool isBlack) const{$/;"	f	class:QSanRoomSkin
getCardOwner	src/server/room.cpp	/^ServerPlayer *Room::getCardOwner(int card_id) const{$/;"	f	class:Room
getCardPlace	src/server/room.cpp	/^Player::Place Room::getCardPlace(int card_id) const{$/;"	f	class:Room
getCardSuitPixmap	src/ui/SkinBank.cpp	/^QPixmap QSanRoomSkin::getCardSuitPixmap(Card::Suit suit) const{$/;"	f	class:QSanRoomSkin
getCards	lua/ai/smart-ai.lua	/^function getCards(class_name, player, room, flag)$/;"	f
getCards	src/client/client.cpp	/^void Client::getCards(const Json::Value& arg)$/;"	f	class:Client
getCards	src/client/clientplayer.cpp	/^QList<const Card *> ClientPlayer::getCards() const{$/;"	f	class:ClientPlayer
getCards	src/server/serverplayer.cpp	/^QList<const Card *> ServerPlayer::getCards(const QString &flags) const{$/;"	f	class:ServerPlayer
getCards	src/ui/roomscene.cpp	/^void RoomScene::getCards(int moveId, QList<CardsMoveStruct> card_moves)$/;"	f	class:RoomScene
getCardsNum	lua/ai/smart-ai.lua	/^function getCardsNum(class_name, player)$/;"	f
getCenter	include/js.h	/^  void getCenter   ( float *axes ) const { memcpy ( axes, center, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
getChosenGeneral	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::getChosenGeneral(QString name){$/;"	f	class:CustomAssignDialog
getClassName	src/core/WrappedCard.h	/^    inline virtual QString getClassName() const {$/;"	f	class:WrappedCard
getClassName	src/core/card.h	/^    inline virtual QString getClassName() const {return metaObject()->className();}$/;"	f	class:Card
getClientReply	src/server/serverplayer.h	/^    inline Json::Value getClientReply(){return _m_clientResponse;}$/;"	f	class:ServerPlayer
getClientReplyString	src/server/serverplayer.h	/^    inline QString getClientReplyString(){return m_clientResponseString;}$/;"	f	class:ServerPlayer
getColor	src/core/card.cpp	/^Card::Color Card::getColor() const{$/;"	f	class:Card
getCommandTimeout	src/client/clientstruct.cpp	/^time_t ServerInfoStruct::getCommandTimeout(QSanProtocol::CommandType command, QSanProtocol::ProcessInstanceType instance)$/;"	f	class:ServerInfoStruct
getCommandType	src/core/protocol.h	/^        inline virtual CommandType getCommandType() const { return m_command; }$/;"	f	class:QSanProtocol::QSanGeneralPacket
getComment	src/jsoncpp/src/json_value.cpp	/^Value::getComment( CommentPlacement placement ) const$/;"	f	class:Json::Value
getCommonEffectName	src/core/WrappedCard.h	/^    inline virtual QString getCommonEffectName() const { $/;"	f	class:WrappedCard
getCommonEffectName	src/core/card.cpp	/^QString Card::getCommonEffectName() const{$/;"	f	class:Card
getCommonEffectName	src/package/joypackage.cpp	/^QString Monkey::getCommonEffectName() const{$/;"	f	class:Monkey
getCommonEffectName	src/package/standard.cpp	/^QString Armor::getCommonEffectName() const{$/;"	f	class:Armor
getCommonEffectName	src/package/standard.cpp	/^QString Horse::getCommonEffectName() const{$/;"	f	class:Horse
getCommonEffectName	src/package/standard.cpp	/^QString Weapon::getCommonEffectName() const{$/;"	f	class:Weapon
getCommonLayout	src/ui/SkinBank.cpp	/^const QSanRoomSkin::CommonLayout& QSanRoomSkin::getCommonLayout() const$/;"	f	class:QSanRoomSkin
getCorrect	src/package/god.cpp	/^    virtual int getCorrect(const Player *from, const Player *to) const{$/;"	f	class:Feiying
getCorrect	src/package/lingpackage.cpp	/^    virtual int getCorrect(const Player *from, const Player *to) const{$/;"	f	class:Tannang
getCorrect	src/package/mountainpackage.cpp	/^    virtual int getCorrect(const Player *from, const Player *) const{$/;"	f	class:Tuntian
getCorrect	src/package/sp-package.cpp	/^    virtual int getCorrect(const Player *from, const Player *to) const{$/;"	f	class:Yicong
getCorrect	src/package/standard-cards.cpp	/^    virtual int getCorrect(const Player *from, const Player *to) const{$/;"	f	class:HorseSkill
getCorrect	src/package/standard-generals.cpp	/^    virtual int getCorrect(const Player *from, const Player *to) const{$/;"	f	class:Mashu
getCorrect	src/package/standard.cpp	/^int Horse::getCorrect() const{$/;"	f	class:Horse
getCorrect	src/scenario/scenerule.cpp	/^    virtual int getCorrect(const Player *from, const Player *to) const {$/;"	f	class:SceneDistanceEffect
getCorrect	swig/sanguosha_wrap.cxx	/^int LuaDistanceSkill::getCorrect(const Player *from, const Player *to) const{$/;"	f	class:LuaDistanceSkill
getCountdown	src/client/client.h	/^    inline QSanProtocol::Countdown getCountdown()$/;"	f	class:Client
getCurrent	src/server/room.cpp	/^ServerPlayer *Room::getCurrent() const{$/;"	f	class:Room
getCurrentAnimation	src/ui/carditem.h	/^    inline QAbstractAnimation* getCurrentAnimation(bool doFade) { return m_currentAnimation; }$/;"	f	class:CardItem
getCurrentSkinName	src/ui/SkinBank.cpp	/^const QString& QSanSkinFactory::getCurrentSkinName() const$/;"	f	class:QSanSkinFactory
getCurrentSkinScheme	src/ui/SkinBank.cpp	/^const QSanSkinScheme& QSanSkinFactory::getCurrentSkinScheme()$/;"	f	class:QSanSkinFactory
getDashboardLayout	src/ui/SkinBank.cpp	/^const QSanRoomSkin::DashboardLayout& QSanRoomSkin::getDashboardLayout() const$/;"	f	class:QSanRoomSkin
getDeadBand	include/js.h	/^  float getDeadBand ( int axis ) const       { return dead_band [ axis ] ; }$/;"	f	class:jsJoystick
getDeathPixmapPath	src/client/clientplayer.cpp	/^QString ClientPlayer::getDeathPixmapPath() const{$/;"	f	class:ClientPlayer
getDefaultChoice	src/core/skill.cpp	/^QString Skill::getDefaultChoice(ServerPlayer *) const{$/;"	f	class:Skill
getDefaultChoice	src/package/nostalgia.cpp	/^    virtual QString getDefaultChoice(ServerPlayer *) const{$/;"	f	class:NosXuanfeng
getDefaultChoice	src/package/thicket.cpp	/^    virtual QString getDefaultChoice(ServerPlayer *player) const{$/;"	f	class:Benghuai
getDefaultChoice	src/package/yitianpackage.cpp	/^    virtual QString getDefaultChoice(ServerPlayer *player) const{$/;"	f	class:Shenjun
getDefaultChoice	src/package/yjcm-package.cpp	/^    virtual QString getDefaultChoice(ServerPlayer *) const{$/;"	f	class:Jujian
getDefaultChoice	src/package/yjcm-package.cpp	/^    virtual QString getDefaultChoice(ServerPlayer *) const{$/;"	f	class:Xuanfeng
getDefaultChoice	src/package/yjcm-package.cpp	/^    virtual QString getDefaultChoice(ServerPlayer *) const{$/;"	f	class:Xuanhuo
getDefensiveHorse	src/core/player.cpp	/^WrappedCard *Player::getDefensiveHorse() const{$/;"	f	class:Player
getDescription	src/core/card.cpp	/^QString Card::getDescription() const{$/;"	f	class:Card
getDescription	src/core/skill.cpp	/^QString Skill::getDescription() const{$/;"	f	class:Skill
getDialog	src/core/skill.cpp	/^QDialog *Skill::getDialog() const{$/;"	f	class:Skill
getDialog	src/package/mountainpackage.cpp	/^    virtual QDialog *getDialog() const{$/;"	f	class:Huashen
getDialog	src/package/wind.cpp	/^    virtual QDialog *getDialog() const{$/;"	f	class:Guhuo
getDialog	src/package/yjcm2012-package.cpp	/^    virtual QDialog *getDialog() const{$/;"	f	class:Qice
getDiscardPile	src/server/room.cpp	/^QList<int> Room::getDiscardPile(){$/;"	f	class:Room
getDistanceSkills	src/core/engine.cpp	/^QList<const DistanceSkill *> Engine::getDistanceSkills() const{$/;"	f	class:Engine
getDrawNum	src/package/bgm-package.cpp	/^    virtual int getDrawNum(ServerPlayer *liubei, int n) const{$/;"	f	class:Zhaolie
getDrawNum	src/package/god.cpp	/^    virtual int getDrawNum(ServerPlayer *player, int n) const{$/;"	f	class:Juejing
getDrawNum	src/package/sp-package.cpp	/^    virtual int getDrawNum(ServerPlayer *player, int n) const{$/;"	f	class:Shenwei
getDrawNum	src/package/special3v3-package.cpp	/^    virtual int getDrawNum(ServerPlayer *zhugejin, int n) const{$/;"	f	class:Hongyuan
getDrawNum	src/package/standard-generals.cpp	/^    virtual int getDrawNum(ServerPlayer *xuchu, int n) const{$/;"	f	class:Luoyi
getDrawNum	src/package/standard-generals.cpp	/^    virtual int getDrawNum(ServerPlayer *zhouyu, int n) const{$/;"	f	class:Yingzi
getDrawNum	src/package/thicket.cpp	/^    virtual int getDrawNum(ServerPlayer *lusu, int n) const{$/;"	f	class:Haoshi
getDrawNum	src/package/yjcm2012-package.cpp	/^    virtual int getDrawNum(ServerPlayer *caozhang, int n) const{$/;"	f	class:Jiangchi
getDrawNum	src/package/yjcm2012-package.cpp	/^    virtual int getDrawNum(ServerPlayer *liubiao, int n) const{$/;"	f	class:Zishou
getDrawPile	src/server/room.cpp	/^QList<int> Room::getDrawPile(){$/;"	f	class:Room
getDuration	src/util/recorder.cpp	/^int Replayer::getDuration() const{$/;"	f	class:Replayer
getEA	src/ui/roomscene.h	/^    EffectAnimation * getEA() const{return animations;}$/;"	f	class:RoomScene
getEffectIdString	src/core/card.cpp	/^QString Card::getEffectIdString() const{$/;"	f	class:Card
getEffectIndex	src/core/skill.cpp	/^int Skill::getEffectIndex(const ServerPlayer *, const Card *) const{$/;"	f	class:Skill
getEffectIndex	src/package/god.cpp	/^    virtual int getEffectIndex(const ServerPlayer *, const Card *card) const{$/;"	f	class:Longhun
getEffectIndex	src/package/standard-generals.cpp	/^    virtual int getEffectIndex(const ServerPlayer *, const Card *) const{$/;"	f	class:Lijian
getEffectIndex	src/package/standard-generals.cpp	/^    virtual int getEffectIndex(const ServerPlayer *player, const Card *) const{$/;"	f	class:Jijiang
getEffectIndex	src/package/wind.cpp	/^    virtual int getEffectIndex(const ServerPlayer *, const Card *) const{$/;"	f	class:Guhuo
getEffectIndex	src/package/yitianpackage.cpp	/^    virtual int getEffectIndex(const ServerPlayer *, const Card *card) const{$/;"	f	class:Lexue
getEffectIndex	src/package/yjcm-package.cpp	/^    virtual int getEffectIndex(const ServerPlayer *, const Card *) const{$/;"	f	class:Jiushi
getEffectName	src/package/nostalgia.cpp	/^    virtual QString getEffectName() const{$/;"	f	class:NosShangshiCardMove
getEffectName	src/package/yjcm-package.cpp	/^    virtual QString getEffectName() const{$/;"	f	class:ShangshiCardMove
getEffectName	src/package/yjcm-package.cpp	/^QString Shangshi::getEffectName()const{$/;"	f	class:Shangshi
getEffectiveId	src/core/card.cpp	/^int Card::getEffectiveId() const{$/;"	f	class:Card
getEnemies	src/server/ai.cpp	/^QList<ServerPlayer *> AI::getEnemies() const{$/;"	f	class:AI
getEngineCard	src/core/engine.cpp	/^const Card *Engine::getEngineCard(int cardId) const{$/;"	f	class:Engine
getEquip	src/core/player.cpp	/^const EquipCard *Player::getEquip(int index) const{$/;"	f	class:Player
getEquipCard	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::getEquipCard(int card_id){$/;"	f	class:CustomAssignDialog
getEquips	src/core/player.cpp	/^QList<const Card *> Player::getEquips() const{$/;"	f	class:Player
getEventStack	src/server/roomthread.cpp	/^const QList<EventTriplet> *RoomThread::getEventStack() const{$/;"	f	class:RoomThread
getExtensions	src/core/engine.cpp	/^QStringList Engine::getExtensions() const{$/;"	f	class:Engine
getExtra	src/package/firepackage.cpp	/^    virtual int getExtra(const Player *target) const{$/;"	f	class:Xueyi
getExtra	src/package/god.cpp	/^    virtual int getExtra(const Player *target) const{$/;"	f	class:JuejingKeep
getExtra	src/package/sp-package.cpp	/^    virtual int getExtra(const Player *target) const{$/;"	f	class:ShenweiKeep
getExtra	src/package/yjcm-package.cpp	/^    virtual int getExtra(const Player *target) const{$/;"	f	class:QuanjiKeep
getExtra	src/package/yjcm2012-package.cpp	/^    virtual int getExtra(const Player *target) const{$/;"	f	class:Zongshi
getExtra	swig/sanguosha_wrap.cxx	/^int LuaMaxCardsSkill::getExtra(const Player *target) const{$/;"	f	class:LuaMaxCardsSkill
getF	src/lua/lauxlib.c	/^static const char *getF (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getFinish	src/ui/indicatoritem.cpp	/^QPointF IndicatorItem::getFinish() const{$/;"	f	class:IndicatorItem
getFirstEnabled	src/ui/cardcontainer.cpp	/^int CardContainer::getFirstEnabled() const{$/;"	f	class:CardContainer
getFlags	src/core/card.h	/^    inline virtual QStringList getFlags() const { return flags; }$/;"	f	class:Card
getFlags	src/core/player.cpp	/^QString Player::getFlags() const{$/;"	f	class:Player
getFloatingArea	src/ui/GenericCardContainerUI.h	/^    inline QRect getFloatingArea() const { return _m_floatingAreaRect; }$/;"	f	class:PlayerCardContainer
getFocusTitle	src/dialog/cardeditor.cpp	/^SkillTitle *SkillBox::getFocusTitle() const{$/;"	f	class:SkillBox
getFormatedErrorMessages	src/jsoncpp/src/json_reader.cpp	/^Reader::getFormatedErrorMessages() const$/;"	f	class:Json::Reader
getFormattedErrorMessages	src/jsoncpp/src/json_reader.cpp	/^Reader::getFormattedErrorMessages() const$/;"	f	class:Json::Reader
getFrequency	src/core/skill.cpp	/^Skill::Frequency Skill::getFrequency() const{$/;"	f	class:Skill
getFriends	src/server/ai.cpp	/^QList<ServerPlayer *> AI::getFriends() const{$/;"	f	class:AI
getFront	src/server/room.cpp	/^ServerPlayer *Room::getFront(ServerPlayer *a, ServerPlayer *b) const{$/;"	f	class:Room
getFullName	src/core/card.cpp	/^QString Card::getFullName(bool include_suit) const{$/;"	f	class:Card
getGameMode	src/client/clientplayer.cpp	/^QString ClientPlayer::getGameMode() const{$/;"	f	class:ClientPlayer
getGameMode	src/server/serverplayer.cpp	/^QString ServerPlayer::getGameMode() const{$/;"	f	class:ServerPlayer
getGender	src/core/general.cpp	/^General::Gender General::getGender() const{$/;"	f	class:General
getGender	src/core/player.cpp	/^General::Gender Player::getGender() const{$/;"	f	class:Player
getGeneral	src/core/engine.cpp	/^const General *Engine::getGeneral(const QString &name) const{$/;"	f	class:Engine
getGeneral	src/core/player.cpp	/^const General *Player::getGeneral() const{$/;"	f	class:Player
getGeneral2	src/core/player.cpp	/^const General *Player::getGeneral2() const{$/;"	f	class:Player
getGeneral2Name	src/core/player.cpp	/^QString Player::getGeneral2Name() const{$/;"	f	class:Player
getGeneralCount	src/core/engine.cpp	/^int Engine::getGeneralCount(bool include_banned) const{$/;"	f	class:Engine
getGeneralMaxHp	src/server/serverplayer.cpp	/^int ServerPlayer::getGeneralMaxHp() const{$/;"	f	class:ServerPlayer
getGeneralName	src/core/player.cpp	/^QString Player::getGeneralName() const{$/;"	f	class:Player
getGeneralPixmap	src/ui/SkinBank.cpp	/^QPixmap QSanRoomSkin::getGeneralPixmap(const QString &generalName, GeneralIconSize size) const{$/;"	f	class:QSanRoomSkin
getGeneralPixmapPath	src/ui/SkinBank.cpp	/^QString QSanRoomSkin::getGeneralPixmapPath(const QString &generalName, GeneralIconSize size) const{$/;"	f	class:QSanRoomSkin
getGeneralsWithoutExtension	src/server/roomthread3v3.cpp	/^QStringList RoomThread3v3::getGeneralsWithoutExtension() const{$/;"	f	class:RoomThread3v3
getGoBackAnimation	src/ui/carditem.cpp	/^QAbstractAnimation* CardItem::getGoBackAnimation(bool doFade, bool smoothTransition, int duration)$/;"	f	class:CardItem
getGuhuoViewCard	lua/ai/wind-ai.lua	/^local function getGuhuoViewCard(self, class_name, player)$/;"	f
getHandCard	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::getHandCard(int card_id){$/;"	f	class:CustomAssignDialog
getHandcardNum	src/client/clientplayer.cpp	/^int ClientPlayer::getHandcardNum() const{$/;"	f	class:ClientPlayer
getHandcardNum	src/server/serverplayer.cpp	/^int ServerPlayer::getHandcardNum() const{$/;"	f	class:ServerPlayer
getHandcards	src/server/serverplayer.cpp	/^QList<const Card *> ServerPlayer::getHandcards() const{$/;"	f	class:ServerPlayer
getHomeOpacity	src/ui/carditem.h	/^    inline double getHomeOpacity() { return m_opacityAtHome; }$/;"	f	class:CardItem
getHp	src/core/player.cpp	/^int Player::getHp() const{$/;"	f	class:Player
getHp	src/ui/magatamasItem.h	/^    inline int getHp() const { return m_hp; }$/;"	f	class:MagatamasBoxItem
getIconSize	src/ui/magatamasItem.h	/^    inline QSize getIconSize() const { return m_iconSize; }$/;"	f	class:MagatamasBoxItem
getId	src/core/card.cpp	/^int Card::getId() const{$/;"	f	class:Card
getId	src/server/room.h	/^    inline int getId() const { return _m_Id; } $/;"	f	class:Room
getId	src/ui/carditem.h	/^    inline int getId() const {$/;"	f	class:CardItem
getIdToCard	lua/ai/guanxing-ai.lua	/^local function getIdToCard(self, cards)$/;"	f
getIndex	src/ui/sprite.h	/^    int getIndex(){return index;}$/;"	f	class:QAnimatedEffect
getInstance	src/dialog/cardoverview.cpp	/^CardOverview *CardOverview::getInstance(QWidget *main_window){$/;"	f	class:CardOverview
getInstance	src/dialog/halldialog.cpp	/^HallDialog *HallDialog::getInstance(MainWindow *main_window){$/;"	f	class:HallDialog
getInstance	src/package/standard-cards.cpp	/^    static EightDiagramSkill *getInstance(){$/;"	f	class:EightDiagramSkill
getInstance	src/package/wind.cpp	/^GuhuoDialog *GuhuoDialog::getInstance(const QString &object, bool left, bool right){$/;"	f	class:GuhuoDialog
getInstance	src/server/contestdb.cpp	/^ContestDB *ContestDB::getInstance(){$/;"	f	class:ContestDB
getInstance	src/server/generalselector.cpp	/^GeneralSelector *GeneralSelector::getInstance(){$/;"	f	class:GeneralSelector
getInstance	src/ui/SkinBank.cpp	/^QSanSkinFactory& QSanSkinFactory::getInstance()$/;"	f	class:QSanSkinFactory
getIp	src/server/serverplayer.cpp	/^QString ServerPlayer::getIp() const{$/;"	f	class:ServerPlayer
getJudgeCard	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::getJudgeCard(int card_id){$/;"	f	class:CustomAssignDialog
getJudgingArea	src/core/player.cpp	/^QList<const Card *> Player::getJudgingArea() const{$/;"	f	class:Player
getKingdom	src/core/general.cpp	/^QString General::getKingdom() const{$/;"	f	class:General
getKingdom	src/core/player.cpp	/^QString Player::getKingdom() const{$/;"	f	class:Player
getKingdomColor	src/core/engine.cpp	/^QColor Engine::getKingdomColor(const QString &kingdom) const{$/;"	f	class:Engine
getKingdoms	src/core/engine.cpp	/^QStringList Engine::getKingdoms() const{$/;"	f	class:Engine
getKingdoms	src/package/sp-package.cpp	/^    int getKingdoms(ServerPlayer *yuanshu) const{$/;"	f	class:Yongsi
getKingdoms	src/package/yjcm2012-package.cpp	/^    int getKingdoms(Room *room) const{$/;"	f	class:Fuli
getLack	src/server/room.cpp	/^int Room::getLack() const{$/;"	f	class:Room
getLieges	src/server/room.cpp	/^QList<ServerPlayer *> Room::getLieges(const QString &kingdom, ServerPlayer *lord) const{$/;"	f	class:Room
getLimitedGeneralNames	src/core/engine.cpp	/^QStringList Engine::getLimitedGeneralNames() const{$/;"	f	class:Engine
getLinesDoc	src/client/client.cpp	/^QTextDocument *Client::getLinesDoc() const{$/;"	f	class:Client
getLocation	src/core/skill.cpp	/^Skill::Location Skill::getLocation() const{$/;"	f	class:Skill
getLocation	src/package/god.cpp	/^    virtual Location getLocation() const{$/;"	f	class:Jilve
getLocation	src/package/mountainpackage.cpp	/^    virtual Location getLocation() const{$/;"	f	class:Jixi
getLocation	src/package/yjcm-package.cpp	/^    virtual Location getLocation() const{$/;"	f	class:Paiyi
getLocationLineAndColumn	src/jsoncpp/src/json_reader.cpp	/^Reader::getLocationLineAndColumn( Location location ) const$/;"	f	class:Json::Reader
getLocationLineAndColumn	src/jsoncpp/src/json_reader.cpp	/^Reader::getLocationLineAndColumn( Location location,$/;"	f	class:Json::Reader
getLogName	src/core/card.cpp	/^QString Card::getLogName() const{$/;"	f	class:Card
getLord	src/server/room.cpp	/^ServerPlayer *Room::getLord() const{$/;"	f	class:Room
getLords	src/core/engine.cpp	/^QStringList Engine::getLords() const{$/;"	f	class:Engine
getLostHp	src/core/player.cpp	/^int Player::getLostHp() const{$/;"	f	class:Player
getLowerBoundOfHandcard	lua/ai/thicket-ai.lua	/^local function getLowerBoundOfHandcard(self)$/;"	f
getLuaState	src/core/engine.cpp	/^lua_State *Engine::getLuaState() const{$/;"	f	class:Engine
getLuaState	src/server/room.cpp	/^lua_State *Room::getLuaState() const{$/;"	f	class:Room
getMODName	src/core/engine.cpp	/^QString Engine::getMODName() const{$/;"	f	class:Engine
getMappedRole	src/server/gamerule.cpp	/^QString BasaraMode::getMappedRole(const QString &role){$/;"	f	class:BasaraMode
getMark	src/core/player.cpp	/^int Player::getMark(const QString &mark) const{$/;"	f	class:Player
getMarkDoc	src/client/clientplayer.cpp	/^QTextDocument *ClientPlayer::getMarkDoc() const{$/;"	f	class:ClientPlayer
getMaxCards	src/core/player.cpp	/^int Player::getMaxCards() const{$/;"	f	class:Player
getMaxCardsSkills	src/core/engine.cpp	/^QList<const MaxCardsSkill *> Engine::getMaxCardsSkills() const{$/;"	f	class:Engine
getMaxHp	src/core/general.cpp	/^int General::getMaxHp() const{$/;"	f	class:General
getMaxHp	src/core/player.cpp	/^int Player::getMaxHp() const{$/;"	f	class:Player
getMaxHp	src/ui/magatamasItem.h	/^    inline int getMaxHp() const { return m_maxHp; }$/;"	f	class:MagatamasBoxItem
getMaxRange	include/js.h	/^  void getMaxRange ( float *axes ) const { memcpy ( axes, max   , num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
getMemberNames	src/jsoncpp/src/json_value.cpp	/^Value::getMemberNames() const$/;"	f	class:Json::Value
getMessage	src/server/serverplayer.cpp	/^void ServerPlayer::getMessage(const char *message){$/;"	f	class:ServerPlayer
getMessage	src/util/nativesocket.cpp	/^void NativeClientSocket::getMessage(){$/;"	f	class:NativeClientSocket
getMessageBody	src/core/protocol.h	/^        inline Json::Value& getMessageBody(){return m_msgBody;}$/;"	f	class:QSanProtocol::QSanGeneralPacket
getMessageBody	src/core/protocol.h	/^        inline const Json::Value& getMessageBody() const {return m_msgBody;}$/;"	f	class:QSanProtocol::QSanGeneralPacket
getMetaObjects	src/package/package.h	/^    QList<const QMetaObject *> getMetaObjects() const{$/;"	f	class:Package
getMiddleWidth	src/ui/dashboard.cpp	/^int Dashboard::getMiddleWidth()$/;"	f	class:Dashboard
getMinRange	include/js.h	/^  void getMinRange ( float *axes ) const { memcpy ( axes, min   , num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
getMode	src/server/room.cpp	/^QString Room::getMode() const{$/;"	f	class:Room
getModeName	src/core/engine.cpp	/^QString Engine::getModeName(const QString &mode) const{$/;"	f	class:Engine
getMouseClickReceiver	src/ui/dashboard.cpp	/^QGraphicsItem* Dashboard::getMouseClickReceiver()  $/;"	f	class:Dashboard
getMouseClickReceiver	src/ui/photo.cpp	/^QGraphicsItem* Photo::getMouseClickReceiver()  $/;"	f	class:Photo
getNCards	src/server/room.cpp	/^QList<int> Room::getNCards(int n, bool update_pile_number){$/;"	f	class:Room
getName	include/js.h	/^  const char* getName () const { return name ;     }$/;"	f	class:jsJoystick
getName	src/core/card.cpp	/^QString Card::getName() const{$/;"	f	class:Card
getNameItem	src/dialog/cardeditor.cpp	/^BlackEdgeTextItem *CardScene::getNameItem() const{$/;"	f	class:CardScene
getNature	src/package/standard-cards.cpp	/^DamageStruct::Nature Slash::getNature() const{$/;"	f	class:Slash
getNext	src/server/serverplayer.cpp	/^ServerPlayer *ServerPlayer::getNext() const{$/;"	f	class:ServerPlayer
getNextAlive	src/server/serverplayer.cpp	/^ServerPlayer *ServerPlayer::getNextAlive() const{$/;"	f	class:ServerPlayer
getNextChar	src/jsoncpp/src/json_reader.cpp	/^Reader::getNextChar()$/;"	f	class:Json::Reader
getNotice	src/core/skill.cpp	/^QString Skill::getNotice(int index) const{$/;"	f	class:Skill
getNumAxes	include/js.h	/^  int   getNumAxes    () const { return num_axes ; }$/;"	f	class:jsJoystick
getNumButtons	include/js.h	/^  int   getNumButtons () const { return num_buttons; }$/;"	f	class:jsJoystick
getNumCardsVisible	src/ui/TablePile.h	/^    inline int getNumCardsVisible() { return m_numCardsVisible; }$/;"	f	class:TablePile
getNumDiff	src/scenario/zombie-mode-scenario.cpp	/^    int getNumDiff(ServerPlayer *zombie) const{$/;"	f	class:Zaibian
getNumber	src/core/card.cpp	/^int Card::getNumber() const{$/;"	f	class:Card
getNumber	src/package/yjcm2012-package.cpp	/^int QiceCard::getNumber(QList<int> cardid_list) const{$/;"	f	class:QiceCard
getNumberString	src/core/card.cpp	/^QString Card::getNumberString() const{$/;"	f	class:Card
getOffensiveHorse	src/core/player.cpp	/^WrappedCard *Player::getOffensiveHorse() const{$/;"	f	class:Player
getOpMode	src/lua/lopcodes.h	254;"	d
getOrientation	src/ui/magatamasItem.h	/^    inline Qt::Orientation getOrientation() const { return m_orientation; }$/;"	f	class:MagatamasBoxItem
getOtherPlayers	src/server/room.cpp	/^QList<ServerPlayer *> Room::getOtherPlayers(ServerPlayer *except) const{$/;"	f	class:Room
getOwnCards	lua/ai/guanxing-ai.lua	/^local function getOwnCards(self, up, bottom, next_judge)$/;"	f
getOwner	src/server/room.cpp	/^ServerPlayer *Room::getOwner() const{$/;"	f	class:Room
getPackage	src/core/WrappedCard.h	/^    inline virtual QString getPackage() const {$/;"	f	class:WrappedCard
getPackage	src/core/card.cpp	/^QString Card::getPackage() const{$/;"	f	class:Card
getPackage	src/core/general.cpp	/^QString General::getPackage() const{$/;"	f	class:General
getPacketType	src/core/protocol.h	/^        inline virtual PacketType getPacketType() const { return m_packetType; }$/;"	f	class:QSanProtocol::QSanGeneralPacket
getPattern	src/client/client.cpp	/^QString Client::getPattern() const{$/;"	f	class:Client
getPattern	src/core/engine.cpp	/^const CardPattern *Engine::getPattern(const QString &name) const{$/;"	f	class:Engine
getPatterns	src/package/package.h	/^    QMap<QString, const CardPattern *> getPatterns() const{$/;"	f	class:Package
getPhase	src/core/player.cpp	/^Player::Phase Player::getPhase() const{$/;"	f	class:Player
getPhaseString	src/core/player.cpp	/^QString Player::getPhaseString() const{$/;"	f	class:Player
getPhases	src/server/serverplayer.cpp	/^QList<Player::Phase> &ServerPlayer::getPhases(){$/;"	f	class:ServerPlayer
getPhotoLayout	src/ui/SkinBank.cpp	/^const QSanRoomSkin::PhotoLayout& QSanRoomSkin::getPhotoLayout() const$/;"	f	class:QSanRoomSkin
getPile	src/core/player.cpp	/^QList<int> Player::getPile(const QString &pile_name) const{$/;"	f	class:Player
getPileCard	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::getPileCard(int card_id){$/;"	f	class:CustomAssignDialog
getPileName	src/core/player.cpp	/^QString Player::getPileName(int card_id) const{$/;"	f	class:Player
getPileNames	src/core/player.cpp	/^QStringList Player::getPileNames() const{$/;"	f	class:Player
getPixmap	src/ui/SkinBank.cpp	/^QPixmap IQSanComponentSkin::getPixmap(const QString &key, const QString &arg) const$/;"	f	class:IQSanComponentSkin
getPixmap	src/ui/SkinBank.cpp	/^const QPixmap& QSanPixmapCache::getPixmap(const QString &fileName)$/;"	f	class:QSanPixmapCache
getPixmap	src/ui/SkinBank.cpp	/^const QPixmap& QSanPixmapCache::getPixmap(const QString &key, const QString &fileName)$/;"	f	class:QSanPixmapCache
getPixmapFileName	src/ui/SkinBank.cpp	/^ QPixmap IQSanComponentSkin::getPixmapFileName(const QString &key) const$/;"	f	class:IQSanComponentSkin
getPixmapFromFileName	src/ui/SkinBank.cpp	/^ QPixmap IQSanComponentSkin::getPixmapFromFileName(const QString &fileName) const$/;"	f	class:IQSanComponentSkin
getPlayer	src/client/client.cpp	/^ClientPlayer *Client::getPlayer(const QString &name){$/;"	f	class:Client
getPlayer	src/ui/photo.cpp	/^const ClientPlayer *Photo::getPlayer() const{$/;"	f	class:Photo
getPlayerAudioEffectPath	src/ui/SkinBank.cpp	/^QString QSanRoomSkin::getPlayerAudioEffectPath(const QString &eventName, bool isMale, int index) const{$/;"	f	class:QSanRoomSkin
getPlayerAudioEffectPath	src/ui/SkinBank.cpp	/^QString QSanRoomSkin::getPlayerAudioEffectPath(const QString &eventName, const QString &category, int index) const{$/;"	f	class:QSanRoomSkin
getPlayerCount	src/core/engine.cpp	/^int Engine::getPlayerCount(const QString &mode) const{$/;"	f	class:Engine
getPlayerCount	src/scenario/boss-mode-scenario.cpp	/^int ImpasseScenario::getPlayerCount() const{$/;"	f	class:ImpasseScenario
getPlayerCount	src/scenario/couple-scenario.cpp	/^int CoupleScenario::getPlayerCount() const{$/;"	f	class:CoupleScenario
getPlayerCount	src/scenario/miniscenarios.h	/^    virtual int getPlayerCount() const$/;"	f	class:MiniScene
getPlayerCount	src/scenario/scenario.cpp	/^int Scenario::getPlayerCount() const{$/;"	f	class:Scenario
getPlayerCount	src/scenario/zombie-mode-scenario.cpp	/^int ZombieScenario::getPlayerCount() const{$/;"	f	class:ZombieScenario
getPlayerHp	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::getPlayerHp(int hp)$/;"	f	class:CustomAssignDialog
getPlayerMarks	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::getPlayerMarks(int index){$/;"	f	class:CustomAssignDialog
getPlayerMaxHp	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::getPlayerMaxHp(int maxhp){$/;"	f	class:CustomAssignDialog
getPlayerName	src/client/client.cpp	/^QString Client::getPlayerName(const QString &str){$/;"	f	class:Client
getPlayers	src/client/client.cpp	/^QList<const ClientPlayer*> Client::getPlayers() const{$/;"	f	class:Client
getPlayers	src/server/room.cpp	/^QList<ServerPlayer *> Room::getPlayers() const{$/;"	f	class:Room
getPriority	src/core/lua-wrapper.cpp	/^int LuaTriggerSkill::getPriority() const{$/;"	f	class:LuaTriggerSkill
getPriority	src/core/skill.cpp	/^int MasochismSkill::getPriority() const{$/;"	f	class:MasochismSkill
getPriority	src/core/skill.cpp	/^int ScenarioRule::getPriority() const{$/;"	f	class:ScenarioRule
getPriority	src/core/skill.cpp	/^int TriggerSkill::getPriority() const{$/;"	f	class:TriggerSkill
getPriority	src/package/bgm-package.cpp	/^    virtual int getPriority() const{$/;"	f	class:DahePindian
getPriority	src/package/bgm-package.cpp	/^    virtual int getPriority() const{$/;"	f	class:Kuiwei
getPriority	src/package/bgm-package.cpp	/^    virtual int getPriority() const{$/;"	f	class:Manjuan
getPriority	src/package/bgm-package.cpp	/^    virtual int getPriority() const{$/;"	f	class:MouduanStart
getPriority	src/package/firepackage.cpp	/^    virtual int getPriority() const{$/;"	f	class:Mengjin
getPriority	src/package/god.cpp	/^    virtual int getPriority() const{$/;"	f	class:Lianpo
getPriority	src/package/god.cpp	/^    virtual int getPriority() const{$/;"	f	class:LianpoDo
getPriority	src/package/god.cpp	/^    virtual int getPriority() const{$/;"	f	class:QixingStart
getPriority	src/package/maneuvering.cpp	/^    virtual int getPriority() const {$/;"	f	class:SilverLionSkill
getPriority	src/package/mountainpackage.cpp	/^    int getPriority() const{$/;"	f	class:HuashenBegin
getPriority	src/package/mountainpackage.cpp	/^    virtual int getPriority() const{$/;"	f	class:FangquanGive
getPriority	src/package/mountainpackage.cpp	/^    virtual int getPriority() const{$/;"	f	class:HuashenEnd
getPriority	src/package/mountainpackage.cpp	/^    virtual int getPriority() const{$/;"	f	class:SunceZhiba
getPriority	src/package/nostalgia.cpp	/^    virtual int getPriority() const{$/;"	f	class:NosShangshi
getPriority	src/package/nostalgia.cpp	/^    virtual int getPriority() const{$/;"	f	class:NosShangshiCardMove
getPriority	src/package/standard-cards.cpp	/^    virtual int getPriority() const{$/;"	f	class:BladeSkill
getPriority	src/package/standard-cards.cpp	/^    virtual int getPriority() const{$/;"	f	class:EightDiagramSkill
getPriority	src/package/thicket.cpp	/^    virtual int getPriority() const{$/;"	f	class:HaoshiGive
getPriority	src/package/wind.cpp	/^    virtual int getPriority() const{$/;"	f	class:BuquRemove
getPriority	src/package/wind.cpp	/^    virtual int getPriority() const{$/;"	f	class:Leiji
getPriority	src/package/wind.cpp	/^    virtual int getPriority() const{$/;"	f	class:Tianxiang
getPriority	src/package/wisdompackage.cpp	/^    virtual int getPriority() const{$/;"	f	class:Bawang
getPriority	src/package/wisdompackage.cpp	/^    virtual int getPriority() const{$/;"	f	class:Shicai
getPriority	src/package/wisdompackage.cpp	/^    virtual int getPriority() const{$/;"	f	class:Tanlan
getPriority	src/package/wisdompackage.cpp	/^    virtual int getPriority() const{$/;"	f	class:Yuwen
getPriority	src/package/yitianpackage.cpp	/^    virtual int getPriority() const{$/;"	f	class:GongmouExchange
getPriority	src/package/yitianpackage.cpp	/^    virtual int getPriority() const{$/;"	f	class:JuejiGet
getPriority	src/package/yitianpackage.cpp	/^    virtual int getPriority() const{$/;"	f	class:WulingEffect
getPriority	src/package/yitianpackage.cpp	/^    virtual int getPriority() const{$/;"	f	class:WulingExEffect
getPriority	src/package/yjcm-package.cpp	/^    virtual int getPriority() const{$/;"	f	class:Luoying
getPriority	src/package/yjcm-package.cpp	/^    virtual int getPriority() const{$/;"	f	class:ShangshiCardMove
getPriority	src/package/yjcm-package.cpp	/^    virtual int getPriority() const{$/;"	f	class:ShangshiStateChanged
getPriority	src/scenario/guandu-scenario.cpp	/^    virtual int getPriority() const{$/;"	f	class:SmallTuxi
getPriority	src/scenario/scenerule.cpp	/^    virtual int getPriority() const { return 3; }$/;"	f	class:Scene26Effect
getPriority	src/server/gamerule.cpp	/^int BasaraMode::getPriority() const{$/;"	f	class:BasaraMode
getPriority	src/server/gamerule.cpp	/^int GameRule::getPriority() const{$/;"	f	class:GameRule
getProgressBarPixmap	src/ui/SkinBank.cpp	/^QPixmap QSanRoomSkin::getProgressBarPixmap(int percentile) const$/;"	f	class:QSanRoomSkin
getPromptDoc	src/client/client.cpp	/^QTextDocument *Client::getPromptDoc() const{$/;"	f	class:Client
getRaceResult	src/server/room.cpp	/^ServerPlayer* Room::getRaceResult(QList<ServerPlayer*> &players, QSanProtocol::CommandType , time_t timeOut,$/;"	f	class:Room
getRandomAudioFileName	src/ui/SkinBank.cpp	/^QString IQSanComponentSkin::getRandomAudioFileName(const QString &key) const$/;"	f	class:IQSanComponentSkin
getRandomCards	src/core/engine.cpp	/^QList<int> Engine::getRandomCards() const{$/;"	f	class:Engine
getRandomGeneralName	src/core/engine.cpp	/^QString Engine::getRandomGeneralName() const{$/;"	f	class:Engine
getRandomGenerals	src/core/engine.cpp	/^QStringList Engine::getRandomGenerals(int count, const QSet<QString> &ban_set) const{$/;"	f	class:Engine
getRandomHandCard	src/server/serverplayer.cpp	/^const Card *ServerPlayer::getRandomHandCard() const{$/;"	f	class:ServerPlayer
getRandomHandCardId	src/server/serverplayer.cpp	/^int ServerPlayer::getRandomHandCardId() const{$/;"	f	class:ServerPlayer
getRandomLords	src/core/engine.cpp	/^QStringList Engine::getRandomLords() const{$/;"	f	class:Engine
getRandomSkill	src/scenario/boss-mode-scenario.cpp	/^    void getRandomSkill(ServerPlayer *player, bool need_trans = false) const{$/;"	f	class:ImpasseRule
getRange	src/package/standard.cpp	/^int Weapon::getRange() const{$/;"	f	class:Weapon
getRealCard	src/core/WrappedCard.h	/^    inline virtual const Card *getRealCard() const {$/;"	f	class:WrappedCard
getRealCard	src/core/card.h	/^    inline virtual const Card *getRealCard() const {return this;}$/;"	f	class:Card
getRelatedSkillNames	src/core/general.cpp	/^QStringList General::getRelatedSkillNames() const{$/;"	f	class:General
getRelatedSkills	src/core/engine.cpp	/^QList<const Skill *> Engine::getRelatedSkills(const QString &skill_name) const{$/;"	f	class:Engine
getRelatedSkills	src/package/package.h	/^    QMultiMap<QString, QString> getRelatedSkills() const{$/;"	f	class:Package
getReplayer	src/client/client.cpp	/^Replayer *Client::getReplayer() const{$/;"	f	class:Client
getResourceKeyName	src/ui/dashboard.h	/^    inline virtual QString getResourceKeyName() { return QSanRoomSkin::S_SKIN_KEY_DASHBOARD; }$/;"	f	class:Dashboard
getResourceKeyName	src/ui/photo.h	/^    inline virtual QString getResourceKeyName() { return QSanRoomSkin::S_SKIN_KEY_PHOTO; }$/;"	f	class:Photo
getResult	src/server/room.cpp	/^bool Room::getResult(ServerPlayer* player, time_t timeOut){  $/;"	f	class:Room
getRole	src/core/player.cpp	/^QString Player::getRole() const{$/;"	f	class:Player
getRole	src/ui/rolecombobox.cpp	/^QString RoleComboBoxItem::getRole() const{$/;"	f	class:RoleComboBoxItem
getRoleEnum	src/core/player.cpp	/^Player::Role Player::getRoleEnum() const{$/;"	f	class:Player
getRoleIndex	src/core/engine.cpp	/^int Engine::getRoleIndex() const{$/;"	f	class:Engine
getRoleList	src/core/engine.cpp	/^QStringList Engine::getRoleList(const QString &mode) const{$/;"	f	class:Engine
getRoles	src/core/engine.cpp	/^QString Engine::getRoles(const QString &mode) const{$/;"	f	class:Engine
getRoles	src/scenario/boss-mode-scenario.cpp	/^QString ImpasseScenario::getRoles() const{$/;"	f	class:ImpasseScenario
getRoles	src/scenario/couple-scenario.cpp	/^QString CoupleScenario::getRoles() const{$/;"	f	class:CoupleScenario
getRoles	src/scenario/scenario.cpp	/^QString Scenario::getRoles() const{$/;"	f	class:Scenario
getRoles	src/scenario/zombie-mode-scenario.cpp	/^QString ZombieScenario::getRoles() const{$/;"	f	class:ZombieScenario
getRoom	src/server/serverplayer.cpp	/^Room *ServerPlayer::getRoom() const{$/;"	f	class:ServerPlayer
getRoomLayout	src/ui/SkinBank.cpp	/^const QSanRoomSkin::RoomLayout& QSanRoomSkin::getRoomLayout() const$/;"	f	class:QSanRoomSkin
getRoomSkin	src/ui/SkinBank.cpp	/^const QSanRoomSkin& QSanSkinScheme::getRoomSkin() const$/;"	f	class:QSanSkinScheme
getRoomState	src/client/client.h	/^    inline virtual RoomState* getRoomState() { return &_m_roomState; }$/;"	f	class:Client
getRoomState	src/server/room.h	/^    inline virtual RoomState* getRoomState() { return &_m_roomState; }$/;"	f	class:Room
getRule	src/scenario/scenario.cpp	/^ScenarioRule *Scenario::getRule() const{$/;"	f	class:Scenario
getS	src/lua/lauxlib.c	/^static const char *getS (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getSaturation	include/js.h	/^  float getSaturation ( int axis ) const     { return saturate [ axis ]  ; }$/;"	f	class:jsJoystick
getScenario	src/core/engine.cpp	/^const Scenario *Engine::getScenario(const QString &name) const{$/;"	f	class:Engine
getScenario	src/server/room.cpp	/^const Scenario *Room::getScenario() const{$/;"	f	class:Room
getScenarioNames	src/core/engine.cpp	/^QStringList Engine::getScenarioNames() const{$/;"	f	class:Engine
getScore	src/server/contestdb.cpp	/^int ContestDB::getScore(ServerPlayer *player, const QString &winner){$/;"	f	class:ContestDB
getSeat	src/core/player.cpp	/^int Player::getSeat() const{$/;"	f	class:Player
getSecondBanSet	src/core/banpair.cpp	/^const QSet<QString> BanPair::getSecondBanSet(){$/;"	f	class:BanPair
getSelected	src/server/serverplayer.cpp	/^QStringList ServerPlayer::getSelected() const{$/;"	f	class:ServerPlayer
getSelected	src/ui/dashboard.cpp	/^const Card *Dashboard::getSelected() const$/;"	f	class:Dashboard
getSemaphore	src/server/serverplayer.h	/^    inline QSemaphore* getSemaphore(SemaphoreType type){ return semas[type]; }$/;"	f	class:ServerPlayer
getSetupString	src/core/engine.cpp	/^QString Engine::getSetupString() const{$/;"	f	class:Engine
getSiblings	src/core/player.cpp	/^QList<const Player *> Player::getSiblings() const{$/;"	f	class:Player
getSkill	src/core/engine.cpp	/^const Skill *Engine::getSkill(const QString &skill_name) const{$/;"	f	class:Engine
getSkill	src/package/standard.cpp	/^TriggerSkill *EquipCard::getSkill() const{$/;"	f	class:EquipCard
getSkill	src/ui/qsanbutton.h	/^    inline virtual const Skill* getSkill() const{ return _m_skill; }$/;"	f	class:QSanSkillButton
getSkillBox	src/dialog/cardeditor.cpp	/^SkillBox *CardScene::getSkillBox() const{$/;"	f	class:CardScene
getSkillButtonByName	src/ui/qsanbutton.cpp	/^QSanInvokeSkillDock::getSkillButtonByName(const QString &skillName) const$/;"	f	class:QSanInvokeSkillDock
getSkillButtonPixmap	src/ui/SkinBank.cpp	/^QPixmap QSanRoomSkin::getSkillButtonPixmap(QSanButton::ButtonState state,$/;"	f	class:QSanRoomSkin
getSkillDescription	src/core/general.cpp	/^QString General::getSkillDescription() const{$/;"	f	class:General
getSkillFromGeneral	src/dialog/customassigndialog.cpp	/^void SkillAssignDialog::getSkillFromGeneral(QString general_name){$/;"	f	class:SkillAssignDialog
getSkillLine	src/client/client.cpp	/^QString Client::getSkillLine() const{$/;"	f	class:Client
getSkillList	src/core/general.cpp	/^QList<const Skill *> General::getSkillList() const{$/;"	f	class:General
getSkillName	src/core/card.cpp	/^QString Card::getSkillName() const{$/;"	f	class:Card
getSkillNameToInvoke	src/client/client.cpp	/^QString Client::getSkillNameToInvoke() const{$/;"	f	class:Client
getSkillNames	src/core/engine.cpp	/^QStringList Engine::getSkillNames() const{$/;"	f	class:Engine
getSkillTextFont	src/ui/SkinBank.cpp	/^QSanRoomSkin::DashboardLayout::getSkillTextFont(QSanButton::ButtonState state,$/;"	f	class:QSanRoomSkin::DashboardLayout
getSkillTypeString	src/ui/qsanbutton.h	/^    inline static QString getSkillTypeString(SkillType type)$/;"	f	class:QSanSkillButton
getSkillViewCard	lua/ai/smart-ai.lua	/^local function getSkillViewCard(card, class_name, player, card_place)$/;"	f
getSkills	src/package/package.h	/^    QList<const Skill *> getSkills() const{$/;"	f	class:Package
getSlashCount	src/core/player.cpp	/^int Player::getSlashCount() const{$/;"	f	class:Player
getSmartAI	src/server/serverplayer.cpp	/^AI *ServerPlayer::getSmartAI() const{$/;"	f	class:ServerPlayer
getSources	src/core/skill.cpp	/^QStringList Skill::getSources() const{$/;"	f	class:Skill
getSpeed	src/util/recorder.cpp	/^qreal Replayer::getSpeed() {$/;"	f	class:Replayer
getSpouse	src/scenario/couple-scenario.cpp	/^ServerPlayer *CoupleScenario::getSpouse(const ServerPlayer *player) const{$/;"	f	class:CoupleScenario
getState	src/core/player.cpp	/^QString Player::getState() const{$/;"	f	class:Player
getState	src/ui/qsanbutton.h	/^    inline ButtonState getState() const { return _m_state; }$/;"	f	class:QSanButton
getStatus	src/client/client.cpp	/^Client::Status Client::getStatus() const{$/;"	f	class:Client
getStyle	src/ui/qsanbutton.h	/^    inline ButtonStyle getStyle() const { return _m_style; }$/;"	f	class:QSanButton
getSubcards	src/core/card.cpp	/^QList<int> Card::getSubcards() const{$/;"	f	class:Card
getSubtype	src/core/WrappedCard.h	/^    inline virtual QString getSubtype() const { return m_card->getSubtype(); }$/;"	f	class:WrappedCard
getSubtype	src/core/card.cpp	/^QString DummyCard::getSubtype() const{$/;"	f	class:DummyCard
getSubtype	src/core/card.cpp	/^QString SkillCard::getSubtype() const{$/;"	f	class:SkillCard
getSubtype	src/package/maneuvering.cpp	/^QString Analeptic::getSubtype() const{$/;"	f	class:Analeptic
getSubtype	src/package/maneuvering.cpp	/^QString IronChain::getSubtype() const{$/;"	f	class:IronChain
getSubtype	src/package/standard-cards.cpp	/^QString Jink::getSubtype() const{$/;"	f	class:Jink
getSubtype	src/package/standard-cards.cpp	/^QString Peach::getSubtype() const{$/;"	f	class:Peach
getSubtype	src/package/standard-cards.cpp	/^QString Slash::getSubtype() const{$/;"	f	class:Slash
getSubtype	src/package/standard.cpp	/^QString AOE::getSubtype() const{$/;"	f	class:AOE
getSubtype	src/package/standard.cpp	/^QString Armor::getSubtype() const{$/;"	f	class:Armor
getSubtype	src/package/standard.cpp	/^QString DefensiveHorse::getSubtype() const{$/;"	f	class:DefensiveHorse
getSubtype	src/package/standard.cpp	/^QString DelayedTrick::getSubtype() const{$/;"	f	class:DelayedTrick
getSubtype	src/package/standard.cpp	/^QString GlobalEffect::getSubtype() const{$/;"	f	class:GlobalEffect
getSubtype	src/package/standard.cpp	/^QString OffensiveHorse::getSubtype() const{$/;"	f	class:OffensiveHorse
getSubtype	src/package/standard.cpp	/^QString SingleTargetTrick::getSubtype() const{$/;"	f	class:SingleTargetTrick
getSubtype	src/package/standard.cpp	/^QString Weapon::getSubtype() const{$/;"	f	class:Weapon
getSuit	src/core/card.cpp	/^Card::Suit Card::getSuit() const{$/;"	f	class:Card
getSuit	src/package/yjcm2012-package.cpp	/^Card::Suit QiceCard::getSuit(QList<int> cardid_list) const{$/;"	f	class:QiceCard
getSuitString	src/core/card.cpp	/^QString Card::getSuitString() const{$/;"	f	class:Card
getTable	src/server/ai.cpp	/^bool LuaAI::getTable(lua_State *L, QList<int> &table){$/;"	f	class:LuaAI
getTag	src/server/room.cpp	/^QVariant Room::getTag(const QString &key) const{$/;"	f	class:Room
getTeammates	src/package/special3v3-package.cpp	/^    QList<ServerPlayer *> getTeammates(ServerPlayer *zhugejin) const{$/;"	f	class:Huanshi
getText	scenarios/basara.html	/^  function getText(el) {$/;"	f
getText	scenarios/couple.html	/^  function getText(el) {$/;"	f
getText	scenarios/fancheng.html	/^  function getText(el) {$/;"	f
getText	scenarios/guandu.html	/^  function getText(el) {$/;"	f
getText	scenarios/hegemony.html	/^  function getText(el) {$/;"	f
getText	scenarios/hulaopass.html	/^  function getText(el) {$/;"	f
getText	scenarios/impasse_fight.html	/^  function getText(el) {$/;"	f
getText	scenarios/miniscene.html	/^  function getText(el) {$/;"	f
getText	scenarios/zombie_mode.html	/^  function getText(el) {$/;"	f
getText	src/core/skill.cpp	/^QString Skill::getText() const{$/;"	f	class:Skill
getThread	src/server/room.cpp	/^RoomThread *Room::getThread() const{$/;"	f	class:Room
getTitleItem	src/dialog/cardeditor.cpp	/^BlackEdgeTextItem *CardScene::getTitleItem() const{$/;"	f	class:CardScene
getTranslatedRect	src/ui/SkinBank.cpp	/^QRect IQSanComponentSkin::AnchoredRect::getTranslatedRect(QRect parentRect) const$/;"	f	class:IQSanComponentSkin::AnchoredRect
getTranslatedRect	src/ui/SkinBank.cpp	/^QRect IQSanComponentSkin::AnchoredRect::getTranslatedRect(QRect parentRect, QSize size) const$/;"	f	class:IQSanComponentSkin::AnchoredRect
getTriggerEvents	src/core/skill.cpp	/^QList<TriggerEvent> TriggerSkill::getTriggerEvents() const{$/;"	f	class:TriggerSkill
getTriggerSkill	src/core/engine.cpp	/^const TriggerSkill *Engine::getTriggerSkill(const QString &skill_name) const{$/;"	f	class:Engine
getTriggerSkills	src/core/general.cpp	/^QSet<const TriggerSkill *> General::getTriggerSkills() const{$/;"	f	class:General
getTriggerSkills	src/core/player.cpp	/^QSet<const TriggerSkill *> Player::getTriggerSkills() const{$/;"	f	class:Player
getType	src/core/WrappedCard.h	/^    inline virtual QString getType() const { return m_card->getType(); }$/;"	f	class:WrappedCard
getType	src/core/card.cpp	/^QString DummyCard::getType() const{$/;"	f	class:DummyCard
getType	src/core/card.cpp	/^QString SkillCard::getType() const{$/;"	f	class:SkillCard
getType	src/package/package.h	/^    Type getType() const{$/;"	f	class:Package
getType	src/package/standard.cpp	/^QString BasicCard::getType() const{$/;"	f	class:BasicCard
getType	src/package/standard.cpp	/^QString EquipCard::getType() const{$/;"	f	class:EquipCard
getType	src/package/standard.cpp	/^QString TrickCard::getType() const{$/;"	f	class:TrickCard
getTypeId	src/core/WrappedCard.h	/^    inline virtual CardType getTypeId() const { return m_card->getTypeId(); }$/;"	f	class:WrappedCard
getTypeId	src/core/card.cpp	/^Card::CardType SkillCard::getTypeId() const{$/;"	f	class:SkillCard
getTypeId	src/package/standard.cpp	/^Card::CardType BasicCard::getTypeId() const{$/;"	f	class:BasicCard
getTypeId	src/package/standard.cpp	/^Card::CardType EquipCard::getTypeId() const{$/;"	f	class:EquipCard
getTypeId	src/package/standard.cpp	/^Card::CardType TrickCard::getTypeId() const{$/;"	f	class:TrickCard
getVersion	src/core/audio.cpp	/^QString Audio::getVersion(){$/;"	f	class:Audio
getVersion	src/core/engine.cpp	/^QString Engine::getVersion() const{$/;"	f	class:Engine
getVersionName	src/core/engine.cpp	/^QString Engine::getVersionName() const{$/;"	f	class:Engine
getVersionNumber	src/core/engine.cpp	/^QString Engine::getVersionNumber() const{$/;"	f	class:Engine
getVictims	src/server/serverplayer.cpp	/^QList<ServerPlayer *> ServerPlayer::getVictims() const{$/;"	f	class:ServerPlayer
getViewAsSkill	src/core/engine.cpp	/^const ViewAsSkill *Engine::getViewAsSkill(const QString &skill_name) const{$/;"	f	class:Engine
getViewAsSkill	src/core/skill.cpp	/^const ViewAsSkill *TriggerSkill::getViewAsSkill() const{$/;"	f	class:TriggerSkill
getViewAsSkill	src/ui/qsanbutton.h	/^    inline const ViewAsSkill* getViewAsSkill() const { return _m_viewAsSkill; }$/;"	f	class:QSanSkillButton
getVisibleSkillList	src/core/general.cpp	/^QList<const Skill *> General::getVisibleSkillList() const{$/;"	f	class:General
getVisibleSkillList	src/core/player.cpp	/^QList<const Skill *> Player::getVisibleSkillList() const{$/;"	f	class:Player
getVisibleSkills	src/core/general.cpp	/^QSet<const Skill *> General::getVisibleSkills() const{$/;"	f	class:General
getVisibleSkills	src/core/player.cpp	/^QSet<const Skill *> Player::getVisibleSkills() const{$/;"	f	class:Player
getVotes	src/ui/GenericCardContainerUI.h	/^    inline int getVotes() { return _m_votesGot; }$/;"	f	class:PlayerCardContainer
getWeapon	src/core/player.cpp	/^WrappedCard *Player::getWeapon() const{$/;"	f	class:Player
getWeaponCount	src/package/bgm-package.cpp	/^    int getWeaponCount(ServerPlayer *caoren) const{$/;"	f	class:Kuiwei
getWinner	src/server/gamerule.cpp	/^QString GameRule::getWinner(ServerPlayer *victim) const{$/;"	f	class:GameRule
getWrappedCard	src/core/engine.cpp	/^WrappedCard *Engine::getWrappedCard(int cardId) {$/;"	f	class:Engine
getX	src/ui/sprite.cpp	/^qreal Sprite::getX() const$/;"	f	class:Sprite
getY	src/ui/sprite.cpp	/^qreal Sprite::getY() const$/;"	f	class:Sprite
get_advances	include/freetype/freetype/internal/ftdriver.h	/^    FT_Face_GetAdvancesFunc   get_advances;$/;"	m	struct:FT_Driver_ClassRec_
get_compTM	src/lua/lvm.c	/^static const TValue *get_compTM (lua_State *L, Table *mt1, Table *mt2,$/;"	f	file:
get_global_hints	include/freetype/freetype/internal/autohint.h	/^    FT_AutoHinter_GlobalGetFunc    get_global_hints;$/;"	m	struct:FT_AutoHinter_ServiceRec_
get_globals_funcs	include/freetype/freetype/internal/pshints.h	/^    PSH_Globals_Funcs  (*get_globals_funcs)( FT_Module  module );$/;"	m	struct:PSHinter_Interface_
get_glyph_cbox	include/freetype/freetype/ftrender.h	/^    FT_Renderer_GetCBoxFunc    get_glyph_cbox;$/;"	m	struct:FT_Renderer_Class_
get_glyph_data	include/freetype/freetype/ftincrem.h	/^    FT_Incremental_GetGlyphDataFunc     get_glyph_data;$/;"	m	struct:FT_Incremental_FuncsRec_
get_glyph_metrics	include/freetype/freetype/ftincrem.h	/^    FT_Incremental_GetGlyphMetricsFunc  get_glyph_metrics;$/;"	m	struct:FT_Incremental_FuncsRec_
get_handle_debug_exceptions	src/breakpad/client/windows/handler/exception_handler.h	/^  bool get_handle_debug_exceptions() const { return handle_debug_exceptions_; }$/;"	f	class:google_breakpad::ExceptionHandler
get_handler	src/breakpad/client/windows/handler/exception_handler.cc	/^  ExceptionHandler* get_handler() const { return handler_; }$/;"	f	class:google_breakpad::AutoExceptionHandler
get_index	include/freetype/freetype/internal/psaux.h	/^    (*get_index)( const char*  name,$/;"	m	struct:AFM_ParserRec_
get_interface	include/freetype/freetype/ftmodapi.h	/^    FT_Module_Requester    get_interface;$/;"	m	struct:FT_Module_Class_
get_interface	include/freetype/freetype/internal/sfnt.h	/^    FT_Module_Requester          get_interface;$/;"	m	struct:SFNT_Interface_
get_kerning	include/freetype/freetype/internal/ftdriver.h	/^    FT_Face_GetKerningFunc    get_kerning;$/;"	m	struct:FT_Driver_ClassRec_
get_kerning	include/freetype/freetype/internal/sfnt.h	/^    TT_Face_GetKerningFunc       get_kerning;$/;"	m	struct:SFNT_Interface_
get_metrics	include/freetype/freetype/internal/sfnt.h	/^    TT_Get_Metrics_Func          get_metrics;$/;"	m	struct:SFNT_Interface_
get_proc_address_sync_	src/breakpad/client/windows/crash_generation/minidump_generator.h	/^  CRITICAL_SECTION get_proc_address_sync_;$/;"	m	class:google_breakpad::MinidumpGenerator
get_psname	include/freetype/freetype/internal/sfnt.h	/^    TT_Get_PS_Name_Func          get_psname;$/;"	m	struct:SFNT_Interface_
get_reply	lua/lib/socket/tp.lua	/^local function get_reply(c)$/;"	f
get_requesting_thread_id	src/breakpad/client/windows/handler/exception_handler.h	/^  DWORD get_requesting_thread_id() const { return requesting_thread_id_; }$/;"	f	class:google_breakpad::ExceptionHandler
get_t1_funcs	include/freetype/freetype/internal/pshints.h	/^    T1_Hints_Funcs     (*get_t1_funcs)     ( FT_Module  module );$/;"	m	struct:PSHinter_Interface_
get_t2_funcs	include/freetype/freetype/internal/pshints.h	/^    T2_Hints_Funcs     (*get_t2_funcs)     ( FT_Module  module );$/;"	m	struct:PSHinter_Interface_
get_value	lua/ai/yitian-ai.lua	/^	local function get_value(a)$/;"	f
getbinopr	src/lua/lparser.c	/^static BinOpr getbinopr (int op) {$/;"	f	file:
getboolfield	src/lua/loslib.c	/^static int getboolfield (lua_State *L, const char *key) {$/;"	f	file:
getcode	src/lua/lcode.h	39;"	d
getcurrenv	src/lua/lapi.c	/^static Table *getcurrenv (lua_State *L) {$/;"	f	file:
getdrivercaps	include/fmod/fmod_output.h	/^    FMOD_OUTPUT_GETDRIVERCAPSCALLBACK  getdrivercaps;         \/* [in] For sound device enumeration.  This callback is to give System::getDriverCaps somthing to return. *\/$/;"	m	struct:FMOD_OUTPUT_DESCRIPTION
getdrivername	include/fmod/fmod_output.h	/^    FMOD_OUTPUT_GETDRIVERNAMECALLBACK  getdrivername;         \/* [in] For sound device enumeration.  This callback is to give System::getDriverName somthing to return. *\/$/;"	m	struct:FMOD_OUTPUT_DESCRIPTION
getfd 	lua/lib/socket.lua	/^        getfd = function() return sock:getfd() end,$/;"	f
getfd 	lua/lib/socket/http.lua	/^        getfd = function() return sock:getfd() end,$/;"	f
getfield	src/lua/loslib.c	/^static int getfield (lua_State *L, const char *key, int d) {$/;"	f	file:
getfreepos	src/lua/ltable.c	/^static Node *getfreepos (Table *t) {$/;"	f	file:
getfunc	src/lua/lbaselib.c	/^static void getfunc (lua_State *L, int opt) {$/;"	f	file:
getfuncname	src/lua/ldebug.c	/^static const char *getfuncname (lua_State *L, CallInfo *ci, const char **name) {$/;"	f	file:
gethandle	include/fmod/fmod_output.h	/^    FMOD_OUTPUT_GETHANDLECALLBACK      gethandle;             \/* [in] This is called from System::getOutputHandle.  This is just to return a pointer to the internal system device object that the system may be using.*\/$/;"	m	struct:FMOD_OUTPUT_DESCRIPTION
gethooktable	src/lua/ldblib.c	/^static void gethooktable (lua_State *L) {$/;"	f	file:
getiofile	src/lua/liolib.c	/^static FILE *getiofile (lua_State *L, int findex) {$/;"	f	file:
getjump	src/lua/lcode.c	/^static int getjump (FuncState *fs, int pc) {$/;"	f	file:
getjumpcontrol	src/lua/lcode.c	/^static Instruction *getjumpcontrol (FuncState *fs, int pc) {$/;"	f	file:
getlength	include/fmod/fmod_codec.h	/^    FMOD_CODEC_GETLENGTHCALLBACK    getlength;       \/* [in] Callback to return the length of the song in whatever format required when Sound::getLength is called. *\/$/;"	m	struct:FMOD_CODEC_DESCRIPTION
getline	src/lua/ldebug.h	16;"	d
getlocvar	src/lua/lparser.c	32;"	d	file:
getluaproto	src/lua/ldebug.c	/^static Proto *getluaproto (CallInfo *ci) {$/;"	f	file:
getmethod	swig/sanguosha_wrap.cxx	/^  lua_CFunction   getmethod;$/;"	m	struct:__anon148	file:
getn	src/lua/ltablib.c	/^static int getn (lua_State *L) {$/;"	f	file:
getnumdrivers	include/fmod/fmod_output.h	/^    FMOD_OUTPUT_GETNUMDRIVERSCALLBACK  getnumdrivers;         \/* [in] For sound device enumeration.  This callback is to give System::getNumDrivers somthing to return. *\/$/;"	m	struct:FMOD_OUTPUT_DESCRIPTION
getobjname	src/lua/ldebug.c	/^static const char *getobjname (lua_State *L, CallInfo *ci, int stackpos,$/;"	f	file:
getparameter	include/fmod/fmod_dsp.h	/^    FMOD_DSP_GETPARAMCALLBACK    getparameter;       \/* [w] This is called when the user calls DSP::getParameter.  Can be null. *\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
getposition	include/fmod/fmod_codec.h	/^    FMOD_CODEC_GETPOSITIONCALLBACK  getposition;     \/* [in] Tell callback for the codec for when FMOD tries to get the current position within the with Channel::getPosition. *\/$/;"	m	struct:FMOD_CODEC_DESCRIPTION
getposition	include/fmod/fmod_output.h	/^    FMOD_OUTPUT_GETPOSITIONCALLBACK    getposition;           \/* [in] This is called from the FMOD software mixer thread if 'polling' = true.  This returns a position value in samples so that FMOD knows where and when to fill its buffer. *\/$/;"	m	struct:FMOD_OUTPUT_DESCRIPTION
getsizes	src/lua/lauxlib.c	/^static void getsizes (lua_State *L) {$/;"	f	file:
getstr	src/lua/lobject.h	210;"	d
getthread	src/lua/ldblib.c	/^static lua_State *getthread (lua_State *L, int *arg) {$/;"	f	file:
getunopr	src/lua/lparser.c	/^static UnOpr getunopr (int op) {$/;"	f	file:
getwaveformat	include/fmod/fmod_codec.h	/^    FMOD_CODEC_GETWAVEFORMAT        getwaveformat;   \/* [in] Callback to tell FMOD about the waveformat of a particular subsound.  This is to save memory, rather than saving 1000 FMOD_CODEC_WAVEFORMAT structures in the codec, the codec might have a more optimal way of storing this information. *\/$/;"	m	struct:FMOD_CODEC_DESCRIPTION
gfasttm	src/lua/ltm.h	41;"	d
gfind_nodef	src/lua/lstrlib.c	/^static int gfind_nodef (lua_State *L) {$/;"	f	file:
gkey	src/lua/ltable.h	14;"	d
gloader	include/freetype/freetype/internal/tttypes.h	/^    FT_GlyphLoader   gloader;$/;"	m	struct:TT_LoaderRec_
global_State	src/lua/lstate.h	/^typedef struct global_State {$/;"	s
global_State	src/lua/lstate.h	/^} global_State;$/;"	t	typeref:struct:global_State
glow	src/ui/button.h	/^    int glow;$/;"	m	class:Button
glyf_len	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              glyf_len;$/;"	m	struct:TT_FaceRec_
glyf_offset	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong         glyf_offset;$/;"	m	struct:TT_LoaderRec_
glyph	include/freetype/freetype/freetype.h	/^    FT_GlyphSlot      glyph;$/;"	m	struct:FT_FaceRec_
glyph	include/freetype/freetype/ftglyph.h	/^  FT_Done_Glyph( FT_Glyph  glyph );$/;"	v
glyph	include/freetype/freetype/internal/psaux.h	/^    FT_GlyphSlot    glyph;$/;"	m	struct:T1_BuilderRec_
glyph	include/freetype/freetype/internal/tttypes.h	/^    FT_GlyphSlot     glyph;$/;"	m	struct:TT_LoaderRec_
glyph_bbox	include/freetype/freetype/ftrender.h	/^    FT_Glyph_GetBBoxFunc    glyph_bbox;$/;"	m	struct:FT_Glyph_Class_
glyph_class	include/freetype/freetype/internal/ftobjs.h	/^    FT_Glyph_Class          glyph_class;$/;"	m	struct:FT_RendererRec_
glyph_code	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  glyph_code;$/;"	m	struct:TT_SBit_ComponentRec_
glyph_codes	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort*          glyph_codes;$/;"	m	struct:TT_SBit_RangeRec_
glyph_copy	include/freetype/freetype/ftrender.h	/^    FT_Glyph_CopyFunc       glyph_copy;$/;"	m	struct:FT_Glyph_Class_
glyph_delta	include/freetype/freetype/internal/ftobjs.h	/^    FT_Vector       glyph_delta;$/;"	m	struct:FT_Slot_InternalRec_
glyph_done	include/freetype/freetype/ftrender.h	/^    FT_Glyph_DoneFunc       glyph_done;$/;"	m	struct:FT_Glyph_Class_
glyph_format	include/freetype/freetype/ftimage.h	/^    FT_Glyph_Format        glyph_format;$/;"	m	struct:FT_Raster_Funcs_
glyph_format	include/freetype/freetype/ftrender.h	/^    FT_Glyph_Format            glyph_format;$/;"	m	struct:FT_Renderer_Class_
glyph_format	include/freetype/freetype/ftrender.h	/^    FT_Glyph_Format         glyph_format;$/;"	m	struct:FT_Glyph_Class_
glyph_format	include/freetype/freetype/internal/ftobjs.h	/^    FT_Glyph_Format         glyph_format;$/;"	m	struct:FT_RendererRec_
glyph_hints	include/freetype/freetype/internal/ftobjs.h	/^    void*           glyph_hints;$/;"	m	struct:FT_Slot_InternalRec_
glyph_index	include/freetype/freetype/internal/services/svpscmap.h	/^    FT_UInt    glyph_index;$/;"	m	struct:PS_UniMap_
glyph_index	include/freetype/freetype/internal/tttypes.h	/^    FT_UInt          glyph_index;$/;"	m	struct:TT_LoaderRec_
glyph_indices	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort*  glyph_indices;$/;"	m	struct:TT_Post_20Rec_
glyph_init	include/freetype/freetype/ftrender.h	/^    FT_Glyph_InitFunc       glyph_init;$/;"	m	struct:FT_Glyph_Class_
glyph_loader	include/freetype/freetype/internal/ftobjs.h	/^    FT_GlyphLoader   glyph_loader;$/;"	m	struct:FT_DriverRec_
glyph_locations	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*              glyph_locations;$/;"	m	struct:TT_FaceRec_
glyph_locations_stub	include/freetype/freetype/internal/tttypes.h	/^    FT_Long*              glyph_locations_stub;$/;"	m	struct:TT_FaceRec_
glyph_matrix	include/freetype/freetype/internal/ftobjs.h	/^    FT_Matrix       glyph_matrix;$/;"	m	struct:FT_Slot_InternalRec_
glyph_names	include/freetype/freetype/internal/psaux.h	/^    FT_Byte**            glyph_names;$/;"	m	struct:T1_DecoderRec_
glyph_names	include/freetype/freetype/internal/t1types.h	/^    FT_String**      glyph_names;       \/* array of glyph names       *\/$/;"	m	struct:T1_FontRec_
glyph_names	include/freetype/freetype/internal/tttypes.h	/^    FT_Char**   glyph_names;$/;"	m	struct:TT_Post_20Rec_
glyph_names_block	include/freetype/freetype/internal/t1types.h	/^    FT_Byte*         glyph_names_block;$/;"	m	struct:T1_FontRec_
glyph_offsets	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong*           glyph_offsets;$/;"	m	struct:TT_SBit_RangeRec_
glyph_prepare	include/freetype/freetype/ftrender.h	/^    FT_Glyph_PrepareFunc    glyph_prepare;$/;"	m	struct:FT_Glyph_Class_
glyph_size	include/freetype/freetype/ftrender.h	/^    FT_Long                 glyph_size;$/;"	m	struct:FT_Glyph_Class_
glyph_transform	include/freetype/freetype/ftrender.h	/^    FT_Glyph_TransformFunc  glyph_transform;$/;"	m	struct:FT_Glyph_Class_
glyph_transformed	include/freetype/freetype/internal/ftobjs.h	/^    FT_Bool         glyph_transformed;$/;"	m	struct:FT_Slot_InternalRec_
gmatch	src/lua/lstrlib.c	/^static int gmatch (lua_State *L) {$/;"	f	file:
gmatch_aux	src/lua/lstrlib.c	/^static int gmatch_aux (lua_State *L) {$/;"	f	file:
gnext	src/lua/ltable.h	16;"	d
gnode	src/lua/ltable.h	13;"	d
goBack	src/ui/carditem.cpp	/^void CardItem::goBack(bool playAnimation, bool doFade){$/;"	f	class:CardItem
gongqi_skill.getTurnUseCard	lua/ai/yjcm2012-ai.lua	/^gongqi_skill.getTurnUseCard=function(self,inclusive)$/;"	f
gongxinItem	src/ui/cardcontainer.cpp	/^void CardContainer::gongxinItem(){$/;"	f	class:CardContainer
gongxin_items	src/ui/roomscene.h	/^    QList<CardItem *> gongxin_items;$/;"	m	class:RoomScene
gongxin_skill.getTurnUseCard	lua/ai/god-ai.lua	/^gongxin_skill.getTurnUseCard=function(self)$/;"	f
good	src/core/structs.h	/^    bool good;$/;"	m	struct:JudgeStruct
google_breakpad	src/breakpad/client/windows/common/auto_critical_section.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/client/windows/common/ipc_protocol.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/client/windows/crash_generation/client_info.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/client/windows/crash_generation/client_info.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/client/windows/crash_generation/crash_generation_client.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/client/windows/crash_generation/minidump_generator.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/client/windows/handler/exception_handler.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/client/windows/handler/exception_handler.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/common/windows/guid_string.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/common/windows/guid_string.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/common/windows/http_upload.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/common/windows/http_upload.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/common/windows/pdb_source_line_writer.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/common/windows/pdb_source_line_writer.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/common/windows/string_utils-inl.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/common/windows/string_utils.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/google_breakpad/common/minidump_size.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/basic_source_line_resolver.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/call_stack.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/code_module.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/code_modules.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/exploitability.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/fast_source_line_resolver.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/memory_region.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/minidump.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/minidump_processor.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/process_state.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/source_line_resolver_base.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/source_line_resolver_interface.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/stack_frame.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/stackwalker.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/symbol_supplier.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/google_breakpad/processor/system_info.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/address_map-inl.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/address_map.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/basic_code_module.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/basic_code_modules.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/basic_code_modules.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/basic_source_line_resolver.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/basic_source_line_resolver_types.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/binarystream.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/binarystream.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/call_stack.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/cfi_frame_info-inl.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/cfi_frame_info.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/cfi_frame_info.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/contained_range_map-inl.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/contained_range_map.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/disassembler_x86.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/disassembler_x86.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/exploitability.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/exploitability_unittest.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/exploitability_win.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/exploitability_win.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/fast_source_line_resolver.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/fast_source_line_resolver_types.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/linked_ptr.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/logging.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/logging.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/map_serializers-inl.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/map_serializers.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/minidump.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/minidump_processor.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/minidump_processor_unittest.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/module_comparer.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/module_comparer.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/module_factory.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/module_serializer.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/module_serializer.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/pathname_stripper.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/pathname_stripper.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/postfix_evaluator-inl.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/postfix_evaluator.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/process_state.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/range_map-inl.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/range_map.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/scoped_ptr.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/simple_serializer-inl.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/simple_serializer.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/simple_symbol_supplier.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/simple_symbol_supplier.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/source_line_resolver_base.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/source_line_resolver_base_types.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/stackwalker.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/stackwalker_amd64.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/stackwalker_amd64.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/stackwalker_arm.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/stackwalker_arm.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/stackwalker_ppc.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/stackwalker_ppc.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/stackwalker_sparc.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/stackwalker_sparc.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/stackwalker_x86.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/stackwalker_x86.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/static_address_map-inl.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/static_address_map.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/static_contained_range_map-inl.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/static_contained_range_map.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/static_contained_range_map_unittest.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/static_map-inl.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/static_map.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/static_map_iterator-inl.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/static_map_iterator.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/static_range_map-inl.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/static_range_map.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/static_range_map_unittest.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/synth_minidump.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/synth_minidump.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/tokenize.cc	/^namespace google_breakpad {$/;"	n	file:
google_breakpad	src/breakpad/processor/tokenize.h	/^namespace google_breakpad {$/;"	n
google_breakpad	src/breakpad/processor/windows_frame_info.h	/^namespace google_breakpad {$/;"	n
gotoScene	src/dialog/mainwindow.cpp	/^void MainWindow::gotoScene(QGraphicsScene *scene){$/;"	f	class:MainWindow
gotoStartScene	src/dialog/mainwindow.cpp	/^void MainWindow::gotoStartScene(){$/;"	f	class:MainWindow
goto_table	include/freetype/freetype/internal/sfnt.h	/^    TT_Loader_GotoTableFunc      goto_table;$/;"	m	struct:SFNT_Interface_
goto_table	include/freetype/freetype/internal/tttypes.h	/^    TT_Loader_GotoTableFunc   goto_table;$/;"	m	struct:TT_FaceRec_
gpr	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int32_t             gpr[MD_CONTEXT_PPC_GPR_COUNT];$/;"	m	struct:__anon11
gpr	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	/^  u_int64_t             gpr[MD_CONTEXT_PPC64_GPR_COUNT];$/;"	m	struct:__anon8
grabItem	src/ui/cardcontainer.cpp	/^void CardContainer::grabItem(){$/;"	f	class:CardContainer
grab_peach	src/package/joypackage.h	/^    TriggerSkill *grab_peach;$/;"	m	class:Monkey
gray	src/lua/lstate.h	/^  GCObject *gray;  \/* list of gray objects *\/$/;"	m	struct:global_State
gray2black	src/lua/lgc.h	73;"	d
gray_spans	include/freetype/freetype/ftimage.h	/^    FT_SpanFunc             gray_spans;$/;"	m	struct:FT_Raster_Params_
grayagain	src/lua/lstate.h	/^  GCObject *grayagain;  \/* list of objects to be traversed atomically *\/$/;"	m	struct:global_State
grayed	src/ui/sprite.h	/^    QImage *grayed;$/;"	m	class:SentbackEffect
group	src/dialog/choosegeneraldialog.h	/^    QButtonGroup *group;$/;"	m	class:FreeChooseDialog
group	src/dialog/customassigndialog.h	/^    QButtonGroup *group;$/;"	m	class:GeneralAssignDialog
group	src/package/wind.h	/^    QButtonGroup *group;$/;"	m	class:GuhuoDialog
growCI	src/lua/ldo.c	/^static CallInfo *growCI (lua_State *L) {$/;"	f	file:
gs	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int16_t  gs;$/;"	m	struct:__anon56
gs	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             gs; $/;"	m	struct:__anon7
gt	src/lua/lstate.h	22;"	d
guanxing_box	src/ui/roomscene.h	/^    GuanxingBox *guanxing_box;$/;"	m	class:RoomScene
guhuo	src/package/wind.cpp	/^bool GuhuoCard::guhuo(ServerPlayer* yuji, const QString& message) const{$/;"	f	class:GuhuoCard
guhuo_skill.getTurnUseCard	lua/ai/wind-ai.lua	/^guhuo_skill.getTurnUseCard=function(self)$/;"	f
guihan_skill.getTurnUseCard	lua/ai/yitian-ai.lua	/^function guihan_skill.getTurnUseCard(self)$/;"	f
guose_skill.getTurnUseCard	lua/ai/standard-ai.lua	/^guose_skill.getTurnUseCard=function(self,inclusive)$/;"	f
gval	src/lua/ltable.h	15;"	d
gxv_validate_func	include/freetype/freetype/internal/services/svgxval.h	/^  (*gxv_validate_func)( FT_Face   face,$/;"	t
h	src/lua/lparser.h	/^  Table *h;  \/* table to find (and reuse) elements in `k' *\/$/;"	m	struct:FuncState
h	src/lua/lstate.h	/^  struct Table h;$/;"	m	union:GCObject	typeref:struct:GCObject::Table
h.try 	lua/lib/socket/http.lua	/^    h.try = socket.newtry(function() h:close() end)$/;"	f
hallEntered	src/dialog/halldialog.cpp	/^void Client::hallEntered(const QString &){$/;"	f	class:Client
handCardChange	src/client/clientplayer.cpp	/^void ClientPlayer::handCardChange(int delta){$/;"	f	class:ClientPlayer
handCards	src/server/serverplayer.cpp	/^QList<int> ServerPlayer::handCards() const{$/;"	f	class:ServerPlayer
hand_list	src/dialog/customassigndialog.h	/^    QListWidget *list, *equip_list, *hand_list, *judge_list, *pile_list;$/;"	m	class:CustomAssignDialog
handcard 	lua/ai/smart-ai.lua	/^	handcard = function(a, b)$/;"	f
handcard_num	src/client/clientplayer.h	/^    int handcard_num;$/;"	m	class:ClientPlayer
handcard_subtract_hp	lua/ai/maneuvering-ai.lua	/^local function handcard_subtract_hp(a, b)$/;"	f
handcards	src/server/serverplayer.h	/^    QList<const Card*> handcards;$/;"	m	class:ServerPlayer
handle	include/fmod/fmod.h	/^    void           *handle;         \/* [r] The file handle that was filled out in the open callback. *\/$/;"	m	struct:__anon108
handleEventEffect	src/client/client.cpp	/^void Client::handleEventEffect(const Json::Value &arg)$/;"	f	class:Client
handleEventEffect	src/ui/roomscene.cpp	/^void RoomScene::handleEventEffect(const Json::Value &arg)$/;"	f	class:RoomScene
handle_	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^  ULONG64 handle_;$/;"	m	class:__anon67::HandleTraceData	file:
handle_	src/breakpad/common/windows/http_upload.cc	/^  HINTERNET handle_;$/;"	m	class:google_breakpad::HTTPUpload::AutoInternetHandle	file:
handle_debug_exceptions_	src/breakpad/client/windows/handler/exception_handler.h	/^  bool handle_debug_exceptions_;$/;"	m	class:google_breakpad::ExceptionHandler
handler	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  CFIFrameInfoParseHandler handler;$/;"	m	class:ParseHandlerFixture	file:
handler_	src/breakpad/client/windows/handler/exception_handler.cc	/^  ExceptionHandler* handler_;$/;"	m	class:google_breakpad::AutoExceptionHandler	file:
handler_	src/breakpad/processor/cfi_frame_info.h	/^  Handler *handler_;$/;"	m	class:google_breakpad::CFIRuleParser
handler_critical_section_	src/breakpad/client/windows/handler/exception_handler.h	/^  CRITICAL_SECTION handler_critical_section_;$/;"	m	class:google_breakpad::ExceptionHandler
handler_finish_semaphore_	src/breakpad/client/windows/handler/exception_handler.h	/^  HANDLE handler_finish_semaphore_;$/;"	m	class:google_breakpad::ExceptionHandler
handler_return_value_	src/breakpad/client/windows/handler/exception_handler.h	/^  bool handler_return_value_;$/;"	m	class:google_breakpad::ExceptionHandler
handler_stack_	src/breakpad/client/windows/handler/exception_handler.cc	/^vector<ExceptionHandler*>* ExceptionHandler::handler_stack_ = NULL;$/;"	m	class:google_breakpad::ExceptionHandler	file:
handler_stack_	src/breakpad/client/windows/handler/exception_handler.h	/^  static vector<ExceptionHandler*>* handler_stack_;$/;"	m	class:google_breakpad::ExceptionHandler
handler_stack_critical_section_	src/breakpad/client/windows/handler/exception_handler.cc	/^CRITICAL_SECTION ExceptionHandler::handler_stack_critical_section_;$/;"	m	class:google_breakpad::ExceptionHandler	file:
handler_stack_critical_section_	src/breakpad/client/windows/handler/exception_handler.h	/^  static CRITICAL_SECTION handler_stack_critical_section_;$/;"	m	class:google_breakpad::ExceptionHandler
handler_stack_index_	src/breakpad/client/windows/handler/exception_handler.cc	/^LONG ExceptionHandler::handler_stack_index_ = 0;$/;"	m	class:google_breakpad::ExceptionHandler	file:
handler_stack_index_	src/breakpad/client/windows/handler/exception_handler.h	/^  static LONG handler_stack_index_;$/;"	m	class:google_breakpad::ExceptionHandler
handler_start_semaphore_	src/breakpad/client/windows/handler/exception_handler.h	/^  HANDLE handler_start_semaphore_;$/;"	m	class:google_breakpad::ExceptionHandler
handler_thread_	src/breakpad/client/windows/handler/exception_handler.h	/^  HANDLE handler_thread_;$/;"	m	class:google_breakpad::ExceptionHandler
handler_types_	src/breakpad/client/windows/handler/exception_handler.h	/^  int handler_types_;$/;"	m	class:google_breakpad::ExceptionHandler
hasArmorEffect	src/core/player.cpp	/^bool Player::hasArmorEffect(const QString &armor_name) const{$/;"	f	class:Player
hasCardLock	src/core/player.cpp	/^bool Player::hasCardLock(const QString &card_str) const{$/;"	f	class:Player
hasComment	src/jsoncpp/src/json_value.cpp	/^Value::hasComment( CommentPlacement placement ) const$/;"	f	class:Json::Value
hasCommentForValue	src/jsoncpp/src/json_writer.cpp	/^StyledStreamWriter::hasCommentForValue( const Value &value )$/;"	f	class:Json::StyledStreamWriter
hasCommentForValue	src/jsoncpp/src/json_writer.cpp	/^StyledWriter::hasCommentForValue( const Value &value )$/;"	f	class:Json::StyledWriter
hasDangerousFriend	lua/ai/standard_cards-ai.lua	/^	local function hasDangerousFriend() $/;"	f
hasEquip	src/core/player.cpp	/^bool Player::hasEquip() const{$/;"	f	class:Player
hasEquip	src/core/player.cpp	/^bool Player::hasEquip(const Card *card) const{$/;"	f	class:Player
hasExplicitRebel	lua/ai/standard_cards-ai.lua	/^local function hasExplicitRebel(room)$/;"	f
hasFlag	src/core/card.cpp	/^bool Card::hasFlag(const QString &flag) const{$/;"	f	class:Card
hasFlag	src/core/player.cpp	/^bool Player::hasFlag(const QString &flag) const{$/;"	f	class:Player
hasInnateSkill	src/core/player.cpp	/^bool Player::hasInnateSkill(const QString &skill_name) const{$/;"	f	class:Player
hasLordSkill	src/core/player.cpp	/^bool Player::hasLordSkill(const QString &skill_name, bool include_lose) const{$/;"	f	class:Player
hasNoTargetResponsing	src/client/client.cpp	/^bool Client::hasNoTargetResponsing() const{$/;"	f	class:Client
hasNullification	src/server/serverplayer.cpp	/^bool ServerPlayer::hasNullification() const{$/;"	f	class:ServerPlayer
hasPreAction	src/core/WrappedCard.h	/^    inline virtual bool hasPreAction() const {$/;"	f	class:WrappedCard
hasPreAction	src/core/card.cpp	/^bool Card::hasPreAction() const{$/;"	f	class:Card
hasSameDestinationAs	src/core/structs.h	/^    inline bool hasSameDestinationAs(const CardMoveStruct &move)$/;"	f	struct:CardMoveStruct
hasSameDestinationAs	src/core/structs.h	/^    inline bool hasSameDestinationAs(const CardsMoveStruct &move)$/;"	f	struct:CardsMoveStruct
hasSameSkill	src/scenario/boss-mode-scenario.cpp	/^    bool hasSameSkill(Room *room, QString skill_name) const{$/;"	f	class:ImpasseRule
hasSameSourceAs	src/core/structs.h	/^    inline bool hasSameSourceAs(const CardMoveStruct &move)$/;"	f	struct:CardMoveStruct
hasSameSourceAs	src/core/structs.h	/^    inline bool hasSameSourceAs(const CardsMoveStruct &move)$/;"	f	struct:CardsMoveStruct
hasSkill	src/core/general.cpp	/^bool General::hasSkill(const QString &skill_name) const{$/;"	f	class:General
hasSkill	src/core/player.cpp	/^bool Player::hasSkill(const QString &skill_name) const{$/;"	f	class:Player
hasTimedOut	src/core/protocol.h	/^        inline bool hasTimedOut()$/;"	f	class:QSanProtocol::Countdown
hasUsed	src/core/player.cpp	/^bool Player::hasUsed(const QString &card_class) const{$/;"	f	class:Player
hasWeapon	src/core/player.cpp	/^bool Player::hasWeapon(const QString &weapon_name) const{$/;"	f	class:Player
hasWelfare	src/server/room.cpp	/^bool Room::hasWelfare(const ServerPlayer *player) const{$/;"	f	class:Room
has_debug_info_	src/breakpad/google_breakpad/processor/minidump.h	/^  bool              has_debug_info_;$/;"	m	class:google_breakpad::MinidumpModule
has_preact	src/core/card.h	/^    bool has_preact;$/;"	m	class:Card
has_provided	src/server/room.h	/^    bool has_provided;$/;"	m	class:Room
hash	src/lua/lobject.h	/^    unsigned int hash;$/;"	m	struct:TString::__anon91
hash	src/lua/lstate.h	/^  GCObject **hash;$/;"	m	struct:stringtable
hashboolean	src/lua/ltable.c	53;"	d	file:
hashmod	src/lua/ltable.c	60;"	d	file:
hashnum	src/lua/ltable.c	/^static Node *hashnum (const Table *t, lua_Number n) {$/;"	f	file:
hashpointer	src/lua/ltable.c	63;"	d	file:
hashpow2	src/lua/ltable.c	50;"	d	file:
hashstr	src/lua/ltable.c	52;"	d	file:
hasjumps	src/lua/lcode.c	27;"	d	file:
hasmultret	src/lua/lparser.c	30;"	d	file:
hdmx	include/freetype/freetype/internal/tttypes.h	/^    TT_HdmxRec            hdmx;$/;"	m	struct:TT_FaceRec_
hdmx_record_count	include/freetype/freetype/internal/tttypes.h	/^    FT_UInt               hdmx_record_count;$/;"	m	struct:TT_FaceRec_
hdmx_record_size	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              hdmx_record_size;$/;"	m	struct:TT_FaceRec_
hdmx_record_sizes	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*              hdmx_record_sizes;$/;"	m	struct:TT_FaceRec_
hdmx_table	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*              hdmx_table;$/;"	m	struct:TT_FaceRec_
hdmx_table_size	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              hdmx_table_size;$/;"	m	struct:TT_FaceRec_
head	include/freetype/freetype/fttypes.h	/^    FT_ListNode  head;$/;"	m	struct:FT_ListRec_
header	include/freetype/freetype/internal/tttypes.h	/^    TT_Header             header;       \/* TrueType header table          *\/$/;"	m	struct:TT_FaceRec_
header	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t header[2];$/;"	m	struct:__anon56::__anon57::__anon58
header	src/breakpad/google_breakpad/processor/minidump.h	/^  virtual const MDRawHeader* header() const { return valid_ ? &header_ : NULL; }$/;"	f	class:google_breakpad::Minidump
header_	src/breakpad/google_breakpad/processor/minidump.h	/^  MDRawHeader               header_;$/;"	m	class:google_breakpad::Minidump
hegemony_checkbox	src/server/server.h	/^    QCheckBox *hegemony_checkbox;$/;"	m	class:ServerDialog
hegemony_label	src/client/clientstruct.h	/^    QLabel *hegemony_label;$/;"	m	class:ServerInfoWidget
height	include/freetype/freetype/freetype.h	/^    FT_Long               height;$/;"	m	struct:FT_Size_RequestRec_
height	include/freetype/freetype/freetype.h	/^    FT_Pos     height;      \/* text height in 26.6 frac. pixels       *\/$/;"	m	struct:FT_Size_Metrics_
height	include/freetype/freetype/freetype.h	/^    FT_Pos  height;$/;"	m	struct:FT_Glyph_Metrics_
height	include/freetype/freetype/freetype.h	/^    FT_Short          height;$/;"	m	struct:FT_FaceRec_
height	include/freetype/freetype/freetype.h	/^    FT_Short  height;$/;"	m	struct:FT_Bitmap_Size_
height	include/freetype/freetype/ftcache.h	/^    FT_Byte   height;$/;"	m	struct:FTC_SBitRec_
height	include/freetype/freetype/ftcache.h	/^    FT_Int      height;$/;"	m	struct:FTC_ImageTypeRec_
height	include/freetype/freetype/ftcache.h	/^    FT_UInt     height;$/;"	m	struct:FTC_ScalerRec_
height	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte  height;$/;"	m	struct:TT_SBit_MetricsRec_
height	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte  height;$/;"	m	struct:TT_SBit_Small_Metrics_
height	src/ui/qsanbutton.cpp	/^int QSanInvokeSkillDock::height() const$/;"	f	class:QSanInvokeSkillDock
hidden	src/core/general.h	/^    bool hidden;$/;"	m	class:General
hidden_generals	src/core/engine.h	/^    QHash<QString, const General *> generals, hidden_generals;$/;"	m	class:Engine
hide	src/ui/TimedProgressBar.cpp	/^void TimedProgressBar::hide()$/;"	f	class:TimedProgressBar
hideAvatar	src/ui/carditem.cpp	/^void CardItem::hideAvatar()$/;"	f	class:CardItem
hideAvatarRects	src/dialog/cardeditor.cpp	/^void CardScene::hideAvatarRects(){$/;"	f	class:CardScene
hideAvatars	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::hideAvatars()$/;"	f	class:PlayerCardContainer
hideAvatars	src/ui/roomscene.cpp	/^void RoomScene::hideAvatars(){$/;"	f	class:RoomScene
hideEmotion	src/ui/photo.cpp	/^void Photo::hideEmotion(){$/;"	f	class:Photo
hideFootnote	src/ui/carditem.h	/^    inline void hideFootnote() { _m_showFootnote = true; }$/;"	f	class:CardItem
hideFrame	src/ui/carditem.cpp	/^void CardItem::hideFrame(){$/;"	f	class:CardItem
hideProgressBar	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::hideProgressBar()$/;"	f	class:PlayerCardContainer
hideSkillName	src/ui/photo.cpp	/^void Photo::hideSkillName(){$/;"	f	class:Photo
high	src/breakpad/google_breakpad/common/breakpad_types.h	/^  u_int64_t high;$/;"	m	struct:__anon5
highlightEquip	src/ui/dashboard.cpp	/^void Dashboard::highlightEquip(QString skillName, bool highlight)$/;"	f	class:Dashboard
hint_mode	include/freetype/freetype/internal/psaux.h	/^    FT_Render_Mode       hint_mode;$/;"	m	struct:T1_DecoderRec_
hintmask	include/freetype/freetype/internal/pshints.h	/^    T2_Hints_MaskFunc     hintmask;$/;"	m	struct:T2_Hints_FuncsRec_
hints	include/freetype/freetype/internal/pshints.h	/^    T1_Hints               hints;$/;"	m	struct:T1_Hints_FuncsRec_
hints	include/freetype/freetype/internal/pshints.h	/^    T2_Hints              hints;$/;"	m	struct:T2_Hints_FuncsRec_
hints_funcs	include/freetype/freetype/internal/psaux.h	/^    void*           hints_funcs;    \/* hinter-specific *\/$/;"	m	struct:T1_BuilderRec_
hints_globals	include/freetype/freetype/internal/psaux.h	/^    void*           hints_globals;  \/* hinter-specific *\/$/;"	m	struct:T1_BuilderRec_
history	src/core/player.h	/^    QHash<QString, int> history;$/;"	m	class:Player
homePos	src/ui/carditem.cpp	/^QPointF CardItem::homePos() const{$/;"	f	class:CardItem
home_pos	src/ui/carditem.h	/^    QPointF home_pos;$/;"	m	class:CardItem
hook	src/lua/lstate.h	/^  lua_Hook hook;$/;"	m	struct:lua_State
hookcount	src/lua/lstate.h	/^  int hookcount;$/;"	m	struct:lua_State
hookf	src/lua/ldblib.c	/^static void hookf (lua_State *L, lua_Debug *ar) {$/;"	f	file:
hookmask	src/lua/lstate.h	/^  lu_byte hookmask;$/;"	m	struct:lua_State
hori	include/freetype/freetype/internal/tttypes.h	/^    TT_SBit_LineMetricsRec  hori;$/;"	m	struct:TT_SBit_ScaleRec_
hori	include/freetype/freetype/internal/tttypes.h	/^    TT_SBit_LineMetricsRec  hori;$/;"	m	struct:TT_SBit_StrikeRec_
horiAdvance	include/freetype/freetype/freetype.h	/^    FT_Pos  horiAdvance;$/;"	m	struct:FT_Glyph_Metrics_
horiAdvance	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte  horiAdvance;$/;"	m	struct:TT_SBit_MetricsRec_
horiBearingX	include/freetype/freetype/freetype.h	/^    FT_Pos  horiBearingX;$/;"	m	struct:FT_Glyph_Metrics_
horiBearingX	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  horiBearingX;$/;"	m	struct:TT_SBit_MetricsRec_
horiBearingY	include/freetype/freetype/freetype.h	/^    FT_Pos  horiBearingY;$/;"	m	struct:FT_Glyph_Metrics_
horiBearingY	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  horiBearingY;$/;"	m	struct:TT_SBit_MetricsRec_
horiResolution	include/freetype/freetype/freetype.h	/^    FT_UInt               horiResolution;$/;"	m	struct:FT_Size_RequestRec_
horizontal	include/freetype/freetype/internal/tttypes.h	/^    TT_HoriHeader         horizontal;   \/* TrueType horizontal header     *\/$/;"	m	struct:TT_FaceRec_
horizontal_resolution	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  horizontal_resolution;$/;"	m	struct:FT_WinFNT_HeaderRec_
horz_metrics	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*              horz_metrics;$/;"	m	struct:TT_FaceRec_
horz_metrics_offset	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              horz_metrics_offset;$/;"	m	struct:TT_FaceRec_
horz_metrics_size	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              horz_metrics_size;$/;"	m	struct:TT_FaceRec_
houyuan_skill.getTurnUseCard	lua/ai/wisdom-ai.lua	/^houyuan_skill.getTurnUseCard=function(self)$/;"	f
hoverEnterEvent	src/ui/button.cpp	/^void Button::hoverEnterEvent(QGraphicsSceneHoverEvent *){$/;"	f	class:Button
hoverEnterEvent	src/ui/carditem.cpp	/^void CardItem::hoverEnterEvent(QGraphicsSceneHoverEvent *)$/;"	f	class:CardItem
hoverEnterEvent	src/ui/qsanbutton.cpp	/^void QSanButton::hoverEnterEvent(QGraphicsSceneHoverEvent *event)$/;"	f	class:QSanButton
hoverLeaveEvent	src/ui/carditem.cpp	/^void CardItem::hoverLeaveEvent(QGraphicsSceneHoverEvent *)$/;"	f	class:CardItem
hoverLeaveEvent	src/ui/qsanbutton.cpp	/^void QSanButton::hoverLeaveEvent(QGraphicsSceneHoverEvent *event) {$/;"	f	class:QSanButton
hoverMoveEvent	src/ui/chatwidget.cpp	/^void MyPixmapItem::hoverMoveEvent ( QGraphicsSceneHoverEvent * event )$/;"	f	class:MyPixmapItem
hoverMoveEvent	src/ui/qsanbutton.cpp	/^void QSanButton::hoverMoveEvent(QGraphicsSceneHoverEvent *event){$/;"	f	class:QSanButton
hp	src/core/player.h	/^    int hp, max_hp;$/;"	m	class:Player
hp 	lua/ai/smart-ai.lua	/^	hp = function(a, b)$/;"	f
hpChange	src/client/client.cpp	/^void Client::hpChange(const QString &change_str){$/;"	f	class:Client
hp_prompt	src/dialog/customassigndialog.h	/^    QCheckBox *max_hp_prompt,*hp_prompt;$/;"	m	class:CustomAssignDialog
hp_spin	src/dialog/customassigndialog.h	/^    QSpinBox *max_hp_spin,*hp_spin;$/;"	m	class:CustomAssignDialog
hp_subtract_handcard	lua/ai/standard_cards-ai.lua	/^local function hp_subtract_handcard(a,b)$/;"	f
huangtianv_skill.getTurnUseCard	lua/ai/wind-ai.lua	/^huangtianv_skill.getTurnUseCard=function(self)$/;"	f
huoji_skill.getTurnUseCard	lua/ai/fire-ai.lua	/^huoji_skill.getTurnUseCard=function(self)$/;"	f
hvalue	src/lua/lobject.h	99;"	d
iABC	src/lua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iABx	src/lua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iAsBx	src/lua/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
i_ci	src/lua/lua.h	/^  int i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug
i_key	src/lua/lobject.h	/^  TKey i_key;$/;"	m	struct:Node
i_val	src/lua/lobject.h	/^  TValue i_val;$/;"	m	struct:Node
id	include/js.h	/^  int          id ;$/;"	m	class:jsJoystick
id	src/breakpad/client/windows/common/ipc_protocol.h	/^  DWORD id;$/;"	m	struct:google_breakpad::ProtocolMessage
id	src/breakpad/processor/address_map_unittest.cc	/^  int id() const { return id_; }$/;"	f	class:__anon76::CountedObject
id	src/breakpad/processor/range_map_unittest.cc	/^  int id() const { return id_; }$/;"	f	class:__anon84::CountedObject
id	src/breakpad/processor/range_map_unittest.cc	/^  int id;$/;"	m	struct:__anon84::RangeTest	file:
id	src/breakpad/processor/static_range_map_unittest.cc	/^  EntryType id;$/;"	m	struct:__anon85::RangeTest	file:
id_	src/breakpad/processor/address_map_unittest.cc	/^  int id_;$/;"	m	class:__anon76::CountedObject	file:
id_	src/breakpad/processor/range_map_unittest.cc	/^  int id_;$/;"	m	class:__anon84::CountedObject	file:
id_to_thread_map_	src/breakpad/google_breakpad/processor/minidump.h	/^  IDToThreadMap    id_to_thread_map_;$/;"	m	class:google_breakpad::MinidumpThreadList
ident	include/freetype/freetype/internal/psaux.h	/^    const char*         ident;        \/* field identifier               *\/$/;"	m	struct:T1_FieldRec_
ids	src/client/aux-skills.h	/^    QList<int> ids;$/;"	m	class:YijiViewAsSkill
idx	include/freetype/freetype/internal/ftdebug.h	/^  FT_Trace_Get_Name( FT_Int  idx );$/;"	v
if     ts 	lua/lib/expand.lua	/^      if     ts == 'function' then value = symt(index)$/;"	f
if  type(filter) 	lua/ai/sp-ai.lua	/^			if  type(filter) == "function" and filter(self, to, card) then return true end$/;"	f
if base.type(ok) ~	lua/lib/socket/tp.lua	/^    if base.type(ok) ~= "function" then$/;"	f
if callback and type(callback) 	lua/ai/standard_cards-ai.lua	/^					if callback and type(callback) == "function" and callback(target, self) and$/;"	f
if filter and type(filter) 	lua/ai/standard_cards-ai.lua	/^		if filter and type(filter) == "function" and filter(self, enemy, card) then return true end$/;"	f
if type(callback)	lua/ai/smart-ai.lua	/^						if type(callback)=="function" and callback(friend, hcard, self) then$/;"	f
if type(callback) 	lua/ai/smart-ai.lua	/^				if type(callback) == "function" then$/;"	f
if type(callback) 	lua/ai/smart-ai.lua	/^			if type(callback) == "function" then$/;"	f
if type(callback) 	lua/ai/smart-ai.lua	/^		if type(callback) == "function" and callback(card, card_place, player) then return true end$/;"	f
if type(callback) 	lua/ai/smart-ai.lua	/^		if type(callback) == "function" and callback(class_name, player) then$/;"	f
if type(callback) 	lua/ai/smart-ai.lua	/^		if type(callback) == "function" then$/;"	f
if type(callback) 	lua/ai/smart-ai.lua	/^	if type(callback) == "function" then$/;"	f
if type(cardchosen) 	lua/ai/smart-ai.lua	/^	if type(cardchosen) == "function" then$/;"	f
if type(mixin.included)	lua/lib/middleclass.lua	/^  if type(mixin.included)=="function" then mixin:included(klass) end$/;"	f
if type(playerchosen) 	lua/ai/smart-ai.lua	/^	if type(playerchosen) == "function" then$/;"	f
if type(value)	lua/lib/expand.lua	/^          if type(value)=='function' then value = value(symt) end$/;"	f
ifstat	src/lua/lparser.c	/^static void ifstat (LexState *ls, int line) {$/;"	f	file:
ignore_unpatented_hinter	include/freetype/freetype/internal/ftobjs.h	/^    FT_Bool             ignore_unpatented_hinter;$/;"	m	struct:FT_Face_InternalRec_
ignoresetfilesystem	include/fmod/fmod.h	/^    int                            ignoresetfilesystem;\/* [w] Optional. Specify 0 to ignore. Set to 1 to use fmod's built in file system. Ignores setFileSystem callbacks and also FMOD_CREATESOUNEXINFO file callbacks.  Useful for specific cases where you don't want to use your own file system but want to use fmod's file system (ie net streaming). *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
image_format	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort           image_format;$/;"	m	struct:TT_SBit_RangeRec_
image_offset	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong            image_offset;$/;"	m	struct:TT_SBit_RangeRec_
image_size	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong            image_size;$/;"	m	struct:TT_SBit_RangeRec_
img_	src/breakpad/common/windows/pdb_source_line_writer.cc	/^  PLOADED_IMAGE img_;$/;"	m	class:google_breakpad::AutoImage	file:
import	src/dialog/cardeditor.cpp	/^void CardEditor::import(){$/;"	f	class:CardEditor
in	src/jsoncpp/src/json_reader.cpp	/^in( Reader::Char c, Reader::Char c1, Reader::Char c2, Reader::Char c3, Reader::Char c4 )$/;"	f	namespace:Json
in	src/jsoncpp/src/json_reader.cpp	/^in( Reader::Char c, Reader::Char c1, Reader::Char c2, Reader::Char c3, Reader::Char c4, Reader::Char c5 )$/;"	f	namespace:Json
inMyAttackRange	src/core/player.cpp	/^bool Player::inMyAttackRange(const Player *other) const{$/;"	f	class:Player
inOneGroup	lua/ai/smart-ai.lua	/^	local function inOneGroup(player)$/;"	f
in_attack	src/dialog/distanceviewdialog.cpp	/^    QLineEdit *in_attack;$/;"	m	struct:DistanceViewDialogUI	file:
inc_ci	src/lua/ldo.c	259;"	d	file:
inclinenumber	src/lua/llex.c	/^static void inclinenumber (LexState *ls) {$/;"	f	file:
include_equip	src/client/aux-skills.h	/^    bool include_equip;$/;"	m	class:DiscardSkill
includes	lua/lib/middleclass.lua	/^function includes(mixin, aClass)$/;"	f
inclusionlist	include/fmod/fmod.h	/^    int                           *inclusionlist;      \/* [w] Optional. Specify 0 to ignore. In a multi-sample format such as .FSB\/.DLS\/.SF2 it may be desirable to specify only a subset of sounds to be loaded out of the whole file.  This is an array of subsound indices to load into memory when created. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
inclusionlistnum	include/fmod/fmod.h	/^    int                            inclusionlistnum;   \/* [w] Optional. Specify 0 to ignore. This is the number of integers contained within the inclusionlist array. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
incr_top	src/lua/ldo.h	22;"	d
incremental_interface	include/freetype/freetype/internal/ftobjs.h	/^    FT_Incremental_InterfaceRec*  incremental_interface;$/;"	m	struct:FT_Face_InternalRec_
indent	src/jsoncpp/src/json_writer.cpp	/^StyledStreamWriter::indent()$/;"	f	class:Json::StyledStreamWriter
indent	src/jsoncpp/src/json_writer.cpp	/^StyledWriter::indent()$/;"	f	class:Json::StyledWriter
indentSize_	src/jsoncpp/include/json/writer.h	/^      int indentSize_;$/;"	m	class:Json::StyledWriter
indentString_	src/jsoncpp/include/json/writer.h	/^      std::string indentString_;$/;"	m	class:Json::StyledStreamWriter
indentString_	src/jsoncpp/include/json/writer.h	/^      std::string indentString_;$/;"	m	class:Json::StyledWriter
indentation_	src/jsoncpp/include/json/writer.h	/^      std::string indentation_;$/;"	m	class:Json::StyledStreamWriter
index	include/freetype/freetype/internal/ftgloadr.h	/^    FT_Int     index;$/;"	m	struct:FT_SubGlyphRec_
index	src/jsoncpp/src/json_value.cpp	/^Value::CZString::index() const$/;"	f	class:Json::Value::CZString
index	src/ui/sprite.h	/^    int index;$/;"	m	class:QAnimatedEffect
index1	include/freetype/freetype/internal/t1types.h	/^    FT_Int  index1;$/;"	m	struct:AFM_KernPairRec_
index2	include/freetype/freetype/internal/t1types.h	/^    FT_Int  index2;$/;"	m	struct:AFM_KernPairRec_
index2adr	src/lua/lapi.c	/^static TValue *index2adr (lua_State *L, int idx) {$/;"	f	file:
index_	src/breakpad/processor/static_map_iterator.h	/^  int32_t index_;$/;"	m	class:google_breakpad::StaticMapIterator
index_	src/jsoncpp/include/json/value.h	/^         ArrayIndex index_;$/;"	m	class:Json::Value::CZString
index_	src/jsoncpp/include/json/value.h	/^      ArrayIndex index_;$/;"	m	class:Json::PathArgument
index_format	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort           index_format;$/;"	m	struct:TT_SBit_RangeRec_
indexupvalue	src/lua/lparser.c	/^static int indexupvalue (FuncState *fs, TString *name, expdesc *v) {$/;"	f	file:
info	src/breakpad/google_breakpad/processor/minidump.h	/^  const MDRawMemoryInfo* info() const { return valid_ ? &memory_info_ : NULL; }$/;"	f	class:google_breakpad::MinidumpMemoryInfo
info	src/lua/lparser.h	/^    struct { int info, aux; } s;$/;"	m	struct:expdesc::__anon99::__anon100
info	src/lua/lparser.h	/^  lu_byte info;$/;"	m	struct:upvaldesc
info_count	src/breakpad/google_breakpad/processor/minidump.h	/^  unsigned int info_count() const { return valid_ ? info_count_ : 0; }$/;"	f	class:google_breakpad::MinidumpMemoryInfoList
info_count_	src/breakpad/google_breakpad/processor/minidump.h	/^  u_int32_t info_count_;$/;"	m	class:google_breakpad::MinidumpMemoryInfoList
info_tailcall	src/lua/ldebug.c	/^static void info_tailcall (lua_Debug *ar) {$/;"	f	file:
infos_	src/breakpad/google_breakpad/processor/minidump.h	/^  MinidumpMemoryInfos* infos_;$/;"	m	class:google_breakpad::MinidumpMemoryInfoList
init	include/fmod/fmod_output.h	/^    FMOD_OUTPUT_INITCALLBACK           init;                  \/* [in] Initialization function for the output device.  This is called from System::init. *\/$/;"	m	struct:FMOD_OUTPUT_DESCRIPTION
init	include/freetype/freetype/internal/ftobjs.h	/^    FT_CMap_InitFunc       init;$/;"	m	struct:FT_CMap_ClassRec_
init	include/freetype/freetype/internal/psaux.h	/^    (*init)( AFM_Parser  parser,$/;"	m	struct:AFM_Parser_FuncsRec_
init	include/freetype/freetype/internal/psaux.h	/^    (*init)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_
init	include/freetype/freetype/internal/psaux.h	/^    (*init)( PS_Table   table,$/;"	m	struct:PS_Table_FuncsRec_
init	include/freetype/freetype/internal/psaux.h	/^    (*init)( T1_Builder    builder,$/;"	m	struct:T1_Builder_FuncsRec_
init	include/freetype/freetype/internal/psaux.h	/^    (*init)( T1_Decoder           decoder,$/;"	m	struct:T1_Decoder_FuncsRec_
init	include/freetype/freetype/internal/psaux.h	/^    FT_Long            init;$/;"	m	struct:PS_TableRec_
init	src/core/audio.cpp	/^void Audio::init(){$/;"	f	class:Audio
init	src/core/settings.cpp	/^void Settings::init(){$/;"	f	class:Settings
init	src/lua/lstrlib.c	/^    const char *init;$/;"	m	struct:MatchState::__anon101	file:
init	src/ui/button.cpp	/^void Button::init()$/;"	f	class:Button
init	src/util/nativesocket.cpp	/^void NativeClientSocket::init(){$/;"	f	class:NativeClientSocket
initCallbacks	src/server/room.cpp	/^void Room::initCallbacks(){$/;"	f	class:Room
initEasyTextPos	src/ui/chatwidget.cpp	/^void MyPixmapItem::initEasyTextPos(){$/;"	f	class:MyPixmapItem
initFaceBoardPos	src/ui/chatwidget.cpp	/^void MyPixmapItem::initFaceBoardPos(){$/;"	f	class:MyPixmapItem
initMediaSource	src/core/skill.cpp	/^void Skill::initMediaSource(){$/;"	f	class:Skill
initSkillsForPlayers	src/server/room.cpp	/^void Room::initSkillsForPlayers(){$/;"	f	class:Room
init_exp	src/lua/lparser.c	/^static void init_exp (expdesc *e, expkind k, int i) {$/;"	f	file:
init_face	include/freetype/freetype/internal/ftdriver.h	/^    FT_Face_InitFunc          init_face;$/;"	m	struct:FT_Driver_ClassRec_
init_face	include/freetype/freetype/internal/sfnt.h	/^    TT_Init_Face_Func            init_face;$/;"	m	struct:SFNT_Interface_
init_size	include/freetype/freetype/internal/ftdriver.h	/^    FT_Size_InitFunc          init_size;$/;"	m	struct:FT_Driver_ClassRec_
init_slot	include/freetype/freetype/internal/ftdriver.h	/^    FT_Slot_InitFunc          init_slot;$/;"	m	struct:FT_Driver_ClassRec_
initialseekposition	include/fmod/fmod.h	/^    unsigned int                   initialseekposition;\/* [w] Optional. Specify 0 to ignore. For streams. Specify an initial position to seek the stream to. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
initialseekpostype	include/fmod/fmod.h	/^    FMOD_TIMEUNIT                  initialseekpostype; \/* [w] Optional. Specify 0 to ignore. For streams. Specify the time unit for the position set in initialseekposition. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
initialsoundgroup	include/fmod/fmod.h	/^    FMOD_SOUNDGROUP               *initialsoundgroup;  \/* [w] Optional. Specify 0 to ignore. Specify a sound group if required, to put sound in as it is created. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
initialsubsound	include/fmod/fmod.h	/^    int                            initialsubsound;    \/* [w] Optional. Specify 0 to ignore. In a multi-sample file format such as .FSB\/.DLS\/.SF2, specify the initial subsound to seek to, only if FMOD_CREATESTREAM is used. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
input_skill	src/dialog/customassigndialog.h	/^    QLineEdit *input_skill;$/;"	m	class:SkillAssignDialog
ins_pos	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong         ins_pos;$/;"	m	struct:TT_LoaderRec_
insertBoldText	src/dialog/cardeditor.cpp	/^void SkillBox::insertBoldText(const QString &bold_text){$/;"	f	class:SkillBox
insertPhase	src/server/serverplayer.cpp	/^void ServerPlayer::insertPhase(Player::Phase phase){$/;"	f	class:ServerPlayer
insertSuit	src/dialog/cardeditor.cpp	/^void SkillBox::insertSuit(int index){$/;"	f	class:SkillBox
insideButton	src/ui/qsanbutton.cpp	/^bool QSanButton::insideButton(QPointF pos) const$/;"	f	class:QSanButton
installEquip	src/server/room.cpp	/^void Room::installEquip(ServerPlayer *player, const QString &equip_name){$/;"	f	class:Room
installPackage	src/dialog/packagingeditor.cpp	/^void PackagingEditor::installPackage(){$/;"	f	class:PackagingEditor
instance	include/fmod/fmod_dsp.h	/^    FMOD_DSP      *instance;      \/* [r] Handle to the DSP hand the user created.  Not to be modified.  C++ users cast to FMOD::DSP to use.  *\/$/;"	m	struct:FMOD_DSP_STATE
instanceOf	lua/lib/middleclass.lua	/^function instanceOf(aClass, obj)$/;"	f
instance_count_	src/breakpad/client/windows/handler/exception_handler.cc	/^volatile LONG ExceptionHandler::instance_count_ = 0;$/;"	m	class:google_breakpad::ExceptionHandler	file:
instance_count_	src/breakpad/client/windows/handler/exception_handler.h	/^  volatile static LONG instance_count_;$/;"	m	class:google_breakpad::ExceptionHandler
instr_valid_	src/breakpad/processor/disassembler_x86.h	/^    bool instr_valid_;$/;"	m	class:google_breakpad::DisassemblerX86
instruction	src/breakpad/google_breakpad/processor/stack_frame.h	/^  u_int64_t instruction;$/;"	m	struct:google_breakpad::StackFrame
instructions	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*         instructions;$/;"	m	struct:TT_LoaderRec_
intValue	src/jsoncpp/include/json/value.h	/^      intValue,      \/\/\/< signed integer value$/;"	e	enum:Json::ValueType
int_	src/jsoncpp/include/json/value.h	/^         LargestInt int_;$/;"	m	union:Json::Value::ValueHolder
integer	include/freetype/freetype/ftbdf.h	/^      FT_Int32        integer;$/;"	m	union:BDF_PropertyRec_::__anon104
integerToDouble	src/jsoncpp/src/json_value.cpp	/^static inline double integerToDouble( Json::UInt64 value )$/;"	f	namespace:Json
integerToDouble	src/jsoncpp/src/json_value.cpp	/^static inline double integerToDouble( T value )$/;"	f	namespace:Json
internal	include/freetype/freetype/freetype.h	/^    FT_Face_Internal  internal;$/;"	m	struct:FT_FaceRec_
internal	include/freetype/freetype/freetype.h	/^    FT_Size_Internal  internal;$/;"	m	struct:FT_SizeRec_
internal	include/freetype/freetype/freetype.h	/^    FT_Slot_Internal  internal;$/;"	m	struct:FT_GlyphSlotRec_
internal_leading	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  internal_leading;$/;"	m	struct:FT_WinFNT_HeaderRec_
interpreter	include/freetype/freetype/internal/tttypes.h	/^    TT_Interpreter        interpreter;$/;"	m	struct:TT_FaceRec_
interrupt_	src/breakpad/processor/exploitability_unittest.cc	/^  bool interrupt_;$/;"	m	class:__anon74::TestSymbolSupplier	file:
interrupt_	src/breakpad/processor/minidump_processor_unittest.cc	/^  bool interrupt_;$/;"	m	class:__anon77::TestSymbolSupplier	file:
introduceTo	src/server/serverplayer.cpp	/^void ServerPlayer::introduceTo(ServerPlayer *player){$/;"	f	class:ServerPlayer
invalidPath	src/jsoncpp/src/json_value.cpp	/^Path::invalidPath( const std::string &path, $/;"	f	class:Json::Path
invalid_instruction	src/breakpad/processor/disassembler_x86_unittest.cc	/^unsigned char invalid_instruction[] = "\\x00";  \/\/ invalid$/;"	m	namespace:__anon68	file:
invertjump	src/lua/lcode.c	/^static void invertjump (FuncState *fs, expdesc *e) {$/;"	f	file:
invoke	src/server/serverplayer.cpp	/^void ServerPlayer::invoke(const QSanPacket* packet)$/;"	f	class:ServerPlayer
invoke	src/server/serverplayer.cpp	/^void ServerPlayer::invoke(const char *method, const QString &arg){$/;"	f	class:ServerPlayer
io_close	src/lua/liolib.c	/^static int io_close (lua_State *L) {$/;"	f	file:
io_fclose	src/lua/liolib.c	/^static int io_fclose (lua_State *L) {$/;"	f	file:
io_flush	src/lua/liolib.c	/^static int io_flush (lua_State *L) {$/;"	f	file:
io_gc	src/lua/liolib.c	/^static int io_gc (lua_State *L) {$/;"	f	file:
io_input	src/lua/liolib.c	/^static int io_input (lua_State *L) {$/;"	f	file:
io_lines	src/lua/liolib.c	/^static int io_lines (lua_State *L) {$/;"	f	file:
io_noclose	src/lua/liolib.c	/^static int io_noclose (lua_State *L) {$/;"	f	file:
io_open	src/lua/liolib.c	/^static int io_open (lua_State *L) {$/;"	f	file:
io_output	src/lua/liolib.c	/^static int io_output (lua_State *L) {$/;"	f	file:
io_pclose	src/lua/liolib.c	/^static int io_pclose (lua_State *L) {$/;"	f	file:
io_popen	src/lua/liolib.c	/^static int io_popen (lua_State *L) {$/;"	f	file:
io_read	src/lua/liolib.c	/^static int io_read (lua_State *L) {$/;"	f	file:
io_readline	src/lua/liolib.c	/^static int io_readline (lua_State *L) {$/;"	f	file:
io_tmpfile	src/lua/liolib.c	/^static int io_tmpfile (lua_State *L) {$/;"	f	file:
io_tostring	src/lua/liolib.c	/^static int io_tostring (lua_State *L) {$/;"	f	file:
io_type	src/lua/liolib.c	/^static int io_type (lua_State *L) {$/;"	f	file:
io_write	src/lua/liolib.c	/^static int io_write (lua_State *L) {$/;"	f	file:
iolib	src/lua/liolib.c	/^static const luaL_Reg iolib[] = {$/;"	v	file:
ipairsaux	src/lua/lbaselib.c	/^static int ipairsaux (lua_State *L) {$/;"	f	file:
iregs	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	/^  u_int32_t     iregs[MD_CONTEXT_ARM_GPR_COUNT];$/;"	m	struct:__anon62
isAggressive	src/package/standard.cpp	/^bool TrickCard::isAggressive() const{$/;"	f	class:TrickCard
isAlive	src/core/player.cpp	/^bool Player::isAlive() const{$/;"	f	class:Player
isAllNude	src/core/player.cpp	/^bool Player::isAllNude() const{$/;"	f	class:Player
isAnchorEnable	src/ui/magatamasItem.h	/^    inline bool isAnchorEnable() { return anchorEnabled; }$/;"	f	class:MagatamasBoxItem
isArray	src/jsoncpp/src/json_value.cpp	/^Value::isArray() const$/;"	f	class:Json::Value
isArray_	src/jsoncpp/include/json/value.h	/^      bool isArray_;$/;"	m	class:Json::ValueIteratorBase
isAvailable	src/core/WrappedCard.h	/^    inline virtual bool isAvailable(const Player *player) const { return m_card->isAvailable(player); }$/;"	f	class:WrappedCard
isAvailable	src/core/card.cpp	/^bool Card::isAvailable(const Player *player) const{$/;"	f	class:Card
isAvailable	src/core/skill.cpp	/^bool ViewAsSkill::isAvailable() const{$/;"	f	class:ViewAsSkill
isAvailable	src/package/maneuvering.cpp	/^bool Analeptic::isAvailable(const Player *player) const{$/;"	f	class:Analeptic
isAvailable	src/package/standard-cards.cpp	/^bool Collateral::isAvailable(const Player *player) const{$/;"	f	class:Collateral
isAvailable	src/package/standard-cards.cpp	/^bool Disaster::isAvailable(const Player *player) const{$/;"	f	class:Disaster
isAvailable	src/package/standard-cards.cpp	/^bool Jink::isAvailable(const Player *) const{$/;"	f	class:Jink
isAvailable	src/package/standard-cards.cpp	/^bool Nullification::isAvailable(const Player *) const{$/;"	f	class:Nullification
isAvailable	src/package/standard-cards.cpp	/^bool Peach::isAvailable(const Player *player) const{$/;"	f	class:Peach
isAvailable	src/package/standard-cards.cpp	/^bool Slash::isAvailable(const Player *player) const{$/;"	f	class:Slash
isAvailable	src/package/standard.cpp	/^bool AOE::isAvailable(const Player *player) const{$/;"	f	class:AOE
isAvatarUnderMouse	src/ui/dashboard.cpp	/^bool Dashboard::isAvatarUnderMouse()$/;"	f	class:Dashboard
isBackgroundVisible	src/ui/magatamasItem.h	/^    inline bool isBackgroundVisible() const$/;"	f	class:MagatamasBoxItem
isBad	src/server/roomthread.cpp	/^bool JudgeStruct::isBad() const{$/;"	f	class:JudgeStruct
isBanned	src/core/banpair.cpp	/^bool BanPair::isBanned(const QString &first, const QString &second){$/;"	f	class:BanPair
isBanned	src/core/banpair.cpp	/^bool BanPair::isBanned(const QString &general){$/;"	f	class:BanPair
isBlack	src/core/card.cpp	/^bool Card::isBlack() const{$/;"	f	class:Card
isBool	src/jsoncpp/src/json_value.cpp	/^Value::isBool() const$/;"	f	class:Json::Value
isCancelable	src/core/WrappedCard.h	/^    inline virtual bool isCancelable(const CardEffectStruct &effect) const {$/;"	f	class:WrappedCard
isCancelable	src/core/card.cpp	/^bool Card::isCancelable(const CardEffectStruct &) const{$/;"	f	class:Card
isCancelable	src/package/standard-cards.cpp	/^bool GodSalvation::isCancelable(const CardEffectStruct &effect) const{$/;"	f	class:GodSalvation
isCancelable	src/package/standard.cpp	/^bool TrickCard::isCancelable(const CardEffectStruct &effect) const{$/;"	f	class:TrickCard
isCanceled	src/server/room.cpp	/^bool Room::isCanceled(const CardEffectStruct &effect){$/;"	f	class:Room
isCaoCao	src/core/player.cpp	/^bool Player::isCaoCao() const{$/;"	f	class:Player
isChained	src/core/player.cpp	/^bool Player::isChained() const{$/;"	f	class:Player
isClient	src/core/RoomState.h	/^    inline bool isClient() const { return m_isClient; }$/;"	f	class:RoomState
isConnected	src/util/nativesocket.cpp	/^bool NativeClientSocket::isConnected() const{$/;"	f	class:NativeClientSocket
isControlCharacter	src/jsoncpp/src/json_tool.h	/^isControlCharacter(char ch)$/;"	f	namespace:Json
isConvertibleTo	src/jsoncpp/src/json_value.cpp	/^Value::isConvertibleTo( ValueType other ) const$/;"	f	class:Json::Value
isDead	src/core/player.cpp	/^bool Player::isDead() const{$/;"	f	class:Player
isDouble	src/jsoncpp/src/json_value.cpp	/^Value::isDouble() const$/;"	f	class:Json::Value
isDown	src/ui/qsanbutton.cpp	/^bool QSanButton::isDown()$/;"	f	class:QSanButton
isEffected	src/server/roomthread.cpp	/^bool JudgeStruct::isEffected(){$/;"	f	class:JudgeStruct
isEnabledAtNullification	src/core/skill.cpp	/^bool ViewAsSkill::isEnabledAtNullification(const ServerPlayer *) const{$/;"	f	class:ViewAsSkill
isEnabledAtNullification	src/package/bgm-package.cpp	/^    virtual bool isEnabledAtNullification(const ServerPlayer *player) const{$/;"	f	class:Yanzheng
isEnabledAtNullification	src/package/firepackage.cpp	/^    virtual bool isEnabledAtNullification(const ServerPlayer *player) const{$/;"	f	class:Kanpo
isEnabledAtNullification	src/package/god.cpp	/^    virtual bool isEnabledAtNullification(const ServerPlayer *player) const{$/;"	f	class:Longhun
isEnabledAtNullification	src/package/wind.cpp	/^    virtual bool isEnabledAtNullification(const ServerPlayer *player) const{$/;"	f	class:Guhuo
isEnabledAtNullification	src/package/yitianpackage.cpp	/^    virtual bool isEnabledAtNullification(const ServerPlayer *player) const{$/;"	f	class:Lexue
isEnabledAtNullification	swig/sanguosha_wrap.cxx	/^bool LuaViewAsSkill::isEnabledAtNullification(const ServerPlayer *player) const{$/;"	f	class:LuaViewAsSkill
isEnabledAtPlay	src/client/aux-skills.cpp	/^bool FreeDiscardSkill::isEnabledAtPlay(const Player *) const{$/;"	f	class:FreeDiscardSkill
isEnabledAtPlay	src/core/skill.cpp	/^bool ViewAsSkill::isEnabledAtPlay(const Player *) const{$/;"	f	class:ViewAsSkill
isEnabledAtPlay	src/package/bgm-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:DaheViewAsSkill
isEnabledAtPlay	src/package/bgm-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:LihunSelect
isEnabledAtPlay	src/package/bgm-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:TanhuViewAsSkill
isEnabledAtPlay	src/package/bgm-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Yanzheng
isEnabledAtPlay	src/package/firepackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:JiemingViewAsSkill
isEnabledAtPlay	src/package/firepackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Kanpo
isEnabledAtPlay	src/package/firepackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Qiangxi
isEnabledAtPlay	src/package/firepackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Quhu
isEnabledAtPlay	src/package/firepackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:ShuangxiongViewAsSkill
isEnabledAtPlay	src/package/firepackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:TianyiViewAsSkill
isEnabledAtPlay	src/package/god.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:DawuViewAsSkill
isEnabledAtPlay	src/package/god.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Gongxin
isEnabledAtPlay	src/package/god.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:JilveViewAsSkill
isEnabledAtPlay	src/package/god.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:KuangfengViewAsSkill
isEnabledAtPlay	src/package/god.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Longhun
isEnabledAtPlay	src/package/god.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Shenfen
isEnabledAtPlay	src/package/god.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:WuqianViewAsSkill
isEnabledAtPlay	src/package/god.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Yeyan
isEnabledAtPlay	src/package/lingpackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:NeoFanjian
isEnabledAtPlay	src/package/lingpackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:NeoLuoyi
isEnabledAtPlay	src/package/maneuvering.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:FanSkill
isEnabledAtPlay	src/package/mountainpackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Jixi
isEnabledAtPlay	src/package/mountainpackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:QiaobianViewAsSkill
isEnabledAtPlay	src/package/mountainpackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Tiaoxin
isEnabledAtPlay	src/package/mountainpackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:ZhibaPindian
isEnabledAtPlay	src/package/nostalgia.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:NosJujian
isEnabledAtPlay	src/package/nostalgia.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:NosXuanhuo
isEnabledAtPlay	src/package/sp-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:WeidiViewAsSkill
isEnabledAtPlay	src/package/special3v3-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:HongyuanViewAsSkill
isEnabledAtPlay	src/package/special3v3-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:HuanshiViewAsSkill
isEnabledAtPlay	src/package/standard-cards.cpp	/^    virtual bool isEnabledAtPlay(const Player *) const{$/;"	f	class:AxeViewAsSkill
isEnabledAtPlay	src/package/standard-cards.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:SpearSkill
isEnabledAtPlay	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Fanjian
isEnabledAtPlay	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:GuicaiViewAsSkill
isEnabledAtPlay	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Jieyin
isEnabledAtPlay	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:JijiangViewAsSkill
isEnabledAtPlay	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Jijiu
isEnabledAtPlay	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Lijian
isEnabledAtPlay	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:LiuliViewAsSkill
isEnabledAtPlay	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Longdan
isEnabledAtPlay	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Qingguo
isEnabledAtPlay	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Qingnang
isEnabledAtPlay	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:TuxiViewAsSkill
isEnabledAtPlay	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Wusheng
isEnabledAtPlay	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Yihun
isEnabledAtPlay	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Zhiba
isEnabledAtPlay	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Zhiheng
isEnabledAtPlay	src/package/thicket.cpp	/^    virtual bool isEnabledAtPlay(const Player *) const{$/;"	f	class:FangzhuViewAsSkill
isEnabledAtPlay	src/package/thicket.cpp	/^    virtual bool isEnabledAtPlay(const Player *) const{$/;"	f	class:YinghunViewAsSkill
isEnabledAtPlay	src/package/thicket.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Dimeng
isEnabledAtPlay	src/package/thicket.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:HaoshiViewAsSkill
isEnabledAtPlay	src/package/thicket.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Jiuchi
isEnabledAtPlay	src/package/thicket.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Luanwu
isEnabledAtPlay	src/package/wind.cpp	/^    virtual bool isEnabledAtPlay(const Player *) const{$/;"	f	class:TianxiangViewAsSkill
isEnabledAtPlay	src/package/wind.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:GuidaoViewAsSkill
isEnabledAtPlay	src/package/wind.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:HuangtianViewAsSkill
isEnabledAtPlay	src/package/wind.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:LeijiViewAsSkill
isEnabledAtPlay	src/package/wind.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:ShensuViewAsSkill
isEnabledAtPlay	src/package/wisdompackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:BawangViewAsSkill
isEnabledAtPlay	src/package/wisdompackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Houyuan
isEnabledAtPlay	src/package/wisdompackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:JuaoViewAsSkill
isEnabledAtPlay	src/package/wisdompackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Shouye
isEnabledAtPlay	src/package/wisdompackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player){$/;"	f	class:WeidaiViewAsSkill
isEnabledAtPlay	src/package/yitianpackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:ChengxiangViewAsSkill
isEnabledAtPlay	src/package/yitianpackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Guihan
isEnabledAtPlay	src/package/yitianpackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Jueji
isEnabledAtPlay	src/package/yitianpackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Lexue
isEnabledAtPlay	src/package/yitianpackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:LianliSlashViewAsSkill
isEnabledAtPlay	src/package/yitianpackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:LianliViewAsSkill
isEnabledAtPlay	src/package/yitianpackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:XunzhiViewAsSkill
isEnabledAtPlay	src/package/yitianpackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:YisheAsk
isEnabledAtPlay	src/package/yitianpackage.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:YisheViewAsSkill
isEnabledAtPlay	src/package/yjcm-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Ganlu
isEnabledAtPlay	src/package/yjcm-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Jiushi
isEnabledAtPlay	src/package/yjcm-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:JujianViewAsSkill
isEnabledAtPlay	src/package/yjcm-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Mingce
isEnabledAtPlay	src/package/yjcm-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Paiyi
isEnabledAtPlay	src/package/yjcm-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:XianzhenViewAsSkill
isEnabledAtPlay	src/package/yjcm-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Xinzhan
isEnabledAtPlay	src/package/yjcm-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:XuanfengViewAsSkill
isEnabledAtPlay	src/package/yjcm-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:XuanhuoViewAsSkill
isEnabledAtPlay	src/package/yjcm2012-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Anxu
isEnabledAtPlay	src/package/yjcm2012-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:ChunlaoViewAsSkill
isEnabledAtPlay	src/package/yjcm2012-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Gongqi
isEnabledAtPlay	src/package/yjcm2012-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:LihuoViewAsSkill
isEnabledAtPlay	src/package/yjcm2012-package.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Qice
isEnabledAtPlay	src/scenario/fancheng-scenario.cpp	/^    virtual bool isEnabledAtPlay(const Player *) const{$/;"	f	class:DujiangViewAsSkill
isEnabledAtPlay	src/scenario/fancheng-scenario.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:Flood
isEnabledAtPlay	src/scenario/fancheng-scenario.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:TaichenFight
isEnabledAtPlay	src/scenario/fancheng-scenario.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:ZhiyuanViewAsSkill
isEnabledAtPlay	src/scenario/guandu-scenario.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:SmallTuxiViewAsSkill
isEnabledAtPlay	src/scenario/guandu-scenario.cpp	/^    virtual bool isEnabledAtPlay(const Player *player) const{$/;"	f	class:ZhanShuangxiong
isEnabledAtPlay	src/scenario/zombie-mode-scenario.cpp	/^    virtual bool isEnabledAtPlay(const Player *) const{$/;"	f	class:Peaching
isEnabledAtPlay	swig/sanguosha_wrap.cxx	/^bool LuaViewAsSkill::isEnabledAtPlay(const Player *player) const{$/;"	f	class:LuaViewAsSkill
isEnabledAtResponse	src/core/skill.cpp	/^bool ViewAsSkill::isEnabledAtResponse(const Player *, const QString &) const{$/;"	f	class:ViewAsSkill
isEnabledAtResponse	src/package/bgm-package.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:Yanzheng
isEnabledAtResponse	src/package/firepackage.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:JiemingViewAsSkill
isEnabledAtResponse	src/package/firepackage.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:Kanpo
isEnabledAtResponse	src/package/god.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:DawuViewAsSkill
isEnabledAtResponse	src/package/god.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:KuangfengViewAsSkill
isEnabledAtResponse	src/package/god.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:Longhun
isEnabledAtResponse	src/package/maneuvering.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:FanSkill
isEnabledAtResponse	src/package/mountainpackage.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:QiaobianViewAsSkill
isEnabledAtResponse	src/package/special3v3-package.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:HongyuanViewAsSkill
isEnabledAtResponse	src/package/special3v3-package.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:HuanshiViewAsSkill
isEnabledAtResponse	src/package/standard-cards.cpp	/^    virtual bool isEnabledAtResponse(const Player *, const QString &pattern) const{$/;"	f	class:AxeViewAsSkill
isEnabledAtResponse	src/package/standard-cards.cpp	/^    virtual bool isEnabledAtResponse(const Player *, const QString &pattern) const{$/;"	f	class:SpearSkill
isEnabledAtResponse	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:GuicaiViewAsSkill
isEnabledAtResponse	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:JijiangViewAsSkill
isEnabledAtResponse	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:Jijiu
isEnabledAtResponse	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:LiuliViewAsSkill
isEnabledAtResponse	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:Longdan
isEnabledAtResponse	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:Qingguo
isEnabledAtResponse	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:TuxiViewAsSkill
isEnabledAtResponse	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:Wusheng
isEnabledAtResponse	src/package/standard-generals.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:Yihun
isEnabledAtResponse	src/package/thicket.cpp	/^    virtual bool isEnabledAtResponse(const Player *, const QString &pattern) const{$/;"	f	class:FangzhuViewAsSkill
isEnabledAtResponse	src/package/thicket.cpp	/^    virtual bool isEnabledAtResponse(const Player *, const QString &pattern) const{$/;"	f	class:HaoshiViewAsSkill
isEnabledAtResponse	src/package/thicket.cpp	/^    virtual bool isEnabledAtResponse(const Player *, const QString &pattern) const{$/;"	f	class:YinghunViewAsSkill
isEnabledAtResponse	src/package/thicket.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:Jiuchi
isEnabledAtResponse	src/package/wind.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:Guhuo
isEnabledAtResponse	src/package/wind.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:GuidaoViewAsSkill
isEnabledAtResponse	src/package/wind.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:LeijiViewAsSkill
isEnabledAtResponse	src/package/wind.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:ShensuViewAsSkill
isEnabledAtResponse	src/package/wind.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:TianxiangViewAsSkill
isEnabledAtResponse	src/package/wisdompackage.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:BawangViewAsSkill
isEnabledAtResponse	src/package/wisdompackage.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:WeidaiViewAsSkill
isEnabledAtResponse	src/package/yitianpackage.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:ChengxiangViewAsSkill
isEnabledAtResponse	src/package/yitianpackage.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:Lexue
isEnabledAtResponse	src/package/yitianpackage.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:LianliViewAsSkill
isEnabledAtResponse	src/package/yjcm-package.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:Jiushi
isEnabledAtResponse	src/package/yjcm-package.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:JujianViewAsSkill
isEnabledAtResponse	src/package/yjcm-package.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:XuanfengViewAsSkill
isEnabledAtResponse	src/package/yjcm-package.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:XuanhuoViewAsSkill
isEnabledAtResponse	src/package/yjcm2012-package.cpp	/^    virtual bool isEnabledAtResponse(const Player *, const QString &pattern) const{$/;"	f	class:ChunlaoViewAsSkill
isEnabledAtResponse	src/package/yjcm2012-package.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:Anxu
isEnabledAtResponse	src/package/yjcm2012-package.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:Gongqi
isEnabledAtResponse	src/package/yjcm2012-package.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:LihuoViewAsSkill
isEnabledAtResponse	src/scenario/fancheng-scenario.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:DujiangViewAsSkill
isEnabledAtResponse	src/scenario/guandu-scenario.cpp	/^    virtual bool isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:SmallTuxiViewAsSkill
isEnabledAtResponse	swig/sanguosha_wrap.cxx	/^bool LuaViewAsSkill::isEnabledAtResponse(const Player *player, const QString &pattern) const{$/;"	f	class:LuaViewAsSkill
isEnemy	src/server/ai.cpp	/^bool AI::isEnemy(const ServerPlayer *other) const{$/;"	f	class:AI
isEquipped	src/core/card.cpp	/^bool Card::isEquipped() const{$/;"	f	class:Card
isEquipped	src/ui/carditem.cpp	/^bool CardItem::isEquipped() const{$/;"	f	class:CardItem
isFemale	src/core/general.cpp	/^bool General::isFemale() const{$/;"	f	class:General
isFinished	src/server/room.cpp	/^bool Room::isFinished() const{$/;"	f	class:Room
isFixedPitch	include/freetype/freetype/tttables.h	/^    FT_ULong  isFixedPitch;$/;"	m	struct:TT_Postscript_
isFriend	src/server/ai.cpp	/^bool AI::isFriend(const ServerPlayer *other) const{$/;"	f	class:AI
isFrozen	src/ui/carditem.cpp	/^bool CardItem::isFrozen() const{$/;"	f	class:CardItem
isFull	src/server/room.cpp	/^bool Room::isFull() const{$/;"	f	class:Room
isGood	src/server/roomthread.cpp	/^bool JudgeStruct::isGood(const Card *card) const{$/;"	f	class:JudgeStruct
isHidden	src/core/general.cpp	/^bool General::isHidden() const{$/;"	f	class:General
isImageKeyDefined	src/ui/SkinBank.cpp	/^bool IQSanComponentSkin::isImageKeyDefined(const QString &key) const$/;"	f	class:IQSanComponentSkin
isInt	src/jsoncpp/src/json_value.cpp	/^Value::isInt() const$/;"	f	class:Json::Value
isInt64	src/jsoncpp/src/json_value.cpp	/^Value::isInt64() const$/;"	f	class:Json::Value
isIntArray	src/core/protocol.cpp	/^bool QSanProtocol::Utils::isIntArray(const Json::Value &jsonObject, unsigned int startIndex, unsigned int endIndex)$/;"	f	class:QSanProtocol::Utils
isIntegral	src/jsoncpp/src/json_value.cpp	/^Value::isIntegral() const$/;"	f	class:Json::Value
isItemAvailable	src/jsoncpp/include/json/value.h	/^      inline bool isItemAvailable() const$/;"	f	class:Json::Value
isJilei	src/core/player.cpp	/^bool Player::isJilei(const Card *card) const{$/;"	f	class:Player
isKindOf	src/core/WrappedCard.h	/^    inline virtual bool isKindOf(const char* cardType) const { $/;"	f	class:WrappedCard
isKindOf	src/core/card.h	/^    inline virtual bool isKindOf(const char* cardType) const { return inherits(cardType); }$/;"	f	class:Card
isKongcheng	src/core/player.cpp	/^bool Player::isKongcheng() const{$/;"	f	class:Player
isLastHandCard	src/client/clientplayer.cpp	/^bool ClientPlayer::isLastHandCard(const Card *card) const{$/;"	f	class:ClientPlayer
isLastHandCard	src/server/serverplayer.cpp	/^bool ServerPlayer::isLastHandCard(const Card *card) const{$/;"	f	class:ServerPlayer
isLfunction	src/lua/lobject.h	316;"	d
isLocked	src/core/player.cpp	/^bool Player::isLocked(const Card *card) const{$/;"	f	class:Player
isLord	src/core/general.cpp	/^bool General::isLord() const{$/;"	f	class:General
isLord	src/core/player.cpp	/^bool Player::isLord() const{$/;"	f	class:Player
isLordSkill	src/core/skill.cpp	/^bool Skill::isLordSkill() const{$/;"	f	class:Skill
isLua	src/lua/lstate.h	62;"	d
isMale	src/core/general.cpp	/^bool General::isMale() const{$/;"	f	class:General
isMarkable	src/ui/QSanSelectableItem.cpp	/^bool QSanSelectableItem::isMarkable() const{$/;"	f	class:QSanSelectableItem
isMarked	src/ui/QSanSelectableItem.cpp	/^bool QSanSelectableItem::isMarked() const{$/;"	f	class:QSanSelectableItem
isMember	src/jsoncpp/src/json_value.cpp	/^Value::isMember( const CppTL::ConstString &key ) const$/;"	f	class:Json::Value
isMember	src/jsoncpp/src/json_value.cpp	/^Value::isMember( const char *key ) const$/;"	f	class:Json::Value
isMember	src/jsoncpp/src/json_value.cpp	/^Value::isMember( const std::string &key ) const$/;"	f	class:Json::Value
isMemberNameStatic	src/jsoncpp/include/json/value.h	/^      inline bool isMemberNameStatic() const$/;"	f	class:Json::Value
isModified	src/core/WrappedCard.h	/^    inline virtual bool isModified() const {return m_isModified;}$/;"	f	class:WrappedCard
isModified	src/core/card.h	/^    inline virtual bool isModified() const {return false;}$/;"	f	class:Card
isMultineArray	src/jsoncpp/src/json_writer.cpp	/^StyledStreamWriter::isMultineArray( const Value &value )$/;"	f	class:Json::StyledStreamWriter
isMultineArray	src/jsoncpp/src/json_writer.cpp	/^StyledWriter::isMultineArray( const Value &value )$/;"	f	class:Json::StyledWriter
isMute	src/core/WrappedCard.h	/^    inline virtual bool isMute() const {$/;"	f	class:WrappedCard
isMute	src/core/card.cpp	/^bool Card::isMute() const{$/;"	f	class:Card
isNDTrick	src/core/WrappedCard.h	/^    inline virtual bool isNDTrick() const$/;"	f	class:WrappedCard
isNDTrick	src/core/card.cpp	/^bool Card::isNDTrick() const{$/;"	f	class:Card
isNeuter	src/core/general.cpp	/^bool General::isNeuter() const{$/;"	f	class:General
isNude	src/core/player.cpp	/^bool Player::isNude() const{$/;"	f	class:Player
isNull	src/jsoncpp/src/json_value.cpp	/^Value::isNull() const$/;"	f	class:Json::Value
isNull_	src/jsoncpp/include/json/value.h	/^      bool isNull_;$/;"	m	class:Json::ValueIteratorBase
isNumeric	src/jsoncpp/src/json_value.cpp	/^Value::isNumeric() const$/;"	f	class:Json::Value
isObject	src/jsoncpp/src/json_value.cpp	/^Value::isObject() const$/;"	f	class:Json::Value
isOffline	src/server/serverplayer.h	/^    inline bool isOffline() const { return getState() == "robot" || getState() == "offline"; }$/;"	f	class:ServerPlayer
isOnce	src/core/WrappedCard.h	/^    inline virtual bool isOnce() const {$/;"	f	class:WrappedCard
isOnce	src/core/card.cpp	/^bool Card::isOnce() const{$/;"	f	class:Card
isOnline	src/server/serverplayer.cpp	/^bool ServerPlayer::isOnline() const {$/;"	f	class:ServerPlayer
isOwner	src/core/player.cpp	/^bool Player::isOwner() const{$/;"	f	class:Player
isPlaying	src/core/audio.cpp	/^    bool isPlaying() const{$/;"	f	class:Sound
isProhibited	src/core/engine.cpp	/^const ProhibitSkill *Engine::isProhibited(const Player *from, const Player *to, const Card *card) const{$/;"	f	class:Engine
isProhibited	src/core/player.cpp	/^bool Player::isProhibited(const Player *to, const Card *card) const{$/;"	f	class:Player
isProhibited	src/package/standard-generals.cpp	/^    virtual bool isProhibited(const Player *, const Player *, const Card *card) const{$/;"	f	class:Qianxun
isProhibited	src/package/standard-generals.cpp	/^    virtual bool isProhibited(const Player *from, const Player *to, const Card *card) const{$/;"	f	class:Kongcheng
isProhibited	src/package/thicket.cpp	/^    virtual bool isProhibited(const Player *, const Player *, const Card *card) const{$/;"	f	class:Weimu
isProhibited	src/package/yitianpackage.cpp	/^    virtual bool isProhibited(const Player *, const Player *, const Card *card) const{$/;"	f	class:Jinshen
isProhibited	src/scenario/boss-mode-scenario.cpp	/^    virtual bool isProhibited(const Player *from, const Player *to, const Card *card) const{$/;"	f	class:Duduan
isProhibited	src/server/room.cpp	/^const ProhibitSkill *Room::isProhibited(const Player *from, const Player *to, const Card *card) const{$/;"	f	class:Room
isProhibited	swig/sanguosha_wrap.cxx	/^bool LuaProhibitSkill::isProhibited(const Player *from, const Player *to, const Card *card) const{$/;"	f	class:LuaProhibitSkill
isReady	src/core/player.cpp	/^bool Player::isReady() const{$/;"	f	class:Player
isRed	src/core/card.cpp	/^bool Card::isRed() const{$/;"	f	class:Card
isRegex	src/core/structs.h	/^    bool isRegex;$/;"	m	class:JudgeStructPattern
isRelevant	src/core/structs.h	/^    inline bool isRelevant(Player* player)$/;"	f	struct:CardMoveStruct
isRelevant	src/core/structs.h	/^    inline bool isRelevant(const Player* player)$/;"	f	struct:CardsMoveStruct
isSelected	src/ui/carditem.h	/^    bool isSelected() const { return m_isSelected; }$/;"	f	class:CardItem
isSkipped	src/server/serverplayer.cpp	/^bool ServerPlayer::isSkipped(Player::Phase phase){$/;"	f	class:ServerPlayer
isStaticString	src/jsoncpp/src/json_value.cpp	/^Value::CZString::isStaticString() const$/;"	f	class:Json::Value::CZString
isString	src/jsoncpp/src/json_value.cpp	/^Value::isString() const$/;"	f	class:Json::Value
isStringArray	src/core/protocol.cpp	/^bool QSanProtocol::Utils::isStringArray(const Json::Value &jsonObject, unsigned int startIndex, unsigned int endIndex)$/;"	f	class:QSanProtocol::Utils
isSuccess	src/server/roomthread.cpp	/^bool PindianStruct::isSuccess() const{$/;"	f	class:PindianStruct
isTotallyHidden	src/core/general.cpp	/^bool General::isTotallyHidden() const{$/;"	f	class:General
isUInt	src/jsoncpp/src/json_value.cpp	/^Value::isUInt() const$/;"	f	class:Json::Value
isUInt64	src/jsoncpp/src/json_value.cpp	/^Value::isUInt64() const$/;"	f	class:Json::Value
isValid	src/server/roomthread.cpp	/^bool CardUseStruct::isValid() const{$/;"	f	class:CardUseStruct
isValidIndex	src/jsoncpp/src/json_value.cpp	/^Value::isValidIndex( ArrayIndex index ) const$/;"	f	class:Json::Value
isVirtual	src/server/room.cpp	/^bool Room::isVirtual()$/;"	f	class:Room
isVirtualCard	src/core/WrappedCard.h	/^    inline virtual bool isVirtualCard() const { return false; }$/;"	f	class:WrappedCard
isVirtualCard	src/core/card.cpp	/^bool Card::isVirtualCard() const{$/;"	f	class:Card
isVisible	src/core/skill.cpp	/^bool Skill::isVisible() const{$/;"	f	class:Skill
isWidow	src/scenario/couple-scenario.cpp	/^bool CoupleScenario::isWidow(ServerPlayer *player) const{$/;"	f	class:CoupleScenario
isWounded	src/core/player.cpp	/^bool Player::isWounded() const{$/;"	f	class:Player
is_before_next	src/dialog/customassigndialog.h	/^    bool is_single_turn, is_before_next;$/;"	m	class:CustomAssignDialog
is_done	lua/lib/sqlite3.lua	/^local function is_done(status)$/;"	f
is_error	lua/lib/sqlite3.lua	/^local function is_error(status)$/;"	f
is_fixed_pitch	include/freetype/freetype/t1tables.h	/^    FT_Bool     is_fixed_pitch;$/;"	m	struct:PS_FontInfoRec_
is_prohibited	src/core/lua-wrapper.h	/^    LuaFunction is_prohibited;$/;"	m	class:LuaProhibitSkill
is_random_roles	src/dialog/customassigndialog.h	/^    bool is_random_roles;$/;"	m	class:CustomAssignDialog
is_row	lua/lib/sqlite3.lua	/^local function is_row(status)$/;"	f
is_shutdown_	src/breakpad/client/windows/handler/exception_handler.h	/^  volatile bool is_shutdown_;$/;"	m	class:google_breakpad::ExceptionHandler
is_single_turn	src/dialog/customassigndialog.h	/^    bool is_single_turn, is_before_next;$/;"	m	class:CustomAssignDialog
is_vararg	src/lua/lobject.h	/^  lu_byte is_vararg;$/;"	m	struct:Proto
isblack	src/lua/lgc.h	66;"	d
isbreakable	src/lua/lparser.c	/^  lu_byte isbreakable;  \/* true if `block' is a loop *\/$/;"	m	struct:BlockCnt	file:
iscfunction	src/lua/lobject.h	315;"	d
iscleared	src/lua/lgc.c	/^static int iscleared (const TValue *o, int iskey) {$/;"	f	file:
iscollectable	src/lua/lobject.h	189;"	d
isdead	src/lua/lgc.h	70;"	d
isfinalized	src/lua/lgc.c	43;"	d	file:
isgray	src/lua/lgc.h	67;"	d
isinstack	src/lua/ldebug.c	/^static int isinstack (CallInfo *ci, const TValue *o) {$/;"	f	file:
isnumeral	src/lua/lcode.c	/^static int isnumeral(expdesc *e) {$/;"	f	file:
iswhite	src/lua/lgc.h	65;"	d
italic	include/freetype/freetype/ftwinfnt.h	/^    FT_Byte    italic;$/;"	m	struct:FT_WinFNT_HeaderRec_
italicAngle	include/freetype/freetype/tttables.h	/^    FT_Fixed  italicAngle;$/;"	m	struct:TT_Postscript_
italic_angle	include/freetype/freetype/t1tables.h	/^    FT_Long     italic_angle;$/;"	m	struct:PS_FontInfoRec_
item	src/server/server.h	/^    int item;$/;"	m	class:BanlistDialog
item2player	src/ui/roomscene.h	/^    QMap<PlayerCardContainer *, const ClientPlayer *> item2player;$/;"	m	class:RoomScene
itemChange	src/ui/GenericCardContainerUI.cpp	/^QVariant PlayerCardContainer::itemChange(GraphicsItemChange change, const QVariant &value) {$/;"	f	class:PlayerCardContainer
itemChange	src/ui/QSanSelectableItem.cpp	/^QVariant QSanSelectableItem::itemChange(GraphicsItemChange change, const QVariant &value){$/;"	f	class:QSanSelectableItem
itemCount_	src/jsoncpp/include/json/value.h	/^      BucketIndex itemCount_;$/;"	m	class:Json::ValueInternalMap
itemIndex_	src/jsoncpp/include/json/value.h	/^         BucketIndex itemIndex_;$/;"	m	struct:Json::ValueInternalMap::IteratorState
itemName	src/ui/chatwidget.h	/^    QString itemName;$/;"	m	class:MyPixmapItem
itemPerLink	src/jsoncpp/include/json/value.h	/^      enum { itemPerLink = 6 };  \/\/ sizeof(ValueInternalLink) = 128 on 32 bits architecture.$/;"	e	enum:Json::ValueInternalLink::__anon2
item_map	src/dialog/customassigndialog.h	/^    QMap<int, QListWidgetItem *> item_map;$/;"	m	class:CustomAssignDialog
items	src/ui/cardcontainer.h	/^    QList<CardItem *> items;$/;"	m	class:CardContainer
items	src/ui/rolecombobox.h	/^    QList<RoleComboBoxItem *> items;$/;"	m	class:RoleComboBox
itemsPerPage	src/jsoncpp/include/json/value.h	/^      enum { itemsPerPage = 8 };    \/\/ should be a power of 2 for fast divide and modulo.$/;"	e	enum:Json::ValueInternalArray::__anon3
items_	src/jsoncpp/include/json/value.h	/^      Value items_[itemPerLink];$/;"	m	class:Json::ValueInternalLink
items_stack	src/ui/cardcontainer.h	/^    QStack<QList<CardItem *> > items_stack;$/;"	m	class:CardContainer
iter_std	src/breakpad/processor/static_map_unittest.cc	/^  StdMap::const_iterator iter_std;$/;"	m	class:TestValidMap	file:
iter_test	src/breakpad/processor/static_map_unittest.cc	/^  TestMap::const_iterator iter_test;$/;"	m	class:TestValidMap	file:
iterator	src/breakpad/processor/static_map.h	/^  typedef StaticMapIterator<Key, Value, Compare> iterator;$/;"	t	class:google_breakpad::StaticMap
iterator	src/jsoncpp/include/json/value.h	/^      typedef ValueIterator iterator;$/;"	t	class:Json::Value
iterator_	src/jsoncpp/include/json/value.h	/^      } iterator_;$/;"	m	class:Json::ValueIteratorBase	typeref:union:Json::ValueIteratorBase::__anon4
jieyin_skill.getTurnUseCard	lua/ai/standard-ai.lua	/^jieyin_skill.getTurnUseCard=function(self)$/;"	f
jijiang_skill.getTurnUseCard	lua/ai/standard-ai.lua	/^jijiang_skill.getTurnUseCard=function(self)$/;"	f
jilei	src/client/client.cpp	/^void Client::jilei(const QString &jilei_str){$/;"	f	class:Client
jilei	src/core/player.cpp	/^void Player::jilei(const QString &type){$/;"	f	class:Player
jilei_set	src/core/player.h	/^    QSet<QString> jilei_set;$/;"	m	class:Player
jilve_skill.getTurnUseCard	lua/ai/god-ai.lua	/^jilve_skill.getTurnUseCard=function(self)$/;"	f
jinjiu_skill.getTurnUseCard	lua/ai/yjcm-ai.lua	/^jinjiu_skill.getTurnUseCard=function(self)$/;"	f
jink	src/core/structs.h	/^    const Card *jink;$/;"	m	struct:SlashEffectStruct
jiuchi_skill.getTurnUseCard	lua/ai/thicket-ai.lua	/^jiuchi_skill.getTurnUseCard=function(self)$/;"	f
jixi_skill.getTurnUseCard 	lua/ai/mountain-ai.lua	/^jixi_skill.getTurnUseCard = function(self)$/;"	f
join	src/breakpad/processor/linked_ptr.h	/^  void join(linked_ptr_internal const* ptr) {$/;"	f	class:google_breakpad::linked_ptr_internal
join	src/dialog/halldialog.cpp	/^void HallDialog::join(){$/;"	f	class:HallDialog
joinRoom	src/dialog/halldialog.cpp	/^void HallDialog::joinRoom(int room_id){$/;"	f	class:HallDialog
join_new	src/breakpad/processor/linked_ptr.h	/^  void join_new() {$/;"	f	class:google_breakpad::linked_ptr_internal
jpc	src/lua/lparser.h	/^  int jpc;  \/* list of pending jumps to `pc' *\/$/;"	m	struct:FuncState
jsJoystick	include/js.h	/^class jsJoystick$/;"	c
juao_skill.getTurnUseCard	lua/ai/wisdom-ai.lua	/^juao_skill.getTurnUseCard=function(self)$/;"	f
judge	src/package/standard.h	/^    JudgeStruct judge;$/;"	m	class:DelayedTrick
judge	src/server/room.cpp	/^void Room::judge(JudgeStruct &judge_struct){$/;"	f	class:Room
judge_list	src/dialog/customassigndialog.h	/^    QListWidget *list, *equip_list, *hand_list, *judge_list, *pile_list;$/;"	m	class:CustomAssignDialog
judging_area	src/core/player.h	/^    QList<int> judging_area;$/;"	m	class:Player
jump_buffer	include/freetype/freetype/internal/ftvalid.h	/^    ft_jmp_buf          jump_buffer; \/* used for exception handling      *\/$/;"	m	struct:FT_ValidatorRec_
jumponcond	src/lua/lcode.c	/^static int jumponcond (FuncState *fs, expdesc *e, int cond) {$/;"	f	file:
just_return	src/breakpad/processor/disassembler_x86_unittest.cc	/^unsigned char just_return[] = "\\xc3";  \/\/ retn$/;"	m	namespace:__anon68	file:
k	src/lua/lobject.h	/^  TValue *k;  \/* constants used by the function *\/$/;"	m	struct:Proto
k	src/lua/lparser.h	/^  expkind k;$/;"	m	struct:expdesc
k	src/lua/lparser.h	/^  lu_byte k;$/;"	m	struct:upvaldesc
kCustomInfoProcessUptimeName	src/breakpad/client/windows/crash_generation/client_info.cc	/^static const wchar_t kCustomInfoProcessUptimeName[] = L"ptime";$/;"	v	file:
kDisassembleBytesBeyondPC	src/breakpad/processor/exploitability_win.cc	/^static const size_t kDisassembleBytesBeyondPC = 2048;$/;"	m	namespace:google_breakpad	file:
kDumpGeneratedEventAccess	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^static const DWORD kDumpGeneratedEventAccess = EVENT_MODIFY_STATE |$/;"	m	namespace:google_breakpad	file:
kDumpRequestEventAccess	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^static const DWORD kDumpRequestEventAccess = EVENT_MODIFY_STATE;$/;"	m	namespace:google_breakpad	file:
kDumpRequestThreadFlags	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^static const ULONG kDumpRequestThreadFlags = WT_EXECUTEINWAITTHREAD |$/;"	m	namespace:google_breakpad	file:
kExceptionHandlerThreadInitialStackSize	src/breakpad/client/windows/handler/exception_handler.cc	/^static const int kExceptionHandlerThreadInitialStackSize = 64 * 1024;$/;"	m	namespace:google_breakpad	file:
kHighCutoff	src/breakpad/processor/exploitability_win.cc	/^static const size_t kHighCutoff        = 100;$/;"	m	namespace:google_breakpad	file:
kHugeBump	src/breakpad/processor/exploitability_win.cc	/^static const size_t kHugeBump          = 90;$/;"	m	namespace:google_breakpad	file:
kInBufferSize	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^static const size_t kInBufferSize = 64;$/;"	m	namespace:google_breakpad	file:
kInterestingCutoff	src/breakpad/processor/exploitability_win.cc	/^static const size_t kInterestingCutoff = 25;$/;"	m	namespace:google_breakpad	file:
kLargeBump	src/breakpad/processor/exploitability_win.cc	/^static const size_t kLargeBump         = 70;$/;"	m	namespace:google_breakpad	file:
kLowCutoff	src/breakpad/processor/exploitability_win.cc	/^static const size_t kLowCutoff         = 50;$/;"	m	namespace:google_breakpad	file:
kMaxCustomInfoEntries	src/breakpad/client/windows/crash_generation/client_info.cc	/^static const size_t kMaxCustomInfoEntries = 4096;$/;"	v	file:
kMaxWidth	src/breakpad/processor/minidump_stackwalk.cc	/^static const int kMaxWidth = 80;  \/\/ optimize for an 80-column terminal$/;"	m	namespace:__anon83	file:
kMediumBump	src/breakpad/processor/exploitability_win.cc	/^static const size_t kMediumBump        = 50;$/;"	m	namespace:google_breakpad	file:
kMediumCutoff	src/breakpad/processor/exploitability_win.cc	/^static const size_t kMediumCutoff      = 80;$/;"	m	namespace:google_breakpad	file:
kMemorySize	src/breakpad/processor/static_map_unittest.cc	/^  static const int kMemorySize = 40;$/;"	m	class:TestInvalidMap	file:
kMutexAccess	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^static const DWORD kMutexAccess = SYNCHRONIZE;$/;"	m	namespace:google_breakpad	file:
kNameMaxLength	src/breakpad/client/windows/common/ipc_protocol.h	/^  static const int kNameMaxLength = 64;$/;"	m	struct:google_breakpad::CustomInfoEntry
kNumberMaps_	src/breakpad/processor/fast_source_line_resolver_types.h	/^  static const int kNumberMaps_ = 5 + WindowsFrameInfo::STACK_INFO_LAST;$/;"	m	class:google_breakpad::FastSourceLineResolver::Module
kNumberMaps_	src/breakpad/processor/module_serializer.h	/^  static const u_int32_t kNumberMaps_ =$/;"	m	class:google_breakpad::ModuleSerializer
kNumberTestCases	src/breakpad/processor/static_address_map_unittest.cc	/^  static const int kNumberTestCases = 4;$/;"	m	class:TestStaticAddressMap	file:
kNumberTestCases	src/breakpad/processor/static_map_unittest.cc	/^  static const int kNumberTestCases = 4;$/;"	m	class:TestValidMap	file:
kOutBufferSize	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^static const size_t kOutBufferSize = 64;$/;"	m	namespace:google_breakpad	file:
kOutputSeparator	src/breakpad/processor/minidump_stackwalk.cc	/^static const char kOutputSeparator = '|';$/;"	m	namespace:__anon83	file:
kPipeAttr	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^static const DWORD kPipeAttr = FILE_FLAG_FIRST_PIPE_INSTANCE |$/;"	m	namespace:google_breakpad	file:
kPipeBusyWaitTimeoutMs	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^const int kPipeBusyWaitTimeoutMs = 2000;$/;"	m	namespace:google_breakpad	file:
kPipeConnectMaxAttempts	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^const int kPipeConnectMaxAttempts = 2;$/;"	m	namespace:google_breakpad	file:
kPipeDesiredAccess	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^const DWORD kPipeDesiredAccess = FILE_READ_DATA |$/;"	m	namespace:google_breakpad	file:
kPipeFlagsAndAttributes	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^const DWORD kPipeFlagsAndAttributes = SECURITY_IDENTIFICATION |$/;"	m	namespace:google_breakpad	file:
kPipeIOThreadFlags	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^static const ULONG kPipeIOThreadFlags = WT_EXECUTEINWAITTHREAD;$/;"	m	namespace:google_breakpad	file:
kPipeMode	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^const DWORD kPipeMode = PIPE_READMODE_MESSAGE;$/;"	m	namespace:google_breakpad	file:
kPipeMode	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^static const DWORD kPipeMode = PIPE_TYPE_MESSAGE |$/;"	m	namespace:google_breakpad	file:
kProbableNullOffset	src/breakpad/processor/exploitability_win.cc	/^static const u_int64_t kProbableNullOffset = 4096;$/;"	m	namespace:google_breakpad	file:
kProbableStackOffset	src/breakpad/processor/exploitability_win.cc	/^static const u_int64_t kProbableStackOffset = 8192;$/;"	m	namespace:google_breakpad	file:
kShutdownDelayMs	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^static const int kShutdownDelayMs = 10000;$/;"	m	namespace:google_breakpad	file:
kShutdownSleepIntervalMs	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^static const int kShutdownSleepIntervalMs = 5;$/;"	m	namespace:google_breakpad	file:
kSizeOfInt	src/breakpad/processor/map_serializers_unittest.cc	/^const int kSizeOfInt = 4;$/;"	v
kSmallBump	src/breakpad/processor/exploitability_win.cc	/^static const size_t kSmallBump         = 20;$/;"	m	namespace:google_breakpad	file:
kStreamType	src/breakpad/google_breakpad/processor/minidump.h	/^  static const u_int32_t kStreamType = MD_ASSERTION_INFO_STREAM;$/;"	m	class:google_breakpad::MinidumpAssertion
kStreamType	src/breakpad/google_breakpad/processor/minidump.h	/^  static const u_int32_t kStreamType = MD_BREAKPAD_INFO_STREAM;$/;"	m	class:google_breakpad::MinidumpBreakpadInfo
kStreamType	src/breakpad/google_breakpad/processor/minidump.h	/^  static const u_int32_t kStreamType = MD_EXCEPTION_STREAM;$/;"	m	class:google_breakpad::MinidumpException
kStreamType	src/breakpad/google_breakpad/processor/minidump.h	/^  static const u_int32_t kStreamType = MD_MEMORY_INFO_LIST_STREAM;$/;"	m	class:google_breakpad::MinidumpMemoryInfoList
kStreamType	src/breakpad/google_breakpad/processor/minidump.h	/^  static const u_int32_t kStreamType = MD_MEMORY_LIST_STREAM;$/;"	m	class:google_breakpad::MinidumpMemoryList
kStreamType	src/breakpad/google_breakpad/processor/minidump.h	/^  static const u_int32_t kStreamType = MD_MISC_INFO_STREAM;$/;"	m	class:google_breakpad::MinidumpMiscInfo
kStreamType	src/breakpad/google_breakpad/processor/minidump.h	/^  static const u_int32_t kStreamType = MD_MODULE_LIST_STREAM;$/;"	m	class:google_breakpad::MinidumpModuleList
kStreamType	src/breakpad/google_breakpad/processor/minidump.h	/^  static const u_int32_t kStreamType = MD_SYSTEM_INFO_STREAM;$/;"	m	class:google_breakpad::MinidumpSystemInfo
kStreamType	src/breakpad/google_breakpad/processor/minidump.h	/^  static const u_int32_t kStreamType = MD_THREAD_LIST_STREAM;$/;"	m	class:google_breakpad::MinidumpThreadList
kSystemInfoCPU	src/breakpad/processor/minidump_processor_unittest.cc	/^static const char *kSystemInfoCPU = "x86";$/;"	m	namespace:__anon77	file:
kSystemInfoCPUInfo	src/breakpad/processor/minidump_processor_unittest.cc	/^static const char *kSystemInfoCPUInfo =$/;"	m	namespace:__anon77	file:
kSystemInfoOS	src/breakpad/processor/minidump_processor_unittest.cc	/^static const char *kSystemInfoOS = "Windows NT";$/;"	m	namespace:__anon77	file:
kSystemInfoOSShort	src/breakpad/processor/minidump_processor_unittest.cc	/^static const char *kSystemInfoOSShort = "windows";$/;"	m	namespace:__anon77	file:
kSystemInfoOSVersion	src/breakpad/processor/minidump_processor_unittest.cc	/^static const char *kSystemInfoOSVersion = "5.1.2600 Service Pack 2";$/;"	m	namespace:__anon77	file:
kTestCasesCount_	src/breakpad/processor/static_range_map_unittest.cc	/^  unsigned int kTestCasesCount_;$/;"	m	class:google_breakpad::TestStaticRangeMap	file:
kTinyBump	src/breakpad/processor/exploitability_win.cc	/^static const size_t kTinyBump          = 5;$/;"	m	namespace:google_breakpad	file:
kUserAgent	src/breakpad/common/windows/http_upload.cc	/^static const wchar_t kUserAgent[] = L"Breakpad\/1.0 (Windows)";$/;"	m	namespace:google_breakpad	file:
kValueMaxLength	src/breakpad/client/windows/common/ipc_protocol.h	/^  static const int kValueMaxLength = 64;$/;"	m	struct:google_breakpad::CustomInfoEntry
kWaitEventCount	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^const size_t kWaitEventCount = 2;$/;"	m	namespace:google_breakpad	file:
kWaitForHandlerThreadMs	src/breakpad/client/windows/handler/exception_handler.cc	/^static const int kWaitForHandlerThreadMs = 60000;$/;"	m	namespace:google_breakpad	file:
kWaitForServerTimeoutMs	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^const DWORD kWaitForServerTimeoutMs = 15000;$/;"	m	namespace:google_breakpad	file:
kWaitForServerTimeoutMs	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^const DWORD kWaitForServerTimeoutMs = INFINITE;$/;"	m	namespace:google_breakpad	file:
kWhitespace	src/breakpad/processor/basic_source_line_resolver.cc	/^static const char *kWhitespace = " \\r\\n";$/;"	m	namespace:google_breakpad	file:
keepGetCardLog	src/ui/roomscene.cpp	/^void RoomScene::keepGetCardLog(const CardsMoveStruct &move)$/;"	f	class:RoomScene
keepLoseCardLog	src/ui/roomscene.cpp	/^void RoomScene::keepLoseCardLog(const CardsMoveStruct &move)$/;"	f	class:RoomScene
keepWhenDisappear	src/ui/window.cpp	/^void Window::keepWhenDisappear(){$/;"	f	class:Window
keep_when_disappear	src/ui/window.h	/^    bool keep_when_disappear;$/;"	m	class:Window
kern_avail_bits	include/freetype/freetype/internal/tttypes.h	/^    FT_UInt32             kern_avail_bits;$/;"	m	struct:TT_FaceRec_
kern_order_bits	include/freetype/freetype/internal/tttypes.h	/^    FT_UInt32             kern_order_bits;$/;"	m	struct:TT_FaceRec_
kern_pairs	include/freetype/freetype/internal/tttypes.h	/^    TT_Kern0_Pair         kern_pairs;$/;"	m	struct:TT_FaceRec_
kern_table	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*              kern_table;$/;"	m	struct:TT_FaceRec_
kern_table_index	include/freetype/freetype/internal/tttypes.h	/^    FT_Int                kern_table_index;$/;"	m	struct:TT_FaceRec_
kern_table_size	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              kern_table_size;$/;"	m	struct:TT_FaceRec_
key2tval	src/lua/ltable.h	18;"	d
keyPressEvent	src/dialog/cardeditor.cpp	/^    virtual void keyPressEvent(QKeyEvent *event){$/;"	f	class:SkillTitle
keyPressEvent	src/dialog/cardeditor.cpp	/^void CardScene::keyPressEvent(QKeyEvent *event){$/;"	f	class:CardScene
keyReleaseEvent	src/ui/roomscene.cpp	/^void RoomScene::keyReleaseEvent(QKeyEvent *event){$/;"	f	class:RoomScene
key_	src/jsoncpp/include/json/value.h	/^      std::string key_;$/;"	m	class:Json::PathArgument
key_serializer_	src/breakpad/processor/map_serializers.h	/^  SimpleSerializer<Key> key_serializer_;$/;"	m	class:google_breakpad::StdMapSerializer
keys_	src/breakpad/processor/static_map.h	/^  const Key* keys_;$/;"	m	class:google_breakpad::StaticMap
keys_	src/breakpad/processor/static_map_iterator.h	/^  const Key* keys_;$/;"	m	class:google_breakpad::StaticMapIterator
keys_	src/jsoncpp/include/json/value.h	/^      char *keys_[itemPerLink];$/;"	m	class:Json::ValueInternalLink
kick	src/client/client.cpp	/^void Client::kick(const QString &to_kick){$/;"	f	class:Client
kick	src/server/serverplayer.cpp	/^void ServerPlayer::kick(){$/;"	f	class:ServerPlayer
kick	src/ui/roomscene.cpp	/^void RoomScene::kick(){$/;"	f	class:RoomScene
kickCommand	src/server/room.cpp	/^void Room::kickCommand(ServerPlayer *player, const QString &arg){$/;"	f	class:Room
killPlayer	src/client/client.cpp	/^void Client::killPlayer(const QString &player_name){$/;"	f	class:Client
killPlayer	src/server/room.cpp	/^void Room::killPlayer(ServerPlayer *victim, DamageStruct *reason){$/;"	f	class:Room
killPlayer	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::killPlayer()$/;"	f	class:PlayerCardContainer
killPlayer	src/ui/roomscene.cpp	/^void KOFOrderBox::killPlayer(const QString &general_name){$/;"	f	class:KOFOrderBox
killPlayer	src/ui/roomscene.cpp	/^void RoomScene::killPlayer(const QString &who){$/;"	f	class:RoomScene
killer	src/ui/roomscene.h	/^    QComboBox *killer, *victim;$/;"	m	class:DeathNoteDialog
kindIndex	src/jsoncpp/include/json/value.h	/^         kindIndex,$/;"	e	enum:Json::PathArgument::Kind
kindKey	src/jsoncpp/include/json/value.h	/^         kindKey$/;"	e	enum:Json::PathArgument::Kind
kindNone	src/jsoncpp/include/json/value.h	/^         kindNone = 0,$/;"	e	enum:Json::PathArgument::Kind
kind_	src/jsoncpp/include/json/value.h	/^      Kind kind_;$/;"	m	class:Json::PathArgument
kingdom	src/core/general.h	/^    QString kingdom;$/;"	m	class:General
kingdom	src/core/player.h	/^    QString kingdom;$/;"	m	class:Player
kingdom	src/dialog/cardeditor.h	/^    QString kingdom;$/;"	m	class:SkillBox
kingdom_ComboBox	src/dialog/cardeditor.h	/^    QComboBox *kingdom_ComboBox;$/;"	m	class:CardEditor
kingdom_index	src/dialog/customassigndialog.h	/^    QMap<QString, int> kingdom_index;$/;"	m	class:CustomAssignDialog
klass.initialize 	lua/lib/middleclass.lua	/^  klass.initialize = function(instance, ...)$/;"	f
kname	src/lua/ldebug.c	/^static const char *kname (Proto *p, int c) {$/;"	f	file:
known_cards	src/client/clientplayer.h	/^    QList<const Card *> known_cards;$/;"	m	class:ClientPlayer
known_cards_menu	src/ui/roomscene.h	/^    QMenu *known_cards_menu, *change_general_menu;$/;"	m	class:RoomScene
kurou_skill.getTurnUseCard	lua/ai/standard-ai.lua	/^kurou_skill.getTurnUseCard=function(self,inclusive)$/;"	f
l	src/lua/lobject.h	/^    } l;$/;"	m	union:UpVal::__anon93	typeref:struct:UpVal::__anon93::__anon94
l	src/lua/lobject.h	/^  LClosure l;$/;"	m	union:Closure
l	src/lua/lstate.c	/^  lua_State l;$/;"	m	struct:LG	file:
l_G	src/lua/lstate.h	/^  global_State *l_G;$/;"	m	struct:lua_State
l_alloc	src/lua/lauxlib.c	/^static void *l_alloc (void *ud, void *ptr, size_t osize, size_t nsize) {$/;"	f	file:
l_d	src/lua/luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	m	union:luai_Cast
l_gt	src/lua/lstate.h	/^  TValue l_gt;  \/* table of globals *\/$/;"	m	struct:lua_State
l_isfalse	src/lua/lobject.h	103;"	d
l_l	src/lua/luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	m	union:luai_Cast
l_mem	src/lua/llimits.h	/^typedef LUAI_MEM l_mem;$/;"	t
l_registry	src/lua/lstate.h	/^  TValue l_registry;$/;"	m	struct:global_State
l_setbit	src/lua/lgc.h	32;"	d
l_strcmp	src/lua/lvm.c	/^static int l_strcmp (const TString *ls, const TString *rs) {$/;"	f	file:
l_uacNumber	src/lua/llimits.h	/^typedef LUAI_UACNUMBER l_uacNumber;$/;"	t
label	include/fmod/fmod_dsp.h	/^    char        label[16];                          \/* [w] Short string to be put next to value to denote the unit type (ie "hz"). *\/$/;"	m	struct:FMOD_DSP_PARAMETERDESC
label	src/package/standard.cpp	/^QString Armor::label() const{$/;"	f	class:Armor
label	src/package/standard.cpp	/^QString Horse::label() const{$/;"	f	class:Horse
label	src/package/standard.cpp	/^QString Weapon::label() const{$/;"	f	class:Weapon
label	src/ui/button.h	/^    QString label;$/;"	m	class:Button
lack_label	src/client/clientstruct.h	/^    QLabel *lack_label;$/;"	m	class:ServerInfoWidget
language	include/freetype/freetype/internal/services/svttcmap.h	/^    FT_ULong  language;$/;"	m	struct:TT_CMapInfo_
languageID	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  languageID;$/;"	m	struct:TT_NameEntryRec_
language_group	include/freetype/freetype/t1tables.h	/^    FT_Long    language_group;$/;"	m	struct:PS_PrivateRec_
language_id	include/freetype/freetype/ftsnames.h	/^    FT_UShort  language_id;$/;"	m	struct:FT_SfntName_
lapi_c	src/lua/lapi.c	13;"	d	file:
lapi_h	src/lua/lapi.h	8;"	d
last	src/breakpad/processor/static_map.h	/^  inline iterator last() const { return IteratorAtIndex(num_nodes_ - 1); }$/;"	f	class:google_breakpad::StaticMap
lastValueEnd_	src/jsoncpp/include/json/reader.h	/^      Location lastValueEnd_;$/;"	m	class:Json::Reader
lastValue_	src/jsoncpp/include/json/reader.h	/^      Value *lastValue_;$/;"	m	class:Json::Reader
lastWord	src/core/general.cpp	/^void General::lastWord() const{$/;"	f	class:General
last_branch_from_rip	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t last_branch_from_rip;$/;"	m	struct:__anon56
last_branch_to_rip	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t last_branch_to_rip;$/;"	m	struct:__anon56
last_char	include/freetype/freetype/ftwinfnt.h	/^    FT_Byte    last_char;$/;"	m	struct:FT_WinFNT_HeaderRec_
last_exception_from_rip	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t last_exception_from_rip;$/;"	m	struct:__anon56
last_exception_to_rip	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t last_exception_to_rip;$/;"	m	struct:__anon56
last_glyph	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort           last_glyph;$/;"	m	struct:TT_SBit_RangeRec_
lastfree	src/lua/lobject.h	/^  Node *lastfree;  \/* any free position is before this position *\/$/;"	m	struct:Table
lastline	src/lua/llex.h	/^  int lastline;  \/* line of last token `consumed' *\/$/;"	m	struct:LexState
lastlinedefined	src/lua/lobject.h	/^  int lastlinedefined;$/;"	m	struct:Proto
lastlinedefined	src/lua/lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lastlistfield	src/lua/lparser.c	/^static void lastlistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
lasttarget	src/lua/lparser.h	/^  int lasttarget;   \/* `pc' of last `jump target' *\/$/;"	m	struct:FuncState
lauxlib_c	src/lua/lauxlib.c	20;"	d	file:
lauxlib_h	src/lua/lauxlib.h	9;"	d
lbaselib_c	src/lua/lbaselib.c	14;"	d	file:
lcd_extra	include/freetype/freetype/internal/ftobjs.h	/^    FT_Int                   lcd_extra;        \/* number of extra pixels *\/$/;"	m	struct:FT_LibraryRec_
lcd_filter	include/freetype/freetype/internal/ftobjs.h	/^    FT_LcdFilter             lcd_filter;$/;"	m	struct:FT_LibraryRec_
lcd_filter_func	include/freetype/freetype/internal/ftobjs.h	/^    FT_Bitmap_LcdFilterFunc  lcd_filter_func;  \/* filtering callback     *\/$/;"	m	struct:FT_LibraryRec_
lcd_weights	include/freetype/freetype/internal/ftobjs.h	/^    FT_Byte                  lcd_weights[7];   \/* filter weights, if any *\/$/;"	m	struct:FT_LibraryRec_
lcode_c	src/lua/lcode.c	10;"	d	file:
lcode_h	src/lua/lcode.h	8;"	d
lconfig_h	src/lua/luaconf.h	9;"	d
ldblib_c	src/lua/ldblib.c	12;"	d	file:
ldebug_c	src/lua/ldebug.c	13;"	d	file:
ldebug_h	src/lua/ldebug.h	8;"	d
ldo_c	src/lua/ldo.c	12;"	d	file:
ldo_h	src/lua/ldo.h	8;"	d
ldump_c	src/lua/ldump.c	9;"	d	file:
leaveblock	src/lua/lparser.c	/^static void leaveblock (FuncState *fs) {$/;"	f	file:
leavelevel	src/lua/lparser.c	282;"	d	file:
left	include/freetype/freetype/ftcache.h	/^    FT_Char   left;$/;"	m	struct:FTC_SBitRec_
left	include/freetype/freetype/ftglyph.h	/^    FT_Int       left;$/;"	m	struct:FT_BitmapGlyphRec_
left	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  left;   \/* index of left  glyph in pair *\/$/;"	m	struct:TT_Kern0_PairRec_
left	src/dialog/distanceviewdialog.cpp	/^    QLineEdit *left, *right;$/;"	m	struct:DistanceViewDialogUI	file:
left	src/lua/lparser.c	/^  lu_byte left;  \/* left priority for each binary operator *\/$/;"	m	struct:__anon88	file:
left_bearing	include/freetype/freetype/internal/psaux.h	/^    FT_Vector       left_bearing;$/;"	m	struct:T1_BuilderRec_
left_bearing	include/freetype/freetype/internal/tttypes.h	/^    FT_Int           left_bearing;$/;"	m	struct:TT_LoaderRec_
legacy	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t legacy[8];$/;"	m	struct:__anon56::__anon57::__anon58
len	include/freetype/freetype/ftimage.h	/^    unsigned short  len;$/;"	m	struct:FT_Span_
len	src/lua/lobject.h	/^    size_t len;$/;"	m	struct:TString::__anon91
len	src/lua/lobject.h	/^    size_t len;$/;"	m	struct:Udata::__anon92
len	src/lua/lstrlib.c	/^    ptrdiff_t len;$/;"	m	struct:MatchState::__anon101	file:
lenIV	include/freetype/freetype/internal/psaux.h	/^    FT_Int               lenIV;        \/* internal for sub routine calls *\/$/;"	m	struct:T1_DecoderRec_
lenIV	include/freetype/freetype/t1tables.h	/^    FT_Int     lenIV;$/;"	m	struct:PS_PrivateRec_
len_buildchar	include/freetype/freetype/internal/psaux.h	/^    FT_UInt              len_buildchar;$/;"	m	struct:T1_DecoderRec_
len_buildchar	include/freetype/freetype/internal/t1types.h	/^    FT_UInt          len_buildchar;$/;"	m	struct:T1_FaceRec_
len_buildchar	include/freetype/freetype/t1tables.h	/^    FT_UInt        len_buildchar;$/;"	m	struct:CID_FaceDictRec_
length	include/fmod/fmod.h	/^    unsigned int                   length;             \/* [w] Optional. Specify 0 to ignore. Size in bytes of file to load, or sound to create (in this case only if FMOD_OPENUSER is used).  Required if loading from memory.  If 0 is specified, then it will use the size of the file (unless loading from memory then an error will be returned). *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
length	include/freetype/freetype/fttypes.h	/^    FT_Int          length;$/;"	m	struct:FT_Data_
length	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t length;       \/* Length of entire MDImageDebugMisc structure *\/$/;"	m	struct:__anon31
length	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t length;     \/* Length of buffer in bytes (not characters),$/;"	m	struct:__anon23
lengthbytes	include/fmod/fmod_codec.h	/^    unsigned int       lengthbytes;   \/* [in] Length in bytes of the source data. *\/$/;"	m	struct:FMOD_CODEC_WAVEFORMAT
lengthpcm	include/fmod/fmod_codec.h	/^    unsigned int       lengthpcm;     \/* [in] Length in decompressed, PCM samples of the file, ie length in seconds * frequency.  Used for Sound::getLength and for memory allocation of static decompressed sample data. *\/$/;"	m	struct:FMOD_CODEC_WAVEFORMAT
lengths	include/freetype/freetype/internal/psaux.h	/^    FT_PtrDist*        lengths;        \/* lengths of table elements   *\/$/;"	m	struct:PS_TableRec_
lessequal	src/lua/lvm.c	/^static int lessequal (lua_State *L, const TValue *l, const TValue *r) {$/;"	f	file:
level	include/freetype/freetype/internal/ftvalid.h	/^    FT_ValidationLevel  level;       \/* validation level                 *\/$/;"	m	struct:FT_ValidatorRec_
level	src/lua/lstrlib.c	/^  int level;  \/* total number of captures (finished or unfinished) *\/$/;"	m	struct:MatchState	file:
lexue_skill.getTurnUseCard 	lua/ai/yitian-ai.lua	/^lexue_skill.getTurnUseCard = function(self)$/;"	f
lfunc_c	src/lua/lfunc.c	10;"	d	file:
lfunc_h	src/lua/lfunc.h	8;"	d
lgc_c	src/lua/lgc.c	9;"	d	file:
lgc_h	src/lua/lgc.h	8;"	d
lianhuan_skill.getTurnUseCard	lua/ai/fire-ai.lua	/^lianhuan_skill.getTurnUseCard=function(self)$/;"	f
lianli_slash_skill.getTurnUseCard 	lua/ai/yitian-ai.lua	/^lianli_slash_skill.getTurnUseCard = function(self)$/;"	f
libdis	src/breakpad/processor/disassembler_x86.h	/^namespace libdis {$/;"	n
library	include/freetype/freetype/freetype.h	/^    FT_Library        library;$/;"	m	struct:FT_GlyphSlotRec_
library	include/freetype/freetype/freetype.h	/^  FT_Done_FreeType( FT_Library  library );$/;"	v
library	include/freetype/freetype/ftglyph.h	/^    FT_Library             library;$/;"	m	struct:FT_GlyphRec_
library	include/freetype/freetype/ftmodapi.h	/^  FT_Add_Default_Modules( FT_Library  library );$/;"	v
library	include/freetype/freetype/ftmodapi.h	/^  FT_Done_Library( FT_Library  library );$/;"	v
library	include/freetype/freetype/ftmodapi.h	/^  FT_Get_TrueType_Engine_Type( FT_Library  library );$/;"	v
library	include/freetype/freetype/ftmodapi.h	/^  FT_Reference_Library( FT_Library  library );$/;"	v
library	include/freetype/freetype/internal/ftobjs.h	/^    FT_Library        library;$/;"	m	struct:FT_ModuleRec_
library	include/freetype/freetype/internal/ftpic.h	/^  ft_pic_container_destroy( FT_Library library );$/;"	v
library	include/freetype/freetype/internal/ftpic.h	/^  ft_pic_container_init( FT_Library library );$/;"	v
libsize	src/lua/lauxlib.c	/^static int libsize (const luaL_Reg *l) {$/;"	f	file:
lihun_skill.getTurnUseCard	lua/ai/bgm-ai.lua	/^lihun_skill.getTurnUseCard=function(self)$/;"	f
lihuo_skill.getTurnUseCard	lua/ai/yjcm2012-ai.lua	/^lihuo_skill.getTurnUseCard=function(self)$/;"	f
lijian_filter 	lua/ai/standard-ai.lua	/^lijian_filter = function(player, carduse)$/;"	f
lijian_skill.getTurnUseCard	lua/ai/standard-ai.lua	/^lijian_skill.getTurnUseCard=function(self)$/;"	f
limit	include/freetype/freetype/ftsystem.h	/^    unsigned char*       limit;$/;"	m	struct:FT_StreamRec_
limit	include/freetype/freetype/internal/ftvalid.h	/^    const FT_Byte*      limit;       \/* `base' + sizeof(table) in memory *\/$/;"	m	struct:FT_ValidatorRec_
limit	include/freetype/freetype/internal/psaux.h	/^    FT_Byte*      limit;   \/* first character after the token          *\/$/;"	m	struct:T1_TokenRec_
limit	include/freetype/freetype/internal/psaux.h	/^    FT_Byte*   limit;$/;"	m	struct:PS_ParserRec_
limit	include/freetype/freetype/internal/psaux.h	/^    FT_Byte*  limit;$/;"	m	struct:T1_Decoder_ZoneRec_
limit	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*         limit;$/;"	m	struct:TT_LoaderRec_
line	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t line;             \/* ...at this line. *\/$/;"	m	struct:__anon51
line	src/breakpad/processor/source_line_resolver_base_types.h	/^  int32_t line;$/;"	m	struct:google_breakpad::SourceLineResolverBase::Line
line_to	include/freetype/freetype/ftimage.h	/^    FT_Outline_LineToFunc   line_to;$/;"	m	struct:FT_Outline_Funcs_
linear	include/freetype/freetype/internal/tttypes.h	/^    FT_Int           linear;$/;"	m	struct:TT_LoaderRec_
linearHoriAdvance	include/freetype/freetype/freetype.h	/^    FT_Fixed          linearHoriAdvance;$/;"	m	struct:FT_GlyphSlotRec_
linearVertAdvance	include/freetype/freetype/freetype.h	/^    FT_Fixed          linearVertAdvance;$/;"	m	struct:FT_GlyphSlotRec_
linear_def	include/freetype/freetype/internal/tttypes.h	/^    FT_Bool          linear_def;$/;"	m	struct:TT_LoaderRec_
linedefined	src/lua/lobject.h	/^  int linedefined;$/;"	m	struct:Proto
linedefined	src/lua/lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lineinfo	src/lua/lobject.h	/^  int *lineinfo;  \/* map from opcodes to source lines *\/$/;"	m	struct:Proto
linenumber	src/lua/llex.h	/^  int linenumber;  \/* input line counter *\/$/;"	m	struct:LexState
lines	src/breakpad/processor/basic_source_line_resolver_types.h	/^  RangeMap< MemAddr, linked_ptr<Line> > lines;$/;"	m	struct:google_breakpad::BasicSourceLineResolver::Function
lines	src/breakpad/processor/fast_source_line_resolver_types.h	/^  StaticRangeMap<MemAddr, Line> lines;$/;"	m	struct:google_breakpad::FastSourceLineResolver::Function
lines	src/ui/sprite.h	/^    QMap<QString,AnimationLine*> lines;$/;"	m	class:Sprite
lines_doc	src/client/client.h	/^    QTextDocument *lines_doc, *prompt_doc;$/;"	m	class:Client
linit_c	src/lua/linit.c	8;"	d	file:
link_	src/breakpad/processor/linked_ptr.h	/^  linked_ptr_internal link_;$/;"	m	class:google_breakpad::linked_ptr
link_	src/jsoncpp/include/json/value.h	/^         ValueInternalLink *link_;$/;"	m	struct:Json::ValueInternalMap::IteratorState
linked_ptr	src/breakpad/processor/linked_ptr.h	/^  explicit linked_ptr(T* ptr = NULL) { capture(ptr); }$/;"	f	class:google_breakpad::linked_ptr
linked_ptr	src/breakpad/processor/linked_ptr.h	/^  linked_ptr(linked_ptr const& ptr) { copy(&ptr); }$/;"	f	class:google_breakpad::linked_ptr
linked_ptr	src/breakpad/processor/linked_ptr.h	/^  template <typename U> linked_ptr(linked_ptr<U> const& ptr) { copy(&ptr); }$/;"	f	class:google_breakpad::linked_ptr
linked_ptr	src/breakpad/processor/linked_ptr.h	/^class linked_ptr {$/;"	c	namespace:google_breakpad
linked_ptr_internal	src/breakpad/processor/linked_ptr.h	/^class linked_ptr_internal {$/;"	c	namespace:google_breakpad
liolib_c	src/lua/liolib.c	13;"	d	file:
list	src/dialog/connectiondialog.h	/^    QListWidget *list;$/;"	m	class:UdpDetectorDialog
list	src/dialog/customassigndialog.h	/^    QListWidget *list, *equip_list, *hand_list, *judge_list, *pile_list;$/;"	m	class:CustomAssignDialog
list	src/dialog/roleassigndialog.h	/^    QListWidget *list;$/;"	m	class:RoleAssignDialog
list	src/dialog/scenario-overview.h	/^    QListWidget *list;$/;"	m	class:ScenarioOverview
list	src/server/server.h	/^    QListWidget * list;$/;"	m	class:BanlistDialog
list_widget	src/client/clientstruct.h	/^    QListWidget *list_widget;$/;"	m	class:ServerInfoWidget
listen	src/server/server.cpp	/^bool Server::listen(){$/;"	f	class:Server
listen	src/util/nativesocket.cpp	/^bool NativeServerSocket::listen(){$/;"	f	class:NativeServerSocket
listfield	src/lua/lparser.c	/^static void listfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
lists	src/server/server.h	/^    QList<QListWidget *>lists;$/;"	m	class:BanlistDialog
ll_funcs	src/lua/loadlib.c	/^static const luaL_Reg ll_funcs[] = {$/;"	v	file:
ll_load	src/lua/loadlib.c	/^static void *ll_load (lua_State *L, const char *path) {$/;"	f	file:
ll_loadfunc	src/lua/loadlib.c	/^static int ll_loadfunc (lua_State *L, const char *path, const char *sym) {$/;"	f	file:
ll_loadlib	src/lua/loadlib.c	/^static int ll_loadlib (lua_State *L) {$/;"	f	file:
ll_module	src/lua/loadlib.c	/^static int ll_module (lua_State *L) {$/;"	f	file:
ll_register	src/lua/loadlib.c	/^static void **ll_register (lua_State *L, const char *path) {$/;"	f	file:
ll_require	src/lua/loadlib.c	/^static int ll_require (lua_State *L) {$/;"	f	file:
ll_seeall	src/lua/loadlib.c	/^static int ll_seeall (lua_State *L) {$/;"	f	file:
ll_sym	src/lua/loadlib.c	/^static lua_CFunction ll_sym (lua_State *L, void *lib, const char *sym) {$/;"	f	file:
ll_unloadlib	src/lua/loadlib.c	/^static void ll_unloadlib (void *lib) {$/;"	f	file:
llex	src/lua/llex.c	/^static int llex (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
llex_c	src/lua/llex.c	12;"	d	file:
llex_h	src/lua/llex.h	8;"	d
llimits_h	src/lua/llimits.h	8;"	d
lmathlib_c	src/lua/lmathlib.c	11;"	d	file:
lmem_c	src/lua/lmem.c	10;"	d	file:
lmem_h	src/lua/lmem.h	8;"	d
lmemfind	src/lua/lstrlib.c	/^static const char *lmemfind (const char *s1, size_t l1,$/;"	f	file:
lmod	src/lua/lobject.h	355;"	d
load	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::load()$/;"	f	class:CustomAssignDialog
load	src/ui/QSanSelectableItem.cpp	/^bool QSanSelectableItem::load(const QString &filename, QSize size, bool center_as_origin)$/;"	f	class:QSanSelectableItem
load	src/ui/QSanSelectableItem.cpp	/^bool QSanSelectableItem::load(const QString& filename, bool center_as_origin)$/;"	f	class:QSanSelectableItem
load	src/ui/SkinBank.cpp	/^bool IQSanComponentSkin::load(const QString &layoutConfigName, const QString &imageConfigName,$/;"	f	class:IQSanComponentSkin
load	src/ui/SkinBank.cpp	/^bool QSanSkinScheme::load(Json::Value configs)$/;"	f	class:QSanSkinScheme
load1v1Table	src/server/generalselector.cpp	/^void GeneralSelector::load1v1Table(){$/;"	f	class:GeneralSelector
load3v3Table	src/server/generalselector.cpp	/^void GeneralSelector::load3v3Table(){$/;"	f	class:GeneralSelector
loadBanPairs	src/core/banpair.cpp	/^void BanPair::loadBanPairs(){$/;"	f	class:BanPair
loadConfig	src/dialog/cardeditor.cpp	/^void CardScene::loadConfig(){$/;"	f	class:CardScene
loadConfig	src/dialog/cardeditor.cpp	/^void SkillBox::loadConfig(){$/;"	f	class:SkillBox
loadContent	src/dialog/scenario-overview.cpp	/^void ScenarioOverview::loadContent(int row){$/;"	f	class:ScenarioOverview
loadFirstGeneralTable	src/server/generalselector.cpp	/^void GeneralSelector::loadFirstGeneralTable(){$/;"	f	class:GeneralSelector
loadFirstGeneralTable	src/server/generalselector.cpp	/^void GeneralSelector::loadFirstGeneralTable(const QString &role){$/;"	f	class:GeneralSelector
loadFont	src/ui/uiUtils.cpp	/^int* QSanUiUtils::QSanFreeTypeFont::loadFont(const QString& fontName)$/;"	f	class:QSanUiUtils::QSanFreeTypeFont
loadFromAll	src/dialog/cardoverview.cpp	/^void CardOverview::loadFromAll(){$/;"	f	class:CardOverview
loadFromList	src/dialog/cardoverview.cpp	/^void CardOverview::loadFromList(const QList<const Card*> &list){$/;"	f	class:CardOverview
loadMembers	src/server/contestdb.cpp	/^bool ContestDB::loadMembers(){$/;"	f	class:ContestDB
loadPackageList	src/dialog/packagingeditor.cpp	/^void PackagingEditor::loadPackageList(){$/;"	f	class:PackagingEditor
loadSecondGeneralTable	src/server/generalselector.cpp	/^void GeneralSelector::loadSecondGeneralTable(){$/;"	f	class:GeneralSelector
loadSetting	src/scenario/miniscenarios.cpp	/^void MiniSceneRule::loadSetting(QString path)$/;"	f	class:MiniSceneRule
load_any	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Any_Func             load_any;$/;"	m	struct:SFNT_Interface_
load_aux	src/lua/lbaselib.c	/^static int load_aux (lua_State *L, int status) {$/;"	f	file:
load_bhed	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_bhed;$/;"	m	struct:SFNT_Interface_
load_charmap_stub	include/freetype/freetype/internal/sfnt.h	/^    TT_CharMap_Load_Func         load_charmap_stub;$/;"	m	struct:SFNT_Interface_
load_cmap	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_cmap;$/;"	m	struct:SFNT_Interface_
load_directory	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Directory_Func       load_directory;$/;"	m	struct:SFNT_Interface_
load_eblc	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_eblc;$/;"	m	struct:SFNT_Interface_
load_extensions	lua/sanguosha.lua	/^function load_extensions(just_require)$/;"	f
load_face	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Face_Func            load_face;$/;"	m	struct:SFNT_Interface_
load_field	include/freetype/freetype/internal/psaux.h	/^    (*load_field)( PS_Parser       parser,$/;"	m	struct:PS_Parser_FuncsRec_
load_field_table	include/freetype/freetype/internal/psaux.h	/^    (*load_field_table)( PS_Parser       parser,$/;"	m	struct:PS_Parser_FuncsRec_
load_flags	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong         load_flags;$/;"	m	struct:TT_LoaderRec_
load_font_dir	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_font_dir;$/;"	m	struct:SFNT_Interface_
load_gasp	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_gasp;$/;"	m	struct:SFNT_Interface_
load_glyph	include/freetype/freetype/internal/autohint.h	/^    FT_AutoHinter_GlyphLoadFunc    load_glyph;$/;"	m	struct:FT_AutoHinter_ServiceRec_
load_glyph	include/freetype/freetype/internal/ftdriver.h	/^    FT_Slot_LoadFunc          load_glyph;$/;"	m	struct:FT_Driver_ClassRec_
load_hdmx_stub	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_hdmx_stub;$/;"	m	struct:SFNT_Interface_
load_head	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_head;$/;"	m	struct:SFNT_Interface_
load_hhea	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Metrics_Func         load_hhea;$/;"	m	struct:SFNT_Interface_
load_hmtx	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Metrics_Func         load_hmtx;$/;"	m	struct:SFNT_Interface_
load_kern	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_kern;$/;"	m	struct:SFNT_Interface_
load_libluasqlite3	lua/lib/libluasqlite3-loader.lua	/^function load_libluasqlite3()$/;"	f
load_maxp	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_maxp;$/;"	m	struct:SFNT_Interface_
load_name	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_name;$/;"	m	struct:SFNT_Interface_
load_os2	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_os2;$/;"	m	struct:SFNT_Interface_
load_pclt	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_pclt;$/;"	m	struct:SFNT_Interface_
load_points	include/freetype/freetype/internal/psaux.h	/^    FT_Bool         load_points;$/;"	m	struct:T1_BuilderRec_
load_post	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_post;$/;"	m	struct:SFNT_Interface_
load_sbit_image	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_SBit_Image_Func      load_sbit_image;$/;"	m	struct:SFNT_Interface_
load_sbit_metrics	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_SBit_Metrics_Func    load_sbit_metrics;$/;"	m	struct:SFNT_Interface_
load_sbits_stub	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Table_Func           load_sbits_stub;$/;"	m	struct:SFNT_Interface_
load_sfnt_header	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_SFNT_HeaderRec_Func  load_sfnt_header;$/;"	m	struct:SFNT_Interface_
load_strike_metrics	include/freetype/freetype/internal/sfnt.h	/^    TT_Load_Strike_Metrics_Func  load_strike_metrics;$/;"	m	struct:SFNT_Interface_
load_translation	lua/sanguosha.lua	/^function load_translation(file)$/;"	f
load_translations	lua/sanguosha.lua	/^function load_translations()$/;"	f
loaded	include/freetype/freetype/internal/tttypes.h	/^    FT_Bool    loaded;$/;"	m	struct:TT_BDFRec_
loaded	include/freetype/freetype/internal/tttypes.h	/^    FT_Bool  loaded;$/;"	m	struct:TT_Post_NamesRec_
loaded	src/dialog/mainwindow.h	/^    QList<QObject*> tokens,equipped,loaded;$/;"	m	class:AcknowledgementScene
loader	include/freetype/freetype/internal/ftgloadr.h	/^  FT_GlyphLoader_Add( FT_GlyphLoader  loader );$/;"	v
loader	include/freetype/freetype/internal/ftgloadr.h	/^  FT_GlyphLoader_CreateExtra( FT_GlyphLoader  loader );$/;"	v
loader	include/freetype/freetype/internal/ftgloadr.h	/^  FT_GlyphLoader_Done( FT_GlyphLoader  loader );$/;"	v
loader	include/freetype/freetype/internal/ftgloadr.h	/^  FT_GlyphLoader_Prepare( FT_GlyphLoader  loader );$/;"	v
loader	include/freetype/freetype/internal/ftgloadr.h	/^  FT_GlyphLoader_Reset( FT_GlyphLoader  loader );$/;"	v
loader	include/freetype/freetype/internal/ftgloadr.h	/^  FT_GlyphLoader_Rewind( FT_GlyphLoader  loader );$/;"	v
loader	include/freetype/freetype/internal/ftobjs.h	/^    FT_GlyphLoader  loader;$/;"	m	struct:FT_Slot_InternalRec_
loader	include/freetype/freetype/internal/psaux.h	/^    FT_GlyphLoader  loader;$/;"	m	struct:T1_BuilderRec_
loader_C	src/lua/loadlib.c	/^static int loader_C (lua_State *L) {$/;"	f	file:
loader_Croot	src/lua/loadlib.c	/^static int loader_Croot (lua_State *L) {$/;"	f	file:
loader_Lua	src/lua/loadlib.c	/^static int loader_Lua (lua_State *L) {$/;"	f	file:
loader_preload	src/lua/loadlib.c	/^static int loader_preload (lua_State *L) {$/;"	f	file:
loaderror	src/lua/loadlib.c	/^static void loaderror (lua_State *L, const char *filename) {$/;"	f	file:
loaders	src/lua/loadlib.c	/^static const lua_CFunction loaders[] =$/;"	v	file:
loadlib_c	src/lua/loadlib.c	16;"	d	file:
lobject_c	src/lua/lobject.c	13;"	d	file:
lobject_h	src/lua/lobject.h	9;"	d
local aux_func 	lua/ai/smart-ai.lua	/^	local aux_func = function(card)$/;"	f
local checkstep 	lua/lib/socket/ftp.lua	/^    local checkstep = function(src, snk)$/;"	f
local co 	lua/lib/socket/smtp.lua	/^    local co = coroutine.create(function() send_message(mesgt) end)$/;"	f
local comp_func 	lua/ai/smart-ai.lua	/^	local comp_func = function(a,b)$/;"	f
local compare_func 	lua/ai/smart-ai.lua	/^	local compare_func = function(a, b)$/;"	f
local compare_func 	lua/ai/smart-ai.lua	/^	local compare_func = function(a,b)$/;"	f
local compare_func 	lua/ai/standard-ai.lua	/^	local compare_func = function(a, b)$/;"	f
local compare_func 	lua/ai/thicket-ai.lua	/^	local compare_func = function(a, b)$/;"	f
local compare_func 	lua/ai/yitian-ai.lua	/^	local compare_func = function(a, b)$/;"	f
local compare_func 	lua/ai/yjcm2012-ai.lua	/^	local compare_func = function(a, b)$/;"	f
local f 	lua/lib/ltn12.lua	/^    local f = function(chunk, err)$/;"	f
local findFriend_maxSlash	lua/ai/standard-ai.lua	/^	local findFriend_maxSlash=function(self,first)$/;"	f
local getKingdoms	extension-doc/3-TriggerSkill.lua	/^		local getKingdoms=function() --可以在函数中定义函数，本函数返回存活势力的数目$/;"	f
local iterator 	lua/lib/sqlite3.lua	/^  local iterator = function()$/;"	f
local jijiang_filter 	extension-doc/16-RoleJudgement.lua	/^local jijiang_filter = function(player, carduse)$/;"	f
local jijiang_filter 	lua/ai/standard-ai.lua	/^local jijiang_filter = function(player, carduse)$/;"	f
local lianli_slash_filter 	lua/ai/yitian-ai.lua	/^local lianli_slash_filter = function(player, carduse)$/;"	f
local qlist_iterator 	lua/sgs_ex.lua	/^local qlist_iterator = function(list, n)$/;"	f
local quhu_filter 	lua/ai/fire-ai.lua	/^local quhu_filter = function(player, carduse)$/;"	f
local status 	lua/lib/sqlite3.lua	/^  local status = api.create_function(db.handle, name, num_args, nil, xstep, xfinal)$/;"	f
local status 	lua/lib/sqlite3.lua	/^  local status = api.create_function(db.handle, name, num_args, xfunc, nil, nil)$/;"	f
local yisheask_filter 	extension-doc/17-Example.lua	/^local yisheask_filter = function(player, carduse)$/;"	f
local yisheask_filter 	lua/ai/yitian-ai.lua	/^local yisheask_filter = function(player, carduse)$/;"	f
local_size	src/breakpad/processor/windows_frame_info.h	/^  u_int32_t local_size;$/;"	m	struct:google_breakpad::WindowsFrameInfo
localfunc	src/lua/lparser.c	/^static void localfunc (LexState *ls) {$/;"	f	file:
localstat	src/lua/lparser.c	/^static void localstat (LexState *ls) {$/;"	f	file:
location	include/freetype/freetype/internal/psaux.h	/^    T1_FieldLocation    location;$/;"	m	struct:T1_FieldRec_
location	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDLocationDescriptor location;$/;"	m	struct:__anon21
location	src/package/standard.cpp	/^EquipCard::Location Armor::location() const{$/;"	f	class:Armor
location	src/package/standard.cpp	/^EquipCard::Location Horse::location() const{$/;"	f	class:Horse
location	src/package/standard.cpp	/^EquipCard::Location Weapon::location() const{$/;"	f	class:Weapon
lock	include/fmod/fmod_output.h	/^    FMOD_OUTPUT_LOCKCALLBACK           lock;                  \/* [in] This is called from the FMOD software mixer thread if 'polling' = true.  This function provides a pointer to data that FMOD can write to when software mixing. *\/$/;"	m	struct:FMOD_OUTPUT_DESCRIPTION
lock_card	src/core/player.h	/^    QSet<QString> lock_card;$/;"	m	class:Player
locvars	src/lua/lobject.h	/^  struct LocVar *locvars;  \/* information about local variables *\/$/;"	m	struct:Proto	typeref:struct:Proto::LocVar
log	src/client/client.cpp	/^void Client::log(const QString &log_str){$/;"	f	class:Client
log_box	src/ui/roomscene.h	/^    ClientLogBox *log_box;$/;"	m	class:RoomScene
log_box_widget	src/ui/roomscene.h	/^    QGraphicsProxyWidget *log_box_widget;$/;"	m	class:RoomScene
logo	src/ui/startscene.h	/^    QSanSelectableItem *logo;$/;"	m	class:StartScene
long_metrics	include/freetype/freetype/tttables.h	/^    void*      long_metrics;$/;"	m	struct:TT_HoriHeader_
long_metrics	include/freetype/freetype/tttables.h	/^    void*      long_metrics;$/;"	m	struct:TT_VertHeader_
longdan_skill.getTurnUseCard	lua/ai/standard-ai.lua	/^longdan_skill.getTurnUseCard=function(self)$/;"	f
longhun_skill.getTurnUseCard 	lua/ai/god-ai.lua	/^longhun_skill.getTurnUseCard = function(self)$/;"	f
lookahead	src/lua/llex.h	/^  Token lookahead;  \/* look ahead token *\/$/;"	m	struct:LexState
loopend	include/fmod/fmod_codec.h	/^    int                loopend;       \/* [in] Loopend in decompressed, PCM samples of file. *\/$/;"	m	struct:FMOD_CODEC_WAVEFORMAT
loopstart	include/fmod/fmod_codec.h	/^    int                loopstart;     \/* [in] Loopstart in decompressed, PCM samples of file. *\/$/;"	m	struct:FMOD_CODEC_WAVEFORMAT
lopcodes_c	src/lua/lopcodes.c	7;"	d	file:
lopcodes_h	src/lua/lopcodes.h	8;"	d
lord	src/core/general.h	/^    bool lord;$/;"	m	class:General
lord	src/scenario/scenario.h	/^    QString lord;$/;"	m	class:Scenario
lord_checkbox	src/dialog/cardeditor.h	/^    QCheckBox *lord_checkbox;$/;"	m	class:CardEditor
lord_list	src/core/engine.h	/^    QStringList lord_list, nonlord_list;$/;"	m	class:Engine
lord_skill	src/core/skill.h	/^    bool lord_skill;$/;"	m	class:Skill
loseAllMarks	src/server/serverplayer.cpp	/^void ServerPlayer::loseAllMarks(const QString &mark_name){$/;"	f	class:ServerPlayer
loseCards	src/client/client.cpp	/^void Client::loseCards(const Json::Value& arg)$/;"	f	class:Client
loseCards	src/ui/roomscene.cpp	/^void RoomScene::loseCards(int moveId, QList<CardsMoveStruct> card_moves)$/;"	f	class:RoomScene
loseHp	src/server/room.cpp	/^void Room::loseHp(ServerPlayer *victim, int lose){$/;"	f	class:Room
loseMark	src/server/serverplayer.cpp	/^void ServerPlayer::loseMark(const QString &mark, int n){$/;"	f	class:ServerPlayer
loseMaxHp	src/server/room.cpp	/^void Room::loseMaxHp(ServerPlayer *victim, int lose){$/;"	f	class:Room
loseSkill	src/core/player.cpp	/^void Player::loseSkill(const QString &skill_name){$/;"	f	class:Player
loseSkill	src/server/serverplayer.cpp	/^void ServerPlayer::loseSkill(const QString &skill_name){$/;"	f	class:ServerPlayer
loslib_c	src/lua/loslib.c	14;"	d	file:
low	src/breakpad/google_breakpad/common/breakpad_types.h	/^  u_int64_t low;$/;"	m	struct:__anon5
lower_bound	src/breakpad/processor/static_map-inl.h	/^StaticMap<Key, Value, Compare>::lower_bound(const Key &key) const {$/;"	f	class:google_breakpad::StaticMap
lower_headers	lua/lib/socket/smtp.lua	/^local function lower_headers(headers)$/;"	f
loyalist 	lua/ai/smart-ai.lua	/^		loyalist = function(a, b)$/;"	f
loyalists	src/scenario/scenario.h	/^    QStringList loyalists, rebels, renegades;$/;"	m	class:Scenario
lparser_c	src/lua/lparser.c	10;"	d	file:
lparser_h	src/lua/lparser.h	8;"	d
lr	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int32_t             lr;      \/* Link *\/$/;"	m	struct:__anon11
lr	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	/^  u_int64_t             lr;      \/* Link *\/$/;"	m	struct:__anon8
ls	src/lua/lparser.h	/^  struct LexState *ls;  \/* lexical state *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::LexState
lsb_delta	include/freetype/freetype/freetype.h	/^    FT_Pos            lsb_delta;$/;"	m	struct:FT_GlyphSlotRec_
lsizenode	src/lua/lobject.h	/^  lu_byte lsizenode;  \/* log2 of size of `node' array *\/$/;"	m	struct:Table
lstate_c	src/lua/lstate.c	10;"	d	file:
lstate_h	src/lua/lstate.h	8;"	d
lstring_c	src/lua/lstring.c	10;"	d	file:
lstring_h	src/lua/lstring.h	8;"	d
lstrlib_c	src/lua/lstrlib.c	14;"	d	file:
ltable_c	src/lua/ltable.c	24;"	d	file:
ltable_h	src/lua/ltable.h	8;"	d
ltablib_c	src/lua/ltablib.c	10;"	d	file:
ltm_c	src/lua/ltm.c	10;"	d	file:
ltm_h	src/lua/ltm.h	8;"	d
lu_byte	src/lua/llimits.h	/^typedef unsigned char lu_byte;$/;"	t
lu_int32	src/lua/llimits.h	/^typedef LUAI_UINT32 lu_int32;$/;"	t
lu_mem	src/lua/llimits.h	/^typedef LUAI_UMEM lu_mem;$/;"	t
lua	src/core/engine.h	/^    lua_State *lua;$/;"	m	class:Engine
luaA_pushobject	src/lua/lapi.c	/^void luaA_pushobject (lua_State *L, const TValue *o) {$/;"	f
luaB_assert	src/lua/lbaselib.c	/^static int luaB_assert (lua_State *L) {$/;"	f	file:
luaB_auxwrap	src/lua/lbaselib.c	/^static int luaB_auxwrap (lua_State *L) {$/;"	f	file:
luaB_cocreate	src/lua/lbaselib.c	/^static int luaB_cocreate (lua_State *L) {$/;"	f	file:
luaB_collectgarbage	src/lua/lbaselib.c	/^static int luaB_collectgarbage (lua_State *L) {$/;"	f	file:
luaB_coresume	src/lua/lbaselib.c	/^static int luaB_coresume (lua_State *L) {$/;"	f	file:
luaB_corunning	src/lua/lbaselib.c	/^static int luaB_corunning (lua_State *L) {$/;"	f	file:
luaB_costatus	src/lua/lbaselib.c	/^static int luaB_costatus (lua_State *L) {$/;"	f	file:
luaB_cowrap	src/lua/lbaselib.c	/^static int luaB_cowrap (lua_State *L) {$/;"	f	file:
luaB_dofile	src/lua/lbaselib.c	/^static int luaB_dofile (lua_State *L) {$/;"	f	file:
luaB_error	src/lua/lbaselib.c	/^static int luaB_error (lua_State *L) {$/;"	f	file:
luaB_gcinfo	src/lua/lbaselib.c	/^static int luaB_gcinfo (lua_State *L) {$/;"	f	file:
luaB_getfenv	src/lua/lbaselib.c	/^static int luaB_getfenv (lua_State *L) {$/;"	f	file:
luaB_getmetatable	src/lua/lbaselib.c	/^static int luaB_getmetatable (lua_State *L) {$/;"	f	file:
luaB_ipairs	src/lua/lbaselib.c	/^static int luaB_ipairs (lua_State *L) {$/;"	f	file:
luaB_load	src/lua/lbaselib.c	/^static int luaB_load (lua_State *L) {$/;"	f	file:
luaB_loadfile	src/lua/lbaselib.c	/^static int luaB_loadfile (lua_State *L) {$/;"	f	file:
luaB_loadstring	src/lua/lbaselib.c	/^static int luaB_loadstring (lua_State *L) {$/;"	f	file:
luaB_newproxy	src/lua/lbaselib.c	/^static int luaB_newproxy (lua_State *L) {$/;"	f	file:
luaB_next	src/lua/lbaselib.c	/^static int luaB_next (lua_State *L) {$/;"	f	file:
luaB_pairs	src/lua/lbaselib.c	/^static int luaB_pairs (lua_State *L) {$/;"	f	file:
luaB_pcall	src/lua/lbaselib.c	/^static int luaB_pcall (lua_State *L) {$/;"	f	file:
luaB_print	src/lua/lbaselib.c	/^static int luaB_print (lua_State *L) {$/;"	f	file:
luaB_rawequal	src/lua/lbaselib.c	/^static int luaB_rawequal (lua_State *L) {$/;"	f	file:
luaB_rawget	src/lua/lbaselib.c	/^static int luaB_rawget (lua_State *L) {$/;"	f	file:
luaB_rawset	src/lua/lbaselib.c	/^static int luaB_rawset (lua_State *L) {$/;"	f	file:
luaB_select	src/lua/lbaselib.c	/^static int luaB_select (lua_State *L) {$/;"	f	file:
luaB_setfenv	src/lua/lbaselib.c	/^static int luaB_setfenv (lua_State *L) {$/;"	f	file:
luaB_setmetatable	src/lua/lbaselib.c	/^static int luaB_setmetatable (lua_State *L) {$/;"	f	file:
luaB_tonumber	src/lua/lbaselib.c	/^static int luaB_tonumber (lua_State *L) {$/;"	f	file:
luaB_tostring	src/lua/lbaselib.c	/^static int luaB_tostring (lua_State *L) {$/;"	f	file:
luaB_type	src/lua/lbaselib.c	/^static int luaB_type (lua_State *L) {$/;"	f	file:
luaB_unpack	src/lua/lbaselib.c	/^static int luaB_unpack (lua_State *L) {$/;"	f	file:
luaB_xpcall	src/lua/lbaselib.c	/^static int luaB_xpcall (lua_State *L) {$/;"	f	file:
luaB_yield	src/lua/lbaselib.c	/^static int luaB_yield (lua_State *L) {$/;"	f	file:
luaC_barrier	src/lua/lgc.h	86;"	d
luaC_barrierback	src/lua/lgc.c	/^void luaC_barrierback (lua_State *L, Table *t) {$/;"	f
luaC_barrierf	src/lua/lgc.c	/^void luaC_barrierf (lua_State *L, GCObject *o, GCObject *v) {$/;"	f
luaC_barriert	src/lua/lgc.h	89;"	d
luaC_callGCTM	src/lua/lgc.c	/^void luaC_callGCTM (lua_State *L) {$/;"	f
luaC_checkGC	src/lua/lgc.h	80;"	d
luaC_freeall	src/lua/lgc.c	/^void luaC_freeall (lua_State *L) {$/;"	f
luaC_fullgc	src/lua/lgc.c	/^void luaC_fullgc (lua_State *L) {$/;"	f
luaC_link	src/lua/lgc.c	/^void luaC_link (lua_State *L, GCObject *o, lu_byte tt) {$/;"	f
luaC_linkupval	src/lua/lgc.c	/^void luaC_linkupval (lua_State *L, UpVal *uv) {$/;"	f
luaC_objbarrier	src/lua/lgc.h	92;"	d
luaC_objbarriert	src/lua/lgc.h	96;"	d
luaC_separateudata	src/lua/lgc.c	/^size_t luaC_separateudata (lua_State *L, int all) {$/;"	f
luaC_step	src/lua/lgc.c	/^void luaC_step (lua_State *L) {$/;"	f
luaC_white	src/lua/lgc.h	77;"	d
luaD_call	src/lua/ldo.c	/^void luaD_call (lua_State *L, StkId func, int nResults) {$/;"	f
luaD_callhook	src/lua/ldo.c	/^void luaD_callhook (lua_State *L, int event, int line) {$/;"	f
luaD_checkstack	src/lua/ldo.h	16;"	d
luaD_growstack	src/lua/ldo.c	/^void luaD_growstack (lua_State *L, int n) {$/;"	f
luaD_pcall	src/lua/ldo.c	/^int luaD_pcall (lua_State *L, Pfunc func, void *u,$/;"	f
luaD_poscall	src/lua/ldo.c	/^int luaD_poscall (lua_State *L, StkId firstResult) {$/;"	f
luaD_precall	src/lua/ldo.c	/^int luaD_precall (lua_State *L, StkId func, int nresults) {$/;"	f
luaD_protectedparser	src/lua/ldo.c	/^int luaD_protectedparser (lua_State *L, ZIO *z, const char *name) {$/;"	f
luaD_rawrunprotected	src/lua/ldo.c	/^int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {$/;"	f
luaD_reallocCI	src/lua/ldo.c	/^void luaD_reallocCI (lua_State *L, int newsize) {$/;"	f
luaD_reallocstack	src/lua/ldo.c	/^void luaD_reallocstack (lua_State *L, int newsize) {$/;"	f
luaD_seterrorobj	src/lua/ldo.c	/^void luaD_seterrorobj (lua_State *L, int errcode, StkId oldtop) {$/;"	f
luaD_throw	src/lua/ldo.c	/^void luaD_throw (lua_State *L, int errcode) {$/;"	f
luaE_freethread	src/lua/lstate.c	/^void luaE_freethread (lua_State *L, lua_State *L1) {$/;"	f
luaE_newthread	src/lua/lstate.c	/^lua_State *luaE_newthread (lua_State *L) {$/;"	f
luaF_close	src/lua/lfunc.c	/^void luaF_close (lua_State *L, StkId level) {$/;"	f
luaF_findupval	src/lua/lfunc.c	/^UpVal *luaF_findupval (lua_State *L, StkId level) {$/;"	f
luaF_freeclosure	src/lua/lfunc.c	/^void luaF_freeclosure (lua_State *L, Closure *c) {$/;"	f
luaF_freeproto	src/lua/lfunc.c	/^void luaF_freeproto (lua_State *L, Proto *f) {$/;"	f
luaF_freeupval	src/lua/lfunc.c	/^void luaF_freeupval (lua_State *L, UpVal *uv) {$/;"	f
luaF_getlocalname	src/lua/lfunc.c	/^const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {$/;"	f
luaF_newCclosure	src/lua/lfunc.c	/^Closure *luaF_newCclosure (lua_State *L, int nelems, Table *e) {$/;"	f
luaF_newLclosure	src/lua/lfunc.c	/^Closure *luaF_newLclosure (lua_State *L, int nelems, Table *e) {$/;"	f
luaF_newproto	src/lua/lfunc.c	/^Proto *luaF_newproto (lua_State *L) {$/;"	f
luaF_newupval	src/lua/lfunc.c	/^UpVal *luaF_newupval (lua_State *L) {$/;"	f
luaG_aritherror	src/lua/ldebug.c	/^void luaG_aritherror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_checkcode	src/lua/ldebug.c	/^int luaG_checkcode (const Proto *pt) {$/;"	f
luaG_checkopenop	src/lua/ldebug.c	/^int luaG_checkopenop (Instruction i) {$/;"	f
luaG_concaterror	src/lua/ldebug.c	/^void luaG_concaterror (lua_State *L, StkId p1, StkId p2) {$/;"	f
luaG_errormsg	src/lua/ldebug.c	/^void luaG_errormsg (lua_State *L) {$/;"	f
luaG_ordererror	src/lua/ldebug.c	/^int luaG_ordererror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_runerror	src/lua/ldebug.c	/^void luaG_runerror (lua_State *L, const char *fmt, ...) {$/;"	f
luaG_typeerror	src/lua/ldebug.c	/^void luaG_typeerror (lua_State *L, const TValue *o, const char *op) {$/;"	f
luaH_free	src/lua/ltable.c	/^void luaH_free (lua_State *L, Table *t) {$/;"	f
luaH_get	src/lua/ltable.c	/^const TValue *luaH_get (Table *t, const TValue *key) {$/;"	f
luaH_getn	src/lua/ltable.c	/^int luaH_getn (Table *t) {$/;"	f
luaH_getnum	src/lua/ltable.c	/^const TValue *luaH_getnum (Table *t, int key) {$/;"	f
luaH_getstr	src/lua/ltable.c	/^const TValue *luaH_getstr (Table *t, TString *key) {$/;"	f
luaH_isdummy	src/lua/ltable.c	/^int luaH_isdummy (Node *n) { return n == dummynode; }$/;"	f
luaH_mainposition	src/lua/ltable.c	/^Node *luaH_mainposition (const Table *t, const TValue *key) {$/;"	f
luaH_new	src/lua/ltable.c	/^Table *luaH_new (lua_State *L, int narray, int nhash) {$/;"	f
luaH_next	src/lua/ltable.c	/^int luaH_next (lua_State *L, Table *t, StkId key) {$/;"	f
luaH_resizearray	src/lua/ltable.c	/^void luaH_resizearray (lua_State *L, Table *t, int nasize) {$/;"	f
luaH_set	src/lua/ltable.c	/^TValue *luaH_set (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_setnum	src/lua/ltable.c	/^TValue *luaH_setnum (lua_State *L, Table *t, int key) {$/;"	f
luaH_setstr	src/lua/ltable.c	/^TValue *luaH_setstr (lua_State *L, Table *t, TString *key) {$/;"	f
luaI_openlib	src/lua/lauxlib.c	/^LUALIB_API void luaI_openlib (lua_State *L, const char *libname,$/;"	f
luaI_openlib	src/lua/lauxlib.h	27;"	d
luaK_checkstack	src/lua/lcode.c	/^void luaK_checkstack (FuncState *fs, int n) {$/;"	f
luaK_code	src/lua/lcode.c	/^static int luaK_code (FuncState *fs, Instruction i, int line) {$/;"	f	file:
luaK_codeABC	src/lua/lcode.c	/^int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {$/;"	f
luaK_codeABx	src/lua/lcode.c	/^int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {$/;"	f
luaK_codeAsBx	src/lua/lcode.h	41;"	d
luaK_concat	src/lua/lcode.c	/^void luaK_concat (FuncState *fs, int *l1, int l2) {$/;"	f
luaK_dischargevars	src/lua/lcode.c	/^void luaK_dischargevars (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2RK	src/lua/lcode.c	/^int luaK_exp2RK (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyreg	src/lua/lcode.c	/^int luaK_exp2anyreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2nextreg	src/lua/lcode.c	/^void luaK_exp2nextreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2val	src/lua/lcode.c	/^void luaK_exp2val (FuncState *fs, expdesc *e) {$/;"	f
luaK_fixline	src/lua/lcode.c	/^void luaK_fixline (FuncState *fs, int line) {$/;"	f
luaK_getlabel	src/lua/lcode.c	/^int luaK_getlabel (FuncState *fs) {$/;"	f
luaK_goiffalse	src/lua/lcode.c	/^static void luaK_goiffalse (FuncState *fs, expdesc *e) {$/;"	f	file:
luaK_goiftrue	src/lua/lcode.c	/^void luaK_goiftrue (FuncState *fs, expdesc *e) {$/;"	f
luaK_indexed	src/lua/lcode.c	/^void luaK_indexed (FuncState *fs, expdesc *t, expdesc *k) {$/;"	f
luaK_infix	src/lua/lcode.c	/^void luaK_infix (FuncState *fs, BinOpr op, expdesc *v) {$/;"	f
luaK_jump	src/lua/lcode.c	/^int luaK_jump (FuncState *fs) {$/;"	f
luaK_nil	src/lua/lcode.c	/^void luaK_nil (FuncState *fs, int from, int n) {$/;"	f
luaK_numberK	src/lua/lcode.c	/^int luaK_numberK (FuncState *fs, lua_Number r) {$/;"	f
luaK_patchlist	src/lua/lcode.c	/^void luaK_patchlist (FuncState *fs, int list, int target) {$/;"	f
luaK_patchtohere	src/lua/lcode.c	/^void luaK_patchtohere (FuncState *fs, int list) {$/;"	f
luaK_posfix	src/lua/lcode.c	/^void luaK_posfix (FuncState *fs, BinOpr op, expdesc *e1, expdesc *e2) {$/;"	f
luaK_prefix	src/lua/lcode.c	/^void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e) {$/;"	f
luaK_reserveregs	src/lua/lcode.c	/^void luaK_reserveregs (FuncState *fs, int n) {$/;"	f
luaK_ret	src/lua/lcode.c	/^void luaK_ret (FuncState *fs, int first, int nret) {$/;"	f
luaK_self	src/lua/lcode.c	/^void luaK_self (FuncState *fs, expdesc *e, expdesc *key) {$/;"	f
luaK_setlist	src/lua/lcode.c	/^void luaK_setlist (FuncState *fs, int base, int nelems, int tostore) {$/;"	f
luaK_setmultret	src/lua/lcode.h	43;"	d
luaK_setoneret	src/lua/lcode.c	/^void luaK_setoneret (FuncState *fs, expdesc *e) {$/;"	f
luaK_setreturns	src/lua/lcode.c	/^void luaK_setreturns (FuncState *fs, expdesc *e, int nresults) {$/;"	f
luaK_storevar	src/lua/lcode.c	/^void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {$/;"	f
luaK_stringK	src/lua/lcode.c	/^int luaK_stringK (FuncState *fs, TString *s) {$/;"	f
luaL_Buffer	src/lua/lauxlib.h	/^typedef struct luaL_Buffer {$/;"	s
luaL_Buffer	src/lua/lauxlib.h	/^} luaL_Buffer;$/;"	t	typeref:struct:luaL_Buffer
luaL_Reg	src/lua/lauxlib.h	/^typedef struct luaL_Reg {$/;"	s
luaL_Reg	src/lua/lauxlib.h	/^} luaL_Reg;$/;"	t	typeref:struct:luaL_Reg
luaL_addchar	src/lua/lauxlib.h	136;"	d
luaL_addlstring	src/lua/lauxlib.c	/^LUALIB_API void luaL_addlstring (luaL_Buffer *B, const char *s, size_t l) {$/;"	f
luaL_addsize	src/lua/lauxlib.h	143;"	d
luaL_addstring	src/lua/lauxlib.c	/^LUALIB_API void luaL_addstring (luaL_Buffer *B, const char *s) {$/;"	f
luaL_addvalue	src/lua/lauxlib.c	/^LUALIB_API void luaL_addvalue (luaL_Buffer *B) {$/;"	f
luaL_argcheck	src/lua/lauxlib.h	100;"	d
luaL_argerror	src/lua/lauxlib.c	/^LUALIB_API int luaL_argerror (lua_State *L, int narg, const char *extramsg) {$/;"	f
luaL_buffinit	src/lua/lauxlib.c	/^LUALIB_API void luaL_buffinit (lua_State *L, luaL_Buffer *B) {$/;"	f
luaL_callmeta	src/lua/lauxlib.c	/^LUALIB_API int luaL_callmeta (lua_State *L, int obj, const char *event) {$/;"	f
luaL_checkany	src/lua/lauxlib.c	/^LUALIB_API void luaL_checkany (lua_State *L, int narg) {$/;"	f
luaL_checkint	src/lua/lauxlib.h	104;"	d
luaL_checkinteger	src/lua/lauxlib.c	/^LUALIB_API lua_Integer luaL_checkinteger (lua_State *L, int narg) {$/;"	f
luaL_checklong	src/lua/lauxlib.h	106;"	d
luaL_checklstring	src/lua/lauxlib.c	/^LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {$/;"	f
luaL_checknumber	src/lua/lauxlib.c	/^LUALIB_API lua_Number luaL_checknumber (lua_State *L, int narg) {$/;"	f
luaL_checkoption	src/lua/lauxlib.c	/^LUALIB_API int luaL_checkoption (lua_State *L, int narg, const char *def,$/;"	f
luaL_checkstack	src/lua/lauxlib.c	/^LUALIB_API void luaL_checkstack (lua_State *L, int space, const char *mes) {$/;"	f
luaL_checkstring	src/lua/lauxlib.h	102;"	d
luaL_checktype	src/lua/lauxlib.c	/^LUALIB_API void luaL_checktype (lua_State *L, int narg, int t) {$/;"	f
luaL_checkudata	src/lua/lauxlib.c	/^LUALIB_API void *luaL_checkudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_dofile	src/lua/lauxlib.h	111;"	d
luaL_dostring	src/lua/lauxlib.h	114;"	d
luaL_error	src/lua/lauxlib.c	/^LUALIB_API int luaL_error (lua_State *L, const char *fmt, ...) {$/;"	f
luaL_findtable	src/lua/lauxlib.c	/^LUALIB_API const char *luaL_findtable (lua_State *L, int idx,$/;"	f
luaL_getmetafield	src/lua/lauxlib.c	/^LUALIB_API int luaL_getmetafield (lua_State *L, int obj, const char *event) {$/;"	f
luaL_getmetatable	src/lua/lauxlib.h	117;"	d
luaL_getn	src/lua/lauxlib.c	/^LUALIB_API int luaL_getn (lua_State *L, int t) {$/;"	f
luaL_getn	src/lua/lauxlib.h	22;"	d
luaL_gsub	src/lua/lauxlib.c	/^LUALIB_API const char *luaL_gsub (lua_State *L, const char *s, const char *p,$/;"	f
luaL_loadbuffer	src/lua/lauxlib.c	/^LUALIB_API int luaL_loadbuffer (lua_State *L, const char *buff, size_t size,$/;"	f
luaL_loadfile	src/lua/lauxlib.c	/^LUALIB_API int luaL_loadfile (lua_State *L, const char *filename) {$/;"	f
luaL_loadstring	src/lua/lauxlib.c	/^LUALIB_API int (luaL_loadstring) (lua_State *L, const char *s) {$/;"	f
luaL_newmetatable	src/lua/lauxlib.c	/^LUALIB_API int luaL_newmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_newstate	src/lua/lauxlib.c	/^LUALIB_API lua_State *luaL_newstate (void) {$/;"	f
luaL_openlibs	src/lua/linit.c	/^LUALIB_API void luaL_openlibs (lua_State *L) {$/;"	f
luaL_opt	src/lua/lauxlib.h	119;"	d
luaL_optint	src/lua/lauxlib.h	105;"	d
luaL_optinteger	src/lua/lauxlib.c	/^LUALIB_API lua_Integer luaL_optinteger (lua_State *L, int narg,$/;"	f
luaL_optlong	src/lua/lauxlib.h	107;"	d
luaL_optlstring	src/lua/lauxlib.c	/^LUALIB_API const char *luaL_optlstring (lua_State *L, int narg,$/;"	f
luaL_optnumber	src/lua/lauxlib.c	/^LUALIB_API lua_Number luaL_optnumber (lua_State *L, int narg, lua_Number def) {$/;"	f
luaL_optstring	src/lua/lauxlib.h	103;"	d
luaL_prepbuffer	src/lua/lauxlib.c	/^LUALIB_API char *luaL_prepbuffer (luaL_Buffer *B) {$/;"	f
luaL_pushresult	src/lua/lauxlib.c	/^LUALIB_API void luaL_pushresult (luaL_Buffer *B) {$/;"	f
luaL_putchar	src/lua/lauxlib.h	141;"	d
luaL_ref	src/lua/lauxlib.c	/^LUALIB_API int luaL_ref (lua_State *L, int t) {$/;"	f
luaL_reg	src/lua/lauxlib.h	170;"	d
luaL_register	src/lua/lauxlib.c	/^LUALIB_API void (luaL_register) (lua_State *L, const char *libname,$/;"	f
luaL_setn	src/lua/lauxlib.c	/^LUALIB_API void luaL_setn (lua_State *L, int t, int n) {$/;"	f
luaL_setn	src/lua/lauxlib.h	23;"	d
luaL_typename	src/lua/lauxlib.h	109;"	d
luaL_typerror	src/lua/lauxlib.c	/^LUALIB_API int luaL_typerror (lua_State *L, int narg, const char *tname) {$/;"	f
luaL_unref	src/lua/lauxlib.c	/^LUALIB_API void luaL_unref (lua_State *L, int t, int ref) {$/;"	f
luaL_where	src/lua/lauxlib.c	/^LUALIB_API void luaL_where (lua_State *L, int level) {$/;"	f
luaM_free	src/lua/lmem.h	25;"	d
luaM_freearray	src/lua/lmem.h	26;"	d
luaM_freemem	src/lua/lmem.h	24;"	d
luaM_growaux_	src/lua/lmem.c	/^void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,$/;"	f
luaM_growvector	src/lua/lmem.h	33;"	d
luaM_malloc	src/lua/lmem.h	28;"	d
luaM_new	src/lua/lmem.h	29;"	d
luaM_newvector	src/lua/lmem.h	30;"	d
luaM_realloc_	src/lua/lmem.c	/^void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {$/;"	f
luaM_reallocv	src/lua/lmem.h	19;"	d
luaM_reallocvector	src/lua/lmem.h	37;"	d
luaM_toobig	src/lua/lmem.c	/^void *luaM_toobig (lua_State *L) {$/;"	f
luaO_chunkid	src/lua/lobject.c	/^void luaO_chunkid (char *out, const char *source, size_t bufflen) {$/;"	f
luaO_fb2int	src/lua/lobject.c	/^int luaO_fb2int (int x) {$/;"	f
luaO_int2fb	src/lua/lobject.c	/^int luaO_int2fb (unsigned int x) {$/;"	f
luaO_log2	src/lua/lobject.c	/^int luaO_log2 (unsigned int x) {$/;"	f
luaO_nilobject	src/lua/lobject.h	363;"	d
luaO_nilobject_	src/lua/lobject.c	/^const TValue luaO_nilobject_ = {{NULL}, LUA_TNIL};$/;"	v
luaO_nilobject_	src/lua/lobject.h	/^LUAI_DATA const TValue luaO_nilobject_;$/;"	v
luaO_pushfstring	src/lua/lobject.c	/^const char *luaO_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
luaO_pushvfstring	src/lua/lobject.c	/^const char *luaO_pushvfstring (lua_State *L, const char *fmt, va_list argp) {$/;"	f
luaO_rawequalObj	src/lua/lobject.c	/^int luaO_rawequalObj (const TValue *t1, const TValue *t2) {$/;"	f
luaO_str2d	src/lua/lobject.c	/^int luaO_str2d (const char *s, lua_Number *result) {$/;"	f
luaP_opmodes	src/lua/lopcodes.c	/^const lu_byte luaP_opmodes[NUM_OPCODES] = {$/;"	v
luaP_opmodes	src/lua/lopcodes.h	/^LUAI_DATA const lu_byte luaP_opmodes[NUM_OPCODES];$/;"	v
luaP_opnames	src/lua/lopcodes.c	/^const char *const luaP_opnames[NUM_OPCODES+1] = {$/;"	v
luaP_opnames	src/lua/lopcodes.h	/^LUAI_DATA const char *const luaP_opnames[NUM_OPCODES+1];  \/* opcode names *\/$/;"	v
luaS_fix	src/lua/lstring.h	24;"	d
luaS_new	src/lua/lstring.h	20;"	d
luaS_newliteral	src/lua/lstring.h	21;"	d
luaS_newlstr	src/lua/lstring.c	/^TString *luaS_newlstr (lua_State *L, const char *str, size_t l) {$/;"	f
luaS_newudata	src/lua/lstring.c	/^Udata *luaS_newudata (lua_State *L, size_t s, Table *e) {$/;"	f
luaS_resize	src/lua/lstring.c	/^void luaS_resize (lua_State *L, int newsize) {$/;"	f
luaT_gettm	src/lua/ltm.c	/^const TValue *luaT_gettm (Table *events, TMS event, TString *ename) {$/;"	f
luaT_gettmbyobj	src/lua/ltm.c	/^const TValue *luaT_gettmbyobj (lua_State *L, const TValue *o, TMS event) {$/;"	f
luaT_init	src/lua/ltm.c	/^void luaT_init (lua_State *L) {$/;"	f
luaT_typenames	src/lua/ltm.c	/^const char *const luaT_typenames[] = {$/;"	v
luaT_typenames	src/lua/ltm.h	/^LUAI_DATA const char *const luaT_typenames[];$/;"	v
luaU_dump	src/lua/ldump.c	/^int luaU_dump (lua_State* L, const Proto* f, lua_Writer w, void* data, int strip)$/;"	f
luaU_header	src/lua/lundump.c	/^void luaU_header (char* h)$/;"	f
luaU_undump	src/lua/lundump.c	/^Proto* luaU_undump (lua_State* L, ZIO* Z, Mbuffer* buff, const char* name)$/;"	f
luaV_concat	src/lua/lvm.c	/^void luaV_concat (lua_State *L, int total, int last) {$/;"	f
luaV_equalval	src/lua/lvm.c	/^int luaV_equalval (lua_State *L, const TValue *t1, const TValue *t2) {$/;"	f
luaV_execute	src/lua/lvm.c	/^void luaV_execute (lua_State *L, int nexeccalls) {$/;"	f
luaV_gettable	src/lua/lvm.c	/^void luaV_gettable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_lessthan	src/lua/lvm.c	/^int luaV_lessthan (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_settable	src/lua/lvm.c	/^void luaV_settable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_tonumber	src/lua/lvm.c	/^const TValue *luaV_tonumber (const TValue *obj, TValue *n) {$/;"	f
luaV_tostring	src/lua/lvm.c	/^int luaV_tostring (lua_State *L, StkId obj) {$/;"	f
luaX_init	src/lua/llex.c	/^void luaX_init (lua_State *L) {$/;"	f
luaX_lexerror	src/lua/llex.c	/^void luaX_lexerror (LexState *ls, const char *msg, int token) {$/;"	f
luaX_lookahead	src/lua/llex.c	/^void luaX_lookahead (LexState *ls) {$/;"	f
luaX_newstring	src/lua/llex.c	/^TString *luaX_newstring (LexState *ls, const char *str, size_t l) {$/;"	f
luaX_next	src/lua/llex.c	/^void luaX_next (LexState *ls) {$/;"	f
luaX_setinput	src/lua/llex.c	/^void luaX_setinput (lua_State *L, LexState *ls, ZIO *z, TString *source) {$/;"	f
luaX_syntaxerror	src/lua/llex.c	/^void luaX_syntaxerror (LexState *ls, const char *msg) {$/;"	f
luaX_token2str	src/lua/llex.c	/^const char *luaX_token2str (LexState *ls, int token) {$/;"	f
luaX_tokens	src/lua/llex.c	/^const char *const luaX_tokens [] = {$/;"	v
luaX_tokens	src/lua/llex.h	/^LUAI_DATA const char *const luaX_tokens [];$/;"	v
luaY_checklimit	src/lua/lparser.c	34;"	d	file:
luaY_parser	src/lua/lparser.c	/^Proto *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff, const char *name) {$/;"	f
luaZ_buffer	src/lua/lzio.h	32;"	d
luaZ_bufflen	src/lua/lzio.h	34;"	d
luaZ_fill	src/lua/lzio.c	/^int luaZ_fill (ZIO *z) {$/;"	f
luaZ_freebuffer	src/lua/lzio.h	43;"	d
luaZ_init	src/lua/lzio.c	/^void luaZ_init (lua_State *L, ZIO *z, lua_Reader reader, void *data) {$/;"	f
luaZ_initbuffer	src/lua/lzio.h	30;"	d
luaZ_lookahead	src/lua/lzio.c	/^int luaZ_lookahead (ZIO *z) {$/;"	f
luaZ_openspace	src/lua/lzio.c	/^char *luaZ_openspace (lua_State *L, Mbuffer *buff, size_t n) {$/;"	f
luaZ_read	src/lua/lzio.c	/^size_t luaZ_read (ZIO *z, void *b, size_t n) {$/;"	f
luaZ_resetbuffer	src/lua/lzio.h	36;"	d
luaZ_resizebuffer	src/lua/lzio.h	39;"	d
luaZ_sizebuffer	src/lua/lzio.h	33;"	d
lua_Alloc	src/lua/lua.h	/^typedef void * (*lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize);$/;"	t
lua_CFunction	src/lua/lua.h	/^typedef int (*lua_CFunction) (lua_State *L);$/;"	t
lua_Chunkreader	src/lua/lua.h	293;"	d
lua_Chunkwriter	src/lua/lua.h	294;"	d
lua_Debug	src/lua/lua.h	/^struct lua_Debug {$/;"	s
lua_Debug	src/lua/lua.h	/^typedef struct lua_Debug lua_Debug;  \/* activation record *\/$/;"	t	typeref:struct:lua_Debug
lua_Hook	src/lua/lua.h	/^typedef void (*lua_Hook) (lua_State *L, lua_Debug *ar);$/;"	t
lua_Integer	src/lua/lua.h	/^typedef LUA_INTEGER lua_Integer;$/;"	t
lua_Number	src/lua/lua.h	/^typedef LUA_NUMBER lua_Number;$/;"	t
lua_Reader	src/lua/lua.h	/^typedef const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);$/;"	t
lua_State	src/lua/lstate.h	/^struct lua_State {$/;"	s
lua_State	src/lua/lua.h	/^typedef struct lua_State lua_State;$/;"	t	typeref:struct:lua_State
lua_TValue	src/lua/lobject.h	/^typedef struct lua_TValue {$/;"	s
lua_Writer	src/lua/lua.h	/^typedef int (*lua_Writer) (lua_State *L, const void* p, size_t sz, void* ud);$/;"	t
lua_assert	src/lua/llimits.h	62;"	d
lua_assert	src/lua/lualib.h	49;"	d
lua_atpanic	src/lua/lapi.c	/^LUA_API lua_CFunction lua_atpanic (lua_State *L, lua_CFunction panicf) {$/;"	f
lua_call	src/lua/lapi.c	/^LUA_API void lua_call (lua_State *L, int nargs, int nresults) {$/;"	f
lua_checkstack	src/lua/lapi.c	/^LUA_API int lua_checkstack (lua_State *L, int size) {$/;"	f
lua_close	src/lua/lstate.c	/^LUA_API void lua_close (lua_State *L) {$/;"	f
lua_concat	src/lua/lapi.c	/^LUA_API void lua_concat (lua_State *L, int n) {$/;"	f
lua_cpcall	src/lua/lapi.c	/^LUA_API int lua_cpcall (lua_State *L, lua_CFunction func, void *ud) {$/;"	f
lua_createtable	src/lua/lapi.c	/^LUA_API void lua_createtable (lua_State *L, int narray, int nrec) {$/;"	f
lua_dump	src/lua/lapi.c	/^LUA_API int lua_dump (lua_State *L, lua_Writer writer, void *data) {$/;"	f
lua_equal	src/lua/lapi.c	/^LUA_API int lua_equal (lua_State *L, int index1, int index2) {$/;"	f
lua_error	src/lua/lapi.c	/^LUA_API int lua_error (lua_State *L) {$/;"	f
lua_freeline	src/lua/luaconf.h	281;"	d
lua_freeline	src/lua/luaconf.h	287;"	d
lua_gc	src/lua/lapi.c	/^LUA_API int lua_gc (lua_State *L, int what, int data) {$/;"	f
lua_getallocf	src/lua/lapi.c	/^LUA_API lua_Alloc lua_getallocf (lua_State *L, void **ud) {$/;"	f
lua_getfenv	src/lua/lapi.c	/^LUA_API void lua_getfenv (lua_State *L, int idx) {$/;"	f
lua_getfield	src/lua/lapi.c	/^LUA_API void lua_getfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_getgccount	src/lua/lua.h	291;"	d
lua_getglobal	src/lua/lua.h	277;"	d
lua_gethook	src/lua/ldebug.c	/^LUA_API lua_Hook lua_gethook (lua_State *L) {$/;"	f
lua_gethookcount	src/lua/ldebug.c	/^LUA_API int lua_gethookcount (lua_State *L) {$/;"	f
lua_gethookmask	src/lua/ldebug.c	/^LUA_API int lua_gethookmask (lua_State *L) {$/;"	f
lua_getinfo	src/lua/ldebug.c	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar) {$/;"	f
lua_getlocal	src/lua/ldebug.c	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_getmetatable	src/lua/lapi.c	/^LUA_API int lua_getmetatable (lua_State *L, int objindex) {$/;"	f
lua_getref	src/lua/lauxlib.h	167;"	d
lua_getregistry	src/lua/lua.h	289;"	d
lua_getstack	src/lua/ldebug.c	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {$/;"	f
lua_gettable	src/lua/lapi.c	/^LUA_API void lua_gettable (lua_State *L, int idx) {$/;"	f
lua_gettop	src/lua/lapi.c	/^LUA_API int lua_gettop (lua_State *L) {$/;"	f
lua_getupvalue	src/lua/lapi.c	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_h	src/lua/lua.h	10;"	d
lua_ident	src/lua/lapi.c	/^const char lua_ident[] =$/;"	v
lua_insert	src/lua/lapi.c	/^LUA_API void lua_insert (lua_State *L, int idx) {$/;"	f
lua_isboolean	src/lua/lua.h	268;"	d
lua_iscfunction	src/lua/lapi.c	/^LUA_API int lua_iscfunction (lua_State *L, int idx) {$/;"	f
lua_isfunction	src/lua/lua.h	264;"	d
lua_islightuserdata	src/lua/lua.h	266;"	d
lua_isnil	src/lua/lua.h	267;"	d
lua_isnone	src/lua/lua.h	270;"	d
lua_isnoneornil	src/lua/lua.h	271;"	d
lua_isnumber	src/lua/lapi.c	/^LUA_API int lua_isnumber (lua_State *L, int idx) {$/;"	f
lua_isstring	src/lua/lapi.c	/^LUA_API int lua_isstring (lua_State *L, int idx) {$/;"	f
lua_istable	src/lua/lua.h	265;"	d
lua_isthread	src/lua/lua.h	269;"	d
lua_isuserdata	src/lua/lapi.c	/^LUA_API int lua_isuserdata (lua_State *L, int idx) {$/;"	f
lua_lessthan	src/lua/lapi.c	/^LUA_API int lua_lessthan (lua_State *L, int index1, int index2) {$/;"	f
lua_load	src/lua/lapi.c	/^LUA_API int lua_load (lua_State *L, lua_Reader reader, void *data,$/;"	f
lua_lock	src/lua/llimits.h	110;"	d
lua_longjmp	src/lua/ldo.c	/^struct lua_longjmp {$/;"	s	file:
lua_newstate	src/lua/lstate.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f
lua_newtable	src/lua/lua.h	256;"	d
lua_newthread	src/lua/lapi.c	/^LUA_API lua_State *lua_newthread (lua_State *L) {$/;"	f
lua_newuserdata	src/lua/lapi.c	/^LUA_API void *lua_newuserdata (lua_State *L, size_t size) {$/;"	f
lua_next	src/lua/lapi.c	/^LUA_API int lua_next (lua_State *L, int idx) {$/;"	f
lua_number2int	src/lua/luaconf.h	563;"	d
lua_number2int	src/lua/luaconf.h	571;"	d
lua_number2int	src/lua/luaconf.h	580;"	d
lua_number2integer	src/lua/luaconf.h	564;"	d
lua_number2integer	src/lua/luaconf.h	573;"	d
lua_number2integer	src/lua/luaconf.h	581;"	d
lua_number2str	src/lua/luaconf.h	523;"	d
lua_objlen	src/lua/lapi.c	/^LUA_API size_t lua_objlen (lua_State *L, int idx) {$/;"	f
lua_open	src/lua/lua.h	287;"	d
lua_pcall	src/lua/lapi.c	/^LUA_API int lua_pcall (lua_State *L, int nargs, int nresults, int errfunc) {$/;"	f
lua_pclose	src/lua/luaconf.h	671;"	d
lua_pclose	src/lua/luaconf.h	676;"	d
lua_pclose	src/lua/luaconf.h	682;"	d
lua_pop	src/lua/lua.h	254;"	d
lua_popen	src/lua/luaconf.h	670;"	d
lua_popen	src/lua/luaconf.h	675;"	d
lua_popen	src/lua/luaconf.h	680;"	d
lua_pushboolean	src/lua/lapi.c	/^LUA_API void lua_pushboolean (lua_State *L, int b) {$/;"	f
lua_pushcclosure	src/lua/lapi.c	/^LUA_API void lua_pushcclosure (lua_State *L, lua_CFunction fn, int n) {$/;"	f
lua_pushcfunction	src/lua/lua.h	260;"	d
lua_pushfstring	src/lua/lapi.c	/^LUA_API const char *lua_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
lua_pushglobaltable	swig/sanguosha_wrap.cxx	801;"	d	file:
lua_pushinteger	src/lua/lapi.c	/^LUA_API void lua_pushinteger (lua_State *L, lua_Integer n) {$/;"	f
lua_pushlightuserdata	src/lua/lapi.c	/^LUA_API void lua_pushlightuserdata (lua_State *L, void *p) {$/;"	f
lua_pushliteral	src/lua/lua.h	273;"	d
lua_pushlstring	src/lua/lapi.c	/^LUA_API void lua_pushlstring (lua_State *L, const char *s, size_t len) {$/;"	f
lua_pushnil	src/lua/lapi.c	/^LUA_API void lua_pushnil (lua_State *L) {$/;"	f
lua_pushnumber	src/lua/lapi.c	/^LUA_API void lua_pushnumber (lua_State *L, lua_Number n) {$/;"	f
lua_pushstring	src/lua/lapi.c	/^LUA_API void lua_pushstring (lua_State *L, const char *s) {$/;"	f
lua_pushthread	src/lua/lapi.c	/^LUA_API int lua_pushthread (lua_State *L) {$/;"	f
lua_pushvalue	src/lua/lapi.c	/^LUA_API void lua_pushvalue (lua_State *L, int idx) {$/;"	f
lua_pushvfstring	src/lua/lapi.c	/^LUA_API const char *lua_pushvfstring (lua_State *L, const char *fmt,$/;"	f
lua_rawequal	src/lua/lapi.c	/^LUA_API int lua_rawequal (lua_State *L, int index1, int index2) {$/;"	f
lua_rawget	src/lua/lapi.c	/^LUA_API void lua_rawget (lua_State *L, int idx) {$/;"	f
lua_rawgeti	src/lua/lapi.c	/^LUA_API void lua_rawgeti (lua_State *L, int idx, int n) {$/;"	f
lua_rawlen	swig/sanguosha_wrap.cxx	791;"	d	file:
lua_rawlen	swig/sanguosha_wrap.cxx	793;"	d	file:
lua_rawset	src/lua/lapi.c	/^LUA_API void lua_rawset (lua_State *L, int idx) {$/;"	f
lua_rawseti	src/lua/lapi.c	/^LUA_API void lua_rawseti (lua_State *L, int idx, int n) {$/;"	f
lua_readline	src/lua/luaconf.h	277;"	d
lua_readline	src/lua/luaconf.h	283;"	d
lua_ref	src/lua/lauxlib.h	162;"	d
lua_register	src/lua/lua.h	258;"	d
lua_remove	src/lua/lapi.c	/^LUA_API void lua_remove (lua_State *L, int idx) {$/;"	f
lua_replace	src/lua/lapi.c	/^LUA_API void lua_replace (lua_State *L, int idx) {$/;"	f
lua_resume	src/lua/ldo.c	/^LUA_API int lua_resume (lua_State *L, int nargs) {$/;"	f
lua_saveline	src/lua/luaconf.h	278;"	d
lua_saveline	src/lua/luaconf.h	286;"	d
lua_setallocf	src/lua/lapi.c	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud) {$/;"	f
lua_setfenv	src/lua/lapi.c	/^LUA_API int lua_setfenv (lua_State *L, int idx) {$/;"	f
lua_setfield	src/lua/lapi.c	/^LUA_API void lua_setfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_setglobal	src/lua/lua.h	276;"	d
lua_sethook	src/lua/ldebug.c	/^LUA_API int lua_sethook (lua_State *L, lua_Hook func, int mask, int count) {$/;"	f
lua_setlevel	src/lua/lapi.c	/^LUA_API void lua_setlevel (lua_State *from, lua_State *to) {$/;"	f
lua_setlocal	src/lua/ldebug.c	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_setmetatable	src/lua/lapi.c	/^LUA_API int lua_setmetatable (lua_State *L, int objindex) {$/;"	f
lua_settable	src/lua/lapi.c	/^LUA_API void lua_settable (lua_State *L, int idx) {$/;"	f
lua_settop	src/lua/lapi.c	/^LUA_API void lua_settop (lua_State *L, int idx) {$/;"	f
lua_setupvalue	src/lua/lapi.c	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_status	src/lua/lapi.c	/^LUA_API int  lua_status (lua_State *L) {$/;"	f
lua_stdin_is_tty	src/lua/luaconf.h	229;"	d
lua_stdin_is_tty	src/lua/luaconf.h	233;"	d
lua_stdin_is_tty	src/lua/luaconf.h	235;"	d
lua_str2number	src/lua/luaconf.h	525;"	d
lua_strlen	src/lua/lua.h	262;"	d
lua_tmpnam	src/lua/luaconf.h	649;"	d
lua_tmpnam	src/lua/luaconf.h	657;"	d
lua_toboolean	src/lua/lapi.c	/^LUA_API int lua_toboolean (lua_State *L, int idx) {$/;"	f
lua_tocfunction	src/lua/lapi.c	/^LUA_API lua_CFunction lua_tocfunction (lua_State *L, int idx) {$/;"	f
lua_tointeger	src/lua/lapi.c	/^LUA_API lua_Integer lua_tointeger (lua_State *L, int idx) {$/;"	f
lua_tolstring	src/lua/lapi.c	/^LUA_API const char *lua_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
lua_tonumber	src/lua/lapi.c	/^LUA_API lua_Number lua_tonumber (lua_State *L, int idx) {$/;"	f
lua_topointer	src/lua/lapi.c	/^LUA_API const void *lua_topointer (lua_State *L, int idx) {$/;"	f
lua_tostring	src/lua/lua.h	279;"	d
lua_tothread	src/lua/lapi.c	/^LUA_API lua_State *lua_tothread (lua_State *L, int idx) {$/;"	f
lua_touserdata	src/lua/lapi.c	/^LUA_API void *lua_touserdata (lua_State *L, int idx) {$/;"	f
lua_type	src/lua/lapi.c	/^LUA_API int lua_type (lua_State *L, int idx) {$/;"	f
lua_typename	src/lua/lapi.c	/^LUA_API const char *lua_typename (lua_State *L, int t) {$/;"	f
lua_unlock	src/lua/llimits.h	111;"	d
lua_unref	src/lua/lauxlib.h	165;"	d
lua_upvalueindex	src/lua/lua.h	39;"	d
lua_xmove	src/lua/lapi.c	/^LUA_API void lua_xmove (lua_State *from, lua_State *to, int n) {$/;"	f
lua_yield	src/lua/ldo.c	/^LUA_API int lua_yield (lua_State *L, int nresults) {$/;"	f
luac_c	src/lua/print.c	10;"	d	file:
luai_Cast	src/lua/luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	u
luai_apicheck	src/lua/luaconf.h	379;"	d
luai_apicheck	src/lua/luaconf.h	381;"	d
luai_jmpbuf	src/lua/luaconf.h	611;"	d
luai_jmpbuf	src/lua/luaconf.h	617;"	d
luai_jmpbuf	src/lua/luaconf.h	623;"	d
luai_numadd	src/lua/luaconf.h	533;"	d
luai_numdiv	src/lua/luaconf.h	536;"	d
luai_numeq	src/lua/luaconf.h	540;"	d
luai_numisnan	src/lua/luaconf.h	543;"	d
luai_numle	src/lua/luaconf.h	542;"	d
luai_numlt	src/lua/luaconf.h	541;"	d
luai_nummod	src/lua/luaconf.h	537;"	d
luai_nummul	src/lua/luaconf.h	535;"	d
luai_numpow	src/lua/luaconf.h	538;"	d
luai_numsub	src/lua/luaconf.h	534;"	d
luai_numunm	src/lua/luaconf.h	539;"	d
luai_threadyield	src/lua/llimits.h	115;"	d
luai_userstateclose	src/lua/luaconf.h	724;"	d
luai_userstatefree	src/lua/luaconf.h	726;"	d
luai_userstateopen	src/lua/luaconf.h	723;"	d
luai_userstateresume	src/lua/luaconf.h	727;"	d
luai_userstatethread	src/lua/luaconf.h	725;"	d
luai_userstateyield	src/lua/luaconf.h	728;"	d
lualib_h	src/lua/lualib.h	9;"	d
lualibs	src/lua/linit.c	/^static const luaL_Reg lualibs[] = {$/;"	v	file:
luanji_skill.getTurnUseCard	lua/ai/fire-ai.lua	/^luanji_skill.getTurnUseCard=function(self)$/;"	f
luanwu_skill.getTurnUseCard	lua/ai/thicket-ai.lua	/^luanwu_skill.getTurnUseCard=function(self)$/;"	f
luaopen_base	src/lua/lbaselib.c	/^LUALIB_API int luaopen_base (lua_State *L) {$/;"	f
luaopen_debug	src/lua/ldblib.c	/^LUALIB_API int luaopen_debug (lua_State *L) {$/;"	f
luaopen_io	src/lua/liolib.c	/^LUALIB_API int luaopen_io (lua_State *L) {$/;"	f
luaopen_math	src/lua/lmathlib.c	/^LUALIB_API int luaopen_math (lua_State *L) {$/;"	f
luaopen_os	src/lua/loslib.c	/^LUALIB_API int luaopen_os (lua_State *L) {$/;"	f
luaopen_package	src/lua/loadlib.c	/^LUALIB_API int luaopen_package (lua_State *L) {$/;"	f
luaopen_string	src/lua/lstrlib.c	/^LUALIB_API int luaopen_string (lua_State *L) {$/;"	f
luaopen_table	src/lua/ltablib.c	/^LUALIB_API int luaopen_table (lua_State *L) {$/;"	f
lundump_c	src/lua/lundump.c	9;"	d	file:
lundump_h	src/lua/lundump.h	8;"	d
lvalue	swig/sanguosha_wrap.cxx	/^    long lvalue;$/;"	m	struct:__anon146	file:
lvl	src/lua/lauxlib.h	/^  int lvl;  \/* number of strings in the stack (level) *\/$/;"	m	struct:luaL_Buffer
lvm_c	src/lua/lvm.c	12;"	d	file:
lvm_h	src/lua/lvm.h	8;"	d
lzio_c	src/lua/lzio.c	10;"	d	file:
lzio_h	src/lua/lzio.h	9;"	d
m_actionedIconRegion	src/ui/SkinBank.h	/^        QRect m_actionedIconRegion;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_align	src/ui/magatamasItem.h	/^    Qt::Alignment m_align;$/;"	m	class:MagatamasBoxItem
m_alivePlayers	src/server/room.h	/^    QList<ServerPlayer*> m_players, m_alivePlayers;$/;"	m	class:Room
m_anchor	src/ui/magatamasItem.h	/^    QPoint m_anchor;$/;"	m	class:MagatamasBoxItem
m_anchorChild	src/ui/SkinBank.h	/^        Qt::Alignment m_anchorChild;$/;"	m	class:IQSanComponentSkin::AnchoredRect
m_anchorParent	src/ui/SkinBank.h	/^        Qt::Alignment m_anchorParent;$/;"	m	class:IQSanComponentSkin::AnchoredRect
m_animationMutex	src/ui/carditem.h	/^    QMutex m_animationMutex;$/;"	m	class:CardItem
m_autoHide	src/ui/TimedProgressBar.h	/^    bool m_autoHide;$/;"	m	class:TimedProgressBar
m_avatarArea	src/ui/SkinBank.h	/^        QRect m_avatarArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_avatarNameArea	src/ui/SkinBank.h	/^        QRect m_avatarNameArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_avatarNameFont	src/ui/SkinBank.h	/^        QSanShadowTextFont m_avatarNameFont;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_avatarSize	src/ui/SkinBank.h	/^        int m_avatarSize;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_boundingRect	src/ui/SkinBank.h	/^        QRect m_boundingRect;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_buttonSetSize	src/ui/SkinBank.h	/^        QSize m_buttonSetSize;$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_callbacks	src/client/client.h	/^    QHash<QSanProtocol::CommandType, CallBack> m_callbacks;$/;"	m	class:Client
m_callbacks	src/server/room.h	/^    QHash<QSanProtocol::CommandType, CallBack> m_callbacks; \/\/ Stores the callbacks for client request. Do not use this$/;"	m	class:Room
m_canDiscardEquip	src/client/client.h	/^    bool m_canDiscardEquip;$/;"	m	class:Client
m_cancelButtonArea	src/ui/SkinBank.h	/^        QRect m_cancelButtonArea;$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_card	src/core/WrappedCard.h	/^    Card* m_card;$/;"	m	class:WrappedCard
m_cardAvatarArea	src/ui/SkinBank.h	/^        QRect m_cardAvatarArea;$/;"	m	struct:QSanRoomSkin::CommonLayout
m_cardFootnoteArea	src/ui/SkinBank.h	/^        QRect m_cardFootnoteArea;$/;"	m	struct:QSanRoomSkin::CommonLayout
m_cardFootnoteFont	src/ui/SkinBank.h	/^        QSanShadowTextFont m_cardFootnoteFont;$/;"	m	struct:QSanRoomSkin::CommonLayout
m_cardFrameArea	src/ui/SkinBank.h	/^        QRect m_cardFrameArea;$/;"	m	struct:QSanRoomSkin::CommonLayout
m_cardId	src/ui/carditem.h	/^    int m_cardId;$/;"	m	class:CardItem
m_cardMainArea	src/ui/SkinBank.h	/^        QRect m_cardMainArea;$/;"	m	struct:QSanRoomSkin::CommonLayout
m_cardMoveRegion	src/ui/SkinBank.h	/^        QRect m_cardMoveRegion;        $/;"	m	struct:QSanRoomSkin::PhotoLayout
m_cardNormalHeight	src/ui/SkinBank.h	/^        int m_cardNormalHeight;$/;"	m	struct:QSanRoomSkin::CommonLayout
m_cardNormalWidth	src/ui/SkinBank.h	/^        int m_cardNormalWidth;$/;"	m	struct:QSanRoomSkin::CommonLayout
m_cardNumberArea	src/ui/SkinBank.h	/^        QRect m_cardNumberArea;$/;"	m	struct:QSanRoomSkin::CommonLayout
m_cardSuitArea	src/ui/SkinBank.h	/^        QRect m_cardSuitArea;$/;"	m	struct:QSanRoomSkin::CommonLayout
m_card_ids	src/ui/roomscene.h	/^        QList<int> m_card_ids;$/;"	m	struct:RoomScene::_MoveCardsClassifier
m_cards	src/core/RoomState.h	/^    QHash<int, WrappedCard*> m_cards;$/;"	m	class:RoomState
m_cardsDisplayRegion	src/ui/TablePile.h	/^    QRect m_cardsDisplayRegion;$/;"	m	class:TablePile
m_chainedIconRegion	src/ui/SkinBank.h	/^        QRect m_chainedIconRegion;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_chatBoxHeightPercentage	src/ui/SkinBank.h	/^        double m_chatBoxHeightPercentage;$/;"	m	struct:QSanRoomSkin::RoomLayout
m_chatTextBoxHeight	src/ui/SkinBank.h	/^        int m_chatTextBoxHeight;$/;"	m	struct:QSanRoomSkin::RoomLayout
m_cheatArgs	src/server/serverplayer.h	/^    Json::Value m_cheatArgs; \/\/ Store the cheat code received from client.$/;"	m	class:ServerPlayer
m_choiceDialog	src/ui/roomscene.h	/^    QDialog *m_choiceDialog; \/\/ Dialog for choosing generals, suits, card\/equip, or kingdoms$/;"	m	class:RoomScene
m_chooseGeneralBoxDenseIconSize	src/ui/SkinBank.h	/^        QSize m_chooseGeneralBoxDenseIconSize;$/;"	m	struct:QSanRoomSkin::CommonLayout
m_chooseGeneralBoxSparseIconSize	src/ui/SkinBank.h	/^        QSize m_chooseGeneralBoxSparseIconSize;$/;"	m	struct:QSanRoomSkin::CommonLayout
m_chooseGeneralBoxSwitchIconSizeThreshold	src/ui/SkinBank.h	/^        int m_chooseGeneralBoxSwitchIconSizeThreshold;$/;"	m	struct:QSanRoomSkin::CommonLayout
m_circleArea	src/ui/SkinBank.h	/^        QRect m_circleArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_circleImageSize	src/ui/SkinBank.h	/^        int m_circleImageSize;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_clientResponseString	src/server/serverplayer.h	/^    QString m_clientResponseString;$/;"	m	class:ServerPlayer
m_color	src/ui/SkinBank.h	/^        QColor m_color;$/;"	m	class:IQSanComponentSkin::QSanSimpleTextFont
m_command	src/core/protocol.h	/^        CommandType m_command;$/;"	m	class:QSanProtocol::QSanGeneralPacket
m_commandArgs	src/server/serverplayer.h	/^    Json::Value m_commandArgs; \/\/ Store the command args to be sent to the client.$/;"	m	class:ServerPlayer
m_commandSeriesCounter	src/util/recorder.h	/^    int m_commandSeriesCounter;$/;"	m	class:Replayer
m_confirmButtonArea	src/ui/SkinBank.h	/^        QRect m_confirmButtonArea;$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_countdown	src/client/client.h	/^    QSanProtocol::Countdown m_countdown;$/;"	m	class:Client
m_current	src/core/protocol.h	/^        time_t m_current;$/;"	m	class:QSanProtocol::Countdown
m_currentAnimation	src/ui/carditem.h	/^    QAbstractAnimation* m_currentAnimation;$/;"	m	class:CardItem
m_currentPlayer	src/ui/cardcontainer.h	/^    ClientPlayer* m_currentPlayer;$/;"	m	class:CardContainer
m_currentRole	src/ui/rolecombobox.h	/^    RoleComboBoxItem* m_currentRole;$/;"	m	class:RoleComboBox
m_currentTime	src/ui/TablePile.h	/^    int m_currentTime;$/;"	m	class:TablePile
m_deathEffectColor	src/ui/SkinBank.h	/^        QColor m_deathEffectColor;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_deathIconRegion	src/ui/SkinBank.h	/^        AnchoredRect m_deathIconRegion;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_delayedTrickFirstRegion	src/ui/SkinBank.h	/^        QRect m_delayedTrickFirstRegion;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_delayedTrickStep	src/ui/SkinBank.h	/^        QPoint m_delayedTrickStep;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_discardButtonArea	src/ui/SkinBank.h	/^        QRect m_discardButtonArea;$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_discardPileMinWidth	src/ui/SkinBank.h	/^        int m_discardPileMinWidth;$/;"	m	struct:QSanRoomSkin::RoomLayout
m_discardPilePadding	src/ui/SkinBank.h	/^        int m_discardPilePadding;$/;"	m	struct:QSanRoomSkin::RoomLayout
m_disperseWidth	src/ui/SkinBank.h	/^        int m_disperseWidth;$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_drankMaskColor	src/ui/SkinBank.h	/^        QColor m_drankMaskColor;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_equipAreas	src/ui/SkinBank.h	/^        QRect m_equipAreas[4];$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_equipBorderPos	src/ui/SkinBank.h	/^        QPoint m_equipBorderPos;$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_equipDistanceArea	src/ui/SkinBank.h	/^        QRect m_equipDistanceArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_equipFont	src/ui/SkinBank.h	/^        QSanShadowTextFont m_equipFont;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_equipImageArea	src/ui/SkinBank.h	/^        QRect m_equipImageArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_equipPointArea	src/ui/SkinBank.h	/^        QRect m_equipPointArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_equipPointFont	src/ui/SkinBank.h	/^        QSanShadowTextFont m_equipPointFont;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_equipSelectedOffset	src/ui/SkinBank.h	/^        QPoint m_equipSelectedOffset;$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_equipSuitArea	src/ui/SkinBank.h	/^        QRect m_equipSuitArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_equipTextArea	src/ui/SkinBank.h	/^        QRect m_equipTextArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_eventName	src/core/structs.h	/^    QString m_eventName; \/\/ additional arg such as "lebusishu" on top of "S_REASON_JUDGE"$/;"	m	class:CardMoveReason
m_expectedReplyCommand	src/server/serverplayer.h	/^    QSanProtocol::CommandType m_expectedReplyCommand; \/\/ Store the command to be sent to the client.$/;"	m	class:ServerPlayer
m_expectedReplySerial	src/server/serverplayer.h	/^    unsigned int m_expectedReplySerial; \/\/ Suggest the acceptable serial number of an expected response.$/;"	m	class:ServerPlayer
m_extraSkillArea	src/ui/SkinBank.h	/^        QRect m_extraSkillArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_extraSkillFont	src/ui/SkinBank.h	/^        QSanShadowTextFont m_extraSkillFont;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_extraSkillTextArea	src/ui/SkinBank.h	/^        QRect m_extraSkillTextArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_fixedSize	src/ui/SkinBank.h	/^        QSize m_fixedSize;$/;"	m	class:IQSanComponentSkin::AnchoredRect
m_floatingAreaHeight	src/ui/SkinBank.h	/^        int m_floatingAreaHeight;$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_focusFrameArea	src/ui/SkinBank.h	/^        QRect m_focusFrameArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_fontFace	src/ui/SkinBank.h	/^        int* m_fontFace;$/;"	m	class:IQSanComponentSkin::QSanSimpleTextFont
m_fontSize	src/ui/SkinBank.h	/^        QSize m_fontSize;$/;"	m	class:IQSanComponentSkin::QSanSimpleTextFont
m_freeChooseDialog	src/dialog/choosegeneraldialog.h	/^    QDialog *m_freeChooseDialog;$/;"	m	class:ChooseGeneralDialog
m_freeDiscardButton	src/ui/roomscene.h	/^    QPushButton *m_reverseSelectionButton, *m_sortHandcardButton, *m_freeDiscardButton;$/;"	m	class:RoomScene
m_from	src/server/room.h	/^        Player* m_from;$/;"	m	struct:Room::_MoveMergeClassifier
m_from	src/server/room.h	/^        Player* m_from;$/;"	m	struct:Room::_MoveSourceClassifier
m_from	src/server/room.h	/^        ServerPlayer* m_from;$/;"	m	struct:Room::_NullificationAiHelper
m_from_pile_name	src/server/room.h	/^        QString m_from_pile_name;$/;"	m	struct:Room::_MoveSourceClassifier
m_from_place	src/server/room.h	/^        Player::Place m_from_place;$/;"	m	struct:Room::_MoveSourceClassifier
m_from_player_name	src/server/room.h	/^        QString m_from_player_name; $/;"	m	struct:Room::_MoveSourceClassifier
m_globalSerial	src/core/protocol.h	/^        unsigned int m_globalSerial;$/;"	m	class:QSanProtocol::QSanGeneralPacket
m_handCardArea	src/ui/SkinBank.h	/^        QRect m_handCardArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_handCardFont	src/ui/SkinBank.h	/^        QSanShadowTextFont m_handCardFont;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_handCards	src/ui/dashboard.h	/^    QList<CardItem*> m_handCards;$/;"	m	class:Dashboard
m_hasTimer	src/ui/TimedProgressBar.h	/^    bool m_hasTimer;$/;"	m	class:TimedProgressBar
m_hp	src/ui/magatamasItem.h	/^    int m_hp;$/;"	m	class:MagatamasBoxItem
m_hpExtraSpaceHolder	src/ui/SkinBank.h	/^        int m_hpExtraSpaceHolder;$/;"	m	struct:QSanRoomSkin::CommonLayout
m_hpFont	src/ui/SkinBank.h	/^        QSanShadowTextFont m_hpFont[6];$/;"	m	struct:QSanRoomSkin::CommonLayout
m_iconSize	src/ui/magatamasItem.h	/^    QSize m_iconSize;$/;"	m	class:MagatamasBoxItem
m_id	src/core/card.h	/^    int m_id;$/;"	m	class:Card
m_imageArea	src/ui/magatamasItem.h	/^    QRect m_imageArea;$/;"	m	class:MagatamasBoxItem
m_infoPlaneWidthPercentage	src/ui/SkinBank.h	/^        double m_infoPlaneWidthPercentage;$/;"	m	struct:QSanRoomSkin::RoomLayout
m_instanceType	src/ui/TimedProgressBar.h	/^    QSanProtocol::ProcessInstanceType m_instanceType;$/;"	m	class:QSanCommandProgressBar
m_interactions	src/client/client.h	/^    QHash<QSanProtocol::CommandType, CallBack> m_interactions;$/;"	m	class:Client
m_isClient	src/core/RoomState.h	/^    bool m_isClient;$/;"	m	class:RoomState
m_isClientResponseReady	src/server/serverplayer.h	/^    bool m_isClientResponseReady; \/\/Suggest whether a valid player's reponse has been received.$/;"	m	class:ServerPlayer
m_isDiscardActionRefusable	src/client/client.h	/^    bool m_isDiscardActionRefusable;$/;"	m	class:Client
m_isGameOver	src/client/client.h	/^    bool m_isGameOver;  $/;"	m	class:Client
m_isModified	src/core/WrappedCard.h	/^    bool m_isModified;$/;"	m	class:WrappedCard
m_isOldVersion	src/util/recorder.h	/^    bool m_isOldVersion;$/;"	m	class:Replayer
m_isProgressBarHorizontal	src/ui/SkinBank.h	/^        bool m_isProgressBarHorizontal;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_isSelected	src/ui/carditem.h	/^    bool m_isSelected;$/;"	m	class:CardItem
m_isUseCard	src/client/client.h	/^    bool m_isUseCard;$/;"	m	class:Client
m_isWaitingReply	src/server/serverplayer.h	/^    bool m_isWaitingReply; \/\/ Suggest if the server player is waiting for client's response.$/;"	m	class:ServerPlayer
m_jsonReader	src/core/protocol.h	/^        Json::Reader m_jsonReader;$/;"	m	class:QSanProtocol::QSanGeneralPacket
m_kingdomIconArea	src/ui/SkinBank.h	/^        QRect m_kingdomIconArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_kingdomMaskArea	src/ui/SkinBank.h	/^        QRect m_kingdomMaskArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_leftWidth	src/ui/SkinBank.h	/^        int m_leftWidth, m_rightWidth;$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_localSerial	src/core/protocol.h	/^        unsigned int m_localSerial;        $/;"	m	class:QSanProtocol::QSanGeneralPacket
m_logBoxHeightPercentage	src/ui/SkinBank.h	/^        double m_logBoxHeightPercentage;$/;"	m	struct:QSanRoomSkin::RoomLayout
m_magatamaImageArea	src/ui/SkinBank.h	/^        QRect m_magatamaImageArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_magatamaSize	src/ui/SkinBank.h	/^        QSize m_magatamaSize;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_magatamasAlign	src/ui/SkinBank.h	/^        Qt::Alignment m_magatamasAlign;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_magatamasAnchor	src/ui/SkinBank.h	/^        QPoint m_magatamasAnchor;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_magatamasBgVisible	src/ui/SkinBank.h	/^        bool m_magatamasBgVisible;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_magatamasHorizontal	src/ui/SkinBank.h	/^        bool m_magatamasHorizontal;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_mainFrameArea	src/ui/SkinBank.h	/^        QRect m_mainFrameArea;$/;"	m	struct:QSanRoomSkin::PhotoLayout
m_markTextArea	src/ui/SkinBank.h	/^        AnchoredRect m_markTextArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_max	src/core/protocol.h	/^        time_t m_max;$/;"	m	class:QSanProtocol::Countdown
m_max	src/ui/TimedProgressBar.h	/^    time_t m_step, m_max, m_val;$/;"	m	class:TimedProgressBar
m_maxHp	src/ui/magatamasItem.h	/^    int m_maxHp;$/;"	m	class:MagatamasBoxItem
m_maximumSceneSize	src/ui/SkinBank.h	/^        QSize m_maximumSceneSize;$/;"	m	struct:QSanRoomSkin::RoomLayout
m_maximumSceneSize10Player	src/ui/SkinBank.h	/^        QSize m_maximumSceneSize10Player;$/;"	m	struct:QSanRoomSkin::RoomLayout
m_minimumSceneSize	src/ui/SkinBank.h	/^        QSize m_minimumSceneSize;$/;"	m	struct:QSanRoomSkin::RoomLayout
m_minimumSceneSize10Player	src/ui/SkinBank.h	/^        QSize m_minimumSceneSize10Player;$/;"	m	struct:QSanRoomSkin::RoomLayout
m_move_cache	src/ui/roomscene.h	/^    QMap<_MoveCardsClassifier, CardsMoveStruct> m_move_cache;$/;"	m	class:RoomScene
m_msgBody	src/core/protocol.h	/^        Json::Value m_msgBody;$/;"	m	class:QSanProtocol::QSanGeneralPacket
m_mutex	src/core/engine.h	/^    QMutex m_mutex;$/;"	m	class:Engine
m_mutex	src/ui/dashboard.h	/^    QMutex m_mutex;$/;"	m	class:Dashboard
m_mutexCountdown	src/client/client.h	/^    QMutex m_mutexCountdown;$/;"	m	class:Client
m_mutexEnableCards	src/ui/dashboard.h	/^    QMutex m_mutexEnableCards;$/;"	m	class:Dashboard
m_normalHeight	src/ui/SkinBank.h	/^        int m_normalHeight;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_normalWidth	src/ui/SkinBank.h	/^        int m_normalWidth;$/;"	m	struct:QSanRoomSkin::PhotoLayout
m_numCardsVisible	src/ui/TablePile.h	/^    int m_numCardsVisible;$/;"	m	class:TablePile
m_number	src/core/card.h	/^    int m_number;$/;"	m	class:Card
m_number	src/ui/rolecombobox.h	/^    int m_number;$/;"	m	class:RoleComboBoxItem
m_offset	src/ui/SkinBank.h	/^        QPoint m_offset;$/;"	m	class:IQSanComponentSkin::AnchoredRect
m_onlineStatusArea	src/ui/SkinBank.h	/^        QRect m_onlineStatusArea;$/;"	m	struct:QSanRoomSkin::PhotoLayout
m_onlineStatusBgColor	src/ui/SkinBank.h	/^        QColor m_onlineStatusBgColor;$/;"	m	struct:QSanRoomSkin::PhotoLayout
m_onlineStatusFont	src/ui/SkinBank.h	/^        QSanShadowTextFont m_onlineStatusFont;$/;"	m	struct:QSanRoomSkin::PhotoLayout
m_opacityAtHome	src/ui/carditem.h	/^    double m_opacityAtHome;$/;"	m	class:CardItem
m_orientation	src/ui/magatamasItem.h	/^    Qt::Orientation m_orientation;$/;"	m	class:MagatamasBoxItem
m_packetType	src/core/protocol.h	/^        PacketType m_packetType;$/;"	m	class:QSanProtocol::QSanGeneralPacket
m_phaseArea	src/ui/SkinBank.h	/^        AnchoredRect m_phaseArea;        $/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_photoDashboardPadding	src/ui/SkinBank.h	/^        double m_photoDashboardPadding;$/;"	m	struct:QSanRoomSkin::RoomLayout
m_photoHDistance	src/ui/SkinBank.h	/^        int m_photoHDistance;$/;"	m	struct:QSanRoomSkin::RoomLayout
m_photoVDistance	src/ui/SkinBank.h	/^        int m_photoVDistance;$/;"	m	struct:QSanRoomSkin::RoomLayout
m_pileCardNumInfoTextBox	src/ui/roomscene.h	/^    QGraphicsTextItem *m_pileCardNumInfoTextBox;$/;"	m	class:RoomScene
m_player	src/ui/GenericCardContainerUI.h	/^    ClientPlayer* m_player;$/;"	m	class:PlayerCardContainer
m_playerId	src/core/structs.h	/^    QString m_playerId; \/\/ the cause (not the source) of the movement, such as "lusu" when "dimeng", or "zhanghe" when "qiaobian"$/;"	m	class:CardMoveReason
m_players	src/server/room.h	/^    QList<ServerPlayer*> m_players, m_alivePlayers;$/;"	m	class:Room
m_primaryAvatarSize	src/ui/SkinBank.h	/^        int m_primaryAvatarSize;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_privatePileButtonSize	src/ui/SkinBank.h	/^        QSize m_privatePileButtonSize;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_privatePileStartPos	src/ui/SkinBank.h	/^        QPoint m_privatePileStartPos;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_privatePileStep	src/ui/SkinBank.h	/^        QPoint m_privatePileStep;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_progressBarArea	src/ui/SkinBank.h	/^        AnchoredRect m_progressBarArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_readyIconRegion	src/ui/SkinBank.h	/^        QRect m_readyIconRegion;        $/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_reason	src/core/structs.h	/^    int m_reason;$/;"	m	class:CardMoveReason
m_requestResponsePair	src/server/room.h	/^    QHash<QSanProtocol::CommandType, QSanProtocol::CommandType> m_requestResponsePair; $/;"	m	class:Room
m_reverseSelectionButton	src/ui/roomscene.h	/^    QPushButton *m_reverseSelectionButton, *m_sortHandcardButton, *m_freeDiscardButton;$/;"	m	class:RoomScene
m_rightWidth	src/ui/SkinBank.h	/^        int m_leftWidth, m_rightWidth;$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_role	src/ui/rolecombobox.h	/^    QString m_role;$/;"	m	class:RoleComboBoxItem
m_roleBoxHeight	src/ui/SkinBank.h	/^        int m_roleBoxHeight;$/;"	m	struct:QSanRoomSkin::RoomLayout
m_roleComboBoxPos	src/ui/SkinBank.h	/^        QPoint m_roleComboBoxPos;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_rolesBox	src/ui/roomscene.h	/^    QGraphicsPixmapItem *m_rolesBox;$/;"	m	class:RoomScene
m_rolesBoxBackground	src/ui/roomscene.h	/^    QPixmap m_rolesBoxBackground;$/;"	m	class:RoomScene
m_roomMutex	src/ui/roomscene.h	/^    QMutex m_roomMutex;$/;"	m	class:RoomScene
m_rooms	src/core/engine.h	/^    QHash<QThread *, QObject *> m_rooms;$/;"	m	class:Engine
m_saveMeIconRegion	src/ui/SkinBank.h	/^        QRect m_saveMeIconRegion;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_scenePadding	src/ui/SkinBank.h	/^        int m_scenePadding;$/;"	m	struct:QSanRoomSkin::RoomLayout
m_screenNameArea	src/ui/SkinBank.h	/^        QRect m_screenNameArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_screenNameFont	src/ui/SkinBank.h	/^        QSanShadowTextFont m_screenNameFont;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_shadowColor	src/ui/SkinBank.h	/^        QColor m_shadowColor;$/;"	m	class:IQSanComponentSkin::QSanShadowTextFont
m_shadowDecadeFactor	src/ui/SkinBank.h	/^        double m_shadowDecadeFactor;$/;"	m	class:IQSanComponentSkin::QSanShadowTextFont
m_shadowOffset	src/ui/SkinBank.h	/^        QPoint m_shadowOffset;$/;"	m	class:IQSanComponentSkin::QSanShadowTextFont
m_shadowRadius	src/ui/SkinBank.h	/^        int m_shadowRadius;$/;"	m	class:IQSanComponentSkin::QSanShadowTextFont
m_showBackground	src/ui/magatamasItem.h	/^    bool m_showBackground;$/;"	m	class:MagatamasBoxItem
m_size	src/ui/rolecombobox.h	/^    QSize m_size;$/;"	m	class:RoleComboBoxItem
m_skillButtons	src/ui/roomscene.h	/^    QList<QSanSkillButton*> m_skillButtons;$/;"	m	class:RoomScene
m_skillButtonsSize	src/ui/SkinBank.h	/^        QSize m_skillButtonsSize[3];$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_skillName	src/core/card.h	/^    QString m_skillName;$/;"	m	class:Card
m_skillName	src/core/structs.h	/^    QString m_skillName; \/\/ skill that triggers movement of the cards, such as "longdang", "dimeng"$/;"	m	class:CardMoveReason
m_skillNameArea	src/ui/SkinBank.h	/^        QRect m_skillNameArea;$/;"	m	struct:QSanRoomSkin::PhotoLayout
m_skillNameFont	src/ui/SkinBank.h	/^        QSanShadowTextFont m_skillNameFont;        $/;"	m	struct:QSanRoomSkin::PhotoLayout
m_skillTextArea	src/ui/SkinBank.h	/^        QRect m_skillTextArea[3];$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_skillTextColors	src/ui/SkinBank.h	/^        QColor m_skillTextColors[QSanButton::S_NUM_BUTTON_STATES *$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_skillTextFonts	src/ui/SkinBank.h	/^        QSanShadowTextFont m_skillTextFonts[3];$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_skillTextShadowColors	src/ui/SkinBank.h	/^        QColor m_skillTextShadowColors[QSanButton::S_NUM_BUTTON_STATES *$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_smallAvatarArea	src/ui/SkinBank.h	/^        QRect m_smallAvatarArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_smallAvatarNameArea	src/ui/SkinBank.h	/^        QRect m_smallAvatarNameArea;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_smallAvatarNameFont	src/ui/SkinBank.h	/^        QSanShadowTextFont m_smallAvatarNameFont;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_smallAvatarSize	src/ui/SkinBank.h	/^        int m_smallAvatarSize;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_sortHandcardButton	src/ui/roomscene.h	/^    QPushButton *m_reverseSelectionButton, *m_sortHandcardButton, *m_freeDiscardButton;$/;"	m	class:RoomScene
m_spacing	src/ui/SkinBank.h	/^        int m_spacing;$/;"	m	class:IQSanComponentSkin::QSanSimpleTextFont
m_step	src/ui/TimedProgressBar.h	/^    time_t m_step, m_max, m_val;$/;"	m	class:TimedProgressBar
m_suit	src/core/card.h	/^    Suit m_suit;$/;"	m	class:Card
m_surrenderRequestReceived	src/server/room.h	/^    bool m_surrenderRequestReceived;$/;"	m	class:Room
m_tableBg	src/ui/roomscene.h	/^    QGraphicsPixmapItem *m_tableBg;$/;"	m	class:RoomScene
m_tableCenterPos	src/ui/roomscene.h	/^    QPointF m_tableCenterPos;$/;"	m	class:RoomScene
m_tablePile	src/ui/roomscene.h	/^    TablePile *m_tablePile;$/;"	m	class:RoomScene
m_targetId	src/core/structs.h	/^    QString m_targetId; \/\/ To keep this structure lightweight, currently this is only used for UI purpose.$/;"	m	class:CardMoveReason
m_timer	src/ui/TablePile.h	/^    int m_timer;$/;"	m	class:TablePile
m_timer	src/ui/TimedProgressBar.h	/^    int m_timer;$/;"	m	class:TimedProgressBar
m_to	src/server/room.h	/^        Player* m_to;$/;"	m	struct:Room::_MoveMergeClassifier
m_to	src/server/room.h	/^        ServerPlayer* m_to;$/;"	m	struct:Room::_NullificationAiHelper
m_trick	src/server/room.h	/^        const TrickCard* m_trick;$/;"	m	struct:Room::_NullificationAiHelper
m_trustButtonArea	src/ui/SkinBank.h	/^        QRect m_trustButtonArea;$/;"	m	struct:QSanRoomSkin::DashboardLayout
m_type	src/core/protocol.h	/^        } m_type;$/;"	m	class:QSanProtocol::Countdown	typeref:enum:QSanProtocol::Countdown::CountdownType
m_uiHelper	src/ui/carditem.h	/^    } m_uiHelper;$/;"	m	class:CardItem	typeref:struct:CardItem::UiHelper
m_useFixedSize	src/ui/SkinBank.h	/^        bool m_useFixedSize;$/;"	m	class:IQSanComponentSkin::AnchoredRect
m_val	src/ui/TimedProgressBar.h	/^    time_t m_step, m_max, m_val;$/;"	m	class:TimedProgressBar
m_vertical	src/ui/SkinBank.h	/^        bool m_vertical;$/;"	m	class:IQSanComponentSkin::QSanSimpleTextFont
m_visibleCards	src/ui/TablePile.h	/^    QList<CardItem*> m_visibleCards;$/;"	m	class:TablePile
m_votesIconRegion	src/ui/SkinBank.h	/^        QRect m_votesIconRegion;$/;"	m	struct:QSanRoomSkin::PlayerCardContainerLayout
m_weight	src/ui/SkinBank.h	/^        int m_weight;$/;"	m	class:IQSanComponentSkin::QSanSimpleTextFont
m_zValueMutex	src/ui/roomscene.h	/^    QMutex m_zValueMutex;	$/;"	m	class:RoomScene
magatamas	src/dialog/cardeditor.h	/^    QList<QGraphicsPixmapItem *> magatamas;$/;"	m	class:CardScene
main	src/breakpad/processor/address_map_unittest.cc	/^int main(int argc, char **argv) {$/;"	f
main	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	src/breakpad/processor/binarystream_unittest.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	src/breakpad/processor/contained_range_map_unittest.cc	/^int main(int argc, char **argv) {$/;"	f
main	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	src/breakpad/processor/map_serializers_unittest.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	src/breakpad/processor/minidump_dump.cc	/^int main(int argc, char **argv) {$/;"	f
main	src/breakpad/processor/minidump_processor_unittest.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	src/breakpad/processor/minidump_stackwalk.cc	/^int main(int argc, char **argv) {$/;"	f
main	src/breakpad/processor/pathname_stripper_unittest.cc	/^int main(int argc, char **argv) {$/;"	f
main	src/breakpad/processor/postfix_evaluator_unittest.cc	/^int main(int argc, char **argv) {$/;"	f
main	src/breakpad/processor/range_map_unittest.cc	/^int main(int argc, char **argv) {$/;"	f
main	src/breakpad/processor/stackwalker_selftest.cc	/^int main(int argc, char **argv) {$/;"	f
main	src/breakpad/processor/stackwalker_selftest.cc	/^int main(int argc, char** argv) {$/;"	f
main	src/breakpad/processor/static_address_map_unittest.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	src/breakpad/processor/static_contained_range_map_unittest.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	src/breakpad/processor/static_map_unittest.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	src/breakpad/processor/static_range_map_unittest.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	src/breakpad/processor/testdata/linux_test_app.cc	/^int main(int argc, char **argv) {$/;"	f
main	src/breakpad/processor/testdata/test_app.cc	/^int main(int argc, char **argv) {$/;"	f
main	src/main.cpp	/^int main(int argc, char *argv[])$/;"	f
main_address_	src/breakpad/processor/basic_code_modules.h	/^  u_int64_t main_address_;$/;"	m	class:google_breakpad::BasicCodeModules
main_window	src/dialog/halldialog.h	/^    MainWindow *main_window;$/;"	m	class:HallDialog
main_window	src/ui/roomscene.h	/^    QMainWindow *main_window;$/;"	m	class:RoomScene
mainposition	src/lua/ltable.c	/^static Node *mainposition (const Table *t, const TValue *key) {$/;"	f	file:
mainthread	src/lua/lstate.h	/^  struct lua_State *mainthread;$/;"	m	struct:global_State	typeref:struct:global_State::lua_State
major_version	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t        major_version;$/;"	m	struct:__anon39
make	src/jsoncpp/src/json_value.cpp	/^Path::make( Value &root ) const$/;"	f	class:Json::Path
makeAvatar	src/dialog/cardeditor.cpp	/^void CardScene::makeAvatar(AvatarRectItem *item){$/;"	f	class:CardScene
makeBigAvatar	src/dialog/cardeditor.cpp	/^void CardScene::makeBigAvatar(){$/;"	f	class:CardScene
makeCheat	src/server/room.cpp	/^bool Room::makeCheat(ServerPlayer* player){$/;"	f	class:Room
makeDamage	src/server/room.cpp	/^void Room::makeDamage(const QString& source, const QString& target, QSanProtocol::CheatCategory nature, int point){$/;"	f	class:Room
makeDamage	src/ui/roomscene.cpp	/^void RoomScene::makeDamage(){$/;"	f	class:RoomScene
makeGray	src/ui/QSanSelectableItem.cpp	/^void QSanSelectableItem::makeGray(){$/;"	f	class:QSanSelectableItem
makeGray	src/ui/uiUtils.cpp	/^void QSanUiUtils::makeGray(QPixmap &pixmap)$/;"	f	class:QSanUiUtils
makeKilling	src/server/room.cpp	/^void Room::makeKilling(const QString& killerName, const QString& victimName){$/;"	f	class:Room
makeKilling	src/ui/roomscene.cpp	/^void RoomScene::makeKilling(){$/;"	f	class:RoomScene
makePackage	src/dialog/packagingeditor.cpp	/^void PackagingEditor::makePackage(){$/;"	f	class:PackagingEditor
makePath	src/jsoncpp/src/json_value.cpp	/^Path::makePath( const std::string &path,$/;"	f	class:Json::Path
makeReviving	src/server/room.cpp	/^void Room::makeReviving(const QString &name){$/;"	f	class:Room
makeReviving	src/ui/roomscene.cpp	/^void RoomScene::makeReviving(){$/;"	f	class:RoomScene
makeSmallAvatar	src/dialog/cardeditor.cpp	/^void CardScene::makeSmallAvatar(){$/;"	f	class:CardScene
makeSurrender	src/server/room.cpp	/^bool Room::makeSurrender(ServerPlayer* initiator)$/;"	f	class:Room
makeTinyAvatar	src/dialog/cardeditor.cpp	/^void CardScene::makeTinyAvatar(){$/;"	f	class:CardScene
make_linked_ptr	src/breakpad/processor/linked_ptr.h	/^linked_ptr<T> make_linked_ptr(T* ptr) {$/;"	f	namespace:google_breakpad
make_set	lua/lib/socket/url.lua	/^local function make_set(t)$/;"	f
makemask	src/lua/ldblib.c	/^static int makemask (const char *smask, int count) {$/;"	f	file:
makewhite	src/lua/lgc.c	34;"	d	file:
manager	include/freetype/freetype/ftcache.h	/^  FTC_Manager_Done( FTC_Manager  manager );$/;"	v
manager	include/freetype/freetype/ftcache.h	/^  FTC_Manager_Reset( FTC_Manager  manager );$/;"	v
map	src/package/wind.h	/^    QHash<QString, const Card *> map;$/;"	m	class:GuhuoDialog
map	src/scenario/couple-scenario.h	/^    QMap<QString, QString> map;$/;"	m	class:CoupleScenario
map_	src/breakpad/processor/address_map.h	/^  AddressToEntryMap map_;$/;"	m	class:google_breakpad::AddressMap
map_	src/breakpad/processor/basic_code_modules.h	/^  RangeMap<u_int64_t, linked_ptr<const CodeModule> > *map_;$/;"	m	class:google_breakpad::BasicCodeModules
map_	src/breakpad/processor/contained_range_map.h	/^  AddressToRangeMap *map_;$/;"	m	class:google_breakpad::ContainedRangeMap
map_	src/breakpad/processor/range_map.h	/^  AddressToRangeMap map_;$/;"	m	class:google_breakpad::RangeMap
map_	src/breakpad/processor/static_address_map.h	/^  AddressToEntryMap map_;$/;"	m	class:google_breakpad::StaticAddressMap
map_	src/breakpad/processor/static_contained_range_map.h	/^  AddressToRangeMap map_;$/;"	m	class:google_breakpad::StaticContainedRangeMap
map_	src/breakpad/processor/static_range_map.h	/^  AddressToRangeMap map_;$/;"	m	class:google_breakpad::StaticRangeMap
map_	src/jsoncpp/include/json/value.h	/^         ObjectValues *map_;$/;"	m	union:Json::Value::ValueHolder
map_	src/jsoncpp/include/json/value.h	/^         ValueInternalMap *map_;$/;"	m	struct:Json::ValueInternalMap::IteratorState
map_	src/jsoncpp/include/json/value.h	/^         ValueInternalMap *map_;$/;"	m	union:Json::Value::ValueHolder
map_	src/jsoncpp/include/json/value.h	/^         ValueInternalMap::IteratorState map_;$/;"	m	union:Json::ValueIteratorBase::__anon4
map_data	src/breakpad/processor/static_address_map_unittest.cc	/^  char *map_data[kNumberTestCases];$/;"	m	class:TestStaticAddressMap	file:
map_data	src/breakpad/processor/static_map_unittest.cc	/^  char* map_data[kNumberTestCases];$/;"	m	class:TestValidMap	file:
map_size_	src/breakpad/processor/cfi_frame_info.h	/^  size_t map_size_;$/;"	m	class:google_breakpad::SimpleCFIWalker
map_sizes_	src/breakpad/processor/module_serializer.h	/^  u_int32_t map_sizes_[kNumberMaps_];$/;"	m	class:google_breakpad::ModuleSerializer
mapper	src/dialog/playercarddialog.h	/^    QMap<QObject *, int> mapper;$/;"	m	class:PlayerCardDialog
maps	include/freetype/freetype/internal/services/svpscmap.h	/^    PS_UniMap*  maps;$/;"	m	struct:PS_UnicodesRec_
mark	src/ui/QSanSelectableItem.cpp	/^void QSanSelectableItem::mark(bool marked){$/;"	f	class:QSanSelectableItem
mark_doc	src/client/clientplayer.h	/^    QTextDocument *mark_doc;$/;"	m	class:ClientPlayer
mark_icons	src/dialog/customassigndialog.h	/^    QList<QLabel *> mark_icons;$/;"	m	class:CustomAssignDialog
mark_name	src/core/skill.h	/^    QString mark_name;$/;"	m	class:MarkAssignSkill
markable	src/ui/QSanSelectableItem.h	/^    bool markable, marked;$/;"	m	class:QSanSelectableItem
marked	src/ui/QSanSelectableItem.h	/^    bool markable, marked;$/;"	m	class:QSanSelectableItem
markfinalized	src/lua/lgc.c	44;"	d	file:
markmt	src/lua/lgc.c	/^static void markmt (global_State *g) {$/;"	f	file:
markobject	src/lua/lgc.c	55;"	d	file:
markroot	src/lua/lgc.c	/^static void markroot (lua_State *L) {$/;"	f	file:
marks	src/core/player.h	/^    QMap<QString, int> marks;$/;"	m	class:Player
marks_ComboBox	src/dialog/customassigndialog.h	/^    QComboBox *role_ComboBox, *num_ComboBox, *marks_ComboBox;$/;"	m	class:CustomAssignDialog
marks_count	src/dialog/customassigndialog.h	/^    QSpinBox *player_draw, *marks_count;$/;"	m	class:CustomAssignDialog
marktmu	src/lua/lgc.c	/^static void marktmu (global_State *g) {$/;"	f	file:
markupval	src/lua/lparser.c	/^static void markupval (FuncState *fs, int level) {$/;"	f	file:
markvalue	src/lua/lgc.c	52;"	d	file:
marry	src/scenario/couple-scenario.cpp	/^void CoupleScenario::marry(ServerPlayer *husband, ServerPlayer *wife) const{$/;"	f	class:CoupleScenario
marryAll	src/scenario/couple-scenario.cpp	/^void CoupleScenario::marryAll(Room *room) const{$/;"	f	class:CoupleScenario
marshal	src/server/room.cpp	/^void Room::marshal(ServerPlayer *player){$/;"	f	class:Room
marshal	src/server/serverplayer.cpp	/^void ServerPlayer::marshal(ServerPlayer *player) const{$/;"	f	class:ServerPlayer
maskmarks	src/lua/lgc.c	32;"	d	file:
match	src/core/WrappedCard.h	/^    inline virtual bool match(const QString &pattern) const { $/;"	f	class:WrappedCard
match	src/core/card.cpp	/^bool Card::match(const QString &pattern) const{$/;"	f	class:Card
match	src/jsoncpp/src/json_reader.cpp	/^Reader::match( Location pattern, $/;"	f	class:Json::Reader
match	src/lua/lstrlib.c	/^static const char *match (MatchState *ms, const char *s, const char *p) {$/;"	f	file:
match	src/package/exppattern.cpp	/^bool ExpPattern::match(const Player *player, const Card *card) const$/;"	f	class:ExpPattern
match	src/package/maneuvering.cpp	/^bool NatureSlash::match(const QString &pattern) const{$/;"	f	class:NatureSlash
match	src/package/nostalgia.cpp	/^    virtual bool match(const Player *player, const Card *card) const{$/;"	f	class:EnyuanPattern
match	src/server/roomthread.cpp	/^bool JudgeStructPattern::match(const Player *player, const Card *card) const{$/;"	f	class:JudgeStructPattern
matchOne	src/package/exppattern.cpp	/^bool ExpPattern::matchOne(const Player *player, const Card *card, QString exp) const$/;"	f	class:ExpPattern
matchPattern	src/client/aux-skills.cpp	/^bool ResponseSkill::matchPattern(const Player *player, const Card *card) const{$/;"	f	class:ResponseSkill
matchPattern	src/client/aux-skills.cpp	/^bool ShowOrPindianSkill::matchPattern(const Player *player, const Card *card) const{$/;"	f	class:ShowOrPindianSkill
match_capture	src/lua/lstrlib.c	/^static const char *match_capture (MatchState *ms, const char *s, int l) {$/;"	f	file:
match_class	src/lua/lstrlib.c	/^static int match_class (int c, int cl) {$/;"	f	file:
matchbalance	src/lua/lstrlib.c	/^static const char *matchbalance (MatchState *ms, const char *s,$/;"	f	file:
matchbracketclass	src/lua/lstrlib.c	/^static int matchbracketclass (int c, const char *p, const char *ec) {$/;"	f	file:
math_abs	src/lua/lmathlib.c	/^static int math_abs (lua_State *L) {$/;"	f	file:
math_acos	src/lua/lmathlib.c	/^static int math_acos (lua_State *L) {$/;"	f	file:
math_asin	src/lua/lmathlib.c	/^static int math_asin (lua_State *L) {$/;"	f	file:
math_atan	src/lua/lmathlib.c	/^static int math_atan (lua_State *L) {$/;"	f	file:
math_atan2	src/lua/lmathlib.c	/^static int math_atan2 (lua_State *L) {$/;"	f	file:
math_ceil	src/lua/lmathlib.c	/^static int math_ceil (lua_State *L) {$/;"	f	file:
math_cos	src/lua/lmathlib.c	/^static int math_cos (lua_State *L) {$/;"	f	file:
math_cosh	src/lua/lmathlib.c	/^static int math_cosh (lua_State *L) {$/;"	f	file:
math_deg	src/lua/lmathlib.c	/^static int math_deg (lua_State *L) {$/;"	f	file:
math_exp	src/lua/lmathlib.c	/^static int math_exp (lua_State *L) {$/;"	f	file:
math_floor	src/lua/lmathlib.c	/^static int math_floor (lua_State *L) {$/;"	f	file:
math_fmod	src/lua/lmathlib.c	/^static int math_fmod (lua_State *L) {$/;"	f	file:
math_frexp	src/lua/lmathlib.c	/^static int math_frexp (lua_State *L) {$/;"	f	file:
math_ldexp	src/lua/lmathlib.c	/^static int math_ldexp (lua_State *L) {$/;"	f	file:
math_log	src/lua/lmathlib.c	/^static int math_log (lua_State *L) {$/;"	f	file:
math_log10	src/lua/lmathlib.c	/^static int math_log10 (lua_State *L) {$/;"	f	file:
math_max	src/lua/lmathlib.c	/^static int math_max (lua_State *L) {$/;"	f	file:
math_min	src/lua/lmathlib.c	/^static int math_min (lua_State *L) {$/;"	f	file:
math_modf	src/lua/lmathlib.c	/^static int math_modf (lua_State *L) {$/;"	f	file:
math_pow	src/lua/lmathlib.c	/^static int math_pow (lua_State *L) {$/;"	f	file:
math_rad	src/lua/lmathlib.c	/^static int math_rad (lua_State *L) {$/;"	f	file:
math_random	src/lua/lmathlib.c	/^static int math_random (lua_State *L) {$/;"	f	file:
math_randomseed	src/lua/lmathlib.c	/^static int math_randomseed (lua_State *L) {$/;"	f	file:
math_sin	src/lua/lmathlib.c	/^static int math_sin (lua_State *L) {$/;"	f	file:
math_sinh	src/lua/lmathlib.c	/^static int math_sinh (lua_State *L) {$/;"	f	file:
math_sqrt	src/lua/lmathlib.c	/^static int math_sqrt (lua_State *L) {$/;"	f	file:
math_tan	src/lua/lmathlib.c	/^static int math_tan (lua_State *L) {$/;"	f	file:
math_tanh	src/lua/lmathlib.c	/^static int math_tanh (lua_State *L) {$/;"	f	file:
mathlib	src/lua/lmathlib.c	/^static const luaL_Reg mathlib[] = {$/;"	v	file:
matrix	include/freetype/freetype/ftglyph.h	/^  FT_Matrix_Invert( FT_Matrix*  matrix );$/;"	v
max	include/fmod/fmod_dsp.h	/^    float       max;                                \/* [w] Maximum value of the parameter (ie 22050.0). *\/$/;"	m	struct:FMOD_DSP_PARAMETERDESC
max	include/js.h	/^  float max       [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
max3DReverbDSPs	include/fmod/fmod.h	/^    int             max3DReverbDSPs;            \/* [r\/w] Optional. Specify 0 to ignore. The max number of 3d reverb DSP's in the system. (NOTE: CURRENTLY DISABLED \/ UNUSED) *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
maxADPCMcodecs	include/fmod/fmod.h	/^    int             maxADPCMcodecs;             \/* [r\/w] Optional. Specify 0 to ignore. For use with FMOD_CREATECOMPRESSEDSAMPLE only.  ADPCM codecs consume  2,136 bytes per instance and this number will determine how many ADPCM channels can be played simultaneously.  Default = 32. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
maxCELTcodecs	include/fmod/fmod.h	/^    int             maxCELTcodecs;              \/* [r\/w] Optional. Specify 0 to ignore. For use with FMOD_CREATECOMPRESSEDSAMPLE only.  CELT  codecs consume 11,500 bytes per instance and this number will determine how many CELT channels can be played simultaneously.   Default = 32. *\/    $/;"	m	struct:FMOD_ADVANCEDSETTINGS
maxComponentDepth	include/freetype/freetype/tttables.h	/^    FT_UShort  maxComponentDepth;$/;"	m	struct:TT_MaxProfile_
maxComponentElements	include/freetype/freetype/tttables.h	/^    FT_UShort  maxComponentElements;$/;"	m	struct:TT_MaxProfile_
maxCompositeContours	include/freetype/freetype/tttables.h	/^    FT_UShort  maxCompositeContours;$/;"	m	struct:TT_MaxProfile_
maxCompositePoints	include/freetype/freetype/tttables.h	/^    FT_UShort  maxCompositePoints;$/;"	m	struct:TT_MaxProfile_
maxContours	include/freetype/freetype/tttables.h	/^    FT_UShort  maxContours;$/;"	m	struct:TT_MaxProfile_
maxFunctionDefs	include/freetype/freetype/tttables.h	/^    FT_UShort  maxFunctionDefs;$/;"	m	struct:TT_MaxProfile_
maxInstructionDefs	include/freetype/freetype/tttables.h	/^    FT_UShort  maxInstructionDefs;$/;"	m	struct:TT_MaxProfile_
maxInt	src/jsoncpp/include/json/value.h	/^      static const Int maxInt;$/;"	m	class:Json::Value
maxInt	src/jsoncpp/src/json_value.cpp	/^const Int Value::maxInt = Int( UInt(-1)\/2 );$/;"	m	class:Json::Value	file:
maxInt64	src/jsoncpp/include/json/value.h	/^      static const Int64 maxInt64;$/;"	m	class:Json::Value
maxInt64	src/jsoncpp/src/json_value.cpp	/^const Int64 Value::maxInt64 = Int64( UInt64(-1)\/2 );$/;"	m	class:Json::Value	file:
maxLargestInt	src/jsoncpp/include/json/value.h	/^      static const LargestInt maxLargestInt;$/;"	m	class:Json::Value
maxLargestInt	src/jsoncpp/src/json_value.cpp	/^const LargestInt Value::maxLargestInt = LargestInt( LargestUInt(-1)\/2 );$/;"	m	class:Json::Value	file:
maxLargestUInt	src/jsoncpp/include/json/value.h	/^      static const LargestUInt maxLargestUInt;$/;"	m	class:Json::Value
maxLargestUInt	src/jsoncpp/src/json_value.cpp	/^const LargestUInt Value::maxLargestUInt = LargestUInt(-1);$/;"	m	class:Json::Value	file:
maxMPEGcodecs	include/fmod/fmod.h	/^    int             maxMPEGcodecs;              \/* [r\/w] Optional. Specify 0 to ignore. For use with FMOD_CREATECOMPRESSEDSAMPLE only.  Mpeg  codecs consume 21,684 bytes per instance and this number will determine how many mpeg channels can be played simultaneously.   Default = 32. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
maxMemType1	include/freetype/freetype/tttables.h	/^    FT_ULong  maxMemType1;$/;"	m	struct:TT_Postscript_
maxMemType42	include/freetype/freetype/tttables.h	/^    FT_ULong  maxMemType42;$/;"	m	struct:TT_Postscript_
maxPCMcodecs	include/fmod/fmod.h	/^    int             maxPCMcodecs;               \/* [r\/w] Optional. Specify 0 to ignore. For use with PS3 only.                          PCM   codecs consume 12,672 bytes per instance and this number will determine how many streams and PCM voices can be played simultaneously. Default = 16. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
maxPPEM	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  maxPPEM;$/;"	m	struct:TT_GaspRangeRec_
maxPoints	include/freetype/freetype/tttables.h	/^    FT_UShort  maxPoints;$/;"	m	struct:TT_MaxProfile_
maxSizeOfInstructions	include/freetype/freetype/tttables.h	/^    FT_UShort  maxSizeOfInstructions;$/;"	m	struct:TT_MaxProfile_
maxSpectrumWaveDataBuffers	include/fmod/fmod.h	/^    unsigned int    maxSpectrumWaveDataBuffers; \/* [r\/w] Optional. Specify 0 to ignore. Tells System::init to allocate a pool of wavedata\/spectrum buffers to prevent memory fragmentation, any additional buffers will be allocated normally. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
maxStackElements	include/freetype/freetype/tttables.h	/^    FT_UShort  maxStackElements;$/;"	m	struct:TT_MaxProfile_
maxStorage	include/freetype/freetype/tttables.h	/^    FT_UShort  maxStorage;$/;"	m	struct:TT_MaxProfile_
maxTwilightPoints	include/freetype/freetype/tttables.h	/^    FT_UShort  maxTwilightPoints;$/;"	m	struct:TT_MaxProfile_
maxUInt	src/jsoncpp/include/json/value.h	/^      static const UInt maxUInt;$/;"	m	class:Json::Value
maxUInt	src/jsoncpp/src/json_value.cpp	/^const UInt Value::maxUInt = UInt(-1);$/;"	m	class:Json::Value	file:
maxUInt64	src/jsoncpp/include/json/value.h	/^      static const UInt64 maxUInt64;$/;"	m	class:Json::Value
maxUInt64	src/jsoncpp/src/json_value.cpp	/^const UInt64 Value::maxUInt64 = UInt64(-1);$/;"	m	class:Json::Value	file:
maxUInt64AsDouble	src/jsoncpp/src/json_value.cpp	/^static const double maxUInt64AsDouble = 18446744073709551615.0;$/;"	m	namespace:Json	file:
maxXMAcodecs	include/fmod/fmod.h	/^    int             maxXMAcodecs;               \/* [r\/w] Optional. Specify 0 to ignore. For use with FMOD_CREATECOMPRESSEDSAMPLE only.  XMA   codecs consume 14,836 bytes per instance and this number will determine how many XMA channels can be played simultaneously.    Default = 32. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
maxZones	include/freetype/freetype/tttables.h	/^    FT_UShort  maxZones;$/;"	m	struct:TT_MaxProfile_
max_advance	include/freetype/freetype/freetype.h	/^    FT_Pos     max_advance; \/* max horizontal advance, in 26.6 pixels *\/$/;"	m	struct:FT_Size_Metrics_
max_advance_height	include/freetype/freetype/freetype.h	/^    FT_Short          max_advance_height;$/;"	m	struct:FT_FaceRec_
max_advance_width	include/freetype/freetype/freetype.h	/^    FT_Short          max_advance_width;$/;"	m	struct:FT_FaceRec_
max_before_BL	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  max_before_BL;$/;"	m	struct:TT_SBit_LineMetricsRec_
max_bytes	src/breakpad/google_breakpad/processor/minidump.h	/^  static u_int32_t max_bytes() { return max_bytes_; }$/;"	f	class:google_breakpad::MinidumpMemoryRegion
max_bytes_	src/breakpad/google_breakpad/processor/minidump.h	/^  static u_int32_t max_bytes_;$/;"	m	class:google_breakpad::MinidumpMemoryRegion
max_bytes_	src/breakpad/processor/minidump.cc	/^u_int32_t MinidumpMemoryRegion::max_bytes_ = 1024 * 1024;  \/\/ 1MB$/;"	m	class:google_breakpad::MinidumpMemoryRegion	file:
max_components	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              max_components;  \/* stubbed to 0 *\/$/;"	m	struct:TT_FaceRec_
max_contours	include/freetype/freetype/internal/ftgloadr.h	/^    FT_UInt          max_contours;$/;"	m	struct:FT_GlyphLoaderRec_
max_contours	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort   max_contours;$/;"	m	struct:TT_GlyphZoneRec_
max_cv_bytes	src/breakpad/google_breakpad/processor/minidump.h	/^  static u_int32_t max_cv_bytes() { return max_cv_bytes_; }$/;"	f	class:google_breakpad::MinidumpModule
max_cv_bytes_	src/breakpad/google_breakpad/processor/minidump.h	/^  static u_int32_t max_cv_bytes_;$/;"	m	class:google_breakpad::MinidumpModule
max_cv_bytes_	src/breakpad/processor/minidump.cc	/^u_int32_t MinidumpModule::max_cv_bytes_ = 32768;$/;"	m	class:google_breakpad::MinidumpModule	file:
max_elems	include/freetype/freetype/internal/psaux.h	/^    FT_Int             max_elems;$/;"	m	struct:PS_TableRec_
max_expand	src/lua/lstrlib.c	/^static const char *max_expand (MatchState *ms, const char *s,$/;"	f	file:
max_frames	src/breakpad/google_breakpad/processor/stackwalker.h	/^  static u_int32_t max_frames() { return max_frames_; }$/;"	f	class:google_breakpad::Stackwalker
max_frames_	src/breakpad/google_breakpad/processor/stackwalker.h	/^  static u_int32_t max_frames_;$/;"	m	class:google_breakpad::Stackwalker
max_frames_	src/breakpad/processor/stackwalker.cc	/^u_int32_t Stackwalker::max_frames_ = 1024;$/;"	m	class:google_breakpad::Stackwalker	file:
max_grays	include/freetype/freetype/ftcache.h	/^    FT_Byte   max_grays;$/;"	m	struct:FTC_SBitRec_
max_hp	src/core/general.h	/^    int max_hp;$/;"	m	class:General
max_hp	src/core/player.h	/^    int hp, max_hp;$/;"	m	class:Player
max_hp_label	src/client/clientstruct.h	/^    QLabel *max_hp_label;$/;"	m	class:ServerInfoWidget
max_hp_label	src/server/server.h	/^    QLabel *max_hp_label;$/;"	m	class:ServerDialog
max_hp_prompt	src/dialog/customassigndialog.h	/^    QCheckBox *max_hp_prompt,*hp_prompt;$/;"	m	class:CustomAssignDialog
max_hp_scheme_ComboBox	src/server/server.h	/^    QComboBox *max_hp_scheme_ComboBox;$/;"	m	class:ServerDialog
max_hp_spin	src/dialog/customassigndialog.h	/^    QSpinBox *max_hp_spin,*hp_spin;$/;"	m	class:CustomAssignDialog
max_kern	include/freetype/freetype/internal/t1types.h	/^    FT_Fixed  max_kern;$/;"	m	struct:AFM_TrackKernRec_
max_misc_bytes	src/breakpad/google_breakpad/processor/minidump.h	/^  static u_int32_t max_misc_bytes() { return max_misc_bytes_; }$/;"	f	class:google_breakpad::MinidumpModule
max_misc_bytes_	src/breakpad/google_breakpad/processor/minidump.h	/^  static u_int32_t max_misc_bytes_;$/;"	m	class:google_breakpad::MinidumpModule
max_misc_bytes_	src/breakpad/processor/minidump.cc	/^u_int32_t MinidumpModule::max_misc_bytes_ = 32768;$/;"	m	class:google_breakpad::MinidumpModule	file:
max_modules	src/breakpad/google_breakpad/processor/minidump.h	/^  static u_int32_t max_modules() { return max_modules_; }$/;"	f	class:google_breakpad::MinidumpModuleList
max_modules_	src/breakpad/google_breakpad/processor/minidump.h	/^  static u_int32_t max_modules_;$/;"	m	class:google_breakpad::MinidumpModuleList
max_modules_	src/breakpad/processor/minidump.cc	/^u_int32_t MinidumpModuleList::max_modules_ = 1024;$/;"	m	class:google_breakpad::MinidumpModuleList	file:
max_points	include/freetype/freetype/internal/ftgloadr.h	/^    FT_UInt          max_points;$/;"	m	struct:FT_GlyphLoaderRec_
max_points	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort   max_points;$/;"	m	struct:TT_GlyphZoneRec_
max_profile	include/freetype/freetype/internal/tttypes.h	/^    TT_MaxProfile         max_profile;$/;"	m	struct:TT_FaceRec_
max_ptsize	include/freetype/freetype/internal/t1types.h	/^    FT_Fixed  max_ptsize;$/;"	m	struct:AFM_TrackKernRec_
max_regions	src/breakpad/google_breakpad/processor/minidump.h	/^  static u_int32_t max_regions() { return max_regions_; }$/;"	f	class:google_breakpad::MinidumpMemoryList
max_regions_	src/breakpad/google_breakpad/processor/minidump.h	/^  static u_int32_t max_regions_;$/;"	m	class:google_breakpad::MinidumpMemoryList
max_regions_	src/breakpad/processor/minidump.cc	/^u_int32_t MinidumpMemoryList::max_regions_ = 4096;$/;"	m	class:google_breakpad::MinidumpMemoryList	file:
max_stack_size	src/breakpad/processor/windows_frame_info.h	/^  u_int32_t max_stack_size;$/;"	m	struct:google_breakpad::WindowsFrameInfo
max_streams	src/breakpad/google_breakpad/processor/minidump.h	/^  static u_int32_t max_streams() { return max_streams_; }$/;"	f	class:google_breakpad::Minidump
max_streams_	src/breakpad/google_breakpad/processor/minidump.h	/^  static u_int32_t max_streams_;$/;"	m	class:google_breakpad::Minidump
max_streams_	src/breakpad/processor/minidump.cc	/^u_int32_t Minidump::max_streams_ = 128;$/;"	m	class:google_breakpad::Minidump	file:
max_string_length	src/breakpad/google_breakpad/processor/minidump.h	/^  static u_int32_t max_string_length() { return max_string_length_; }$/;"	f	class:google_breakpad::Minidump
max_string_length_	src/breakpad/google_breakpad/processor/minidump.h	/^  static unsigned int max_string_length_;$/;"	m	class:google_breakpad::Minidump
max_string_length_	src/breakpad/processor/minidump.cc	/^unsigned int Minidump::max_string_length_ = 1024;$/;"	m	class:google_breakpad::Minidump	file:
max_subglyphs	include/freetype/freetype/internal/ftgloadr.h	/^    FT_UInt          max_subglyphs;$/;"	m	struct:FT_GlyphLoaderRec_
max_threads	src/breakpad/google_breakpad/processor/minidump.h	/^  static u_int32_t max_threads() { return max_threads_; }$/;"	f	class:google_breakpad::MinidumpThreadList
max_threads_	src/breakpad/google_breakpad/processor/minidump.h	/^  static u_int32_t max_threads_;$/;"	m	class:google_breakpad::MinidumpThreadList
max_threads_	src/breakpad/processor/minidump.cc	/^u_int32_t MinidumpThreadList::max_threads_ = 4096;$/;"	m	class:google_breakpad::MinidumpThreadList	file:
max_width	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  max_width;$/;"	m	struct:FT_WinFNT_HeaderRec_
max_width	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte   max_width;$/;"	m	struct:TT_HdmxEntryRec_
max_width	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte  max_width;$/;"	m	struct:TT_SBit_LineMetricsRec_
maxcards_skills	src/core/engine.h	/^    QList<const MaxCardsSkill *> maxcards_skills;$/;"	m	class:Engine
maxchoice_spinbox	src/server/server.h	/^    QSpinBox *maxchoice_spinbox;$/;"	m	class:ServerDialog
maximum	include/freetype/freetype/ftmm.h	/^    FT_Fixed    maximum;$/;"	m	struct:FT_Var_Axis_
maximum	include/freetype/freetype/ftmm.h	/^    FT_Long     maximum;$/;"	m	struct:FT_MM_Axis_
maxn	src/lua/ltablib.c	/^static int maxn (lua_State *L) {$/;"	f	file:
maxpolyphony	include/fmod/fmod.h	/^    int                            maxpolyphony;       \/* [w] Optional. Specify 0 to ignore. For sequenced formats with dynamic channel allocation such as .MID and .IT, this specifies the maximum voice count allowed while playing.  .IT defaults to 64.  .MID defaults to 32. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
maxstacksize	src/lua/lobject.h	/^  lu_byte maxstacksize;$/;"	m	struct:Proto
members	src/server/contestdb.h	/^    QHash<QString, Member> members;$/;"	m	class:ContestDB
memory	include/freetype/freetype/freetype.h	/^    FT_Memory         memory;$/;"	m	struct:FT_FaceRec_
memory	include/freetype/freetype/ftsystem.h	/^    FT_Memory            memory;$/;"	m	struct:FT_StreamRec_
memory	include/freetype/freetype/internal/ftgloadr.h	/^    FT_Memory        memory;$/;"	m	struct:FT_GlyphLoaderRec_
memory	include/freetype/freetype/internal/ftobjs.h	/^    FT_Memory          memory;           \/* library's memory manager *\/$/;"	m	struct:FT_LibraryRec_
memory	include/freetype/freetype/internal/ftobjs.h	/^    FT_Memory         memory;$/;"	m	struct:FT_ModuleRec_
memory	include/freetype/freetype/internal/ftobjs.h	/^  FT_Done_Memory( FT_Memory  memory );$/;"	v
memory	include/freetype/freetype/internal/psaux.h	/^    FT_Memory          memory;$/;"	m	struct:PS_TableRec_
memory	include/freetype/freetype/internal/psaux.h	/^    FT_Memory       memory;$/;"	m	struct:T1_BuilderRec_
memory	include/freetype/freetype/internal/psaux.h	/^    FT_Memory     memory;$/;"	m	struct:AFM_ParserRec_
memory	include/freetype/freetype/internal/psaux.h	/^    FT_Memory  memory;$/;"	m	struct:PS_ParserRec_
memory	include/freetype/freetype/internal/tttypes.h	/^    FT_Memory   memory;$/;"	m	struct:TT_GlyphZoneRec_
memory	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDLocationDescriptor memory;$/;"	m	struct:__anon18
memory	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  MockMemoryRegion memory;$/;"	m	struct:CFIFixture	file:
memory	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  MockMemoryRegion memory;$/;"	m	struct:SimpleCFIWalkerFixture	file:
memory	src/ui/roomscene.h	/^    QSharedMemory *memory;$/;"	m	class:RoomScene
memory_	src/breakpad/google_breakpad/processor/minidump.h	/^  MinidumpMemoryRegion* memory_;$/;"	m	class:google_breakpad::MinidumpThread
memory_	src/breakpad/google_breakpad/processor/minidump.h	/^  mutable vector<u_int8_t>* memory_;$/;"	m	class:google_breakpad::MinidumpMemoryRegion
memory_	src/breakpad/google_breakpad/processor/stackwalker.h	/^  MemoryRegion *memory_;$/;"	m	class:google_breakpad::Stackwalker
memory_	src/breakpad/processor/postfix_evaluator.h	/^  const MemoryRegion *memory_;$/;"	m	class:google_breakpad::PostfixEvaluator
memory_base	include/freetype/freetype/freetype.h	/^    const FT_Byte*  memory_base;$/;"	m	struct:FT_Open_Args_
memory_base	src/breakpad/client/windows/handler/exception_handler.cc	/^  ULONG64 memory_base;$/;"	m	struct:google_breakpad::__anon66	file:
memory_buffers_	src/breakpad/google_breakpad/processor/source_line_resolver_base.h	/^  MemoryMap *memory_buffers_;$/;"	m	class:google_breakpad::SourceLineResolverBase
memory_buffers_	src/breakpad/processor/minidump_processor_unittest.cc	/^  map<string, char *> memory_buffers_;$/;"	m	class:__anon77::TestSymbolSupplier	file:
memory_buffers_	src/breakpad/processor/simple_symbol_supplier.h	/^  map<string, char *> memory_buffers_;$/;"	m	class:google_breakpad::SimpleSymbolSupplier
memory_info_	src/breakpad/google_breakpad/processor/minidump.h	/^  MDRawMemoryInfo memory_info_;$/;"	m	class:google_breakpad::MinidumpMemoryInfo
memory_list_	src/breakpad/processor/synth_minidump.h	/^  List<SynthMinidump::Section> memory_list_;$/;"	m	class:google_breakpad::SynthMinidump::Dump
memory_ranges	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDMemoryDescriptor memory_ranges[1];$/;"	m	struct:__anon33
memory_size	include/freetype/freetype/freetype.h	/^    FT_Long         memory_size;$/;"	m	struct:FT_Open_Args_
memory_size	src/breakpad/client/windows/handler/exception_handler.cc	/^  ULONG memory_size;$/;"	m	struct:google_breakpad::__anon66	file:
memoryfsb	include/fmod/fmod_memoryinfo.h	/^    unsigned int memoryfsb;                      \/* [out] Data loaded with preloadFSB *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
menu	src/dialog/cardeditor.h	/^    QMenu *menu, *done_menu;$/;"	m	class:CardScene
message	lua/lib/socket/smtp.lua	/^function message(mesgt)$/;"	f
message_	src/jsoncpp/include/json/reader.h	/^         std::string message_;$/;"	m	class:Json::Reader::ErrorInfo
metadata	include/fmod/fmod_codec.h	/^    FMOD_CODEC_METADATACALLBACK metadata;      \/* [out] This will return a callable FMOD metadata function to use from codec.  *\/$/;"	m	struct:FMOD_CODEC_STATE
metaobjects	src/core/engine.h	/^    QHash<QString, const QMetaObject *> metaobjects;$/;"	m	class:Engine
metaobjects	src/package/package.h	/^    QList<const QMetaObject *> metaobjects;$/;"	m	class:Package
metat.__index:auth	lua/lib/socket/smtp.lua	/^function metat.__index:auth(user, password, ext)$/;"	f
metat.__index:check	lua/lib/socket/tp.lua	/^function metat.__index:check(ok)$/;"	f
metat.__index:close	lua/lib/socket/ftp.lua	/^function metat.__index:close()$/;"	f
metat.__index:close	lua/lib/socket/http.lua	/^function metat.__index:close()$/;"	f
metat.__index:close	lua/lib/socket/smtp.lua	/^function metat.__index:close()$/;"	f
metat.__index:close	lua/lib/socket/tp.lua	/^function metat.__index:close()$/;"	f
metat.__index:command	lua/lib/socket/tp.lua	/^function metat.__index:command(cmd, arg)$/;"	f
metat.__index:cwd	lua/lib/socket/ftp.lua	/^function metat.__index:cwd(dir)$/;"	f
metat.__index:data	lua/lib/socket/smtp.lua	/^function metat.__index:data(src, step)$/;"	f
metat.__index:dirty	lua/lib/socket/tp.lua	/^function metat.__index:dirty()$/;"	f
metat.__index:getcontrol	lua/lib/socket/tp.lua	/^function metat.__index:getcontrol()$/;"	f
metat.__index:getfd	lua/lib/socket/tp.lua	/^function metat.__index:getfd()$/;"	f
metat.__index:greet	lua/lib/socket/ftp.lua	/^function metat.__index:greet()$/;"	f
metat.__index:greet	lua/lib/socket/smtp.lua	/^function metat.__index:greet(domain)$/;"	f
metat.__index:login	lua/lib/socket/ftp.lua	/^function metat.__index:login(user, password)$/;"	f
metat.__index:login	lua/lib/socket/smtp.lua	/^function metat.__index:login(user, password)$/;"	f
metat.__index:mail	lua/lib/socket/smtp.lua	/^function metat.__index:mail(from)$/;"	f
metat.__index:pasv	lua/lib/socket/ftp.lua	/^function metat.__index:pasv()$/;"	f
metat.__index:pasvconnect	lua/lib/socket/ftp.lua	/^function metat.__index:pasvconnect()$/;"	f
metat.__index:plain	lua/lib/socket/smtp.lua	/^function metat.__index:plain(user, password)$/;"	f
metat.__index:port	lua/lib/socket/ftp.lua	/^function metat.__index:port(ip, port)$/;"	f
metat.__index:portconnect	lua/lib/socket/ftp.lua	/^function metat.__index:portconnect()$/;"	f
metat.__index:quit	lua/lib/socket/ftp.lua	/^function metat.__index:quit()$/;"	f
metat.__index:quit	lua/lib/socket/smtp.lua	/^function metat.__index:quit()$/;"	f
metat.__index:rcpt	lua/lib/socket/smtp.lua	/^function metat.__index:rcpt(to)$/;"	f
metat.__index:receive	lua/lib/socket/ftp.lua	/^function metat.__index:receive(recvt)$/;"	f
metat.__index:receive	lua/lib/socket/tp.lua	/^function metat.__index:receive(pat)$/;"	f
metat.__index:receive09body	lua/lib/socket/http.lua	/^function metat.__index:receive09body(status, sink, step)$/;"	f
metat.__index:receivebody	lua/lib/socket/http.lua	/^function metat.__index:receivebody(headers, sink, step)$/;"	f
metat.__index:receiveheaders	lua/lib/socket/http.lua	/^function metat.__index:receiveheaders()$/;"	f
metat.__index:receivestatusline	lua/lib/socket/http.lua	/^function metat.__index:receivestatusline()$/;"	f
metat.__index:send	lua/lib/socket/ftp.lua	/^function metat.__index:send(sendt)$/;"	f
metat.__index:send	lua/lib/socket/smtp.lua	/^function metat.__index:send(mailt)$/;"	f
metat.__index:send	lua/lib/socket/tp.lua	/^function metat.__index:send(data)$/;"	f
metat.__index:sendbody	lua/lib/socket/http.lua	/^function metat.__index:sendbody(headers, source, step)$/;"	f
metat.__index:sendheaders	lua/lib/socket/http.lua	/^function metat.__index:sendheaders(headers)$/;"	f
metat.__index:sendrequestline	lua/lib/socket/http.lua	/^function metat.__index:sendrequestline(method, uri)$/;"	f
metat.__index:sink	lua/lib/socket/tp.lua	/^function metat.__index:sink(snk, pat)$/;"	f
metat.__index:source	lua/lib/socket/tp.lua	/^function metat.__index:source(source, step)$/;"	f
metat.__index:type	lua/lib/socket/ftp.lua	/^function metat.__index:type(type)$/;"	f
metatable	src/lua/lobject.h	/^    struct Table *metatable;$/;"	m	struct:Udata::__anon92	typeref:struct:Udata::__anon92::Table
metatable	src/lua/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Table	typeref:struct:Table::Table
method	swig/sanguosha_wrap.cxx	/^  lua_CFunction   method;$/;"	m	struct:__anon147	file:
methods	swig/sanguosha_wrap.cxx	/^  swig_lua_method   *methods;$/;"	m	struct:swig_lua_class	file:
metric_Data_Format	include/freetype/freetype/tttables.h	/^    FT_Short   metric_Data_Format;$/;"	m	struct:TT_HoriHeader_
metric_Data_Format	include/freetype/freetype/tttables.h	/^    FT_Short   metric_Data_Format;$/;"	m	struct:TT_VertHeader_
metrics	include/freetype/freetype/freetype.h	/^    FT_Glyph_Metrics  metrics;$/;"	m	struct:FT_GlyphSlotRec_
metrics	include/freetype/freetype/freetype.h	/^    FT_Size_Metrics   metrics;   \/* size metrics                    *\/$/;"	m	struct:FT_SizeRec_
metrics	include/freetype/freetype/internal/tttypes.h	/^    TT_SBit_MetricsRec  metrics;$/;"	m	struct:TT_SBit_RangeRec_
metrics_only	include/freetype/freetype/internal/psaux.h	/^    FT_Bool         metrics_only;$/;"	m	struct:T1_BuilderRec_
middle	src/dialog/cardeditor.h	/^    QPixmap up, middle, down;$/;"	m	class:SkillBox
middle_height	src/dialog/cardeditor.h	/^    int middle_height;$/;"	m	class:SkillBox
middle_y	src/ui/cardcontainer.h	/^    static const int middle_y = 173;$/;"	m	class:GuanxingBox
min	include/fmod/fmod.h	/^    int min[100];                   \/* [r] The start offset of each track in minutes *\/$/;"	m	struct:FMOD_CDTOC
min	include/fmod/fmod_dsp.h	/^    float       min;                                \/* [w] Minimum value of the parameter (ie 100.0). *\/$/;"	m	struct:FMOD_DSP_PARAMETERDESC
min	include/js.h	/^  float min       [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
min	src/dialog/distanceviewdialog.cpp	/^    QLineEdit *min;$/;"	m	struct:DistanceViewDialogUI	file:
minInt	src/jsoncpp/include/json/value.h	/^      static const Int minInt;$/;"	m	class:Json::Value
minInt	src/jsoncpp/src/json_value.cpp	/^const Int Value::minInt = Int( ~(UInt(-1)\/2) );$/;"	m	class:Json::Value	file:
minInt64	src/jsoncpp/include/json/value.h	/^      static const Int64 minInt64;$/;"	m	class:Json::Value
minInt64	src/jsoncpp/src/json_value.cpp	/^const Int64 Value::minInt64 = Int64( ~(UInt64(-1)\/2) );$/;"	m	class:Json::Value	file:
minLargestInt	src/jsoncpp/include/json/value.h	/^      static const LargestInt minLargestInt;$/;"	m	class:Json::Value
minLargestInt	src/jsoncpp/src/json_value.cpp	/^const LargestInt Value::minLargestInt = LargestInt( ~(LargestUInt(-1)\/2) );$/;"	m	class:Json::Value	file:
minMemType1	include/freetype/freetype/tttables.h	/^    FT_ULong  minMemType1;$/;"	m	struct:TT_Postscript_
minMemType42	include/freetype/freetype/tttables.h	/^    FT_ULong  minMemType42;$/;"	m	struct:TT_Postscript_
min_Bottom_Side_Bearing	include/freetype/freetype/tttables.h	/^    FT_Short   min_Bottom_Side_Bearing; \/* minimum right-sb or bottom-sb   *\/$/;"	m	struct:TT_VertHeader_
min_Left_Side_Bearing	include/freetype/freetype/tttables.h	/^    FT_Short   min_Left_Side_Bearing;  \/* minimum left-sb       *\/$/;"	m	struct:TT_HoriHeader_
min_Right_Side_Bearing	include/freetype/freetype/tttables.h	/^    FT_Short   min_Right_Side_Bearing; \/* minimum right-sb      *\/$/;"	m	struct:TT_HoriHeader_
min_Top_Side_Bearing	include/freetype/freetype/tttables.h	/^    FT_Short   min_Top_Side_Bearing;    \/* minimum left-sb or top-sb       *\/$/;"	m	struct:TT_VertHeader_
min_advance_SB	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  min_advance_SB;$/;"	m	struct:TT_SBit_LineMetricsRec_
min_after_BL	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  min_after_BL;$/;"	m	struct:TT_SBit_LineMetricsRec_
min_expand	src/lua/lstrlib.c	/^static const char *min_expand (MatchState *ms, const char *s,$/;"	f	file:
min_feature	include/freetype/freetype/t1tables.h	/^    FT_Short   min_feature[2];$/;"	m	struct:PS_PrivateRec_
min_kern	include/freetype/freetype/internal/t1types.h	/^    FT_Fixed  min_kern;$/;"	m	struct:AFM_TrackKernRec_
min_num	src/client/client.h	/^    int min_num;$/;"	m	class:Client
min_origin_SB	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  min_origin_SB;$/;"	m	struct:TT_SBit_LineMetricsRec_
min_ptsize	include/freetype/freetype/internal/t1types.h	/^    FT_Fixed  min_ptsize;$/;"	m	struct:AFM_TrackKernRec_
mingce_skill.getTurnUseCard	lua/ai/yjcm-ai.lua	/^mingce_skill.getTurnUseCard=function(self)$/;"	f
mini_scene_ComboBox	src/server/server.h	/^    QComboBox *mini_scene_ComboBox;$/;"	m	class:ServerDialog
mini_scene_button	src/server/server.h	/^    QPushButton *mini_scene_button;$/;"	m	class:ServerDialog
minidump_	src/breakpad/google_breakpad/processor/minidump.h	/^  Minidump* minidump_;$/;"	m	class:google_breakpad::MinidumpObject
minidump_file_	src/breakpad/processor/minidump_unittest.cc	/^  string minidump_file_;$/;"	m	class:__anon86::MinidumpTest	file:
minidump_size	src/breakpad/google_breakpad/common/minidump_size.h	/^class minidump_size {$/;"	c	namespace:google_breakpad
minidump_size	src/breakpad/google_breakpad/common/minidump_size.h	/^class minidump_size<MDCVInfoPDB20> {$/;"	c	namespace:google_breakpad
minidump_size	src/breakpad/google_breakpad/common/minidump_size.h	/^class minidump_size<MDCVInfoPDB70> {$/;"	c	namespace:google_breakpad
minidump_size	src/breakpad/google_breakpad/common/minidump_size.h	/^class minidump_size<MDImageDebugMisc> {$/;"	c	namespace:google_breakpad
minidump_size	src/breakpad/google_breakpad/common/minidump_size.h	/^class minidump_size<MDRawMemoryList> {$/;"	c	namespace:google_breakpad
minidump_size	src/breakpad/google_breakpad/common/minidump_size.h	/^class minidump_size<MDRawModule> {$/;"	c	namespace:google_breakpad
minidump_size	src/breakpad/google_breakpad/common/minidump_size.h	/^class minidump_size<MDRawModuleList> {$/;"	c	namespace:google_breakpad
minidump_size	src/breakpad/google_breakpad/common/minidump_size.h	/^class minidump_size<MDRawThreadList> {$/;"	c	namespace:google_breakpad
minidump_size	src/breakpad/google_breakpad/common/minidump_size.h	/^class minidump_size<MDString> {$/;"	c	namespace:google_breakpad
minidump_write_dump_	src/breakpad/client/windows/handler/exception_handler.h	/^  MiniDumpWriteDump_type minidump_write_dump_;$/;"	m	class:google_breakpad::ExceptionHandler
minimum	include/freetype/freetype/ftmm.h	/^    FT_Fixed    minimum;$/;"	m	struct:FT_Var_Axis_
minimum	include/freetype/freetype/ftmm.h	/^    FT_Long     minimum;$/;"	m	struct:FT_MM_Axis_
minmidigranularity	include/fmod/fmod.h	/^    unsigned int                   minmidigranularity; \/* [w] Optional. Specify 0 to ignore. Allows you to set a minimum desired MIDI mixer granularity. Values smaller than 512 give greater than default accuracy at the cost of more CPU and vice versa. Specify 0 for default (512 samples). *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
minnum	src/client/aux-skills.h	/^    int minnum;$/;"	m	class:DiscardSkill
minor_version	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t        minor_version;$/;"	m	struct:__anon39
misc_info	src/breakpad/google_breakpad/processor/minidump.h	/^  const MDRawMiscInfo* misc_info() const {$/;"	f	class:google_breakpad::MinidumpMiscInfo
misc_info_	src/breakpad/google_breakpad/processor/minidump.h	/^  MDRawMiscInfo misc_info_;$/;"	m	class:google_breakpad::MinidumpMiscInfo
misc_record	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDLocationDescriptor misc_record;$/;"	m	struct:__anon26
misc_record_	src/breakpad/google_breakpad/processor/minidump.h	/^  vector<u_int8_t>* misc_record_;$/;"	m	class:google_breakpad::MinidumpModule
mkfuncname	src/lua/loadlib.c	/^static const char *mkfuncname (lua_State *L, const char *modname) {$/;"	f	file:
mock_handler	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  MockCFIRuleParserHandler mock_handler;$/;"	m	class:CFIParserFixture	file:
mode	include/fmod/fmod_codec.h	/^    FMOD_MODE          mode;          \/* [in] Mode to determine whether the sound should by default load as looping, non looping, 2d or 3d. *\/$/;"	m	struct:FMOD_CODEC_WAVEFORMAT
mode	src/server/room.h	/^    QString mode;$/;"	m	class:Room
mode_group	src/server/server.h	/^    QButtonGroup *mode_group;$/;"	m	class:ServerDialog
modes	src/core/engine.h	/^    QMap<QString, QString> modes;$/;"	m	class:Engine
modinit	src/lua/loadlib.c	/^static void modinit (lua_State *L, const char *modname) {$/;"	f	file:
module	src/breakpad/google_breakpad/processor/minidump.h	/^  const MDRawModule* module() const { return valid_ ? &module_ : NULL; }$/;"	f	class:google_breakpad::MinidumpModule
module	src/breakpad/google_breakpad/processor/stack_frame.h	/^  const CodeModule *module;$/;"	m	struct:google_breakpad::StackFrame
module1	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  MockCodeModule module1;$/;"	m	class:StackwalkerAMD64Fixture	file:
module1	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  MockCodeModule module1;$/;"	m	class:StackwalkerARMFixture	file:
module1	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  MockCodeModule module1;$/;"	m	class:StackwalkerX86Fixture	file:
module2	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  MockCodeModule module2;$/;"	m	class:StackwalkerAMD64Fixture	file:
module2	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  MockCodeModule module2;$/;"	m	class:StackwalkerARMFixture	file:
module2	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  MockCodeModule module2;$/;"	m	class:StackwalkerX86Fixture	file:
module3	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  MockCodeModule module3;$/;"	m	class:StackwalkerX86Fixture	file:
module4	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  MockCodeModule module4;$/;"	m	class:StackwalkerX86Fixture	file:
module5	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  MockCodeModule module5;$/;"	m	class:StackwalkerX86Fixture	file:
module6	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  MockCodeModule module6;$/;"	m	class:StackwalkerX86Fixture	file:
module_	src/breakpad/google_breakpad/processor/minidump.h	/^  MDRawModule       module_;$/;"	m	class:google_breakpad::MinidumpModule
module_comparer	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  ModuleComparer module_comparer;$/;"	m	class:__anon73::TestFastSourceLineResolver	file:
module_count	src/breakpad/google_breakpad/processor/minidump.h	/^  virtual unsigned int module_count() const {$/;"	f	class:google_breakpad::MinidumpModuleList
module_count	src/breakpad/processor/basic_code_modules.cc	/^unsigned int BasicCodeModules::module_count() const {$/;"	f	class:google_breakpad::BasicCodeModules
module_count	src/breakpad/processor/stackwalker_unittest_utils.h	/^  unsigned int module_count() const { return modules_.size(); }$/;"	f	class:MockCodeModules
module_count_	src/breakpad/google_breakpad/processor/minidump.h	/^  u_int32_t module_count_;$/;"	m	class:google_breakpad::MinidumpModuleList
module_done	include/freetype/freetype/ftmodapi.h	/^    FT_Module_Destructor   module_done;$/;"	m	struct:FT_Module_Class_
module_factory_	src/breakpad/google_breakpad/processor/source_line_resolver_base.h	/^  ModuleFactory *module_factory_;$/;"	m	class:google_breakpad::SourceLineResolverBase
module_flags	include/freetype/freetype/ftmodapi.h	/^    FT_ULong               module_flags;$/;"	m	struct:FT_Module_Class_
module_init	include/freetype/freetype/ftmodapi.h	/^    FT_Module_Constructor  module_init;$/;"	m	struct:FT_Module_Class_
module_interface	include/freetype/freetype/ftmodapi.h	/^    const void*            module_interface;$/;"	m	struct:FT_Module_Class_
module_list_	src/breakpad/processor/synth_minidump.h	/^  List<Module> module_list_;$/;"	m	class:google_breakpad::SynthMinidump::Dump
module_load_sync_	src/breakpad/client/windows/crash_generation/minidump_generator.h	/^  CRITICAL_SECTION module_load_sync_;$/;"	m	class:google_breakpad::MinidumpGenerator
module_name	include/freetype/freetype/ftmodapi.h	/^    const FT_String*       module_name;$/;"	m	struct:FT_Module_Class_
module_name_rva	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDRVA                module_name_rva;  \/* MDString, pathname or filename *\/$/;"	m	struct:__anon26
module_requires	include/freetype/freetype/ftmodapi.h	/^    FT_Fixed               module_requires;$/;"	m	struct:FT_Module_Class_
module_size	include/freetype/freetype/ftmodapi.h	/^    FT_Long                module_size;$/;"	m	struct:FT_Module_Class_
module_valid_	src/breakpad/google_breakpad/processor/minidump.h	/^  bool              module_valid_;$/;"	m	class:google_breakpad::MinidumpModule
module_version	include/freetype/freetype/ftmodapi.h	/^    FT_Fixed               module_version;$/;"	m	struct:FT_Module_Class_
modules	include/freetype/freetype/internal/ftobjs.h	/^    FT_Module          modules[FT_MAX_MODULES];  \/* module objects  *\/$/;"	m	struct:FT_LibraryRec_
modules	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDRawModule modules[1];$/;"	m	struct:__anon32
modules	src/breakpad/google_breakpad/processor/process_state.h	/^  const CodeModules* modules() const { return modules_; }$/;"	f	class:google_breakpad::ProcessState
modules	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  MockCodeModules modules;$/;"	m	class:StackwalkerAMD64Fixture	file:
modules	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  MockCodeModules modules;$/;"	m	class:StackwalkerARMFixture	file:
modules	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  MockCodeModules modules;$/;"	m	class:StackwalkerX86Fixture	file:
modules_	src/breakpad/google_breakpad/processor/minidump.h	/^  MinidumpModules *modules_;$/;"	m	class:google_breakpad::MinidumpModuleList
modules_	src/breakpad/google_breakpad/processor/process_state.h	/^  const CodeModules *modules_;$/;"	m	class:google_breakpad::ProcessState
modules_	src/breakpad/google_breakpad/processor/source_line_resolver_base.h	/^  ModuleMap *modules_;$/;"	m	class:google_breakpad::SourceLineResolverBase
modules_	src/breakpad/google_breakpad/processor/stackwalker.h	/^  const CodeModules *modules_;$/;"	m	class:google_breakpad::Stackwalker
modules_	src/breakpad/processor/stackwalker_unittest_utils.h	/^  ModuleVector modules_;$/;"	m	class:MockCodeModules
mouseCanClick	src/ui/chatwidget.cpp	/^int MyPixmapItem::mouseCanClick(int x, int y)$/;"	f	class:MyPixmapItem
mouseDoubleClickEvent	src/dialog/cardeditor.cpp	/^    virtual void mouseDoubleClickEvent(QGraphicsSceneMouseEvent *){$/;"	f	class:SkillTitle
mouseDoubleClickEvent	src/dialog/choosegeneraldialog.cpp	/^void OptionButton::mouseDoubleClickEvent(QMouseEvent *){$/;"	f	class:OptionButton
mouseDoubleClickEvent	src/dialog/customassigndialog.h	/^    void mouseDoubleClickEvent(QMouseEvent *)$/;"	f	class:LabelButton
mouseDoubleClickEvent	src/ui/carditem.cpp	/^void CardItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent *event){$/;"	f	class:CardItem
mouseMoveEvent	src/dialog/cardeditor.cpp	/^    virtual void mouseMoveEvent(QGraphicsSceneMouseEvent *event){$/;"	f	class:SkillTitle
mouseMoveEvent	src/dialog/cardeditor.cpp	/^void SkillBox::mouseMoveEvent(QGraphicsSceneMouseEvent *event){$/;"	f	class:SkillBox
mouseMoveEvent	src/ui/carditem.cpp	/^void CardItem::mouseMoveEvent(QGraphicsSceneMouseEvent *mouseEvent){$/;"	f	class:CardItem
mouseMoveEvent	src/ui/roomscene.cpp	/^void RoomScene::mouseMoveEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:RoomScene
mouseOnIcon	src/ui/chatwidget.cpp	/^int MyPixmapItem::mouseOnIcon(int x, int y){$/;"	f	class:MyPixmapItem
mouseOnText	src/ui/chatwidget.cpp	/^int MyPixmapItem::mouseOnText(int x, int y){$/;"	f	class:MyPixmapItem
mousePressEvent	src/dialog/cardeditor.cpp	/^    virtual void mousePressEvent(QGraphicsSceneMouseEvent *event){$/;"	f	class:SkillTitle
mousePressEvent	src/dialog/cardeditor.cpp	/^void SkillBox::mousePressEvent(QGraphicsSceneMouseEvent *event){$/;"	f	class:SkillBox
mousePressEvent	src/dialog/customassigndialog.h	/^    void mousePressEvent(QMouseEvent *)$/;"	f	class:LabelButton
mousePressEvent	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::mousePressEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:PlayerCardContainer
mousePressEvent	src/ui/button.cpp	/^void Button::mousePressEvent(QGraphicsSceneMouseEvent *event){$/;"	f	class:Button
mousePressEvent	src/ui/cardcontainer.cpp	/^void CloseButton::mousePressEvent(QGraphicsSceneMouseEvent *event){$/;"	f	class:CloseButton
mousePressEvent	src/ui/carditem.cpp	/^void CardItem::mousePressEvent(QGraphicsSceneMouseEvent *mouseEvent){$/;"	f	class:CardItem
mousePressEvent	src/ui/chatwidget.cpp	/^void MyPixmapItem::mousePressEvent ( QGraphicsSceneMouseEvent * event )$/;"	f	class:MyPixmapItem
mousePressEvent	src/ui/dashboard.cpp	/^void Dashboard::mousePressEvent(QGraphicsSceneMouseEvent *){$/;"	f	class:Dashboard
mousePressEvent	src/ui/qsanbutton.cpp	/^void QSanButton::mousePressEvent(QGraphicsSceneMouseEvent *event){$/;"	f	class:QSanButton
mousePressEvent	src/ui/rolecombobox.cpp	/^void RoleComboBoxItem::mousePressEvent(QGraphicsSceneMouseEvent *event){$/;"	f	class:RoleComboBoxItem
mousePressEvent	src/ui/roomscene.cpp	/^void RoomScene::mousePressEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:RoomScene
mouseReleaseEvent	src/dialog/cardeditor.cpp	/^void SkillBox::mouseReleaseEvent(QGraphicsSceneMouseEvent *){$/;"	f	class:SkillBox
mouseReleaseEvent	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::mouseReleaseEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:PlayerCardContainer
mouseReleaseEvent	src/ui/button.cpp	/^void Button::mouseReleaseEvent(QGraphicsSceneMouseEvent *){$/;"	f	class:Button
mouseReleaseEvent	src/ui/cardcontainer.cpp	/^void CloseButton::mouseReleaseEvent(QGraphicsSceneMouseEvent *){$/;"	f	class:CloseButton
mouseReleaseEvent	src/ui/carditem.cpp	/^void CardItem::mouseReleaseEvent(QGraphicsSceneMouseEvent *mouseEvent){$/;"	f	class:CardItem
mouseReleaseEvent	src/ui/dashboard.cpp	/^void Dashboard::mouseReleaseEvent(QGraphicsSceneMouseEvent *mouseEvent)$/;"	f	class:Dashboard
mouseReleaseEvent	src/ui/qsanbutton.cpp	/^void QSanButton::mouseReleaseEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:QSanButton
mouseReleaseEvent	src/ui/roomscene.cpp	/^void RoomScene::mouseReleaseEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:RoomScene
movable	src/package/standard.h	/^    bool movable;$/;"	m	class:DelayedTrick
moveCardTo	src/server/room.cpp	/^void Room::moveCardTo(const Card* card, ServerPlayer* dstPlayer, Player::Place dstPlace, bool forceMoveVisible)$/;"	f	class:Room
moveCardTo	src/server/room.cpp	/^void Room::moveCardTo(const Card* card, ServerPlayer* dstPlayer, Player::Place dstPlace,$/;"	f	class:Room
moveCardTo	src/server/room.cpp	/^void Room::moveCardTo(const Card* card, ServerPlayer* srcPlayer, ServerPlayer* dstPlayer, Player::Place dstPlace, $/;"	f	class:Room
moveCardTo	src/server/room.cpp	/^void Room::moveCardTo(const Card* card, ServerPlayer* srcPlayer, ServerPlayer* dstPlayer, Player::Place dstPlace,$/;"	f	class:Room
moveCards	src/server/room.cpp	/^void Room::moveCards(CardsMoveStruct cards_move, $/;"	f	class:Room
moveCards	src/server/room.cpp	/^void Room::moveCards(QList<CardsMoveStruct> cards_moves, bool forceMoveVisible, bool enforceOrigin){    $/;"	f	class:Room
moveCardsAtomic	src/server/room.cpp	/^void Room::moveCardsAtomic(CardsMoveStruct cards_move, bool forceMoveVisible){$/;"	f	class:Room
moveCardsAtomic	src/server/room.cpp	/^void Room::moveCardsAtomic(QList<CardsMoveStruct> cards_moves, bool forceMoveVisible)$/;"	f	class:Room
moveDown	src/dialog/roleassigndialog.cpp	/^void RoleAssignDialog::moveDown(){$/;"	f	class:RoleAssignDialog
moveFocus	src/client/client.cpp	/^void Client::moveFocus(const Json::Value &focus){$/;"	f	class:Client
moveFocus	src/ui/roomscene.cpp	/^void RoomScene::moveFocus(const QString &who, Countdown countdown){$/;"	f	class:RoomScene
moveUp	src/dialog/roleassigndialog.cpp	/^void RoleAssignDialog::moveUp(){$/;"	f	class:RoleAssignDialog
move_list_check	src/dialog/customassigndialog.h	/^    QCheckBox *move_list_check, *move_pile_check;$/;"	m	class:CustomAssignDialog
move_list_down_button	src/dialog/customassigndialog.h	/^    QPushButton *move_list_up_button, *move_list_down_button;$/;"	m	class:CustomAssignDialog
move_list_up_button	src/dialog/customassigndialog.h	/^    QPushButton *move_list_up_button, *move_list_down_button;$/;"	m	class:CustomAssignDialog
move_pile_check	src/dialog/customassigndialog.h	/^    QCheckBox *move_list_check, *move_pile_check;$/;"	m	class:CustomAssignDialog
move_to	include/freetype/freetype/ftimage.h	/^    FT_Outline_MoveToFunc   move_to;$/;"	m	struct:FT_Outline_Funcs_
mq	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int32_t             mq;      \/* Multiply\/Quotient (PPC 601, POWER only) *\/$/;"	m	struct:__anon11
msg_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  ProtocolMessage msg_;$/;"	m	class:google_breakpad::CrashGenerationServer
mt	src/lua/lstate.h	/^  struct Table *mt[NUM_TAGS];  \/* metatables for basic types *\/$/;"	m	struct:global_State	typeref:struct:global_State::Table
multiple	src/core/structs.h	/^    bool multiple;$/;"	m	struct:CardEffectStruct
musicSystemCacheDelay	include/fmod/fmod.h	/^    unsigned int    musicSystemCacheDelay;      \/* [r\/w] Optional. Specify 0 to ignore. The delay the music system should allow for loading a sample from disk (in milliseconds). Default = 400 ms. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
musicsystem	include/fmod/fmod_memoryinfo.h	/^    unsigned int musicsystem;                    \/* [out] MusicSystem and various internals *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
mute	src/core/card.h	/^    bool mute;$/;"	m	class:Card
mute	src/ui/button.h	/^    bool mute;$/;"	m	class:Button
mutex	src/util/recorder.h	/^    QMutex mutex;$/;"	m	class:Replayer
mx_csr	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int32_t  mx_csr;$/;"	m	struct:__anon55
mx_csr	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int32_t  mx_csr;$/;"	m	struct:__anon56
mx_csr_mask	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int32_t  mx_csr_mask;$/;"	m	struct:__anon55
n	src/core/skill.h	/^    int n;$/;"	m	class:MarkAssignSkill
n	src/lua/lobject.h	/^  lua_Number n;$/;"	m	union:__anon90
n	src/lua/lzio.h	/^  size_t n;			\/* bytes still unread *\/$/;"	m	struct:Zio
n	src/lua/lzio.h	/^  size_t n;$/;"	m	struct:Mbuffer
n	src/package/yjcm-package.h	/^    int n;$/;"	m	class:Shangshi
nCcalls	src/lua/lstate.h	/^  unsigned short nCcalls;  \/* number of nested C calls *\/$/;"	m	struct:lua_State
n_contours	include/freetype/freetype/ftimage.h	/^    short       n_contours;      \/* number of contours in glyph        *\/$/;"	m	struct:FT_Outline_
n_contours	include/freetype/freetype/internal/tttypes.h	/^    FT_Short         n_contours;$/;"	m	struct:TT_LoaderRec_
n_contours	include/freetype/freetype/internal/tttypes.h	/^    FT_Short    n_contours;  \/* number of contours          *\/$/;"	m	struct:TT_GlyphZoneRec_
n_points	include/freetype/freetype/ftimage.h	/^    short       n_points;        \/* number of points in the glyph      *\/$/;"	m	struct:FT_Outline_
n_points	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort   n_points;    \/* number of points in zone    *\/$/;"	m	struct:TT_GlyphZoneRec_
na	src/lua/lparser.c	/^  int na;  \/* total number of array elements *\/$/;"	m	struct:ConsControl	file:
nactvar	src/lua/lparser.c	/^  lu_byte nactvar;  \/* # active locals outside the breakable structure *\/$/;"	m	struct:BlockCnt	file:
nactvar	src/lua/lparser.h	/^  lu_byte nactvar;  \/* number of active local variables *\/$/;"	m	struct:FuncState
name	include/fmod/fmod.h	/^    char             *name;         \/* [r] The name of this tag i.e. "TITLE", "ARTIST" etc. *\/$/;"	m	struct:FMOD_TAG
name	include/fmod/fmod_codec.h	/^    char               name[256];     \/* [in] Name of sound.*\/$/;"	m	struct:FMOD_CODEC_WAVEFORMAT
name	include/fmod/fmod_codec.h	/^    const char                     *name;            \/* [in] Name of the codec. *\/$/;"	m	struct:FMOD_CODEC_DESCRIPTION
name	include/fmod/fmod_dsp.h	/^    char                         name[32];           \/* [w] Name of the unit to be displayed in the network. *\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
name	include/fmod/fmod_dsp.h	/^    char        name[16];                           \/* [w] Name of the parameter to be displayed (ie "Cutoff frequency"). *\/$/;"	m	struct:FMOD_DSP_PARAMETERDESC
name	include/fmod/fmod_output.h	/^    const char                        *name;                  \/* [in] Name of the output. *\/$/;"	m	struct:FMOD_OUTPUT_DESCRIPTION
name	include/freetype/freetype/ftmm.h	/^    FT_String*  name;$/;"	m	struct:FT_MM_Axis_
name	include/freetype/freetype/ftmm.h	/^    FT_String*  name;$/;"	m	struct:FT_Var_Axis_
name	include/js.h	/^  char         name [ 128 ] ;$/;"	m	class:jsJoystick
name	src/breakpad/client/windows/common/ipc_protocol.h	/^  wchar_t name[kNameMaxLength];$/;"	m	struct:google_breakpad::CustomInfoEntry
name	src/breakpad/processor/cfi_frame_info.h	/^    const char *name;$/;"	m	struct:google_breakpad::SimpleCFIWalker::RegisterSet
name	src/breakpad/processor/source_line_resolver_base_types.h	/^  string name;$/;"	m	struct:google_breakpad::SourceLineResolverBase::Function
name	src/breakpad/processor/source_line_resolver_base_types.h	/^  string name;$/;"	m	struct:google_breakpad::SourceLineResolverBase::PublicSymbol
name	src/dialog/cardeditor.h	/^    BlackEdgeTextItem *name, *title;$/;"	m	class:CardScene
name	src/dialog/cardeditor.h	/^    BlackEdgeTextItem *name;$/;"	m	class:AvatarRectItem
name	src/lua/lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg
name	src/lua/ldo.c	/^  const char *name;$/;"	m	struct:SParser	file:
name	src/lua/lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug
name	src/lua/lundump.c	/^ const char* name;$/;"	m	struct:__anon102	file:
name	src/ui/sprite.h	/^        QString name;$/;"	m	struct:Sprite::AnimationLine
name	swig/sanguosha_wrap.cxx	/^    char *name;$/;"	m	struct:__anon146	file:
name	swig/sanguosha_wrap.cxx	/^  const char             *name;			\/* mangled name of this type *\/$/;"	m	struct:swig_type_info	file:
name	swig/sanguosha_wrap.cxx	/^  const char     *name;$/;"	m	struct:__anon147	file:
name	swig/sanguosha_wrap.cxx	/^  const char     *name;$/;"	m	struct:__anon148	file:
name	swig/sanguosha_wrap.cxx	/^  const char    *name;$/;"	m	struct:swig_lua_class	file:
name	swig/sanguosha_wrap.cxx	/^  const char *name;$/;"	m	struct:__anon145	file:
name2objname	src/server/server.h	/^    QMultiHash<QString, QString> name2objname;$/;"	m	class:Server
name2photo	src/ui/roomscene.h	/^    QMap<QString, Photo*> name2photo;$/;"	m	class:RoomScene
nameID	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  nameID;$/;"	m	struct:TT_NameEntryRec_
name_	src/breakpad/google_breakpad/processor/minidump.h	/^  const string*     name_;$/;"	m	class:google_breakpad::MinidumpModule
name_	src/breakpad/processor/basic_source_line_resolver_types.h	/^  string name_;$/;"	m	class:google_breakpad::BasicSourceLineResolver::Module
name_	src/breakpad/processor/cfi_frame_info.h	/^  string name_, expression_;$/;"	m	class:google_breakpad::CFIRuleParser
name_	src/breakpad/processor/fast_source_line_resolver_types.h	/^  string name_;$/;"	m	class:google_breakpad::FastSourceLineResolver::Module
name_box	src/dialog/cardeditor.h	/^    QGraphicsRectItem *name_box;$/;"	m	class:AvatarRectItem
name_id	include/freetype/freetype/ftsnames.h	/^    FT_UShort  name_id;$/;"	m	struct:FT_SfntName_
name_label	src/client/clientstruct.h	/^    QLabel *name_label;$/;"	m	class:ServerInfoWidget
name_table	include/freetype/freetype/internal/tttypes.h	/^    TT_NameTableRec       name_table;   \/* name table              *\/$/;"	m	struct:TT_FaceRec_
named_parameters	lua/lib/sqlite3.lua	/^  local function named_parameters(handles)$/;"	f
namedstyle	include/freetype/freetype/ftmm.h	/^    FT_Var_Named_Style*  namedstyle;$/;"	m	struct:FT_MM_Var_
names	include/freetype/freetype/internal/tttypes.h	/^    TT_NameEntryRec*  names;$/;"	m	struct:TT_NameTableRec_
names	include/freetype/freetype/internal/tttypes.h	/^    } names;$/;"	m	struct:TT_Post_NamesRec_	typeref:union:TT_Post_NamesRec_::__anon103
namewhat	src/lua/lua.h	/^  const char *namewhat;	\/* (n) `global', `local', `field', `method' *\/$/;"	m	struct:lua_Debug
nationalities	src/dialog/customassigndialog.h	/^    QComboBox *nationalities;$/;"	m	class:CustomAssignDialog
nature	src/core/structs.h	/^    DamageStruct::Nature nature;$/;"	m	struct:SlashEffectStruct
nature	src/core/structs.h	/^    Nature nature;$/;"	m	struct:DamageStruct
nature	src/package/standard.h	/^    DamageStruct::Nature nature;$/;"	m	class:Slash
ndv_idx	include/freetype/freetype/internal/t1types.h	/^    FT_Int           ndv_idx;$/;"	m	struct:T1_FaceRec_
need_value	src/lua/lcode.c	/^static int need_value (FuncState *fs, int list) {$/;"	f	file:
negative	src/core/structs.h	/^    bool negative;$/;"	m	struct:JudgeStruct
neofanjian_skill.getTurnUseCard	lua/ai/ling-ai.lua	/^neofanjian_skill.getTurnUseCard=function(self)$/;"	f
neoluoyi_skill.getTurnUseCard	lua/ai/ling-ai.lua	/^neoluoyi_skill.getTurnUseCard=function(self)$/;"	f
networkDelayTest	src/client/client.cpp	/^void Client::networkDelayTest(const QString &){$/;"	f	class:Client
networkDelayTestCommand	src/server/room.cpp	/^void Room::networkDelayTestCommand(ServerPlayer *player, const QString &){$/;"	f	class:Room
networkError	src/dialog/mainwindow.cpp	/^void MainWindow::networkError(const QString &error_msg){$/;"	f	class:MainWindow
never_shown	src/core/general.h	/^    bool never_shown;$/;"	m	class:General
new_3v3_radiobutton	src/server/server.h	/^    QRadioButton *new_3v3_radiobutton;$/;"	m	class:ServerDialog
new_localvar	src/lua/lparser.c	/^static void new_localvar (LexState *ls, TString *name, int n) {$/;"	f	file:
new_localvarliteral	src/lua/lparser.c	156;"	d	file:
newboundary	lua/lib/socket/smtp.lua	/^local function newboundary()$/;"	f
newfenv	src/lua/liolib.c	/^static void newfenv (lua_State *L, lua_CFunction cls) {$/;"	f	file:
newfile	src/lua/liolib.c	/^static FILE **newfile (lua_State *L) {$/;"	f	file:
newkey	src/lua/ltable.c	/^static TValue *newkey (lua_State *L, Table *t, const TValue *key) {$/;"	f	file:
newlstr	src/lua/lstring.c	/^static TString *newlstr (lua_State *L, const char *str, size_t l,$/;"	f	file:
next	include/freetype/freetype/freetype.h	/^    FT_GlyphSlot      next;$/;"	m	struct:FT_GlyphSlotRec_
next	include/freetype/freetype/fttypes.h	/^    FT_ListNode  next;$/;"	m	struct:FT_ListNodeRec_
next	src/lua/llex.c	28;"	d	file:
next	src/lua/lobject.h	/^      struct UpVal *next;$/;"	m	struct:UpVal::__anon93::__anon94	typeref:struct:UpVal::__anon93::__anon94::UpVal
next	src/lua/lobject.h	/^    struct Node *next;  \/* for chaining *\/$/;"	m	struct:TKey::__anon95	typeref:struct:TKey::__anon95::Node
next	src/server/serverplayer.h	/^    ServerPlayer *next;$/;"	m	class:ServerPlayer
next	swig/sanguosha_wrap.cxx	/^  struct swig_cast_info  *next;			\/* pointer to next cast in linked list *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
next	swig/sanguosha_wrap.cxx	/^  struct swig_module_info *next;		\/* Pointer to next element in circularly linked list *\/$/;"	m	struct:swig_module_info	typeref:struct:swig_module_info::swig_module_info	file:
next_	src/breakpad/processor/linked_ptr.h	/^  mutable linked_ptr_internal const* next_;$/;"	m	class:google_breakpad::linked_ptr_internal
next_	src/jsoncpp/include/json/value.h	/^      ValueInternalLink *next_;$/;"	m	class:Json::ValueInternalLink
next_	src/jsoncpp/src/json_batchallocator.h	/^      BatchInfo *next_;$/;"	m	struct:Json::BatchAllocator::BatchInfo
next_minidump_id_	src/breakpad/client/windows/handler/exception_handler.h	/^  wstring next_minidump_id_;$/;"	m	class:google_breakpad::ExceptionHandler
next_minidump_id_c_	src/breakpad/client/windows/handler/exception_handler.h	/^  const wchar_t* next_minidump_id_c_;$/;"	m	class:google_breakpad::ExceptionHandler
next_minidump_path_	src/breakpad/client/windows/handler/exception_handler.h	/^  wstring next_minidump_path_;$/;"	m	class:google_breakpad::ExceptionHandler
next_minidump_path_c_	src/breakpad/client/windows/handler/exception_handler.h	/^  const wchar_t* next_minidump_path_c_;$/;"	m	class:google_breakpad::ExceptionHandler
ngcotouv	src/lua/lstate.h	157;"	d
nh	src/lua/lparser.c	/^  int nh;  \/* total number of `record' elements *\/$/;"	m	struct:ConsControl	file:
nilK	src/lua/lcode.c	/^static int nilK (FuncState *fs) {$/;"	f	file:
nk	src/lua/lobject.h	/^  } nk;$/;"	m	union:TKey	typeref:struct:TKey::__anon95
nk	src/lua/lparser.h	/^  int nk;  \/* number of elements in `k' *\/$/;"	m	struct:FuncState
nlocvars	src/lua/lparser.h	/^  short nlocvars;  \/* number of elements in `locvars' *\/$/;"	m	struct:FuncState
noDuplication	src/jsoncpp/include/json/value.h	/^            noDuplication = 0,$/;"	e	enum:Json::Value::CZString::DuplicationPolicy
no_recurse	include/freetype/freetype/internal/psaux.h	/^    FT_Bool         no_recurse;$/;"	m	struct:T1_BuilderRec_
no_symbol_modules_	src/breakpad/google_breakpad/processor/stackwalker.h	/^  set<string> no_symbol_modules_;$/;"	m	class:google_breakpad::Stackwalker
node	src/lua/lobject.h	/^  Node *node;$/;"	m	struct:Table
nodes_	src/jsoncpp/include/json/reader.h	/^      Nodes nodes_;$/;"	m	class:Json::Reader
nolimit_checkbox	src/server/server.h	/^    QCheckBox *nolimit_checkbox;$/;"	m	class:ServerDialog
nominal_point_size	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  nominal_point_size;$/;"	m	struct:FT_WinFNT_HeaderRec_
nonblockcallback	include/fmod/fmod.h	/^    FMOD_SOUND_NONBLOCKCALLBACK    nonblockcallback;   \/* [w] Optional. Specify 0 to ignore. Callback for successful completion, or error while loading a sound that used the FMOD_NONBLOCKING flag.*\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
nonblockthreadid	include/fmod/fmod.h	/^    int                            nonblockthreadid;   \/* [w] Optional. Specify 0 to ignore. Specifies a thread index to execute non blocking load on.  Allows for up to 5 threads to be used for loading at once.  This is to avoid one load blocking another.  Maximum value = 4. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
nonlord_list	src/core/engine.h	/^    QStringList lord_list, nonlord_list;$/;"	m	class:Engine
normalize	lua/lib/mime.lua	/^function normalize(marker)$/;"	f
normalizeEOL	src/jsoncpp/src/json_writer.cpp	/^StyledStreamWriter::normalizeEOL( const std::string &text )$/;"	f	class:Json::StyledStreamWriter
normalizeEOL	src/jsoncpp/src/json_writer.cpp	/^StyledWriter::normalizeEOL( const std::string &text )$/;"	f	class:Json::StyledWriter
nosjujian_skill.getTurnUseCard	lua/ai/nostalgia-ai.lua	/^nosjujian_skill.getTurnUseCard=function(self)$/;"	f
nosxuanhuo_skill.getTurnUseCard	lua/ai/nostalgia-ai.lua	/^nosxuanhuo_skill.getTurnUseCard=function(self)$/;"	f
notWorking	include/js.h	/^  int   notWorking    () const { return error ;    }$/;"	f	class:jsJoystick
notice	include/freetype/freetype/t1tables.h	/^    FT_String*  notice;$/;"	m	struct:PS_FontInfoRec_
notifyMoveCards	src/server/room.cpp	/^bool Room::notifyMoveCards(bool isLostPhase, QList<CardsMoveStruct> cards_moves, bool forceVisible)$/;"	f	class:Room
notifyMoveFocus	src/server/room.cpp	/^bool Room::notifyMoveFocus(ServerPlayer* player)$/;"	f	class:Room
notifyMoveFocus	src/server/room.cpp	/^bool Room::notifyMoveFocus(ServerPlayer* player, CommandType command)$/;"	f	class:Room
notifyProperty	src/server/room.cpp	/^bool Room::notifyProperty(ServerPlayer* playerToNotify, const ServerPlayer* propertyOwner, const char *propertyName, const QString &value)$/;"	f	class:Room
notifyResetCard	src/server/room.cpp	/^bool Room::notifyResetCard(ServerPlayer* player, int cardId)$/;"	f	class:Room
notifyRoleChange	src/client/client.cpp	/^void Client::notifyRoleChange(const QString &new_role){$/;"	f	class:Client
notifyUpdateCard	src/server/room.cpp	/^bool Room::notifyUpdateCard(ServerPlayer* player, int cardId, const Card* newCard)$/;"	f	class:Room
np	src/lua/lparser.h	/^  int np;  \/* number of elements in `p' *\/$/;"	m	struct:FuncState
npc	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	/^  u_int64_t     npc;    \/* Next Program Counter register (nPC) *\/$/;"	m	struct:__anon64
nresults	src/lua/lapi.c	/^  int nresults;$/;"	m	struct:CallS	file:
nresults	src/lua/lstate.h	/^  int nresults;  \/* expected number of results from this function *\/$/;"	m	struct:CallInfo
null	lua/lib/ltn12.lua	/^local function null()$/;"	f
null	src/jsoncpp/include/json/value.h	/^      static const Value null;$/;"	m	class:Json::Value
null	src/jsoncpp/src/json_value.cpp	/^const Value Value::null;$/;"	m	class:Json::Value	file:
nullValue	src/jsoncpp/include/json/value.h	/^      nullValue = 0, \/\/\/< 'null' value$/;"	e	enum:Json::ValueType
num	src/client/aux-skills.h	/^    int num;$/;"	m	class:DiscardSkill
numGlyphs	include/freetype/freetype/tttables.h	/^    FT_UShort  numGlyphs;$/;"	m	struct:TT_MaxProfile_
numNameRecords	include/freetype/freetype/internal/tttypes.h	/^    FT_UInt           numNameRecords;$/;"	m	struct:TT_NameTableRec_
numRanges	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort     numRanges;$/;"	m	struct:TT_Gasp_
num_ComboBox	src/dialog/customassigndialog.h	/^    QComboBox *role_ComboBox, *num_ComboBox, *marks_ComboBox;$/;"	m	class:CustomAssignDialog
num_axes	include/js.h	/^  int          num_axes     ;$/;"	m	class:jsJoystick
num_axis	include/freetype/freetype/ftmm.h	/^    FT_UInt              num_axis;$/;"	m	struct:FT_MM_Var_
num_axis	include/freetype/freetype/ftmm.h	/^    FT_UInt     num_axis;$/;"	m	struct:FT_Multi_Master_
num_axis	include/freetype/freetype/t1tables.h	/^    FT_UInt          num_axis;$/;"	m	struct:PS_BlendRec_
num_blue_values	include/freetype/freetype/t1tables.h	/^    FT_Byte    num_blue_values;$/;"	m	struct:PS_PrivateRec_
num_buttons	include/js.h	/^  int          num_buttons  ;$/;"	m	class:jsJoystick
num_charmaps	include/freetype/freetype/freetype.h	/^    FT_Int            num_charmaps;$/;"	m	struct:FT_FaceRec_
num_chars	include/freetype/freetype/internal/t1types.h	/^    FT_Int       num_chars;$/;"	m	struct:T1_EncodingRecRec_
num_default_design_vector	include/freetype/freetype/t1tables.h	/^    FT_UInt          num_default_design_vector;$/;"	m	struct:PS_BlendRec_
num_designs	include/freetype/freetype/ftmm.h	/^    FT_UInt              num_designs;$/;"	m	struct:FT_MM_Var_
num_designs	include/freetype/freetype/ftmm.h	/^    FT_UInt     num_designs;$/;"	m	struct:FT_Multi_Master_
num_designs	include/freetype/freetype/t1tables.h	/^    FT_UInt          num_designs;$/;"	m	struct:PS_BlendRec_
num_dicts	include/freetype/freetype/t1tables.h	/^    FT_Int          num_dicts;$/;"	m	struct:CID_FaceInfoRec_
num_elems	include/freetype/freetype/internal/psaux.h	/^    FT_Int             num_elems;$/;"	m	struct:PS_TableRec_
num_faces	include/freetype/freetype/freetype.h	/^    FT_Long           num_faces;$/;"	m	struct:FT_FaceRec_
num_family_blues	include/freetype/freetype/t1tables.h	/^    FT_Byte    num_family_blues;$/;"	m	struct:PS_PrivateRec_
num_family_other_blues	include/freetype/freetype/t1tables.h	/^    FT_Byte    num_family_other_blues;$/;"	m	struct:PS_PrivateRec_
num_fixed_sizes	include/freetype/freetype/freetype.h	/^    FT_Int            num_fixed_sizes;$/;"	m	struct:FT_FaceRec_
num_flex_vectors	include/freetype/freetype/internal/psaux.h	/^    FT_Int               num_flex_vectors;$/;"	m	struct:T1_DecoderRec_
num_glyphs	include/freetype/freetype/freetype.h	/^    FT_Long           num_glyphs;$/;"	m	struct:FT_FaceRec_
num_glyphs	include/freetype/freetype/internal/psaux.h	/^    FT_UInt              num_glyphs;$/;"	m	struct:T1_DecoderRec_
num_glyphs	include/freetype/freetype/internal/t1types.h	/^    FT_Int           num_glyphs;$/;"	m	struct:T1_FontRec_
num_glyphs	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong            num_glyphs;$/;"	m	struct:TT_SBit_RangeRec_
num_glyphs	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort   num_glyphs;$/;"	m	struct:TT_Post_20Rec_
num_glyphs	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  num_glyphs;$/;"	m	struct:TT_Post_25_
num_grays	include/freetype/freetype/ftimage.h	/^    short           num_grays;$/;"	m	struct:FT_Bitmap_
num_kern_pairs	include/freetype/freetype/internal/tttypes.h	/^    FT_Int                num_kern_pairs;$/;"	m	struct:TT_FaceRec_
num_kern_tables	include/freetype/freetype/internal/tttypes.h	/^    FT_UInt               num_kern_tables;$/;"	m	struct:TT_FaceRec_
num_locations	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              num_locations; \/* in broken TTF, gid > 0xFFFF *\/$/;"	m	struct:TT_FaceRec_
num_locations_stub	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort             num_locations_stub;$/;"	m	struct:TT_FaceRec_
num_maps	include/freetype/freetype/internal/services/svpscmap.h	/^    FT_UInt     num_maps;$/;"	m	struct:PS_UnicodesRec_
num_modules	include/freetype/freetype/internal/ftobjs.h	/^    FT_UInt            num_modules;$/;"	m	struct:FT_LibraryRec_
num_namedstyles	include/freetype/freetype/ftmm.h	/^    FT_UInt              num_namedstyles;$/;"	m	struct:FT_MM_Var_
num_names	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort             num_names;    \/* number of name records  *\/$/;"	m	struct:TT_FaceRec_
num_names	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort   num_names;$/;"	m	struct:TT_Post_20Rec_
num_nodes_	src/breakpad/processor/static_map.h	/^  u_int32_t num_nodes_;$/;"	m	class:google_breakpad::StaticMap
num_nodes_	src/breakpad/processor/static_map_iterator.h	/^  int32_t num_nodes_;$/;"	m	class:google_breakpad::StaticMapIterator
num_other_blues	include/freetype/freetype/t1tables.h	/^    FT_Byte    num_other_blues;$/;"	m	struct:PS_PrivateRec_
num_params	include/freetype/freetype/freetype.h	/^    FT_Int          num_params;$/;"	m	struct:FT_Open_Args_
num_points	include/freetype/freetype/t1tables.h	/^    FT_Byte    num_points;$/;"	m	struct:PS_DesignMap_
num_ranges	include/freetype/freetype/internal/tttypes.h	/^    FT_Int                  num_ranges;$/;"	m	struct:TT_SBit_StrikeRec_
num_records	include/freetype/freetype/internal/tttypes.h	/^    FT_Short      num_records;$/;"	m	struct:TT_HdmxRec_
num_sbit_scales	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              num_sbit_scales;$/;"	m	struct:TT_FaceRec_
num_sbit_strikes	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              num_sbit_strikes;$/;"	m	struct:TT_FaceRec_
num_snap_heights	include/freetype/freetype/t1tables.h	/^    FT_Byte    num_snap_heights;$/;"	m	struct:PS_PrivateRec_
num_snap_widths	include/freetype/freetype/t1tables.h	/^    FT_Byte    num_snap_widths;$/;"	m	struct:PS_PrivateRec_
num_strikes	include/freetype/freetype/internal/tttypes.h	/^    FT_UInt    num_strikes;$/;"	m	struct:TT_BDFRec_
num_subglyphs	include/freetype/freetype/freetype.h	/^    FT_UInt           num_subglyphs;$/;"	m	struct:FT_GlyphSlotRec_
num_subglyphs	include/freetype/freetype/internal/ftgloadr.h	/^    FT_UInt      num_subglyphs; \/* number of subglyphs       *\/$/;"	m	struct:FT_GlyphLoadRec_
num_subrs	include/freetype/freetype/internal/psaux.h	/^    FT_UInt              num_subrs;$/;"	m	struct:T1_DecoderRec_
num_subrs	include/freetype/freetype/internal/t1types.h	/^    FT_Int           num_subrs;$/;"	m	struct:T1_FontRec_
num_subrs	include/freetype/freetype/internal/t1types.h	/^    FT_UInt    num_subrs;$/;"	m	struct:CID_SubrsRec_
num_subrs	include/freetype/freetype/t1tables.h	/^    FT_UInt        num_subrs;$/;"	m	struct:CID_FaceDictRec_
num_tables	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort             num_tables;$/;"	m	struct:TT_FaceRec_
num_tables	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  num_tables;$/;"	m	struct:SFNT_HeaderRec_
num_xuid	include/freetype/freetype/t1tables.h	/^    FT_Int          num_xuid;$/;"	m	struct:CID_FaceInfoRec_
numberOfCommentPlacement	src/jsoncpp/include/json/value.h	/^      numberOfCommentPlacement$/;"	e	enum:Json::CommentPlacement
number_Of_HMetrics	include/freetype/freetype/tttables.h	/^    FT_UShort  number_Of_HMetrics;$/;"	m	struct:TT_HoriHeader_
number_Of_VMetrics	include/freetype/freetype/tttables.h	/^    FT_UShort  number_Of_VMetrics;$/;"	m	struct:TT_VertHeader_
number_of_entries	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int64_t number_of_entries;$/;"	m	struct:__anon44
number_of_memory_ranges	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t          number_of_memory_ranges;$/;"	m	struct:__anon33
number_of_modules	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t   number_of_modules;$/;"	m	struct:__anon32
number_of_processors	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int8_t         number_of_processors;$/;"	m	struct:__anon39
number_of_threads	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t   number_of_threads;$/;"	m	struct:__anon25
number_parameters	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t number_parameters;  \/* Number of valid elements in$/;"	m	struct:__anon34
numchannels	include/fmod/fmod.h	/^    int                            numchannels;        \/* [w] Optional. Specify 0 to ignore. Number of channels in a sound mandatory if FMOD_OPENUSER or FMOD_OPENRAW is used. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
numints	src/lua/ltable.c	69;"	d	file:
numparameters	include/fmod/fmod_dsp.h	/^    int                          numparameters;      \/* [w] Number of parameters used in this filter.  The user finds this with DSP::getNumParameters *\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
numparams	src/lua/lobject.h	/^  lu_byte numparams;$/;"	m	struct:Proto
numsubsounds	include/fmod/fmod.h	/^    int                            numsubsounds;       \/* [w] Optional. Specify 0 to ignore or have no subsounds.  In a sound created with FMOD_OPENUSER, specify the number of subsounds that are accessable with Sound::getSubSound.  If not created with FMOD_OPENUSER, this will limit the number of subsounds loaded within a multi-subsound file.  If using FSB, then if FMOD_CREATESOUNDEXINFO::inclusionlist is used, this will shuffle subsounds down so that there are not any gaps.  It will mean that the indices of the sounds will be different. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
numsubsounds	include/fmod/fmod_codec.h	/^    int                         numsubsounds;  \/* [in] Number of 'subsounds' in this sound.  Anything other than 0 makes it a 'container' format (ie CDDA\/DLS\/FSB etc which contain 1 or more su bsounds).  For most normal, single sound codec such as WAV\/AIFF\/MP3, this should be 0 as they are not a container for subsounds, they are the sound by itself. *\/$/;"	m	struct:FMOD_CODEC_STATE
numtracks	include/fmod/fmod.h	/^    int numtracks;                  \/* [r] The number of tracks on the CD *\/$/;"	m	struct:FMOD_CDTOC
numusearray	src/lua/ltable.c	/^static int numusearray (const Table *t, int *nums) {$/;"	f	file:
numusehash	src/lua/ltable.c	/^static int numusehash (const Table *t, int *nums, int *pnasize) {$/;"	f	file:
nups	src/lua/lobject.h	/^  lu_byte nups;  \/* number of upvalues *\/$/;"	m	struct:Proto
nups	src/lua/lua.h	/^  int nups;		\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug
nuse	src/lua/lstate.h	/^  lu_int32 nuse;  \/* number of elements *\/$/;"	m	struct:stringtable
nval	src/lua/lparser.h	/^    lua_Number nval;$/;"	m	union:expdesc::__anon99
nvalue	src/lua/lobject.h	93;"	d
obj2gco	src/lua/lstate.h	162;"	d
object	include/freetype/freetype/ftincrem.h	/^    FT_Incremental                  object;$/;"	m	struct:FT_Incremental_InterfaceRec_
object	lua/lib/sqlite3.lua	/^local function object()$/;"	f
objectValue	src/jsoncpp/include/json/value.h	/^      objectValue    \/\/\/< object value (collection of name\/value pairs).$/;"	e	enum:Json::ValueType
object_name	src/package/wind.h	/^    QString object_name;$/;"	m	class:GuhuoDialog
objectsPerPage_	src/jsoncpp/src/json_batchallocator.h	/^   unsigned int objectsPerPage_;$/;"	m	class:Json::BatchAllocator
obtainCard	src/server/room.cpp	/^void Room::obtainCard(ServerPlayer *target, const Card *card, bool unhide){$/;"	f	class:Room
obtainCard	src/server/room.cpp	/^void Room::obtainCard(ServerPlayer *target, int card_id, bool unhide){$/;"	f	class:Room
obtainCard	src/server/room.cpp	/^void Room::obtainCard(ServerPlayer* target, const Card* card,  const CardMoveReason &reason, bool unhide){$/;"	f	class:Room
obtainCard	src/server/serverplayer.cpp	/^void ServerPlayer::obtainCard(const Card *card, bool unhide){$/;"	f	class:ServerPlayer
off_x	src/ui/pixmapanimation.h	/^    int current,off_x,off_y;$/;"	m	class:PixmapAnimation
off_y	src/ui/pixmapanimation.h	/^    int current,off_x,off_y;$/;"	m	class:PixmapAnimation
offensive_horse	src/core/player.h	/^    WrappedCard *weapon, *armor, *defensive_horse, *offensive_horse;$/;"	m	class:Player
offset	include/fmod/fmod.h	/^    unsigned int    offset;         \/* [r] Seek position, make sure you read from this file offset. *\/$/;"	m	struct:__anon108
offset	include/freetype/freetype/internal/ftrfork.h	/^    FT_ULong   offset;$/;"	m	struct:FT_RFork_Ref_
offset	include/freetype/freetype/internal/ftstream.h	/^    FT_UShort  offset;$/;"	m	struct:FT_Frame_Field_
offset	include/freetype/freetype/internal/psaux.h	/^    FT_UInt             offset;       \/* offset of field in object      *\/$/;"	m	struct:T1_FieldRec_
offset	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong   offset;  \/* not in file *\/$/;"	m	struct:SFNT_HeaderRec_
offset	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t offset;     \/* Offset to debug data (expect 0 in minidump) *\/$/;"	m	struct:__anon27
offsets	include/freetype/freetype/internal/tttypes.h	/^    FT_Char*   offsets;$/;"	m	struct:TT_Post_25_
offsets	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong*  offsets;$/;"	m	struct:TTC_HeaderRec_
offsets_	src/breakpad/processor/static_map.h	/^  const u_int32_t* offsets_;$/;"	m	class:google_breakpad::StaticMap
offsets_	src/breakpad/processor/static_map_iterator.h	/^  const u_int32_t* offsets_;$/;"	m	class:google_breakpad::StaticMapIterator
ok_button	src/ui/roomscene.h	/^    QSanButton *ok_button, *cancel_button, *discard_button;$/;"	m	class:RoomScene
onAnimationFinished	src/ui/GenericCardContainerUI.cpp	/^void GenericCardContainer::onAnimationFinished()$/;"	f	class:GenericCardContainer
onCardItemClicked	src/ui/dashboard.cpp	/^void Dashboard::onCardItemClicked(){$/;"	f	class:Dashboard
onCardItemHover	src/ui/dashboard.cpp	/^void Dashboard::onCardItemHover()$/;"	f	class:Dashboard
onCardItemLeaveHover	src/ui/dashboard.cpp	/^void Dashboard::onCardItemLeaveHover()$/;"	f	class:Dashboard
onCardItemThrown	src/ui/dashboard.cpp	/^void Dashboard::onCardItemThrown(){$/;"	f	class:Dashboard
onDamaged	src/package/firepackage.cpp	/^    virtual void onDamaged(ServerPlayer *xunyu, const DamageStruct &damage) const{$/;"	f	class:Jieming
onDamaged	src/package/god.cpp	/^    virtual void onDamaged(ServerPlayer *shencc, const DamageStruct &damage) const{$/;"	f	class:Guixin
onDamaged	src/package/lingpackage.cpp	/^    virtual void onDamaged(ServerPlayer *xiahou, const DamageStruct &damage) const{$/;"	f	class:NeoGanglie
onDamaged	src/package/mountainpackage.cpp	/^    virtual void onDamaged(ServerPlayer *zuoci, const DamageStruct &damage) const{$/;"	f	class:Xinsheng
onDamaged	src/package/standard-generals.cpp	/^    virtual void onDamaged(ServerPlayer *caocao, const DamageStruct &damage) const{$/;"	f	class:Jianxiong
onDamaged	src/package/standard-generals.cpp	/^    virtual void onDamaged(ServerPlayer *guojia, const DamageStruct &damage) const{$/;"	f	class:Yiji
onDamaged	src/package/standard-generals.cpp	/^    virtual void onDamaged(ServerPlayer *simayi, const DamageStruct &damage) const{$/;"	f	class:Fankui
onDamaged	src/package/standard-generals.cpp	/^    virtual void onDamaged(ServerPlayer *xiahou, const DamageStruct &damage) const{$/;"	f	class:Ganglie
onDamaged	src/package/thicket.cpp	/^    virtual void onDamaged(ServerPlayer *caopi, const DamageStruct &damage) const{$/;"	f	class:Fangzhu
onDamaged	src/package/yitianpackage.cpp	/^    virtual void onDamaged(ServerPlayer *caochong, const DamageStruct &damage) const{$/;"	f	class:Chengxiang
onDamaged	src/package/yitianpackage.cpp	/^    virtual void onDamaged(ServerPlayer *dengshizai, const DamageStruct &) const{$/;"	f	class:Toudu
onDamaged	src/package/yitianpackage.cpp	/^    virtual void onDamaged(ServerPlayer *target, const DamageStruct &damage) const{$/;"	f	class:Tongxin
onDamaged	src/package/yjcm-package.cpp	/^    virtual void onDamaged(ServerPlayer *zhonghui, const DamageStruct &damage) const{$/;"	f	class:Quanji
onDamaged	src/package/yjcm2012-package.cpp	/^    virtual void onDamaged(ServerPlayer *target, const DamageStruct &damage) const{$/;"	f	class:Zhiyu
onDamaged	src/scenario/boss-mode-scenario.cpp	/^    virtual void onDamaged(ServerPlayer *player, const DamageStruct &damage) const{$/;"	f	class:Kedi
onDamaged	src/scenario/guandu-scenario.cpp	/^    virtual void onDamaged(ServerPlayer *guojia, const DamageStruct &damage) const{$/;"	f	class:GreatYiji
onDetectButtonClicked	src/server/server.cpp	/^void ServerDialog::onDetectButtonClicked(){$/;"	f	class:ServerDialog
onEffect	src/core/WrappedCard.h	/^    inline virtual void onEffect(const CardEffectStruct &effect) const {$/;"	f	class:WrappedCard
onEffect	src/core/card.cpp	/^void Card::onEffect(const CardEffectStruct &) const{$/;"	f	class:Card
onEffect	src/package/bgm-package.cpp	/^void LihunCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:LihunCard
onEffect	src/package/firepackage.cpp	/^void JiemingCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:JiemingCard
onEffect	src/package/firepackage.cpp	/^void QiangxiCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:QiangxiCard
onEffect	src/package/god.cpp	/^void GongxinCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:GongxinCard
onEffect	src/package/god.cpp	/^void KuangfengCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:KuangfengCard
onEffect	src/package/god.cpp	/^void SmallYeyanCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:SmallYeyanCard
onEffect	src/package/god.cpp	/^void WuqianCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:WuqianCard
onEffect	src/package/lingpackage.cpp	/^void NeoFanjianCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:NeoFanjianCard
onEffect	src/package/maneuvering.cpp	/^void Analeptic::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:Analeptic
onEffect	src/package/maneuvering.cpp	/^void FireAttack::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:FireAttack
onEffect	src/package/maneuvering.cpp	/^void IronChain::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:IronChain
onEffect	src/package/mountainpackage.cpp	/^void TiaoxinCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:TiaoxinCard
onEffect	src/package/mountainpackage.cpp	/^void ZhijianCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:ZhijianCard
onEffect	src/package/nostalgia.cpp	/^void NosJujianCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:NosJujianCard
onEffect	src/package/nostalgia.cpp	/^void NosXuanhuoCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:NosXuanhuoCard
onEffect	src/package/special3v3-package.cpp	/^void HongyuanCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:HongyuanCard
onEffect	src/package/standard-cards.cpp	/^void AmazingGrace::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:AmazingGrace
onEffect	src/package/standard-cards.cpp	/^void ArcheryAttack::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:ArcheryAttack
onEffect	src/package/standard-cards.cpp	/^void Collateral::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:Collateral
onEffect	src/package/standard-cards.cpp	/^void Dismantlement::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:Dismantlement
onEffect	src/package/standard-cards.cpp	/^void Duel::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:Duel
onEffect	src/package/standard-cards.cpp	/^void ExNihilo::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:ExNihilo
onEffect	src/package/standard-cards.cpp	/^void GodSalvation::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:GodSalvation
onEffect	src/package/standard-cards.cpp	/^void Peach::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:Peach
onEffect	src/package/standard-cards.cpp	/^void SavageAssault::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:SavageAssault
onEffect	src/package/standard-cards.cpp	/^void Slash::onEffect(const CardEffectStruct &card_effect) const{$/;"	f	class:Slash
onEffect	src/package/standard-cards.cpp	/^void Snatch::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:Snatch
onEffect	src/package/standard-skillcards.cpp	/^void FanjianCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:FanjianCard
onEffect	src/package/standard-skillcards.cpp	/^void JieyinCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:JieyinCard
onEffect	src/package/standard-skillcards.cpp	/^void LiuliCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:LiuliCard
onEffect	src/package/standard-skillcards.cpp	/^void QingnangCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:QingnangCard
onEffect	src/package/standard.cpp	/^void DelayedTrick::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:DelayedTrick
onEffect	src/package/thicket.cpp	/^void FangzhuCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:FangzhuCard
onEffect	src/package/thicket.cpp	/^void LuanwuCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:LuanwuCard
onEffect	src/package/thicket.cpp	/^void YinghunCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:YinghunCard
onEffect	src/package/wind.cpp	/^void LeijiCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:LeijiCard
onEffect	src/package/wind.cpp	/^void TianxiangCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:TianxiangCard
onEffect	src/package/wisdompackage.cpp	/^void BawangCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:BawangCard
onEffect	src/package/wisdompackage.cpp	/^void HouyuanCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:HouyuanCard
onEffect	src/package/wisdompackage.cpp	/^void JuaoCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:JuaoCard
onEffect	src/package/wisdompackage.cpp	/^void ShouyeCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:ShouyeCard
onEffect	src/package/yitianpackage.cpp	/^void ChengxiangCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:ChengxiangCard
onEffect	src/package/yitianpackage.cpp	/^void GuihanCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:GuihanCard
onEffect	src/package/yitianpackage.cpp	/^void JuejiCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:JuejiCard
onEffect	src/package/yitianpackage.cpp	/^void LexueCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:LexueCard
onEffect	src/package/yitianpackage.cpp	/^void LianliCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:LianliCard
onEffect	src/package/yitianpackage.cpp	/^void LianliSlashCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:LianliSlashCard
onEffect	src/package/yitianpackage.cpp	/^void TaichenCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:TaichenCard
onEffect	src/package/yjcm-package.cpp	/^void JujianCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:JujianCard
onEffect	src/package/yjcm-package.cpp	/^void MingceCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:MingceCard
onEffect	src/package/yjcm-package.cpp	/^void XianzhenCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:XianzhenCard
onEffect	src/package/yjcm-package.cpp	/^void XuanhuoCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:XuanhuoCard
onEffect	src/scenario/fancheng-scenario.cpp	/^void FloodCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:FloodCard
onEffect	src/scenario/guandu-scenario.cpp	/^void SmallTuxiCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:SmallTuxiCard
onEffect	src/scenario/scenerule.cpp	/^    virtual void onEffect(const CardEffectStruct &effect) const {$/;"	f	class:Scene27Card
onEffect	swig/sanguosha_wrap.cxx	/^void LuaSkillCard::onEffect(const CardEffectStruct &effect) const{$/;"	f	class:LuaSkillCard
onEnabledChange	src/ui/roomscene.cpp	/^void RoomScene::onEnabledChange()$/;"	f	class:RoomScene
onGameOver	src/ui/roomscene.cpp	/^void RoomScene::onGameOver(){$/;"	f	class:RoomScene
onGameStart	src/core/skill.cpp	/^void MarkAssignSkill::onGameStart(ServerPlayer *player) const{$/;"	f	class:MarkAssignSkill
onGameStart	src/core/skill.cpp	/^void SPConvertSkill::onGameStart(ServerPlayer *player) const{$/;"	f	class:SPConvertSkill
onGameStart	src/package/bgm-package.cpp	/^    virtual void onGameStart(ServerPlayer *lvmeng) const{$/;"	f	class:MouduanStart
onGameStart	src/package/god.cpp	/^    virtual void onGameStart(ServerPlayer *shenzhuge) const{$/;"	f	class:QixingStart
onGameStart	src/package/mountainpackage.cpp	/^    virtual void onGameStart(ServerPlayer *zuoci) const{$/;"	f	class:Huashen
onGameStart	src/package/sp-package.cpp	/^    virtual void onGameStart(ServerPlayer *) const{$/;"	f	class:Weidi
onGameStart	src/package/yitianpackage.cpp	/^    virtual void onGameStart(ServerPlayer *player) const{$/;"	f	class:LianliStart
onGameStart	src/package/yitianpackage.cpp	/^    virtual void onGameStart(ServerPlayer *player) const{$/;"	f	class:Yishe
onGameStart	src/ui/roomscene.cpp	/^void RoomScene::onGameStart(){$/;"	f	class:RoomScene
onHttpDone	src/server/server.cpp	/^void ServerDialog::onHttpDone(bool error){$/;"	f	class:ServerDialog
onInstall	src/package/joypackage.cpp	/^void Monkey::onInstall(ServerPlayer *player) const{$/;"	f	class:Monkey
onInstall	src/package/standard.cpp	/^void EquipCard::onInstall(ServerPlayer *player) const{$/;"	f	class:EquipCard
onInstall	src/package/standard.cpp	/^void Horse::onInstall(ServerPlayer *) const{$/;"	f	class:Horse
onJoyButtonClicked	src/ui/roomscene.cpp	/^void RoomScene::onJoyButtonClicked(int bit){$/;"	f	class:RoomScene
onJoyDirectionClicked	src/ui/roomscene.cpp	/^void RoomScene::onJoyDirectionClicked(int direction){$/;"	f	class:RoomScene
onMarkChanged	src/ui/dashboard.cpp	/^void Dashboard::onMarkChanged(){$/;"	f	class:Dashboard
onMouseClick	src/ui/qsanbutton.cpp	/^void QSanSkillButton::onMouseClick()$/;"	f	class:QSanSkillButton
onNullified	src/core/WrappedCard.h	/^    inline virtual void onNullified(ServerPlayer *target) const {$/;"	f	class:WrappedCard
onNullified	src/core/card.h	/^    inline virtual void onNullified(ServerPlayer *target) const {return;}$/;"	f	class:Card
onNullified	src/package/standard.cpp	/^void DelayedTrick::onNullified(ServerPlayer *target) const{$/;"	f	class:DelayedTrick
onOkButtonClicked	src/server/server.cpp	/^void ServerDialog::onOkButtonClicked(){$/;"	f	class:ServerDialog
onPhaseChange	src/package/bgm-package.cpp	/^    virtual bool onPhaseChange(ServerPlayer *target) const{$/;"	f	class:Tanhu
onPhaseChange	src/package/bgm-package.cpp	/^    virtual bool onPhaseChange(ServerPlayer *target) const{$/;"	f	class:Yanxiao
onPhaseChange	src/package/god.cpp	/^    virtual bool onPhaseChange(ServerPlayer *player) const{$/;"	f	class:Lianpo
onPhaseChange	src/package/god.cpp	/^    virtual bool onPhaseChange(ServerPlayer *player) const{$/;"	f	class:LianpoDo
onPhaseChange	src/package/god.cpp	/^    virtual bool onPhaseChange(ServerPlayer *shenlvmeng) const{$/;"	f	class:Shelie
onPhaseChange	src/package/god.cpp	/^    virtual bool onPhaseChange(ServerPlayer *shensimayi) const{$/;"	f	class:Baiyin
onPhaseChange	src/package/god.cpp	/^    virtual bool onPhaseChange(ServerPlayer *target) const{$/;"	f	class:JilveClear
onPhaseChange	src/package/god.cpp	/^    virtual bool onPhaseChange(ServerPlayer *target) const{$/;"	f	class:QixingAsk
onPhaseChange	src/package/lingpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *gongsun) const{$/;"	f	class:Zhulou
onPhaseChange	src/package/lingpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *target) const{$/;"	f	class:NeoJushou
onPhaseChange	src/package/mountainpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *dengai) const{$/;"	f	class:Zaoxian
onPhaseChange	src/package/mountainpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *jiangwei) const{$/;"	f	class:Zhiji
onPhaseChange	src/package/mountainpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *liushan) const{$/;"	f	class:FangquanGive
onPhaseChange	src/package/mountainpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *liushan) const{$/;"	f	class:Ruoyu
onPhaseChange	src/package/mountainpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *sunce) const{$/;"	f	class:Hunzi
onPhaseChange	src/package/mountainpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *zuoci) const{$/;"	f	class:HuashenBegin
onPhaseChange	src/package/sp-package.cpp	/^    virtual bool onPhaseChange(ServerPlayer *guanyu) const{$/;"	f	class:Danji
onPhaseChange	src/package/sp-package.cpp	/^    virtual bool onPhaseChange(ServerPlayer *target) const{$/;"	f	class:JileiClear
onPhaseChange	src/package/sp-package.cpp	/^    virtual bool onPhaseChange(ServerPlayer *target) const{$/;"	f	class:Xiuluo
onPhaseChange	src/package/standard-generals.cpp	/^    virtual bool onPhaseChange(ServerPlayer *diaochan) const{$/;"	f	class:Biyue
onPhaseChange	src/package/standard-generals.cpp	/^    virtual bool onPhaseChange(ServerPlayer *target) const{$/;"	f	class:Rende
onPhaseChange	src/package/standard-generals.cpp	/^    virtual bool onPhaseChange(ServerPlayer *zhangliao) const{$/;"	f	class:Tuxi
onPhaseChange	src/package/standard-generals.cpp	/^    virtual bool onPhaseChange(ServerPlayer *zhuge) const{$/;"	f	class:Guanxing
onPhaseChange	src/package/standard-generals.cpp	/^    virtual bool onPhaseChange(ServerPlayer *zhuge) const{$/;"	f	class:SuperGuanxing
onPhaseChange	src/package/thicket.cpp	/^    virtual bool onPhaseChange(ServerPlayer *dongzhuo) const{$/;"	f	class:Benghuai
onPhaseChange	src/package/thicket.cpp	/^    virtual bool onPhaseChange(ServerPlayer *lusu) const{$/;"	f	class:HaoshiGive
onPhaseChange	src/package/thicket.cpp	/^    virtual bool onPhaseChange(ServerPlayer *menghuo) const{$/;"	f	class:Zaiqi
onPhaseChange	src/package/thicket.cpp	/^    virtual bool onPhaseChange(ServerPlayer *sunjian) const{$/;"	f	class:Yinghun
onPhaseChange	src/package/wind.cpp	/^    virtual bool onPhaseChange(ServerPlayer *target) const{$/;"	f	class:Jushou
onPhaseChange	src/package/wisdompackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *player) const{$/;"	f	class:Chouliang
onPhaseChange	src/package/wisdompackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *player) const{$/;"	f	class:Juao
onPhaseChange	src/package/yitianpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *caochong) const{$/;"	f	class:Zaoyao
onPhaseChange	src/package/yitianpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *jiawenhe) const{$/;"	f	class:Dongcha
onPhaseChange	src/package/yitianpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *lukang) const{$/;"	f	class:Kegou
onPhaseChange	src/package/yitianpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *player) const{$/;"	f	class:GongmouExchange
onPhaseChange	src/package/yitianpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *target) const{$/;"	f	class:Lianli
onPhaseChange	src/package/yitianpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *target) const{$/;"	f	class:Xunzhi
onPhaseChange	src/package/yitianpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *weiwudi) const{$/;"	f	class:WeiwudiGuixin
onPhaseChange	src/package/yitianpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *xuandi) const{$/;"	f	class:Wuling
onPhaseChange	src/package/yitianpackage.cpp	/^    virtual bool onPhaseChange(ServerPlayer *zhongshiji) const{$/;"	f	class:Gongmou
onPhaseChange	src/package/yjcm-package.cpp	/^    virtual bool onPhaseChange(ServerPlayer *fazheng) const{$/;"	f	class:Xuanhuo
onPhaseChange	src/package/yjcm-package.cpp	/^    virtual bool onPhaseChange(ServerPlayer *xushu) const{$/;"	f	class:Jujian
onPhaseChange	src/package/yjcm-package.cpp	/^    virtual bool onPhaseChange(ServerPlayer *zhonghui) const{$/;"	f	class:Zili
onPhaseChange	src/package/yjcm2012-package.cpp	/^    virtual bool onPhaseChange(ServerPlayer *caozhang) const{$/;"	f	class:JiangchiClear
onPhaseChange	src/package/yjcm2012-package.cpp	/^    virtual bool onPhaseChange(ServerPlayer *shuangying) const{$/;"	f	class:Fuhun
onPhaseChange	src/package/yjcm2012-package.cpp	/^    virtual bool onPhaseChange(ServerPlayer *wangyi) const{$/;"	f	class:Miji
onPhaseChange	src/scenario/boss-mode-scenario.cpp	/^    virtual bool onPhaseChange(ServerPlayer *player) const{$/;"	f	class:Silue
onPhaseChange	src/scenario/boss-mode-scenario.cpp	/^    virtual bool onPhaseChange(ServerPlayer *target) const{$/;"	f	class:Jishi
onPhaseChange	src/scenario/fancheng-scenario.cpp	/^    virtual bool onPhaseChange(ServerPlayer *guanyu) const{$/;"	f	class:Xiansheng
onPhaseChange	src/scenario/fancheng-scenario.cpp	/^    virtual bool onPhaseChange(ServerPlayer *target) const{$/;"	f	class:Dujiang
onPhaseChange	src/scenario/fancheng-scenario.cpp	/^    virtual bool onPhaseChange(ServerPlayer *target) const{$/;"	f	class:Zhiyuan
onPhaseChange	src/scenario/guandu-scenario.cpp	/^    virtual bool onPhaseChange(ServerPlayer *target) const{$/;"	f	class:DamageBeforePlay
onPhaseChange	src/scenario/guandu-scenario.cpp	/^    virtual bool onPhaseChange(ServerPlayer *zhangliao) const{$/;"	f	class:SmallTuxi
onPhaseChange	src/server/gamerule.cpp	/^void GameRule::onPhaseChange(ServerPlayer *player) const{$/;"	f	class:GameRule
onPlayerAssignRole	src/client/client.cpp	/^void Client::onPlayerAssignRole(const QList<QString> &names, const QList<QString> &roles)$/;"	f	class:Client
onPlayerChooseAG	src/client/client.cpp	/^void Client::onPlayerChooseAG(int card_id){$/;"	f	class:Client
onPlayerChooseCard	src/client/client.cpp	/^void Client::onPlayerChooseCard(int card_id){$/;"	f	class:Client
onPlayerChooseGeneral	src/client/client.cpp	/^void Client::onPlayerChooseGeneral(const QString &item_name){$/;"	f	class:Client
onPlayerChooseKingdom	src/client/client.cpp	/^void Client::onPlayerChooseKingdom(){$/;"	f	class:Client
onPlayerChooseOrder	src/client/client.cpp	/^void Client::onPlayerChooseOrder(){$/;"	f	class:Client
onPlayerChoosePlayer	src/client/client.cpp	/^void Client::onPlayerChoosePlayer(const Player *player){$/;"	f	class:Client
onPlayerChooseRole3v3	src/client/client.cpp	/^void Client::onPlayerChooseRole3v3(){$/;"	f	class:Client
onPlayerChooseSuit	src/client/client.cpp	/^void Client::onPlayerChooseSuit(){$/;"	f	class:Client
onPlayerDiscardCards	src/client/client.cpp	/^void Client::onPlayerDiscardCards(const Card *cards){$/;"	f	class:Client
onPlayerInvokeSkill	src/client/client.cpp	/^void Client::onPlayerInvokeSkill(bool invoke){    $/;"	f	class:Client
onPlayerMakeChoice	src/client/client.cpp	/^void Client::onPlayerMakeChoice(){$/;"	f	class:Client
onPlayerReplyGongxin	src/client/client.cpp	/^void Client::onPlayerReplyGongxin(int card_id){$/;"	f	class:Client
onPlayerReplyGuanxing	src/client/client.cpp	/^void Client::onPlayerReplyGuanxing(const QList<int> &up_cards, const QList<int> &down_cards){$/;"	f	class:Client
onPlayerReplyYiji	src/client/client.cpp	/^void Client::onPlayerReplyYiji(const Card *card, const Player *to){$/;"	f	class:Client
onPlayerResponseCard	src/client/client.cpp	/^void Client::onPlayerResponseCard(const Card *card){$/;"	f	class:Client
onPlayerUseCard	src/client/client.cpp	/^void Client::onPlayerUseCard(const Card *card, const QList<const Player *> &targets){$/;"	f	class:Client
onReadReady	src/util/detector.cpp	/^void UdpDetector::onReadReady(){$/;"	f	class:UdpDetector
onSelectChange	src/ui/roomscene.cpp	/^void RoomScene::onSelectChange()$/;"	f	class:RoomScene
onSkillActivated	src/ui/roomscene.cpp	/^void RoomScene::onSkillActivated() {    $/;"	f	class:RoomScene
onSkillDeactivated	src/ui/roomscene.cpp	/^void RoomScene::onSkillDeactivated() {$/;"	f	class:RoomScene
onStandoff	src/ui/roomscene.cpp	/^void RoomScene::onStandoff(){$/;"	f	class:RoomScene
onTagSet	src/scenario/boss-mode-scenario.cpp	/^void ImpasseScenario::onTagSet(Room *room, const QString &key) const{$/;"	f	class:ImpasseScenario
onTagSet	src/scenario/couple-scenario.cpp	/^void CoupleScenario::onTagSet(Room *room, const QString &key) const{$/;"	f	class:CoupleScenario
onTagSet	src/scenario/fancheng-scenario.cpp	/^void FanchengScenario::onTagSet(Room *room, const QString &key) const{$/;"	f	class:FanchengScenario
onTagSet	src/scenario/guandu-scenario.cpp	/^void GuanduScenario::onTagSet(Room *room, const QString &key) const{$/;"	f	class:GuanduScenario
onTagSet	src/scenario/miniscenarios.cpp	/^void MiniScene::onTagSet(Room *room, const QString &key) const$/;"	f	class:MiniScene
onTagSet	src/scenario/zombie-mode-scenario.cpp	/^void ZombieScenario::onTagSet(Room *, const QString &) const{$/;"	f	class:ZombieScenario
onUninstall	src/package/joypackage.cpp	/^void Monkey::onUninstall(ServerPlayer *player) const{$/;"	f	class:Monkey
onUninstall	src/package/maneuvering.cpp	/^void SilverLion::onUninstall(ServerPlayer *player) const{$/;"	f	class:SilverLion
onUninstall	src/package/standard.cpp	/^void EquipCard::onUninstall(ServerPlayer *player) const{$/;"	f	class:EquipCard
onUninstall	src/package/standard.cpp	/^void Horse::onUninstall(ServerPlayer *) const{$/;"	f	class:Horse
onUse	src/core/WrappedCard.h	/^    inline virtual void onUse(Room *room, const CardUseStruct &cardUse) const {$/;"	f	class:WrappedCard
onUse	src/core/card.cpp	/^void Card::onUse(Room *room, const CardUseStruct &use) const{$/;"	f	class:Card
onUse	src/package/god.cpp	/^void JilveCard::onUse(Room *room, const CardUseStruct &card_use) const{$/;"	f	class:JilveCard
onUse	src/package/joypackage.cpp	/^void GaleShell::onUse(Room *room, const CardUseStruct &card_use) const{$/;"	f	class:GaleShell
onUse	src/package/maneuvering.cpp	/^void IronChain::onUse(Room *room, const CardUseStruct &card_use) const{$/;"	f	class:IronChain
onUse	src/package/mountainpackage.cpp	/^void JixiCard::onUse(Room *room, const CardUseStruct &card_use) const{$/;"	f	class:JixiCard
onUse	src/package/sp-package.cpp	/^void WeidiCard::onUse(Room *room, const CardUseStruct &card_use) const{$/;"	f	class:WeidiCard
onUse	src/package/standard-cards.cpp	/^void Collateral::onUse(Room *room, const CardUseStruct &card_use) const{$/;"	f	class:Collateral
onUse	src/package/standard-cards.cpp	/^void Slash::onUse(Room *room, const CardUseStruct &card_use) const{$/;"	f	class:Slash
onUse	src/package/standard-skillcards.cpp	/^void LijianCard::onUse(Room *room, const CardUseStruct &card_use) const{$/;"	f	class:LijianCard
onUse	src/package/standard.cpp	/^void AOE::onUse(Room *room, const CardUseStruct &card_use) const{$/;"	f	class:AOE
onUse	src/package/standard.cpp	/^void DelayedTrick::onUse(Room *room, const CardUseStruct &card_use) const{$/;"	f	class:DelayedTrick
onUse	src/package/standard.cpp	/^void EquipCard::onUse(Room *room, const CardUseStruct &card_use) const{$/;"	f	class:EquipCard
onUse	src/package/standard.cpp	/^void GlobalEffect::onUse(Room *room, const CardUseStruct &card_use) const{$/;"	f	class:GlobalEffect
onUse	src/package/yjcm-package.cpp	/^void PaiyiCard::onUse(Room *room, const CardUseStruct &card_use) const{$/;"	f	class:PaiyiCard
onUse	src/package/yjcm-package.cpp	/^void XianzhenSlashCard::onUse(Room *room, const CardUseStruct &card_use) const{$/;"	f	class:XianzhenSlashCard
on_actionAbout_Lua_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionAbout_Lua_triggered()$/;"	f	class:MainWindow
on_actionAbout_fmod_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionAbout_fmod_triggered()$/;"	f	class:MainWindow
on_actionAbout_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionAbout_triggered()$/;"	f	class:MainWindow
on_actionAcknowledgement_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionAcknowledgement_triggered()$/;"	f	class:MainWindow
on_actionBroadcast_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionBroadcast_triggered()$/;"	f	class:MainWindow
on_actionCard_Overview_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionCard_Overview_triggered()$/;"	f	class:MainWindow
on_actionCard_editor_triggered	src/dialog/cardeditor.cpp	/^void MainWindow::on_actionCard_editor_triggered()$/;"	f	class:MainWindow
on_actionEnable_Hotkey_toggled	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionEnable_Hotkey_toggled(bool checked)$/;"	f	class:MainWindow
on_actionExit_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionExit_triggered()$/;"	f	class:MainWindow
on_actionFullscreen_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionFullscreen_triggered()$/;"	f	class:MainWindow
on_actionGeneral_Overview_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionGeneral_Overview_triggered()$/;"	f	class:MainWindow
on_actionMinimize_to_system_tray_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionMinimize_to_system_tray_triggered()$/;"	f	class:MainWindow
on_actionPC_Console_Start_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionPC_Console_Start_triggered()$/;"	f	class:MainWindow
on_actionPackaging_triggered	src/dialog/packagingeditor.cpp	/^void MainWindow::on_actionPackaging_triggered()$/;"	f	class:MainWindow
on_actionReplay_file_convert_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionReplay_file_convert_triggered()$/;"	f	class:MainWindow
on_actionReplay_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionReplay_triggered()$/;"	f	class:MainWindow
on_actionRole_assign_table_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionRole_assign_table_triggered()$/;"	f	class:MainWindow
on_actionScenario_Overview_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionScenario_Overview_triggered()$/;"	f	class:MainWindow
on_actionScript_editor_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionScript_editor_triggered()$/;"	f	class:MainWindow
on_actionShow_Hide_Menu_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionShow_Hide_Menu_triggered()$/;"	f	class:MainWindow
on_actionStart_Server_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionStart_Server_triggered()$/;"	f	class:MainWindow
on_actionView_ban_list_triggered	src/dialog/mainwindow.cpp	/^void MainWindow::on_actionView_ban_list_triggered()$/;"	f	class:MainWindow
on_avatarList_itemDoubleClicked	src/dialog/connectiondialog.cpp	/^void ConnectionDialog::on_avatarList_itemDoubleClicked(QListWidgetItem* item)$/;"	f	class:ConnectionDialog
on_browseBgButton_clicked	src/dialog/configdialog.cpp	/^void ConfigDialog::on_browseBgButton_clicked()$/;"	f	class:ConfigDialog
on_browseBgMusicButton_clicked	src/dialog/configdialog.cpp	/^void ConfigDialog::on_browseBgMusicButton_clicked()$/;"	f	class:ConfigDialog
on_changeAppFontButton_clicked	src/dialog/configdialog.cpp	/^void ConfigDialog::on_changeAppFontButton_clicked()$/;"	f	class:ConfigDialog
on_changeAvatarButton_clicked	src/dialog/connectiondialog.cpp	/^void ConnectionDialog::on_changeAvatarButton_clicked()$/;"	f	class:ConnectionDialog
on_clearHistoryButton_clicked	src/dialog/connectiondialog.cpp	/^void ConnectionDialog::on_clearHistoryButton_clicked()$/;"	f	class:ConnectionDialog
on_connectButton_clicked	src/dialog/connectiondialog.cpp	/^void ConnectionDialog::on_connectButton_clicked()$/;"	f	class:ConnectionDialog
on_detectLANButton_clicked	src/dialog/connectiondialog.cpp	/^void ConnectionDialog::on_detectLANButton_clicked()$/;"	f	class:ConnectionDialog
on_effect	extension-doc/4-SkillCard.lua	/^on_effect=function(self,effect)$/;"	f
on_effect	extension-doc/5-Applications.lua	/^on_effect=function(self,effect)$/;"	f
on_effect	src/core/lua-wrapper.h	/^    LuaFunction on_effect;$/;"	m	class:LuaSkillCard
on_effect 	extensions/0tagen.lua	/^	on_effect = function(self, effect)$/;"	f
on_femalePlayButton_clicked	src/dialog/cardoverview.cpp	/^void CardOverview::on_femalePlayButton_clicked()$/;"	f	class:CardOverview
on_list_itemSelectionChanged	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::on_list_itemSelectionChanged(QListWidgetItem *current){$/;"	f	class:CustomAssignDialog
on_malePlayButton_clicked	src/dialog/cardoverview.cpp	/^void CardOverview::on_malePlayButton_clicked()$/;"	f	class:CardOverview
on_resetBgButton_clicked	src/dialog/configdialog.cpp	/^void ConfigDialog::on_resetBgButton_clicked()$/;"	f	class:ConfigDialog
on_resetBgMusicButton_clicked	src/dialog/configdialog.cpp	/^void ConfigDialog::on_resetBgMusicButton_clicked()$/;"	f	class:ConfigDialog
on_setTextEditColorButton_clicked	src/dialog/configdialog.cpp	/^void ConfigDialog::on_setTextEditColorButton_clicked()$/;"	f	class:ConfigDialog
on_setTextEditFontButton_clicked	src/dialog/configdialog.cpp	/^void ConfigDialog::on_setTextEditFontButton_clicked()$/;"	f	class:ConfigDialog
on_tableWidget_itemDoubleClicked	src/dialog/cardoverview.cpp	/^void CardOverview::on_tableWidget_itemDoubleClicked(QTableWidgetItem* item)$/;"	f	class:CardOverview
on_tableWidget_itemDoubleClicked	src/dialog/generaloverview.cpp	/^void GeneralOverview::on_tableWidget_itemDoubleClicked(QTableWidgetItem*)$/;"	f	class:GeneralOverview
on_tableWidget_itemSelectionChanged	src/dialog/cardoverview.cpp	/^void CardOverview::on_tableWidget_itemSelectionChanged()$/;"	f	class:CardOverview
on_tableWidget_itemSelectionChanged	src/dialog/generaloverview.cpp	/^void GeneralOverview::on_tableWidget_itemSelectionChanged()$/;"	f	class:GeneralOverview
on_trigger	extension-doc/3-TriggerSkill.lua	/^	on_trigger=function(self,event,player,data)$/;"	f
on_trigger	extension-doc/5-Applications.lua	/^on_trigger=function(self,event,player,data)$/;"	f
on_trigger	src/core/lua-wrapper.h	/^    LuaFunction on_trigger;$/;"	m	class:LuaTriggerSkill
on_trigger 	extensions/0tagen.lua	/^  on_trigger = function(self, event, player, data)$/;"	f
on_use	extension-doc/4-SkillCard.lua	/^on_use=function(self,room,source,targets)$/;"	f
on_use	src/core/lua-wrapper.h	/^    LuaFunction on_use;$/;"	m	class:LuaSkillCard
on_use 	extensions/0tagen.lua	/^  on_use = function(self, room, source, targets)$/;"	f
once	src/core/card.h	/^    bool once;$/;"	m	class:Card
open	include/fmod/fmod_codec.h	/^    FMOD_CODEC_OPENCALLBACK         open;            \/* [in] Open callback for the codec for when FMOD tries to open a sound using this codec. *\/$/;"	m	struct:FMOD_CODEC_DESCRIPTION
open	include/freetype/freetype/internal/pshints.h	/^    T1_Hints_OpenFunc      open;$/;"	m	struct:T1_Hints_FuncsRec_
open	include/freetype/freetype/internal/pshints.h	/^    T2_Hints_OpenFunc     open;$/;"	m	struct:T2_Hints_FuncsRec_
open	lua/lib/socket/ftp.lua	/^function open(server, port, create)$/;"	f
open	lua/lib/socket/http.lua	/^function open(host, port, create)$/;"	f
open	lua/lib/socket/smtp.lua	/^function open(server, port, create)$/;"	f
open	src/core/structs.h	/^    bool open;    $/;"	m	struct:CardMoveStruct
open	src/core/structs.h	/^    bool open; \/\/ helper to prevent sending card_id to unrelevant clients$/;"	m	struct:CardsMoveStruct
open_func	src/lua/lparser.c	/^static void open_func (LexState *ls, FuncState *fs) {$/;"	f	file:
openupval	src/lua/lstate.h	/^  GCObject *openupval;  \/* list of open upvalues in this stack *\/$/;"	m	struct:lua_State
operations_	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^  std::list<AVRF_HANDLE_OPERATION> operations_;$/;"	m	class:__anon67::HandleTraceData	file:
operator !	src/jsoncpp/src/json_value.cpp	/^Value::operator!() const$/;"	f	class:Json::Value
operator !=	src/breakpad/processor/linked_ptr.h	/^  bool operator!=(T* p) const { return value_ != p; }$/;"	f	class:google_breakpad::linked_ptr
operator !=	src/breakpad/processor/linked_ptr.h	/^  bool operator!=(linked_ptr<U> const& ptr) const {$/;"	f	class:google_breakpad::linked_ptr
operator !=	src/breakpad/processor/linked_ptr.h	/^bool operator!=(T* ptr, const linked_ptr<T>& x) {$/;"	f	namespace:google_breakpad
operator !=	src/breakpad/processor/scoped_ptr.h	/^  bool operator!=(T* p) const {$/;"	f	class:google_breakpad::scoped_array
operator !=	src/breakpad/processor/scoped_ptr.h	/^  bool operator!=(T* p) const {$/;"	f	class:google_breakpad::scoped_ptr
operator !=	src/breakpad/processor/scoped_ptr.h	/^  bool operator!=(T* p) const {$/;"	f	class:google_breakpad::scoped_ptr_malloc
operator !=	src/breakpad/processor/scoped_ptr.h	/^bool operator!=(T* p, const scoped_array<T>& b) {$/;"	f	namespace:google_breakpad
operator !=	src/breakpad/processor/scoped_ptr.h	/^bool operator!=(T* p, const scoped_ptr<T>& b) {$/;"	f	namespace:google_breakpad
operator !=	src/breakpad/processor/scoped_ptr.h	/^bool operator!=(T* p, const scoped_ptr_malloc<T,FP>& b) {$/;"	f	namespace:google_breakpad
operator !=	src/breakpad/processor/static_map_iterator-inl.h	/^bool StaticMapIterator<Key, Value, Compare>::operator!=($/;"	f	class:google_breakpad::StaticMapIterator
operator !=	src/jsoncpp/include/json/value.h	/^      bool operator !=( const SelfType &other ) const$/;"	f	class:Json::ValueIteratorBase
operator !=	src/jsoncpp/src/json_value.cpp	/^Value::operator !=( const Value &other ) const$/;"	f	class:Json::Value
operator &	src/breakpad/processor/logging.h	/^  void operator&(std::ostream &) {}$/;"	f	class:google_breakpad::LogMessageVoidify
operator &	swig/sanguosha_wrap.cxx	/^  T *operator&() { return pointer.ptr; }$/;"	f	class:SwigValueWrapper
operator ()	src/breakpad/processor/scoped_ptr.h	/^  inline void operator()(void* x) const {$/;"	f	class:google_breakpad::ScopedPtrMallocFree
operator ()	src/breakpad/processor/source_line_resolver_base.cc	/^bool SourceLineResolverBase::CompareString::operator()($/;"	f	class:google_breakpad::SourceLineResolverBase::CompareString
operator ()	src/breakpad/processor/static_map.h	/^  int operator()(const Key &k1, const Key &k2) const {$/;"	f	class:google_breakpad::DefaultCompare
operator *	src/breakpad/processor/linked_ptr.h	/^  T& operator*() const { return *value_; }$/;"	f	class:google_breakpad::linked_ptr
operator *	src/breakpad/processor/scoped_ptr.h	/^  T& operator*() const {$/;"	f	class:google_breakpad::scoped_ptr
operator *	src/breakpad/processor/scoped_ptr.h	/^  T& operator*() const {$/;"	f	class:google_breakpad::scoped_ptr_malloc
operator *	src/jsoncpp/include/json/value.h	/^      reference operator *() const$/;"	f	class:Json::ValueConstIterator
operator *	src/jsoncpp/include/json/value.h	/^      reference operator *() const$/;"	f	class:Json::ValueIterator
operator ++	src/breakpad/processor/static_map_iterator-inl.h	/^StaticMapIterator<Key, Value, Compare>::operator++() {$/;"	f	class:google_breakpad::StaticMapIterator
operator ++	src/breakpad/processor/static_map_iterator-inl.h	/^StaticMapIterator<Key, Value, Compare>::operator++(int postfix_operator) {$/;"	f	class:google_breakpad::StaticMapIterator
operator ++	src/jsoncpp/include/json/value.h	/^      SelfType &operator++()$/;"	f	class:Json::ValueConstIterator
operator ++	src/jsoncpp/include/json/value.h	/^      SelfType &operator++()$/;"	f	class:Json::ValueIterator
operator ++	src/jsoncpp/include/json/value.h	/^      SelfType operator++( int )$/;"	f	class:Json::ValueConstIterator
operator ++	src/jsoncpp/include/json/value.h	/^      SelfType operator++( int )$/;"	f	class:Json::ValueIterator
operator -	src/jsoncpp/include/json/value.h	/^      difference_type operator -( const SelfType &other ) const$/;"	f	class:Json::ValueIteratorBase
operator --	src/breakpad/processor/static_map_iterator-inl.h	/^StaticMapIterator<Key, Value, Compare>::operator--() {$/;"	f	class:google_breakpad::StaticMapIterator
operator --	src/breakpad/processor/static_map_iterator-inl.h	/^StaticMapIterator<Key, Value, Compare>::operator--(int postfix_operator) {$/;"	f	class:google_breakpad::StaticMapIterator
operator --	src/jsoncpp/include/json/value.h	/^      SelfType &operator--()$/;"	f	class:Json::ValueConstIterator
operator --	src/jsoncpp/include/json/value.h	/^      SelfType &operator--()$/;"	f	class:Json::ValueIterator
operator --	src/jsoncpp/include/json/value.h	/^      SelfType operator--( int )$/;"	f	class:Json::ValueConstIterator
operator --	src/jsoncpp/include/json/value.h	/^      SelfType operator--( int )$/;"	f	class:Json::ValueIterator
operator ->	src/breakpad/common/windows/pdb_source_line_writer.cc	/^  PLOADED_IMAGE operator->() { return img_; }$/;"	f	class:google_breakpad::AutoImage
operator ->	src/breakpad/processor/linked_ptr.h	/^  T* operator->() const { return value_; }$/;"	f	class:google_breakpad::linked_ptr
operator ->	src/breakpad/processor/scoped_ptr.h	/^  T* operator->() const  {$/;"	f	class:google_breakpad::scoped_ptr
operator ->	src/breakpad/processor/scoped_ptr.h	/^  T* operator->() const {$/;"	f	class:google_breakpad::scoped_ptr_malloc
operator <	src/core/structs.h	/^    inline bool operator < (const CardsMoveStruct &other) const$/;"	f	struct:CardsMoveStruct
operator <	src/jsoncpp/src/json_value.cpp	/^Value::CZString::operator<( const CZString &other ) const $/;"	f	class:Json::Value::CZString
operator <	src/jsoncpp/src/json_value.cpp	/^Value::operator <( const Value &other ) const$/;"	f	class:Json::Value
operator <	src/server/room.h	/^        inline bool operator < (const _MoveMergeClassifier &other) const$/;"	f	struct:Room::_MoveMergeClassifier
operator <	src/server/room.h	/^        inline bool operator < (const _MoveSourceClassifier &other) const$/;"	f	struct:Room::_MoveSourceClassifier
operator <	src/ui/roomscene.h	/^        inline bool operator < (const _MoveCardsClassifier &other) const$/;"	f	struct:RoomScene::_MoveCardsClassifier
operator <<	src/breakpad/processor/binarystream.cc	/^binarystream &binarystream::operator<<(const string &str) {$/;"	f	class:google_breakpad::binarystream
operator <<	src/breakpad/processor/binarystream.cc	/^binarystream &binarystream::operator<<(u_int16_t u16) {$/;"	f	class:google_breakpad::binarystream
operator <<	src/breakpad/processor/binarystream.cc	/^binarystream &binarystream::operator<<(u_int32_t u32) {$/;"	f	class:google_breakpad::binarystream
operator <<	src/breakpad/processor/binarystream.cc	/^binarystream &binarystream::operator<<(u_int64_t u64) {$/;"	f	class:google_breakpad::binarystream
operator <<	src/breakpad/processor/binarystream.cc	/^binarystream &binarystream::operator<<(u_int8_t u8) {$/;"	f	class:google_breakpad::binarystream
operator <<	src/breakpad/processor/logging.h	/^  template<typename T> std::ostream& operator<<(const T &t) {$/;"	f	class:google_breakpad::LogStream
operator <<	src/jsoncpp/src/json_writer.cpp	/^std::ostream& operator<<( std::ostream &sout, const Value &root )$/;"	f	namespace:Json
operator <=	src/jsoncpp/src/json_value.cpp	/^Value::operator <=( const Value &other ) const$/;"	f	class:Json::Value
operator =	src/breakpad/processor/linked_ptr.h	/^  linked_ptr& operator=(linked_ptr const& ptr) {$/;"	f	class:google_breakpad::linked_ptr
operator =	src/breakpad/processor/linked_ptr.h	/^  template <typename U> linked_ptr& operator=(linked_ptr<U> const& ptr) {$/;"	f	class:google_breakpad::linked_ptr
operator =	src/jsoncpp/src/json_value.cpp	/^Value::CZString::operator =( const CZString &other )$/;"	f	class:Json::Value::CZString
operator =	src/jsoncpp/src/json_value.cpp	/^Value::operator=( const Value &other )$/;"	f	class:Json::Value
operator =	src/server/roomthread.cpp	/^JudgeStructPattern &JudgeStructPattern::operator =(const QRegExp &rx){$/;"	f	class:JudgeStructPattern
operator =	src/server/roomthread.cpp	/^JudgeStructPattern &JudgeStructPattern::operator =(const QString &str){$/;"	f	class:JudgeStructPattern
operator =	swig/sanguosha_wrap.cxx	/^    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }$/;"	f	struct:SwigValueWrapper::SwigMovePointer
operator =	swig/sanguosha_wrap.cxx	/^  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }$/;"	f	class:SwigValueWrapper
operator ==	src/breakpad/processor/linked_ptr.h	/^  bool operator==(T* p) const { return value_ == p; }$/;"	f	class:google_breakpad::linked_ptr
operator ==	src/breakpad/processor/linked_ptr.h	/^  bool operator==(linked_ptr<U> const& ptr) const {$/;"	f	class:google_breakpad::linked_ptr
operator ==	src/breakpad/processor/linked_ptr.h	/^bool operator==(T* ptr, const linked_ptr<T>& x) {$/;"	f	namespace:google_breakpad
operator ==	src/breakpad/processor/scoped_ptr.h	/^  bool operator==(T* p) const {$/;"	f	class:google_breakpad::scoped_array
operator ==	src/breakpad/processor/scoped_ptr.h	/^  bool operator==(T* p) const {$/;"	f	class:google_breakpad::scoped_ptr
operator ==	src/breakpad/processor/scoped_ptr.h	/^  bool operator==(T* p) const {$/;"	f	class:google_breakpad::scoped_ptr_malloc
operator ==	src/breakpad/processor/scoped_ptr.h	/^bool operator==(T* p, const scoped_array<T>& b) {$/;"	f	namespace:google_breakpad
operator ==	src/breakpad/processor/scoped_ptr.h	/^bool operator==(T* p, const scoped_ptr<T>& b) {$/;"	f	namespace:google_breakpad
operator ==	src/breakpad/processor/scoped_ptr.h	/^bool operator==(T* p, const scoped_ptr_malloc<T,FP>& b) {$/;"	f	namespace:google_breakpad
operator ==	src/breakpad/processor/static_map_iterator-inl.h	/^bool StaticMapIterator<Key, Value, Compare>::operator==($/;"	f	class:google_breakpad::StaticMapIterator
operator ==	src/core/structs.h	/^    inline bool operator == (const CardsMoveStruct &other) const$/;"	f	struct:CardsMoveStruct
operator ==	src/jsoncpp/include/json/value.h	/^      bool operator ==( const SelfType &other ) const$/;"	f	class:Json::ValueIteratorBase
operator ==	src/jsoncpp/src/json_value.cpp	/^Value::CZString::operator==( const CZString &other ) const $/;"	f	class:Json::Value::CZString
operator ==	src/jsoncpp/src/json_value.cpp	/^Value::operator ==( const Value &other ) const$/;"	f	class:Json::Value
operator ==	src/server/room.h	/^        inline bool operator == (const _MoveMergeClassifier &other) const$/;"	f	struct:Room::_MoveMergeClassifier
operator ==	src/server/room.h	/^        inline bool operator == (const _MoveSourceClassifier &other) const$/;"	f	struct:Room::_MoveSourceClassifier
operator ==	src/ui/roomscene.h	/^        inline bool operator == (const _MoveCardsClassifier &other) const$/;"	f	struct:RoomScene::_MoveCardsClassifier
operator >	src/jsoncpp/src/json_value.cpp	/^Value::operator >( const Value &other ) const$/;"	f	class:Json::Value
operator >=	src/jsoncpp/src/json_value.cpp	/^Value::operator >=( const Value &other ) const$/;"	f	class:Json::Value
operator >>	src/breakpad/processor/binarystream.cc	/^binarystream &binarystream::operator>>(string &str) {$/;"	f	class:google_breakpad::binarystream
operator >>	src/breakpad/processor/binarystream.cc	/^binarystream &binarystream::operator>>(u_int16_t &u16) {$/;"	f	class:google_breakpad::binarystream
operator >>	src/breakpad/processor/binarystream.cc	/^binarystream &binarystream::operator>>(u_int32_t &u32) {$/;"	f	class:google_breakpad::binarystream
operator >>	src/breakpad/processor/binarystream.cc	/^binarystream &binarystream::operator>>(u_int64_t &u64) {$/;"	f	class:google_breakpad::binarystream
operator >>	src/breakpad/processor/binarystream.cc	/^binarystream &binarystream::operator>>(u_int8_t &u8) {$/;"	f	class:google_breakpad::binarystream
operator >>	src/jsoncpp/src/json_reader.cpp	/^std::istream& operator>>( std::istream &sin, Value &root )$/;"	f	namespace:Json
operator PLOADED_IMAGE	src/breakpad/common/windows/pdb_source_line_writer.cc	/^  operator PLOADED_IMAGE() { return img_; }$/;"	f	class:google_breakpad::AutoImage
operator T&	swig/sanguosha_wrap.cxx	/^  operator T&() const { return *pointer.ptr; }$/;"	f	class:SwigValueWrapper
operator []	src/breakpad/processor/scoped_ptr.h	/^  T& operator[](std::ptrdiff_t i) const {$/;"	f	class:google_breakpad::scoped_array
operator []	src/jsoncpp/src/json_value.cpp	/^Value::operator[]( ArrayIndex index ) const$/;"	f	class:Json::Value
operator []	src/jsoncpp/src/json_value.cpp	/^Value::operator[]( ArrayIndex index )$/;"	f	class:Json::Value
operator []	src/jsoncpp/src/json_value.cpp	/^Value::operator[]( const CppTL::ConstString &key ) const$/;"	f	class:Json::Value
operator []	src/jsoncpp/src/json_value.cpp	/^Value::operator[]( const CppTL::ConstString &key )$/;"	f	class:Json::Value
operator []	src/jsoncpp/src/json_value.cpp	/^Value::operator[]( const StaticString &key )$/;"	f	class:Json::Value
operator []	src/jsoncpp/src/json_value.cpp	/^Value::operator[]( const char *key ) const$/;"	f	class:Json::Value
operator []	src/jsoncpp/src/json_value.cpp	/^Value::operator[]( const char *key )$/;"	f	class:Json::Value
operator []	src/jsoncpp/src/json_value.cpp	/^Value::operator[]( const std::string &key ) const$/;"	f	class:Json::Value
operator []	src/jsoncpp/src/json_value.cpp	/^Value::operator[]( const std::string &key )$/;"	f	class:Json::Value
operator []	src/jsoncpp/src/json_value.cpp	/^Value::operator[]( int index ) const$/;"	f	class:Json::Value
operator []	src/jsoncpp/src/json_value.cpp	/^Value::operator[]( int index )$/;"	f	class:Json::Value
operator const char *	src/jsoncpp/include/json/value.h	/^      operator const char *() const$/;"	f	class:Json::StaticString
opmode	src/lua/lopcodes.c	59;"	d	file:
order	src/server/roomthread.h	/^    QString order;$/;"	m	class:RoomThread
ordering	include/freetype/freetype/t1tables.h	/^    FT_String*      ordering;$/;"	m	struct:CID_FaceInfoRec_
org	include/freetype/freetype/internal/tttypes.h	/^    FT_Vector*  org;         \/* original point coordinates  *\/$/;"	m	struct:TT_GlyphZoneRec_
orus	include/freetype/freetype/internal/tttypes.h	/^    FT_Vector*  orus;        \/* original (unscaled) point coordinates *\/$/;"	m	struct:TT_GlyphZoneRec_
os	include/js.h	/^  struct os_specific_s *os ;$/;"	m	class:jsJoystick	typeref:struct:jsJoystick::os_specific_s
os	src/breakpad/google_breakpad/processor/system_info.h	/^  string os;$/;"	m	struct:google_breakpad::SystemInfo
os2	include/freetype/freetype/internal/tttypes.h	/^    TT_OS2                os2;          \/* TrueType OS\/2 table            *\/$/;"	m	struct:TT_FaceRec_
os_clock	src/lua/loslib.c	/^static int os_clock (lua_State *L) {$/;"	f	file:
os_date	src/lua/loslib.c	/^static int os_date (lua_State *L) {$/;"	f	file:
os_difftime	src/lua/loslib.c	/^static int os_difftime (lua_State *L) {$/;"	f	file:
os_execute	src/lua/loslib.c	/^static int os_execute (lua_State *L) {$/;"	f	file:
os_exit	src/lua/loslib.c	/^static int os_exit (lua_State *L) {$/;"	f	file:
os_getenv	src/lua/loslib.c	/^static int os_getenv (lua_State *L) {$/;"	f	file:
os_pushresult	src/lua/loslib.c	/^static int os_pushresult (lua_State *L, int i, const char *filename) {$/;"	f	file:
os_remove	src/lua/loslib.c	/^static int os_remove (lua_State *L) {$/;"	f	file:
os_rename	src/lua/loslib.c	/^static int os_rename (lua_State *L) {$/;"	f	file:
os_setlocale	src/lua/loslib.c	/^static int os_setlocale (lua_State *L) {$/;"	f	file:
os_short	src/breakpad/google_breakpad/processor/system_info.h	/^  string os_short;$/;"	m	struct:google_breakpad::SystemInfo
os_time	src/lua/loslib.c	/^static int os_time (lua_State *L) {$/;"	f	file:
os_tmpname	src/lua/loslib.c	/^static int os_tmpname (lua_State *L) {$/;"	f	file:
os_version	src/breakpad/google_breakpad/processor/system_info.h	/^  string os_version;$/;"	m	struct:google_breakpad::SystemInfo
other	include/fmod/fmod_memoryinfo.h	/^    unsigned int other;                          \/* [out] Memory not accounted for by other types *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
other	include/freetype/freetype/freetype.h	/^    void*             other;$/;"	m	struct:FT_GlyphSlotRec_
other	include/freetype/freetype/internal/ftgloadr.h	/^    void*            other;            \/* for possible future extension? *\/$/;"	m	struct:FT_GlyphLoaderRec_
other	include/freetype/freetype/internal/tttypes.h	/^    void*            other;$/;"	m	struct:TT_LoaderRec_
other_blues	include/freetype/freetype/t1tables.h	/^    FT_Short   other_blues[10];$/;"	m	struct:PS_PrivateRec_
other_cpu_info	src/breakpad/google_breakpad/common/minidump_format.h	/^  } other_cpu_info;$/;"	m	union:__anon36	typeref:struct:__anon36::__anon38
otherwhite	src/lua/lgc.h	69;"	d
otv_validate_func	include/freetype/freetype/internal/services/svotval.h	/^  (*otv_validate_func)( FT_Face volatile  face,$/;"	t
outimg	src/ui/button.h	/^    QImage *outimg;$/;"	m	class:Button
outimg	src/ui/window.h	/^    QImage *outimg;$/;"	m	class:Window
outline	include/freetype/freetype/freetype.h	/^    FT_Outline        outline;$/;"	m	struct:FT_GlyphSlotRec_
outline	include/freetype/freetype/ftglyph.h	/^    FT_Outline   outline;$/;"	m	struct:FT_OutlineGlyphRec_
outline	include/freetype/freetype/ftoutln.h	/^  FT_Outline_Check( FT_Outline*  outline );$/;"	v
outline	include/freetype/freetype/ftoutln.h	/^  FT_Outline_Get_Orientation( FT_Outline*  outline );$/;"	v
outline	include/freetype/freetype/ftoutln.h	/^  FT_Outline_Reverse( FT_Outline*  outline );$/;"	v
outline	include/freetype/freetype/ftstroke.h	/^  FT_Outline_GetInsideBorder( FT_Outline*  outline );$/;"	v
outline	include/freetype/freetype/ftstroke.h	/^  FT_Outline_GetOutsideBorder( FT_Outline*  outline );$/;"	v
outline	include/freetype/freetype/internal/ftgloadr.h	/^    FT_Outline   outline;       \/* outline                   *\/$/;"	m	struct:FT_GlyphLoadRec_
outline	src/dialog/cardeditor.h	/^    int outline;$/;"	m	class:BlackEdgeTextItem
output	include/fmod/fmod_memoryinfo.h	/^    unsigned int output;                         \/* [out] Output module object and internals *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
output	src/server/room.cpp	/^void Room::output(const QString &message){$/;"	f	class:Room
outputEventStack	src/server/room.cpp	/^void Room::outputEventStack(){$/;"	f	class:Room
outputPlayersEvaluation	lua/ai/debug-ai.lua	/^function outputPlayersEvaluation()$/;"	f
output_	src/breakpad/common/windows/pdb_source_line_writer.h	/^  FILE *output_;$/;"	m	class:google_breakpad::PDBSourceLineWriter
overlapped_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  OVERLAPPED overlapped_;$/;"	m	class:google_breakpad::CrashGenerationServer
override	lua/lib/socket/ftp.lua	/^local function override(t)$/;"	f
own	swig/sanguosha_wrap.cxx	/^  int     own;  \/* 1 if owned & must be destroyed *\/$/;"	m	struct:__anon149	file:
own	swig/sanguosha_wrap.cxx	/^  int     own;  \/* 1 if owned & must be destroyed *\/$/;"	m	struct:__anon150	file:
owndata	swig/sanguosha_wrap.cxx	/^  int                    owndata;		\/* flag if the structure owns the clientdata *\/$/;"	m	struct:swig_type_info	file:
owner	src/core/player.h	/^    bool owner;$/;"	m	class:Player
owner_map	src/server/room.h	/^    QMap<int, ServerPlayer*> owner_map;$/;"	m	class:Room
p	src/lua/lauxlib.h	/^  char *p;			\/* current position in buffer *\/$/;"	m	struct:luaL_Buffer
p	src/lua/lobject.h	/^  struct Proto **p;  \/* functions defined inside the function *\/$/;"	m	struct:Proto	typeref:struct:Proto::Proto
p	src/lua/lobject.h	/^  struct Proto *p;$/;"	m	struct:LClosure	typeref:struct:LClosure::Proto
p	src/lua/lobject.h	/^  void *p;$/;"	m	union:__anon90
p	src/lua/lstate.h	/^  struct Proto p;$/;"	m	union:GCObject	typeref:struct:GCObject::Proto
p	src/lua/lzio.h	/^  const char *p;		\/* current position in buffer *\/$/;"	m	struct:Zio
p1_home	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  p1_home;$/;"	m	struct:__anon56
p2_home	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  p2_home;$/;"	m	struct:__anon56
p3_home	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  p3_home;$/;"	m	struct:__anon56
p4_home	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  p4_home;$/;"	m	struct:__anon56
p5_home	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  p5_home;$/;"	m	struct:__anon56
p6_home	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  p6_home;$/;"	m	struct:__anon56
package_list	src/dialog/packagingeditor.h	/^    QListWidget *package_list;$/;"	m	class:PackagingEditor
package_list_meta	src/dialog/packagingeditor.h	/^    MetaInfoWidget *package_list_meta;$/;"	m	class:PackagingEditor
packages	src/package/package.cpp	/^PackageHash& PackageAdder::packages(){$/;"	f	class:PackageAdder
pads	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  pads[2];$/;"	m	struct:TT_SBit_LineMetricsRec_
pageCount_	src/jsoncpp/include/json/value.h	/^      PageIndex pageCount_;$/;"	m	class:Json::ValueInternalArray
pageDown	src/dialog/halldialog.cpp	/^void HallDialog::pageDown(){$/;"	f	class:HallDialog
pageUp	src/dialog/halldialog.cpp	/^void HallDialog::pageUp(){$/;"	f	class:HallDialog
pages_	src/jsoncpp/include/json/value.h	/^      Value **pages_;$/;"	m	class:Json::ValueInternalArray
paint	src/dialog/cardeditor.cpp	/^void AATextItem::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget){$/;"	f	class:AATextItem
paint	src/dialog/cardeditor.cpp	/^void BlackEdgeTextItem::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget){$/;"	f	class:BlackEdgeTextItem
paint	src/dialog/cardeditor.cpp	/^void SkillBox::paint(QPainter *painter, const QStyleOptionGraphicsItem *, QWidget *){$/;"	f	class:SkillBox
paint	src/ui/QSanSelectableItem.cpp	/^void QSanSelectableItem::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget){$/;"	f	class:QSanSelectableItem
paint	src/ui/TablePile.h	/^    inline virtual void paint(QPainter *,const QStyleOptionGraphicsItem *,QWidget *) {}    $/;"	f	class:TablePile
paint	src/ui/button.cpp	/^void Button::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget){$/;"	f	class:Button
paint	src/ui/cardcontainer.cpp	/^void CardContainer::paint(QPainter *painter,const QStyleOptionGraphicsItem *,QWidget *)$/;"	f	class:CardContainer
paint	src/ui/carditem.cpp	/^void CardItem::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget){$/;"	f	class:CardItem
paint	src/ui/chatwidget.cpp	/^void ChatWidget::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget){$/;"	f	class:ChatWidget
paint	src/ui/chatwidget.cpp	/^void MyPixmapItem::paint(QPainter *painter, const QStyleOptionGraphicsItem*, QWidget*)$/;"	f	class:MyPixmapItem
paint	src/ui/dashboard.cpp	/^void Dashboard::paint(QPainter *painter, const QStyleOptionGraphicsItem *, QWidget *){$/;"	f	class:Dashboard
paint	src/ui/indicatoritem.cpp	/^void IndicatorItem::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget){$/;"	f	class:IndicatorItem
paint	src/ui/magatamasItem.cpp	/^void MagatamasBoxItem::paint(QPainter* painter, const QStyleOptionGraphicsItem* option, QWidget* widget)$/;"	f	class:MagatamasBoxItem
paint	src/ui/photo.cpp	/^void Photo::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget){$/;"	f	class:Photo
paint	src/ui/pixmapanimation.cpp	/^void PixmapAnimation::paint(QPainter *painter, const QStyleOptionGraphicsItem *, QWidget *)$/;"	f	class:PixmapAnimation
paint	src/ui/qsanbutton.cpp	/^void QSanButton::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget){$/;"	f	class:QSanButton
paint	src/ui/qsanbutton.cpp	/^void QSanInvokeSkillButton::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)$/;"	f	class:QSanInvokeSkillButton
paint	src/ui/qsanbutton.h	/^    virtual void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) {}    $/;"	f	class:QSanInvokeSkillDock
paint	src/ui/rolecombobox.cpp	/^void RoleComboBox::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)$/;"	f	class:RoleComboBox
paint	src/ui/window.cpp	/^void Window::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget){$/;"	f	class:Window
paintByMask	src/ui/GenericCardContainerUI.cpp	/^QPixmap PlayerCardContainer::paintByMask(QPixmap &source){$/;"	f	class:PlayerCardContainer
paintEvent	src/ui/TimedProgressBar.cpp	/^void QSanCommandProgressBar::paintEvent(QPaintEvent *e)$/;"	f	class:QSanCommandProgressBar
paintQString	src/ui/uiUtils.cpp	/^bool QSanUiUtils::QSanFreeTypeFont::paintQString($/;"	f	class:QSanUiUtils::QSanFreeTypeFont
paintQStringMultiLine	src/ui/uiUtils.cpp	/^bool QSanUiUtils::QSanFreeTypeFont::paintQStringMultiLine($/;"	f	class:QSanUiUtils::QSanFreeTypeFont
paintText	src/ui/SkinBank.cpp	/^void IQSanComponentSkin::QSanShadowTextFont::paintText(QGraphicsPixmapItem* pixmapItem,$/;"	f	class:IQSanComponentSkin::QSanShadowTextFont
paintText	src/ui/SkinBank.cpp	/^void IQSanComponentSkin::QSanShadowTextFont::paintText(QPainter* painter, QRect pos,$/;"	f	class:IQSanComponentSkin::QSanShadowTextFont
paintText	src/ui/SkinBank.cpp	/^void IQSanComponentSkin::QSanSimpleTextFont::paintText(QGraphicsPixmapItem* item, QRect pos,$/;"	f	class:IQSanComponentSkin::QSanSimpleTextFont
paintText	src/ui/SkinBank.cpp	/^void IQSanComponentSkin::QSanSimpleTextFont::paintText(QPainter* painter, QRect pos, Qt::Alignment align,$/;"	f	class:IQSanComponentSkin::QSanSimpleTextFont
paint_type	include/freetype/freetype/internal/t1types.h	/^    FT_Byte          paint_type;$/;"	m	struct:T1_FontRec_
paint_type	include/freetype/freetype/t1tables.h	/^    FT_Byte        paint_type;$/;"	m	struct:CID_FaceDictRec_
pair_choose	src/dialog/choosegeneraldialog.h	/^    bool pair_choose;$/;"	m	class:FreeChooseDialog
pairs	src/util/recorder.h	/^    QList<Pair> pairs;$/;"	m	class:Replayer
paiyi_skill.getTurnUseCard 	lua/ai/yjcm-ai.lua	/^paiyi_skill.getTurnUseCard = function(self)$/;"	f
palette	include/freetype/freetype/ftimage.h	/^    void*           palette;$/;"	m	struct:FT_Bitmap_
palette_mode	include/freetype/freetype/ftimage.h	/^    char            palette_mode;$/;"	m	struct:FT_Bitmap_
panic	src/lua/lauxlib.c	/^static int panic (lua_State *L) {$/;"	f	file:
panic	src/lua/lstate.h	/^  lua_CFunction panic;  \/* to be called in unprotected errors *\/$/;"	m	struct:global_State
panose	include/freetype/freetype/tttables.h	/^    FT_Byte    panose[10];$/;"	m	struct:TT_OS2_
paramdesc	include/fmod/fmod_dsp.h	/^    FMOD_DSP_PARAMETERDESC      *paramdesc;          \/* [w] Variable number of parameter structures. *\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
parameter_size	src/breakpad/processor/source_line_resolver_base_types.h	/^  int32_t parameter_size;$/;"	m	struct:google_breakpad::SourceLineResolverBase::Function
parameter_size	src/breakpad/processor/source_line_resolver_base_types.h	/^  int32_t parameter_size;$/;"	m	struct:google_breakpad::SourceLineResolverBase::PublicSymbol
parameter_size	src/breakpad/processor/windows_frame_info.h	/^  u_int32_t parameter_size;$/;"	m	struct:google_breakpad::WindowsFrameInfo
params	include/freetype/freetype/freetype.h	/^    FT_Parameter*   params;$/;"	m	struct:FT_Open_Args_
parlist	src/lua/lparser.c	/^static void parlist (LexState *ls) {$/;"	f	file:
parse	include/freetype/freetype/internal/psaux.h	/^    (*parse)( AFM_Parser  parser );$/;"	m	struct:AFM_Parser_FuncsRec_
parse	lua/lib/socket/ftp.lua	/^local function parse(u)$/;"	f
parse	lua/lib/socket/url.lua	/^function parse(url, default)$/;"	f
parse	src/client/clientstruct.cpp	/^bool ServerInfoStruct::parse(const QString &str){$/;"	f	class:ServerInfoStruct
parse	src/core/protocol.cpp	/^bool QSanProtocol::QSanGeneralPacket::parse(const string &s)$/;"	f	class:QSanProtocol::QSanGeneralPacket
parse	src/jsoncpp/src/json_reader.cpp	/^Reader::parse( const char *beginDoc, const char *endDoc, $/;"	f	class:Json::Reader
parse	src/jsoncpp/src/json_reader.cpp	/^Reader::parse( const std::string &document, $/;"	f	class:Json::Reader
parse	src/jsoncpp/src/json_reader.cpp	/^Reader::parse( std::istream& sin,$/;"	f	class:Json::Reader
parse	src/server/roomthread.cpp	/^void CardUseStruct::parse(const QString &str, Room *room){$/;"	f	class:CardUseStruct
parseBody	src/core/protocol.h	/^        inline virtual bool parseBody(const Json::Value &value) { m_msgBody = value; return true; }$/;"	f	class:QSanProtocol::QSanGeneralPacket
parse_callback	include/freetype/freetype/internal/psaux.h	/^    T1_Decoder_Callback  parse_callback;$/;"	m	struct:T1_DecoderRec_
parse_charstrings	include/freetype/freetype/internal/psaux.h	/^    (*parse_charstrings)( T1_Decoder  decoder,$/;"	m	struct:T1_Decoder_FuncsRec_
parse_path	lua/lib/socket/url.lua	/^function parse_path(path)$/;"	f
parse_state	include/freetype/freetype/internal/psaux.h	/^    T1_ParseState   parse_state;$/;"	m	struct:T1_BuilderRec_
parser	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  CFIRuleParser parser;$/;"	m	class:CFIParserFixture	file:
password	include/freetype/freetype/t1tables.h	/^    FT_Long    password;$/;"	m	struct:PS_PrivateRec_
password	src/server/contestdb.h	/^        QString password;$/;"	m	struct:ContestDB::Member
patchlistaux	src/lua/lcode.c	/^static void patchlistaux (FuncState *fs, int list, int vtarget, int reg,$/;"	f	file:
patchtestreg	src/lua/lcode.c	/^static int patchtestreg (FuncState *fs, int node, int reg) {$/;"	f	file:
path	src/breakpad/google_breakpad/processor/minidump.h	/^  virtual string path() const {$/;"	f	class:google_breakpad::Minidump
path	src/ui/pixmapanimation.h	/^    QString path;$/;"	m	class:PixmapAnimation
path 	lua/lib/socket/url.lua	/^        path = string.gsub(reduced, "([^\/]*\/%.%.\/)", function (s)$/;"	f
path 	lua/lib/socket/url.lua	/^    path = string.gsub(path, "([^\/]*%.\/)", function (s)$/;"	f
path 	lua/lib/socket/url.lua	/^    path = string.gsub(reduced, "([^\/]*\/%.%.)$", function (s)$/;"	f
path_	src/breakpad/google_breakpad/processor/minidump.h	/^  const string              path_;$/;"	m	class:google_breakpad::Minidump
pathname	include/freetype/freetype/freetype.h	/^    FT_String*      pathname;$/;"	m	struct:FT_Open_Args_
pathname	include/freetype/freetype/ftsystem.h	/^    FT_StreamDesc        pathname;$/;"	m	struct:FT_StreamRec_
paths_	src/breakpad/processor/simple_symbol_supplier.h	/^  vector<string> paths_;$/;"	m	class:google_breakpad::SimpleSymbolSupplier
pattern	src/client/aux-skills.h	/^    const CardPattern *pattern;$/;"	m	class:ResponseSkill
pattern	src/core/structs.h	/^    JudgeStructPattern pattern;$/;"	m	struct:JudgeStruct
pattern	src/core/structs.h	/^    QString pattern;$/;"	m	class:JudgeStructPattern
patterns	src/core/engine.h	/^    QMap<QString, const CardPattern *> patterns;$/;"	m	class:Engine
patterns	src/package/package.h	/^    QMap<QString, const CardPattern *> patterns;$/;"	m	class:Package
pc	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	/^  u_int64_t     pc;     \/* Program Counter register (PC) *\/$/;"	m	struct:__anon64
pc	src/breakpad/processor/cfi_frame_info_unittest.cc	/^    u_int64_t r0, r1, r2, r3, r4, sp, pc;$/;"	m	struct:SimpleCFIWalkerFixture::RawContext	file:
pc	src/lua/lparser.h	/^  int pc;  \/* next position to code (equivalent to `ncode') *\/$/;"	m	struct:FuncState
pcRel	src/lua/ldebug.h	14;"	d
pclt	include/freetype/freetype/internal/tttypes.h	/^    TT_PCLT               pclt;$/;"	m	struct:TT_FaceRec_
pcmreadcallback	include/fmod/fmod.h	/^    FMOD_SOUND_PCMREADCALLBACK     pcmreadcallback;    \/* [w] Optional. Specify 0 to ignore. Callback to 'piggyback' on FMOD's read functions and accept or even write PCM data while FMOD is opening the sound.  Used for user sounds created with FMOD_OPENUSER or for capturing decoded data as FMOD reads it. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
pcmsetposcallback	include/fmod/fmod.h	/^    FMOD_SOUND_PCMSETPOSCALLBACK   pcmsetposcallback;  \/* [w] Optional. Specify 0 to ignore. Callback for when the user calls a seeking function such as Channel::setTime or Channel::setPosition within a multi-sample sound, and for when it is opened.*\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
pdb_file_name	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int8_t   pdb_file_name[1];  \/* Pathname or filename of PDB file *\/$/;"	m	struct:__anon28
pdb_file_name	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int8_t  pdb_file_name[1];  \/* Pathname or filename of PDB file,$/;"	m	struct:__anon29
peaching_skill.getTurnUseCard	lua/ai/zombie_mode-ai.lua	/^	function peaching_skill.getTurnUseCard(self)$/;"	f
peek	src/server/room.cpp	/^const Card *Room::peek(){$/;"	f	class:Room
peerAddress	src/util/nativesocket.cpp	/^QString NativeClientSocket::peerAddress() const{$/;"	f	class:NativeClientSocket
peerName	src/util/nativesocket.cpp	/^QString NativeClientSocket::peerName() const{$/;"	f	class:NativeClientSocket
pendingCard	src/ui/dashboard.cpp	/^const Card *Dashboard::pendingCard() const{$/;"	f	class:Dashboard
pending_card	src/ui/dashboard.h	/^    const Card *pending_card;$/;"	m	class:Dashboard
pendings	src/ui/dashboard.h	/^    QList<CardItem *> pendings;$/;"	m	class:Dashboard
perform	src/package/god.cpp	/^    void perform(ServerPlayer *shenzhouyu) const{$/;"	f	class:Qinyin
phase	src/core/player.h	/^    Phase phase;$/;"	m	class:Player
phase	src/core/structs.h	/^    Player::Phase phase;$/;"	m	struct:PhaseStruct
phases	src/server/serverplayer.h	/^    QList<Phase> phases;$/;"	m	class:ServerPlayer
photo	src/dialog/cardeditor.h	/^    QSanSelectableItem *photo;$/;"	m	class:CardScene
photos	src/ui/roomscene.h	/^    QList<Photo*> photos;$/;"	m	class:RoomScene
pic_container	include/freetype/freetype/internal/ftobjs.h	/^    FT_PIC_Container   pic_container;$/;"	m	struct:FT_LibraryRec_
pid	src/breakpad/client/windows/crash_generation/client_info.h	/^  DWORD pid() const { return pid_; }$/;"	f	class:google_breakpad::ClientInfo
pid_	src/breakpad/client/windows/crash_generation/client_info.h	/^  DWORD pid_;$/;"	m	class:google_breakpad::ClientInfo
pile	src/client/client.cpp	/^void Client::pile(const QString &pile_str){$/;"	f	class:Client
pile1	src/server/room.h	/^    QList<int> pile1, pile2;$/;"	m	class:Room
pile2	src/server/room.h	/^    QList<int> pile1, pile2;$/;"	m	class:Room
pile_list	src/dialog/customassigndialog.h	/^    QListWidget *list, *equip_list, *hand_list, *judge_list, *pile_list;$/;"	m	class:CustomAssignDialog
pile_num	src/client/client.h	/^    int pile_num;$/;"	m	class:Client
piles	src/core/player.h	/^    QMap<QString, QList<int> > piles;$/;"	m	class:Player
pindian	src/server/serverplayer.cpp	/^bool ServerPlayer::pindian(ServerPlayer *target, const QString &reason, const Card *card1){$/;"	f	class:ServerPlayer
pipe_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  HANDLE pipe_;$/;"	m	class:google_breakpad::CrashGenerationServer
pipe_name_	src/breakpad/client/windows/crash_generation/crash_generation_client.h	/^  std::wstring pipe_name_;$/;"	m	class:google_breakpad::CrashGenerationClient
pipe_name_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  std::wstring pipe_name_;$/;"	m	class:google_breakpad::CrashGenerationServer
pipe_sec_attrs_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  SECURITY_ATTRIBUTES* pipe_sec_attrs_;$/;"	m	class:google_breakpad::CrashGenerationServer
pipe_wait_handle_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  HANDLE pipe_wait_handle_;$/;"	m	class:google_breakpad::CrashGenerationServer
pitch	include/freetype/freetype/ftcache.h	/^    FT_Short  pitch;$/;"	m	struct:FTC_SBitRec_
pitch	include/freetype/freetype/ftimage.h	/^    int             pitch;$/;"	m	struct:FT_Bitmap_
pitch_and_family	include/freetype/freetype/ftwinfnt.h	/^    FT_Byte    pitch_and_family;$/;"	m	struct:FT_WinFNT_HeaderRec_
pix_height	include/freetype/freetype/ftcache.h	/^    FT_UShort   pix_height;$/;"	m	struct:FTC_FontRec_
pix_width	include/freetype/freetype/ftcache.h	/^    FT_UShort   pix_width;$/;"	m	struct:FTC_FontRec_
pixel	include/freetype/freetype/ftcache.h	/^    FT_Int      pixel;$/;"	m	struct:FTC_ScalerRec_
pixel_height	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  pixel_height;$/;"	m	struct:FT_WinFNT_HeaderRec_
pixel_mode	include/freetype/freetype/ftimage.h	/^    char            pixel_mode;$/;"	m	struct:FT_Bitmap_
pixel_width	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  pixel_width;$/;"	m	struct:FT_WinFNT_HeaderRec_
pk_funcs	src/lua/loadlib.c	/^static const luaL_Reg pk_funcs[] = {$/;"	v	file:
place_map	src/server/room.h	/^    QMap<int, Player::Place> place_map;$/;"	m	class:Room
platformID	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  platformID;$/;"	m	struct:TT_NameEntryRec_
platform_id	include/freetype/freetype/freetype.h	/^    FT_UShort    platform_id;$/;"	m	struct:FT_CharMapRec_
platform_id	include/freetype/freetype/ftsnames.h	/^    FT_UShort  platform_id;$/;"	m	struct:FT_SfntName_
platform_id	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t        platform_id;$/;"	m	struct:__anon39
play	src/core/audio.cpp	/^    void play(){$/;"	f	class:Sound
play	src/core/audio.cpp	/^void Audio::play(const QString &filename){$/;"	f	class:Audio
play	src/server/serverplayer.cpp	/^void ServerPlayer::play(QList<Player::Phase> set_phases){$/;"	f	class:ServerPlayer
playAudioEffect	src/core/engine.cpp	/^void Engine::playAudioEffect(const QString &filename) const{$/;"	f	class:Engine
playAudioEffect	src/core/skill.cpp	/^void Skill::playAudioEffect(int index) const{$/;"	f	class:Skill
playAudioEffect	src/dialog/generaloverview.cpp	/^void GeneralOverview::playAudioEffect()$/;"	f	class:GeneralOverview
playAudioEffect	src/package/mountainpackage.cpp	/^    static void playAudioEffect(ServerPlayer *zuoci, const QString &skill_name){$/;"	f	class:Huashen
playBGM	src/core/audio.cpp	/^void Audio::playBGM(const QString &filename){$/;"	f	class:Audio
playSkillAudioEffect	src/core/engine.cpp	/^void Engine::playSkillAudioEffect(const QString &skill_name, int index) const{$/;"	f	class:Engine
playSystemAudioEffect	src/client/client.cpp	/^void Client::playSystemAudioEffect(const QString &effect_str){$/;"	f	class:Client
playSystemAudioEffect	src/core/engine.cpp	/^void Engine::playSystemAudioEffect(const QString &name) const{$/;"	f	class:Engine
play_animation	src/core/structs.h	/^    bool play_animation;$/;"	m	struct:JudgeStruct
play_sem	src/util/recorder.h	/^    QSemaphore play_sem;$/;"	m	class:Replayer
player	src/dialog/playercarddialog.h	/^    const ClientPlayer *player;$/;"	m	class:PlayerCardDialog
playerShowed	src/server/gamerule.cpp	/^void BasaraMode::playerShowed(ServerPlayer *player) const{$/;"	f	class:BasaraMode
player_chained	src/dialog/customassigndialog.h	/^    QMap<QString, bool> player_turned, player_chained;$/;"	m	class:CustomAssignDialog
player_count	src/server/room.h	/^    int player_count;$/;"	m	class:Room
player_count_label	src/client/clientstruct.h	/^    QLabel *player_count_label;$/;"	m	class:ServerInfoWidget
player_draw	src/dialog/customassigndialog.h	/^    QSpinBox *player_draw, *marks_count;$/;"	m	class:CustomAssignDialog
player_equips	src/dialog/customassigndialog.h	/^    QMap<QString, QList<int> > player_equips, player_handcards, player_judges;$/;"	m	class:CustomAssignDialog
player_exskills	src/dialog/customassigndialog.h	/^    QMap<QString, QStringList> player_exskills;$/;"	m	class:CustomAssignDialog
player_handcards	src/dialog/customassigndialog.h	/^    QMap<QString, QList<int> > player_equips, player_handcards, player_judges;$/;"	m	class:CustomAssignDialog
player_hp	src/dialog/customassigndialog.h	/^    QMap<QString, int> player_maxhp, player_hp;$/;"	m	class:CustomAssignDialog
player_judges	src/dialog/customassigndialog.h	/^    QMap<QString, QList<int> > player_equips, player_handcards, player_judges;$/;"	m	class:CustomAssignDialog
player_mapping	src/dialog/customassigndialog.h	/^    QMap<int, QString> player_mapping;$/;"	m	class:CustomAssignDialog
player_marks	src/dialog/customassigndialog.h	/^    QMap<QString, QMap<QString, int> > player_marks;$/;"	m	class:CustomAssignDialog
player_maxhp	src/dialog/customassigndialog.h	/^    QMap<QString, int> player_maxhp, player_hp;$/;"	m	class:CustomAssignDialog
player_start_draw	src/dialog/customassigndialog.h	/^    QMap<QString, int> player_start_draw;$/;"	m	class:CustomAssignDialog
player_turned	src/dialog/customassigndialog.h	/^    QMap<QString, bool> player_turned, player_chained;$/;"	m	class:CustomAssignDialog
players	src/client/client.h	/^    QList<const ClientPlayer*> players;$/;"	m	class:Client
players	src/scenario/miniscenarios.h	/^    QList< QMap<QString, QString> > players;$/;"	m	class:MiniSceneRule
players	src/server/server.h	/^    QHash<QString, ServerPlayer*> players;$/;"	m	class:Server
players_to_choose	src/client/client.h	/^    QStringList players_to_choose;    $/;"	m	class:Client
playing	src/util/recorder.h	/^    bool playing;$/;"	m	class:Replayer
plugindata	include/fmod/fmod_codec.h	/^    void                       *plugindata;    \/* [in] Plugin writer created data the codec author wants to attach to this object. *\/$/;"	m	struct:FMOD_CODEC_STATE
plugindata	include/fmod/fmod_dsp.h	/^    void          *plugindata;    \/* [w] Plugin writer created data the output author wants to attach to this object. *\/$/;"	m	struct:FMOD_DSP_STATE
plugindata	include/fmod/fmod_output.h	/^    void                      *plugindata;      \/* [in] Plugin writer created data the output author wants to attach to this object. *\/$/;"	m	struct:FMOD_OUTPUT_STATE
plugins	include/fmod/fmod_memoryinfo.h	/^    unsigned int plugins;                        \/* [out] Plugin objects and internals *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
pointer	include/freetype/freetype/ftsystem.h	/^    void*  pointer;$/;"	m	union:FT_StreamDesc_
pointer	include/freetype/freetype/fttypes.h	/^    const FT_Byte*  pointer;$/;"	m	struct:FT_Data_
pointer	src/jsoncpp/include/json/value.h	/^      typedef Value *pointer;$/;"	t	class:Json::ValueIterator
pointer	src/jsoncpp/include/json/value.h	/^      typedef const Value *pointer;$/;"	t	class:Json::ValueConstIterator
pointer	swig/sanguosha_wrap.cxx	/^  } pointer;$/;"	m	class:SwigValueWrapper	typeref:struct:SwigValueWrapper::SwigMovePointer	file:
points	include/freetype/freetype/ftimage.h	/^    FT_Vector*  points;          \/* the outline's points               *\/$/;"	m	struct:FT_Outline_
polling	include/fmod/fmod_output.h	/^    int                                polling;               \/* [in] If TRUE (non zero), this tells FMOD to start a thread and call getposition \/ lock \/ unlock for feeding data.  If 0, the output is probably callback based, so all the plugin needs to do is call readfrommixer to the appropriate pointer. *\/ $/;"	m	struct:FMOD_OUTPUT_DESCRIPTION
popup	src/package/mountainpackage.cpp	/^void HuashenDialog::popup(){$/;"	f	class:HuashenDialog
popup	src/package/wind.cpp	/^void GuhuoDialog::popup(){$/;"	f	class:GuhuoDialog
port_edit	src/server/server.h	/^    QLineEdit *port_edit;$/;"	m	class:ServerDialog
port_label	src/client/clientstruct.h	/^    QLabel *port_label;$/;"	m	class:ServerInfoWidget
pos	include/freetype/freetype/ftsystem.h	/^    unsigned long        pos;$/;"	m	struct:FT_StreamRec_
pos_x	include/freetype/freetype/internal/psaux.h	/^    FT_Pos          pos_x;$/;"	m	struct:T1_BuilderRec_
pos_y	include/freetype/freetype/internal/psaux.h	/^    FT_Pos          pos_y;$/;"	m	struct:T1_BuilderRec_
posrelat	src/lua/lstrlib.c	/^static ptrdiff_t posrelat (ptrdiff_t pos, size_t len) {$/;"	f	file:
postscript	include/freetype/freetype/internal/tttypes.h	/^    TT_Postscript         postscript;   \/* TrueType Postscript table      *\/$/;"	m	struct:TT_FaceRec_
postscript_name	include/freetype/freetype/internal/tttypes.h	/^    const char*           postscript_name;$/;"	m	struct:TT_FaceRec_
postscript_names	include/freetype/freetype/internal/tttypes.h	/^    TT_Post_NamesRec      postscript_names;$/;"	m	struct:TT_FaceRec_
pp1	include/freetype/freetype/internal/tttypes.h	/^    FT_Vector        pp1;$/;"	m	struct:TT_LoaderRec_
pp2	include/freetype/freetype/internal/tttypes.h	/^    FT_Vector        pp2;$/;"	m	struct:TT_LoaderRec_
pp3	include/freetype/freetype/internal/tttypes.h	/^    FT_Vector        pp3;$/;"	m	struct:TT_LoaderRec_
pp4	include/freetype/freetype/internal/tttypes.h	/^    FT_Vector        pp4;$/;"	m	struct:TT_LoaderRec_
ppc	src/breakpad/google_breakpad/processor/minidump.h	/^    MDRawContextPPC*   ppc;$/;"	m	union:google_breakpad::MinidumpContext::__anon65
ppem	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte   ppem;$/;"	m	struct:TT_HdmxEntryRec_
preStart	src/ui/pixmapanimation.cpp	/^void PixmapAnimation::preStart(){$/;"	f	class:PixmapAnimation
precheck	src/lua/ldebug.c	/^static int precheck (const Proto *pt) {$/;"	f	file:
prefixexp	src/lua/lparser.c	/^static void prefixexp (LexState *ls, expdesc *v) {$/;"	f	file:
preinit_state	src/lua/lstate.c	/^static void preinit_state (lua_State *L, global_State *g) {$/;"	f	file:
preload	src/dialog/mainwindow.cpp	/^void BackLoader::preload()$/;"	f	class:BackLoader
prepareForStart	src/server/room.cpp	/^void Room::prepareForStart(){$/;"	f	class:Room
preserve_pps	include/freetype/freetype/internal/tttypes.h	/^    FT_Bool          preserve_pps;$/;"	m	struct:TT_LoaderRec_
prev	include/freetype/freetype/fttypes.h	/^    FT_ListNode  prev;$/;"	m	struct:FT_ListNodeRec_
prev	src/lua/lobject.h	/^      struct UpVal *prev;$/;"	m	struct:UpVal::__anon93::__anon94	typeref:struct:UpVal::__anon93::__anon94::UpVal
prev	src/lua/lparser.c	/^  struct LHS_assign *prev;$/;"	m	struct:LHS_assign	typeref:struct:LHS_assign::LHS_assign	file:
prev	src/lua/lparser.h	/^  struct FuncState *prev;  \/* enclosing function *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::FuncState
prev	swig/sanguosha_wrap.cxx	/^  struct swig_cast_info  *prev;			\/* pointer to the previous cast *\/$/;"	m	struct:swig_cast_info	typeref:struct:swig_cast_info::swig_cast_info	file:
previous	src/lua/ldo.c	/^  struct lua_longjmp *previous;$/;"	m	struct:lua_longjmp	typeref:struct:lua_longjmp::lua_longjmp	file:
previous	src/lua/lparser.c	/^  struct BlockCnt *previous;  \/* chain *\/$/;"	m	struct:BlockCnt	typeref:struct:BlockCnt::BlockCnt	file:
previous_	src/jsoncpp/include/json/value.h	/^      ValueInternalLink *previous_;$/;"	m	class:Json::ValueInternalLink
previous_filter_	src/breakpad/client/windows/handler/exception_handler.h	/^  LPTOP_LEVEL_EXCEPTION_FILTER previous_filter_;$/;"	m	class:google_breakpad::ExceptionHandler
previous_iph_	src/breakpad/client/windows/handler/exception_handler.h	/^  _invalid_parameter_handler previous_iph_;$/;"	m	class:google_breakpad::ExceptionHandler
previous_pch_	src/breakpad/client/windows/handler/exception_handler.h	/^  _purecall_handler previous_pch_;$/;"	m	class:google_breakpad::ExceptionHandler
primaryexp	src/lua/lparser.c	/^static void primaryexp (LexState *ls, expdesc *v) {$/;"	f	file:
printServerInfo	src/ui/startscene.cpp	/^void StartScene::printServerInfo(){$/;"	f	class:StartScene
priority	include/fmod/fmod.h	/^    int             priority;       \/* [r] 0 = low importance.  100 = extremely important (ie 'must read now or stuttering may occur') *\/$/;"	m	struct:__anon108
priority	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t            priority;$/;"	m	struct:__anon24
priority	src/core/lua-wrapper.h	/^    int priority;$/;"	m	class:LuaTriggerSkill
priority	src/lua/lparser.c	/^} priority[] = {  \/* ORDER OPR *\/$/;"	v	typeref:struct:__anon88	file:
priority_1v1_table	src/server/generalselector.h	/^    QHash<QString, int> priority_1v1_table;$/;"	m	class:GeneralSelector
priority_3v3_table	src/server/generalselector.h	/^    QHash<QString, int> priority_3v3_table;$/;"	m	class:GeneralSelector
priority_class	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t            priority_class;$/;"	m	struct:__anon24
private_dict	include/freetype/freetype/internal/t1types.h	/^    PS_PrivateRec    private_dict;      \/* private dictionary     *\/$/;"	m	struct:T1_FontRec_
private_dict	include/freetype/freetype/t1tables.h	/^    PS_PrivateRec  private_dict;$/;"	m	struct:CID_FaceDictRec_
privates	include/freetype/freetype/t1tables.h	/^    PS_Private       privates  [T1_MAX_MM_DESIGNS + 1];$/;"	m	struct:PS_BlendRec_
processClientPacket	src/server/room.cpp	/^void Room::processClientPacket(const QString &request){$/;"	f	class:Room
processNewConnection	src/server/server.cpp	/^void Server::processNewConnection(ClientSocket *socket){$/;"	f	class:Server
processNewConnection	src/util/nativesocket.cpp	/^void NativeServerSocket::processNewConnection(){$/;"	f	class:NativeServerSocket
processNewDatagram	src/util/nativesocket.cpp	/^void NativeServerSocket::processNewDatagram(){$/;"	f	class:NativeServerSocket
processObsoleteServerPacket	src/client/client.cpp	/^void Client::processObsoleteServerPacket(const QString &cmd){    $/;"	f	class:Client
processRequest	src/server/server.cpp	/^void Server::processRequest(const char *request){$/;"	f	class:Server
processRequestCheat	src/server/room.cpp	/^bool Room::processRequestCheat(ServerPlayer *player, const QSanProtocol::QSanGeneralPacket *packet)$/;"	f	class:Room
processRequestSurrender	src/server/room.cpp	/^bool Room::processRequestSurrender(ServerPlayer *player, const QSanProtocol::QSanGeneralPacket *)$/;"	f	class:Room
processResponse	src/server/room.cpp	/^void Room::processResponse(ServerPlayer *player, const QSanGeneralPacket *packet){$/;"	f	class:Room
processServerPacket	src/client/client.cpp	/^void Client::processServerPacket(const QString &cmd){$/;"	f	class:Client
processServerPacket	src/client/client.cpp	/^void Client::processServerPacket(const char *cmd){$/;"	f	class:Client
processServerRequest	src/client/client.cpp	/^bool Client::processServerRequest(const QSanGeneralPacket& packet)$/;"	f	class:Client
process_create_time	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t process_create_time;  \/* time_t process started *\/$/;"	m	struct:__anon42
process_exit_wait_handle	src/breakpad/client/windows/crash_generation/client_info.h	/^  HANDLE process_exit_wait_handle() const {$/;"	f	class:google_breakpad::ClientInfo
process_exit_wait_handle_	src/breakpad/client/windows/crash_generation/client_info.h	/^  HANDLE process_exit_wait_handle_;$/;"	m	class:google_breakpad::ClientInfo
process_handle	src/breakpad/client/windows/crash_generation/client_info.h	/^  HANDLE process_handle() const { return process_handle_; }$/;"	f	class:google_breakpad::ClientInfo
process_handle_	src/breakpad/client/windows/crash_generation/client_info.h	/^  HANDLE process_handle_;$/;"	m	class:google_breakpad::ClientInfo
process_id	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t process_id;$/;"	m	struct:__anon42
process_kernel_time	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t process_kernel_time;  \/* seconds of kernel CPU time *\/$/;"	m	struct:__anon42
process_state_	src/breakpad/google_breakpad/processor/exploitability.h	/^  ProcessState *process_state_;$/;"	m	class:google_breakpad::Exploitability
process_user_time	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t process_user_time;    \/* seconds of user CPU time *\/$/;"	m	struct:__anon42
processor_architecture	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int16_t        processor_architecture;$/;"	m	struct:__anon39
processor_current_idle_state	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t processor_current_idle_state;$/;"	m	struct:__anon42
processor_current_mhz	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t processor_current_mhz;$/;"	m	struct:__anon42
processor_features	src/breakpad/google_breakpad/common/minidump_format.h	/^    u_int64_t processor_features[2];$/;"	m	struct:__anon36::__anon38
processor_level	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int16_t        processor_level;         \/* x86: 5 = 586, 6 = 686, ... *\/$/;"	m	struct:__anon39
processor_max_idle_state	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t processor_max_idle_state;$/;"	m	struct:__anon42
processor_max_mhz	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t processor_max_mhz;$/;"	m	struct:__anon42
processor_mhz_limit	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t processor_mhz_limit;$/;"	m	struct:__anon42
processor_revision	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int16_t        processor_revision;      \/* x86: 0xMMSS, where MM=model,$/;"	m	struct:__anon39
produceShadow	src/ui/uiUtils.cpp	/^QImage QSanUiUtils::produceShadow(const QImage &image, QColor shadowColor, int radius, double decade)$/;"	f	class:QSanUiUtils
product_type	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int8_t         product_type;            \/* Windows: VER_NT_* from WinNT.h *\/$/;"	m	struct:__anon39
product_version_hi	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t product_version_hi;$/;"	m	struct:__anon16
product_version_lo	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t product_version_lo;$/;"	m	struct:__anon16
profile	include/fmod/fmod_memoryinfo.h	/^    unsigned int profile;                        \/* [out] Profiler memory footprint. *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
profileport	include/fmod/fmod.h	/^    unsigned short  profileport;                \/* [r\/w] Optional. Specify 0 to ignore. For use with FMOD_INIT_ENABLE_PROFILE.  Specify the port to listen on for connections by the profiler application. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
program_string	src/breakpad/processor/windows_frame_info.h	/^  string program_string;$/;"	m	struct:google_breakpad::WindowsFrameInfo
progress_bar	src/dialog/choosegeneraldialog.h	/^    QSanCommandProgressBar *progress_bar;    $/;"	m	class:ChooseGeneralDialog
prohibitUseDirectly	lua/ai/smart-ai.lua	/^local function prohibitUseDirectly(card, player)$/;"	f
prohibit_skills	src/core/engine.h	/^    QList<const ProhibitSkill *> prohibit_skills;$/;"	m	class:Engine
prolog_size	src/breakpad/processor/windows_frame_info.h	/^  u_int32_t prolog_size;$/;"	m	struct:google_breakpad::WindowsFrameInfo
prompt_box	src/ui/roomscene.h	/^    Window *prompt_box;$/;"	m	class:RoomScene
prompt_box_widget	src/ui/roomscene.h	/^    QGraphicsTextItem *prompt_box_widget;$/;"	m	class:RoomScene
prompt_doc	src/client/client.h	/^    QTextDocument *lines_doc, *prompt_doc;$/;"	m	class:Client
propagateall	src/lua/lgc.c	/^static size_t propagateall (global_State *g) {$/;"	f	file:
propagatemark	src/lua/lgc.c	/^static l_mem propagatemark (global_State *g) {$/;"	f	file:
protect_segment	lua/lib/socket/url.lua	/^local function protect_segment(s)$/;"	f
protection	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t protection;             \/* MDMemoryProtection *\/$/;"	m	struct:__anon45
provide	src/server/room.cpp	/^void Room::provide(const Card *card){$/;"	f	class:Room
provided	src/server/room.h	/^    const Card *provided;$/;"	m	class:Room
ps_parser_funcs	include/freetype/freetype/internal/psaux.h	/^    const PS_Parser_FuncsRec*   ps_parser_funcs;$/;"	m	struct:PSAux_ServiceRec_
ps_table_funcs	include/freetype/freetype/internal/psaux.h	/^    const PS_Table_FuncsRec*    ps_table_funcs;$/;"	m	struct:PSAux_ServiceRec_
psaux	include/freetype/freetype/internal/t1types.h	/^    const void*     psaux;$/;"	m	struct:T1_FaceRec_
psaux	include/freetype/freetype/internal/t1types.h	/^    void*            psaux;$/;"	m	struct:CID_FaceRec_
pshinter	include/freetype/freetype/internal/ftpic.h	/^    void* pshinter;$/;"	m	struct:FT_PIC_Container_
pshinter	include/freetype/freetype/internal/t1types.h	/^    const void*     pshinter;$/;"	m	struct:T1_FaceRec_
pshinter	include/freetype/freetype/internal/t1types.h	/^    void*            pshinter;$/;"	m	struct:CID_FaceRec_
psnames	include/freetype/freetype/internal/ftpic.h	/^    void* psnames;$/;"	m	struct:FT_PIC_Container_
psnames	include/freetype/freetype/internal/psaux.h	/^    FT_Service_PsCMaps   psnames;      \/* for seac *\/$/;"	m	struct:T1_DecoderRec_
psnames	include/freetype/freetype/internal/t1types.h	/^    const void*     psnames;$/;"	m	struct:T1_FaceRec_
psnames	include/freetype/freetype/internal/t1types.h	/^    void*            psnames;$/;"	m	struct:CID_FaceRec_
psnames	include/freetype/freetype/internal/tttypes.h	/^    void*                 psnames;$/;"	m	struct:TT_FaceRec_
ptr	src/breakpad/processor/scoped_ptr.h	/^  T* ptr;$/;"	m	class:google_breakpad::scoped_array
ptr	src/breakpad/processor/scoped_ptr.h	/^  T* ptr;$/;"	m	class:google_breakpad::scoped_ptr
ptr	src/breakpad/processor/scoped_ptr.h	/^  T* ptr;$/;"	m	class:google_breakpad::scoped_ptr_malloc
ptr	swig/sanguosha_wrap.cxx	/^    T *ptr;$/;"	m	struct:SwigValueWrapper::SwigMovePointer	file:
ptr	swig/sanguosha_wrap.cxx	/^  void        *ptr;$/;"	m	struct:__anon149	file:
ptype	swig/sanguosha_wrap.cxx	/^    swig_type_info **ptype;$/;"	m	struct:__anon146	file:
public_symbols_	src/breakpad/processor/basic_source_line_resolver_types.h	/^  AddressMap< MemAddr, linked_ptr<PublicSymbol> > public_symbols_;$/;"	m	class:google_breakpad::BasicSourceLineResolver::Module
public_symbols_	src/breakpad/processor/fast_source_line_resolver_types.h	/^  StaticAddressMap<MemAddr, PublicSymbol> public_symbols_;$/;"	m	class:google_breakpad::FastSourceLineResolver::Module
pubsym_serializer_	src/breakpad/processor/module_serializer.h	/^  AddressMapSerializer<MemAddr, linked_ptr<PublicSymbol> > pubsym_serializer_;$/;"	m	class:google_breakpad::ModuleSerializer
pump.all	lua/lib/ltn12.lua	/^function pump.all(src, snk, step)$/;"	f
pump.step	lua/lib/ltn12.lua	/^function pump.step(src, snk)$/;"	f
pushCallback	src/server/ai.cpp	/^void LuaAI::pushCallback(lua_State *L, const char *function_name){$/;"	f	class:LuaAI
pushQIntList	src/server/ai.cpp	/^void LuaAI::pushQIntList(lua_State *L, const QList<int> &list){$/;"	f	class:LuaAI
pushSelf	swig/sanguosha_wrap.cxx	/^void LuaSkillCard::pushSelf(lua_State *L) const{$/;"	f	class:LuaSkillCard
pushSelf	swig/sanguosha_wrap.cxx	/^void LuaViewAsSkill::pushSelf(lua_State *L) const{$/;"	f	class:LuaViewAsSkill
pushValue	src/jsoncpp/src/json_writer.cpp	/^StyledStreamWriter::pushValue( const std::string &value )$/;"	f	class:Json::StyledStreamWriter
pushValue	src/jsoncpp/src/json_writer.cpp	/^StyledWriter::pushValue( const std::string &value )$/;"	f	class:Json::StyledWriter
push_captures	src/lua/lstrlib.c	/^static int push_captures (MatchState *ms, const char *s, const char *e) {$/;"	f	file:
push_onecapture	src/lua/lstrlib.c	/^static void push_onecapture (MatchState *ms, int i, const char *s,$/;"	f	file:
pushclosure	src/lua/lparser.c	/^static void pushclosure (LexState *ls, FuncState *func, expdesc *v) {$/;"	f	file:
pushed_bad_value_	src/breakpad/processor/disassembler_x86.h	/^    bool pushed_bad_value_;$/;"	m	class:google_breakpad::DisassemblerX86
pusherror	src/lua/loadlib.c	/^static void pusherror (lua_State *L) {$/;"	f	file:
pushnexttemplate	src/lua/loadlib.c	/^static const char *pushnexttemplate (lua_State *L, const char *path) {$/;"	f	file:
pushresult	src/lua/liolib.c	/^static int pushresult (lua_State *L, int i, const char *filename) {$/;"	f	file:
pushstr	src/lua/lobject.c	/^static void pushstr (lua_State *L, const char *str) {$/;"	f	file:
put 	lua/lib/socket/ftp.lua	/^put = socket.protect(function(putt, body)$/;"	f
pvalue	src/lua/lobject.h	92;"	d
pvalue	swig/sanguosha_wrap.cxx	/^    void   *pvalue;$/;"	m	struct:__anon146	file:
qHash	src/ui/roomscene.cpp	/^inline uint qHash(const QPointF p) { return qHash((int)p.x()+(int)p.y()); }$/;"	f
qShuffle	src/core/util.h	/^void qShuffle(QList<T> &list){$/;"	f
qiangxi_skill.getTurnUseCard	extension-doc/15-Activate.lua	/^qiangxi_skill.getTurnUseCard=function(self)$/;"	f
qiangxi_skill.getTurnUseCard	lua/ai/fire-ai.lua	/^qiangxi_skill.getTurnUseCard=function(self)$/;"	f
qice_skill.getTurnUseCard	lua/ai/yjcm2012-ai.lua	/^qice_skill.getTurnUseCard=function(self)$/;"	f
qingnang_skill.getTurnUseCard	lua/ai/standard-ai.lua	/^qingnang_skill.getTurnUseCard=function(self)$/;"	f
qixi_skill.getTurnUseCard	lua/ai/standard-ai.lua	/^qixi_skill.getTurnUseCard=function(self,inclusive)$/;"	f
quhu_skill.getTurnUseCard	lua/ai/fire-ai.lua	/^quhu_skill.getTurnUseCard=function(self)$/;"	f
quit	src/core/audio.cpp	/^void Audio::quit(){$/;"	f	class:Audio
r	src/lua/llex.h	/^  lua_Number r;$/;"	m	union:__anon97
r0	src/breakpad/processor/cfi_frame_info_unittest.cc	/^    u_int64_t r0, r1, r2, r3, r4, sp, pc;$/;"	m	struct:SimpleCFIWalkerFixture::RawContext	file:
r1	src/breakpad/processor/cfi_frame_info_unittest.cc	/^    u_int64_t r0, r1, r2, r3, r4, sp, pc;$/;"	m	struct:SimpleCFIWalkerFixture::RawContext	file:
r10	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  r10;$/;"	m	struct:__anon56
r11	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  r11;$/;"	m	struct:__anon56
r12	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  r12;$/;"	m	struct:__anon56
r13	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  r13;$/;"	m	struct:__anon56
r14	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  r14;$/;"	m	struct:__anon56
r15	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  r15;$/;"	m	struct:__anon56
r2	src/breakpad/processor/cfi_frame_info_unittest.cc	/^    u_int64_t r0, r1, r2, r3, r4, sp, pc;$/;"	m	struct:SimpleCFIWalkerFixture::RawContext	file:
r3	src/breakpad/processor/cfi_frame_info_unittest.cc	/^    u_int64_t r0, r1, r2, r3, r4, sp, pc;$/;"	m	struct:SimpleCFIWalkerFixture::RawContext	file:
r4	src/breakpad/processor/cfi_frame_info_unittest.cc	/^    u_int64_t r0, r1, r2, r3, r4, sp, pc;$/;"	m	struct:SimpleCFIWalkerFixture::RawContext	file:
r8	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  r8;$/;"	m	struct:__anon56
r9	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  r9;$/;"	m	struct:__anon56
ra_rule_	src/breakpad/processor/cfi_frame_info.h	/^  string ra_rule_;$/;"	m	class:google_breakpad::CFIFrameInfo
raiseError	src/util/nativesocket.cpp	/^void NativeClientSocket::raiseError(QAbstractSocket::SocketError socket_error){$/;"	f	class:NativeClientSocket
random_roles_box	src/dialog/customassigndialog.h	/^    QCheckBox *random_roles_box;$/;"	m	class:CustomAssignDialog
range	src/package/standard.h	/^    int range;$/;"	m	class:Weapon
range_map_	src/breakpad/google_breakpad/processor/minidump.h	/^  RangeMap<u_int64_t, unsigned int> *range_map_;$/;"	m	class:google_breakpad::MinidumpMemoryInfoList
range_map_	src/breakpad/google_breakpad/processor/minidump.h	/^  RangeMap<u_int64_t, unsigned int> *range_map_;$/;"	m	class:google_breakpad::MinidumpMemoryList
range_map_	src/breakpad/google_breakpad/processor/minidump.h	/^  RangeMap<u_int64_t, unsigned int> *range_map_;$/;"	m	class:google_breakpad::MinidumpModuleList
range_map_	src/breakpad/processor/map_serializers_unittest.cc	/^  google_breakpad::RangeMap<AddrType, EntryType> range_map_;$/;"	m	class:TestRangeMapSerializer	file:
range_map_serializer_	src/breakpad/processor/module_serializer.cc	/^SimpleSerializer<BasicSourceLineResolver::Function>::range_map_serializer_;$/;"	m	class:google_breakpad::SimpleSerializer	file:
range_map_serializer_	src/breakpad/processor/simple_serializer-inl.h	/^  static RangeMapSerializer< MemAddr, linked_ptr<Line> > range_map_serializer_;$/;"	m	class:google_breakpad::SimpleSerializer
range_shift	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  range_shift;$/;"	m	struct:SFNT_HeaderRec_
range_test_count	src/breakpad/processor/range_map_unittest.cc	/^  unsigned int range_test_count;$/;"	m	struct:__anon84::RangeTestSet	file:
range_test_count	src/breakpad/processor/static_range_map_unittest.cc	/^  unsigned int range_test_count;$/;"	m	struct:__anon85::RangeTestSet	file:
range_test_sets	src/breakpad/processor/static_range_map_unittest.cc	/^const RangeTestSet range_test_sets[] = {$/;"	m	namespace:__anon85	file:
range_tests	src/breakpad/processor/range_map_unittest.cc	/^  const RangeTest *range_tests;$/;"	m	struct:__anon84::RangeTestSet	file:
range_tests	src/breakpad/processor/static_range_map_unittest.cc	/^  const RangeTest* range_tests;$/;"	m	struct:__anon85::RangeTestSet	file:
range_tests_0	src/breakpad/processor/static_range_map_unittest.cc	/^const RangeTest range_tests_0[] = {$/;"	m	namespace:__anon85	file:
range_tests_1	src/breakpad/processor/static_range_map_unittest.cc	/^const RangeTest range_tests_1[] = {$/;"	m	namespace:__anon85	file:
range_tests_2	src/breakpad/processor/static_range_map_unittest.cc	/^const RangeTest range_tests_2[] = {$/;"	m	namespace:__anon85	file:
range_tests_3	src/breakpad/processor/static_range_map_unittest.cc	/^const RangeTest range_tests_3[] = {$/;"	m	namespace:__anon85	file:
ranges_offset	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong                ranges_offset;$/;"	m	struct:TT_SBit_StrikeRec_
raster	include/freetype/freetype/internal/ftobjs.h	/^    FT_Raster               raster;$/;"	m	struct:FT_RendererRec_
raster	include/freetype/freetype/internal/ftpic.h	/^    void* raster;$/;"	m	struct:FT_PIC_Container_
raster_class	include/freetype/freetype/ftrender.h	/^    FT_Raster_Funcs*           raster_class;$/;"	m	struct:FT_Renderer_Class_
raster_done	include/freetype/freetype/ftimage.h	/^    FT_Raster_DoneFunc     raster_done;$/;"	m	struct:FT_Raster_Funcs_
raster_new	include/freetype/freetype/ftimage.h	/^    FT_Raster_NewFunc      raster_new;$/;"	m	struct:FT_Raster_Funcs_
raster_pool	include/freetype/freetype/internal/ftobjs.h	/^    FT_Byte*           raster_pool;      \/* scan-line conversion *\/$/;"	m	struct:FT_LibraryRec_
raster_pool_size	include/freetype/freetype/internal/ftobjs.h	/^    FT_ULong           raster_pool_size; \/* size of render pool in bytes *\/$/;"	m	struct:FT_LibraryRec_
raster_render	include/freetype/freetype/ftimage.h	/^    FT_Raster_RenderFunc   raster_render;$/;"	m	struct:FT_Raster_Funcs_
raster_render	include/freetype/freetype/internal/ftobjs.h	/^    FT_Raster_Render_Func   raster_render;$/;"	m	struct:FT_RendererRec_
raster_reset	include/freetype/freetype/ftimage.h	/^    FT_Raster_ResetFunc    raster_reset;$/;"	m	struct:FT_Raster_Funcs_
raster_set_mode	include/freetype/freetype/ftimage.h	/^    FT_Raster_SetModeFunc  raster_set_mode;$/;"	m	struct:FT_Raster_Funcs_
ratio_spinbox	src/dialog/cardeditor.h	/^    QSpinBox *ratio_spinbox;$/;"	m	class:CardEditor
raw_context	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  MDRawContextAMD64 raw_context;$/;"	m	class:StackwalkerAMD64Fixture	file:
raw_context	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  MDRawContextARM raw_context;$/;"	m	class:StackwalkerARMFixture	file:
raw_context	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  MDRawContextX86 raw_context;$/;"	m	class:StackwalkerX86Fixture	file:
raw_data_	src/breakpad/processor/static_map.h	/^  const char* raw_data_;$/;"	m	class:google_breakpad::StaticMap
rawgco2ts	src/lua/lstate.h	149;"	d
rawgco2u	src/lua/lstate.h	151;"	d
rawtsvalue	src/lua/lobject.h	94;"	d
rawuvalue	src/lua/lobject.h	96;"	d
rax	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  rax;$/;"	m	struct:__anon56
rbp	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  rbp;$/;"	m	struct:__anon56
rbx	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  rbx;$/;"	m	struct:__anon56
rcx	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  rcx;$/;"	m	struct:__anon56
rdi	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  rdi;$/;"	m	struct:__anon56
rdx	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  rdx;$/;"	m	struct:__anon56
read	include/fmod/fmod_codec.h	/^    FMOD_CODEC_READCALLBACK         read;            \/* [in] Read callback for the codec for when FMOD tries to read some data from the file to the destination format (specified in the open callback). *\/$/;"	m	struct:FMOD_CODEC_DESCRIPTION
read	include/fmod/fmod_dsp.h	/^    FMOD_DSP_READCALLBACK        read;               \/* [w] Read callback.  Processing is done here.  Can be null. *\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
read	include/freetype/freetype/ftsystem.h	/^    FT_Stream_IoFunc     read;$/;"	m	struct:FT_StreamRec_
readArray	src/jsoncpp/src/json_reader.cpp	/^Reader::readArray( Token &\/*tokenStart*\/ )$/;"	f	class:Json::Reader
readCStyleComment	src/jsoncpp/src/json_reader.cpp	/^Reader::readCStyleComment()$/;"	f	class:Json::Reader
readComment	src/jsoncpp/src/json_reader.cpp	/^Reader::readComment()$/;"	f	class:Json::Reader
readCppStyleComment	src/jsoncpp/src/json_reader.cpp	/^Reader::readCppStyleComment()$/;"	f	class:Json::Reader
readNumber	src/jsoncpp/src/json_reader.cpp	/^Reader::readNumber()$/;"	f	class:Json::Reader
readObject	src/jsoncpp/src/json_reader.cpp	/^Reader::readObject( Token &\/*tokenStart*\/ )$/;"	f	class:Json::Reader
readString	src/jsoncpp/src/json_reader.cpp	/^Reader::readString()$/;"	f	class:Json::Reader
readToken	src/jsoncpp/src/json_reader.cpp	/^Reader::readToken( Token &token )$/;"	f	class:Json::Reader
readValue	src/jsoncpp/src/json_reader.cpp	/^Reader::readValue()$/;"	f	class:Json::Reader
read_chars	src/lua/liolib.c	/^static int read_chars (lua_State *L, FILE *f, size_t n) {$/;"	f	file:
read_clobber_write	src/breakpad/processor/disassembler_x86_unittest.cc	/^unsigned char read_clobber_write[] =$/;"	m	namespace:__anon68	file:
read_cmp	src/breakpad/processor/disassembler_x86_unittest.cc	/^unsigned char read_cmp[] =$/;"	m	namespace:__anon68	file:
read_composite_glyph	include/freetype/freetype/internal/tttypes.h	/^    TT_Loader_ReadGlyphFunc   read_composite_glyph;$/;"	m	struct:TT_FaceRec_
read_eax_jmp_eax	src/breakpad/processor/disassembler_x86_unittest.cc	/^unsigned char read_eax_jmp_eax[] =$/;"	m	namespace:__anon68	file:
read_edi_stosb	src/breakpad/processor/disassembler_x86_unittest.cc	/^unsigned char read_edi_stosb[] =$/;"	m	namespace:__anon68	file:
read_glyph_header	include/freetype/freetype/internal/tttypes.h	/^    TT_Loader_ReadGlyphFunc   read_glyph_header;$/;"	m	struct:TT_FaceRec_
read_line	src/lua/liolib.c	/^static int read_line (lua_State *L, FILE *f) {$/;"	f	file:
read_long_string	src/lua/llex.c	/^static void read_long_string (LexState *ls, SemInfo *seminfo, int sep) {$/;"	f	file:
read_number	src/lua/liolib.c	/^static int read_number (lua_State *L, FILE *f) {$/;"	f	file:
read_numeral	src/lua/llex.c	/^static void read_numeral (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
read_simple_glyph	include/freetype/freetype/internal/tttypes.h	/^    TT_Loader_ReadGlyphFunc   read_simple_glyph;$/;"	m	struct:TT_FaceRec_
read_string	src/lua/llex.c	/^static void read_string (LexState *ls, int del, SemInfo *seminfo) {$/;"	f	file:
read_xchg_write	src/breakpad/processor/disassembler_x86_unittest.cc	/^unsigned char read_xchg_write[] =$/;"	m	namespace:__anon68	file:
readable	src/lua/loadlib.c	/^static int readable (const char *filename) {$/;"	f	file:
reader	include/freetype/freetype/internal/psaux.h	/^    T1_Field_ParseFunc  reader;$/;"	m	struct:T1_FieldRec_
reader	src/lua/lzio.h	/^  lua_Reader reader;$/;"	m	struct:Zio
readfrommixer	include/fmod/fmod_output.h	/^    FMOD_OUTPUT_READFROMMIXER  readfrommixer;   \/* [out] Function to update mixer and write the result to the provided pointer.  Used from callback based output only.  Polling based output uses lock\/unlock\/getposition. *\/$/;"	m	struct:FMOD_OUTPUT_STATE
ready	src/core/player.h	/^    bool ready;$/;"	m	class:Player
realValue	src/jsoncpp/include/json/value.h	/^      realValue,     \/\/\/< double value$/;"	e	enum:Json::ValueType
real_	src/jsoncpp/include/json/value.h	/^         double real_;$/;"	m	union:Json::Value::ValueHolder
real_finish	src/ui/indicatoritem.h	/^    QPointF start, finish, real_finish;$/;"	m	class:IndicatorItem
realloc	include/freetype/freetype/ftsystem.h	/^    FT_Realloc_Func  realloc;$/;"	m	struct:FT_MemoryRec_
reallymarkobject	src/lua/lgc.c	/^static void reallymarkobject (global_State *g, GCObject *o) {$/;"	f	file:
reason	src/core/structs.h	/^    CardMoveReason reason;$/;"	m	struct:CardMoveStruct
reason	src/core/structs.h	/^    CardMoveReason reason;$/;"	m	struct:CardsMoveOneTimeStruct
reason	src/core/structs.h	/^    CardMoveReason reason;$/;"	m	struct:CardsMoveStruct
reason	src/core/structs.h	/^    QString reason;$/;"	m	struct:JudgeStruct
reason	src/core/structs.h	/^    QString reason;$/;"	m	struct:PindianStruct
rebel 	lua/ai/smart-ai.lua	/^		rebel = function(a, b)$/;"	f
rebels	src/scenario/scenario.h	/^    QStringList loyalists, rebels, renegades;$/;"	m	class:Scenario
receiveheaders	lua/lib/socket/http.lua	/^local function receiveheaders(sock, headers)$/;"	f
recfield	src/lua/lparser.c	/^static void recfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
reconnect	src/server/room.cpp	/^void Room::reconnect(ServerPlayer *player, ClientSocket *socket){$/;"	f	class:Room
record	src/util/recorder.cpp	/^void Recorder::record(const char *line)$/;"	f	class:Recorder
recordLine	src/util/recorder.cpp	/^void Recorder::recordLine(const QString &line){$/;"	f	class:Recorder
recordbuffer	include/fmod/fmod_memoryinfo.h	/^    unsigned int recordbuffer;                   \/* [out] Buffer used to store recorded data from microphone *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
recorder	src/client/client.h	/^    Recorder *recorder;$/;"	m	class:Client
recorder	src/server/serverplayer.h	/^    Recorder *recorder;$/;"	m	class:ServerPlayer
records	include/freetype/freetype/internal/tttypes.h	/^    TT_HdmxEntry  records;$/;"	m	struct:TT_HdmxRec_
recover	src/core/structs.h	/^    int recover;$/;"	m	struct:RecoverStruct
recover	src/server/room.cpp	/^void Room::recover(ServerPlayer *player, const RecoverStruct &recover, bool set_emotion){$/;"	f	class:Room
recoverFromError	src/jsoncpp/src/json_reader.cpp	/^Reader::recoverFromError( TokenType skipUntilToken )$/;"	f	class:Json::Reader
recoverGeneral	src/client/client.cpp	/^void Client::recoverGeneral(const QString &recover_str){$/;"	f	class:Client
recoverGeneral	src/ui/roomscene.cpp	/^void RoomScene::recoverGeneral(int index, const QString &name){$/;"	f	class:RoomScene
refcount	include/freetype/freetype/internal/ftobjs.h	/^    FT_UInt             refcount;$/;"	m	struct:FT_Face_InternalRec_
refcount	include/freetype/freetype/internal/ftobjs.h	/^    FT_UInt            refcount;$/;"	m	struct:FT_LibraryRec_
reference	src/jsoncpp/include/json/value.h	/^      typedef Value &reference;$/;"	t	class:Json::ValueIterator
reference	src/jsoncpp/include/json/value.h	/^      typedef const Value &reference;$/;"	t	class:Json::ValueConstIterator
refresh	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::refresh()$/;"	f	class:PlayerCardContainer
refresh	src/ui/photo.cpp	/^void Photo::refresh()$/;"	f	class:Photo
refreshRooms	src/dialog/halldialog.cpp	/^void HallDialog::refreshRooms(int page){$/;"	f	class:HallDialog
region_count	src/breakpad/google_breakpad/processor/minidump.h	/^  unsigned int region_count() const { return valid_ ? region_count_ : 0; }$/;"	f	class:google_breakpad::MinidumpMemoryList
region_count_	src/breakpad/google_breakpad/processor/minidump.h	/^  u_int32_t region_count_;$/;"	m	class:google_breakpad::MinidumpMemoryList
region_size	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int64_t region_size;$/;"	m	struct:__anon45
regions_	src/breakpad/google_breakpad/processor/minidump.h	/^  MemoryRegions *regions_;$/;"	m	class:google_breakpad::MinidumpMemoryList
register	lua/lib/sqlite3.lua	/^local function register(registry, object)$/;"	f
registerRoom	src/core/engine.cpp	/^void Engine::registerRoom(QObject* room) {$/;"	f	class:Engine
register_area	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int8_t  register_area[MD_FLOATINGSAVEAREA_X86_REGISTERAREA_SIZE];$/;"	m	struct:__anon6
register_map	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  static CFIWalker::RegisterSet register_map[7];$/;"	m	struct:SimpleCFIWalkerFixture	file:
register_map	src/breakpad/processor/cfi_frame_info_unittest.cc	/^SimpleCFIWalkerFixture::register_map[7] = {$/;"	m	class:SimpleCFIWalkerFixture	file:
register_map_	src/breakpad/processor/cfi_frame_info.h	/^  const RegisterSet *register_map_;$/;"	m	class:google_breakpad::SimpleCFIWalker
register_rules_	src/breakpad/processor/cfi_frame_info.h	/^  RuleMap register_rules_;$/;"	m	class:google_breakpad::CFIFrameInfo
register_valid_	src/breakpad/processor/disassembler_x86.h	/^    bool register_valid_;$/;"	m	class:google_breakpad::DisassemblerX86
registered	src/ui/sprite.h	/^    QMap<QGraphicsItem*,QAnimatedEffect*> registered;$/;"	m	class:EffectAnimation
registerlocalvar	src/lua/lparser.c	/^static int registerlocalvar (LexState *ls, TString *varname) {$/;"	f	file:
registers	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  CFIFrameInfo::RegisterValueMap<u_int64_t> registers, caller_registers;$/;"	m	struct:CFIFixture	file:
registry	include/freetype/freetype/t1tables.h	/^    FT_String*      registry;$/;"	m	struct:CID_FaceInfoRec_
registry	src/lua/lstate.h	25;"	d
regs	src/breakpad/google_breakpad/common/minidump_cpu_arm.h	/^  u_int64_t	regs[MD_FLOATINGSAVEAREA_ARM_FPR_COUNT];$/;"	m	struct:__anon61
regs	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	/^  u_int64_t	regs[MD_FLOATINGSAVEAREA_SPARC_FPR_COUNT];$/;"	m	struct:__anon63
rehash	src/lua/ltable.c	/^static void rehash (lua_State *L, Table *t, const TValue *ek) {$/;"	f	file:
reinstall	scenarios/guandu.html	/^  function reinstall() {$/;"	f
reinstallAndRemoveTimer	scenarios/guandu.html	/^  function reinstallAndRemoveTimer() {$/;"	f
reject	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::reject(){$/;"	f	class:CustomAssignDialog
reject	src/dialog/roleassigndialog.cpp	/^void RoleAssignDialog::reject(){$/;"	f	class:RoleAssignDialog
related_skills	src/core/engine.h	/^    QMultiMap<QString, QString> related_skills;$/;"	m	class:Engine
related_skills	src/core/general.h	/^    QStringList related_skills;$/;"	m	class:General
related_skills	src/package/package.h	/^    QMultiMap<QString, QString> related_skills;$/;"	m	class:Package
relationTo	src/scenario/couple-scenario.cpp	/^AI::Relation CoupleScenario::relationTo(const ServerPlayer *a, const ServerPlayer *b) const{$/;"	f	class:CoupleScenario
relationTo	src/scenario/guandu-scenario.cpp	/^AI::Relation GuanduScenario::relationTo(const ServerPlayer *a, const ServerPlayer *b) const{$/;"	f	class:GuanduScenario
relationTo	src/scenario/scenario.cpp	/^AI::Relation Scenario::relationTo(const ServerPlayer *a, const ServerPlayer *b) const{$/;"	f	class:Scenario
relationTo	src/scenario/zombie-mode-scenario.cpp	/^AI::Relation ZombieScenario::relationTo(const ServerPlayer *a, const ServerPlayer *b) const{$/;"	f	class:ZombieScenario
relationTo	src/server/ai.cpp	/^AI::Relation AI::relationTo(const ServerPlayer *other) const{$/;"	f	class:AI
release	include/fmod/fmod_dsp.h	/^    FMOD_DSP_RELEASECALLBACK     release;            \/* [w] Release callback.  This is called just before the unit is freed so the user can do any cleanup needed for the unit.  Can be null. *\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
release	include/freetype/freetype/internal/psaux.h	/^    (*release)( PS_Table  table );$/;"	m	struct:PS_Table_FuncsRec_
release	src/breakpad/processor/linked_ptr.h	/^  T* release() {$/;"	f	class:google_breakpad::linked_ptr
release	src/breakpad/processor/scoped_ptr.h	/^  T* release() {$/;"	f	class:google_breakpad::scoped_array
release	src/breakpad/processor/scoped_ptr.h	/^  T* release() {$/;"	f	class:google_breakpad::scoped_ptr
release	src/breakpad/processor/scoped_ptr.h	/^  T* release() {$/;"	f	class:google_breakpad::scoped_ptr_malloc
release	src/jsoncpp/src/json_batchallocator.h	/^   void release( AllocatedType *object )$/;"	f	class:Json::BatchAllocator
releaseLock	src/server/serverplayer.h	/^    inline void releaseLock(SemaphoreType type){ semas[type]->release(); }$/;"	f	class:ServerPlayer
releaseStringValue	src/jsoncpp/src/json_value.cpp	/^releaseStringValue( char *value )$/;"	f	namespace:Json
remarkupvals	src/lua/lgc.c	/^static void remarkupvals (global_State *g) {$/;"	f	file:
remarry	src/scenario/couple-scenario.cpp	/^void CoupleScenario::remarry(ServerPlayer *enkemann, ServerPlayer *widow) const{$/;"	f	class:CoupleScenario
removeCard	src/client/clientplayer.cpp	/^void ClientPlayer::removeCard(const Card *card, Place place){$/;"	f	class:ClientPlayer
removeCard	src/server/serverplayer.cpp	/^void ServerPlayer::removeCard(const Card *card, Place place){$/;"	f	class:ServerPlayer
removeCardItems	src/ui/TablePile.cpp	/^QList<CardItem*> TablePile::removeCardItems(const QList<int> &card_ids, Player::Place place)$/;"	f	class:TablePile
removeCardItems	src/ui/cardcontainer.cpp	/^QList<CardItem*> CardContainer::removeCardItems(const QList<int> &card_ids, Player::Place place){$/;"	f	class:CardContainer
removeCardItems	src/ui/dashboard.cpp	/^QList<CardItem*> Dashboard::removeCardItems(const QList<int> &card_ids, Player::Place place){$/;"	f	class:Dashboard
removeCardItems	src/ui/photo.cpp	/^QList<CardItem*> Photo::removeCardItems(const QList<int> &card_ids, Player::Place place)$/;"	f	class:Photo
removeDelayedTrick	src/core/player.cpp	/^void Player::removeDelayedTrick(const Card *trick){$/;"	f	class:Player
removeDelayedTricks	src/ui/GenericCardContainerUI.cpp	/^ QList<CardItem*> PlayerCardContainer::removeDelayedTricks(const QList<int> &cardIds)$/;"	f	class:PlayerCardContainer
removeEquip	src/core/player.cpp	/^void Player::removeEquip(WrappedCard *equip){$/;"	f	class:Player
removeEquipButton	src/dialog/customassigndialog.h	/^    QPushButton *removeEquipButton, *removeHandButton, *removeJudgeButton, *removePileButton;$/;"	m	class:CustomAssignDialog
removeEquipCard	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::removeEquipCard(){$/;"	f	class:CustomAssignDialog
removeEquips	src/ui/GenericCardContainerUI.cpp	/^ QList<CardItem*> PlayerCardContainer::removeEquips(const QList<int> &cardIds)$/;"	f	class:PlayerCardContainer
removeHandButton	src/dialog/customassigndialog.h	/^    QPushButton *removeEquipButton, *removeHandButton, *removeJudgeButton, *removePileButton;$/;"	m	class:CustomAssignDialog
removeHandCard	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::removeHandCard(){$/;"	f	class:CustomAssignDialog
removeHandCards	src/ui/dashboard.cpp	/^QList<CardItem*> Dashboard::removeHandCards(const QList<int> &card_ids)$/;"	f	class:Dashboard
removeJudgeButton	src/dialog/customassigndialog.h	/^    QPushButton *removeEquipButton, *removeHandButton, *removeJudgeButton, *removePileButton;$/;"	m	class:CustomAssignDialog
removeJudgeCard	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::removeJudgeCard(){$/;"	f	class:CustomAssignDialog
removeLightBox	src/ui/roomscene.cpp	/^void RoomScene::removeLightBox(){    $/;"	f	class:RoomScene
removeLordSkill	src/scenario/boss-mode-scenario.cpp	/^    void removeLordSkill(ServerPlayer *player) const{$/;"	f	class:ImpasseRule
removeMark	src/core/player.cpp	/^void Player::removeMark(const QString &mark){$/;"	f	class:Player
removeMember	src/jsoncpp/src/json_value.cpp	/^Value::removeMember( const char* key )$/;"	f	class:Json::Value
removeMember	src/jsoncpp/src/json_value.cpp	/^Value::removeMember( const std::string &key )$/;"	f	class:Json::Value
removePileButton	src/dialog/customassigndialog.h	/^    QPushButton *removeEquipButton, *removeHandButton, *removeJudgeButton, *removePileButton;$/;"	m	class:CustomAssignDialog
removePileCard	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::removePileCard(){$/;"	f	class:CustomAssignDialog
removePlayer	src/client/client.cpp	/^void Client::removePlayer(const QString &player_name){$/;"	f	class:Client
removePlayer	src/ui/roomscene.cpp	/^void RoomScene::removePlayer(const QString &player_name){$/;"	f	class:RoomScene
removeSkill	src/dialog/cardeditor.cpp	/^void SkillBox::removeSkill(){$/;"	f	class:SkillBox
removeSkillButton	src/ui/dashboard.cpp	/^QSanSkillButton* Dashboard::removeSkillButton(const QString &skillName)$/;"	f	class:Dashboard
removeSkillButton	src/ui/qsanbutton.h	/^    inline void removeSkillButton(QSanInvokeSkillButton* button)$/;"	f	class:QSanInvokeSkillDock
removeSkillButtonByName	src/ui/qsanbutton.h	/^    inline QSanSkillButton* removeSkillButtonByName(const QString &skillName)$/;"	f	class:QSanInvokeSkillDock
removeTag	src/server/room.cpp	/^void Room::removeTag(const QString &key){$/;"	f	class:Room
removeentry	src/lua/lgc.c	/^static void removeentry (Node *n) {$/;"	f	file:
removevalues	src/lua/lcode.c	/^static void removevalues (FuncState *fs, int list) {$/;"	f	file:
removevars	src/lua/lparser.c	/^static void removevars (LexState *ls, int tolevel) {$/;"	f	file:
rende_skill.getTurnUseCard	lua/ai/standard-ai.lua	/^rende_skill.getTurnUseCard=function(self)$/;"	f
render	include/freetype/freetype/internal/ftobjs.h	/^    FT_Renderer_RenderFunc  render;$/;"	m	struct:FT_RendererRec_
render_glyph	include/freetype/freetype/ftrender.h	/^    FT_Renderer_RenderFunc     render_glyph;$/;"	m	struct:FT_Renderer_Class_
renderers	include/freetype/freetype/internal/ftobjs.h	/^    FT_ListRec         renderers;        \/* list of renderers        *\/$/;"	m	struct:FT_LibraryRec_
renegade 	lua/ai/smart-ai.lua	/^		renegade = function(a, b)$/;"	f
renegades	src/scenario/scenario.h	/^    QStringList loyalists, rebels, renegades;$/;"	m	class:Scenario
repaintAll	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::repaintAll()$/;"	f	class:PlayerCardContainer
repaintAll	src/ui/photo.cpp	/^void Photo::repaintAll()$/;"	f	class:Photo
repeatstat	src/lua/lparser.c	/^static void repeatstat (LexState *ls, int line) {$/;"	f	file:
replayer	src/client/client.h	/^    Replayer *replayer;$/;"	m	class:Client
reply	src/ui/cardcontainer.cpp	/^void GuanxingBox::reply(){$/;"	f	class:GuanxingBox
replyToServer	src/client/client.cpp	/^void Client::replyToServer(CommandType command, const Json::Value &arg){    $/;"	f	class:Client
reportDisconnection	src/server/room.cpp	/^void Room::reportDisconnection(){$/;"	f	class:Room
reportError	src/server/ai.cpp	/^void LuaAI::reportError(lua_State *L){$/;"	f	class:LuaAI
reportHeader	src/server/serverplayer.cpp	/^QString ServerPlayer::reportHeader() const{$/;"	f	class:ServerPlayer
request	src/client/client.cpp	/^void Client::request(const QString &message)$/;"	f	class:Client
request 	lua/lib/socket/http.lua	/^request = socket.protect(function(reqt, body)$/;"	f
requestCheatChangeGeneral	src/client/client.cpp	/^void Client::requestCheatChangeGeneral(QString name){$/;"	f	class:Client
requestCheatDamage	src/client/client.cpp	/^void Client::requestCheatDamage(const QString& source, const QString& target, DamageStruct::Nature nature, int points)$/;"	f	class:Client
requestCheatGetOneCard	src/client/client.cpp	/^void Client::requestCheatGetOneCard(int card_id){$/;"	f	class:Client
requestCheatKill	src/client/client.cpp	/^void Client::requestCheatKill(const QString& killer, const QString& victim)$/;"	f	class:Client
requestCheatRevive	src/client/client.cpp	/^void Client::requestCheatRevive(const QString& name)$/;"	f	class:Client
requestCheatRunScript	src/client/client.cpp	/^void Client::requestCheatRunScript(const QString& script)$/;"	f	class:Client
requestSurrender	src/client/client.cpp	/^void Client::requestSurrender(){$/;"	f	class:Client
requestToServer	src/client/client.cpp	/^void Client::requestToServer(CommandType command, const Json::Value &arg)$/;"	f	class:Client
request_size	include/freetype/freetype/internal/ftdriver.h	/^    FT_Size_RequestFunc       request_size;$/;"	m	struct:FT_Driver_ClassRec_
requesting_thread	src/breakpad/google_breakpad/processor/process_state.h	/^  int requesting_thread() const { return requesting_thread_; }$/;"	f	class:google_breakpad::ProcessState
requesting_thread_	src/breakpad/google_breakpad/processor/process_state.h	/^  int requesting_thread_;$/;"	m	class:google_breakpad::ProcessState
requesting_thread_id	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t requesting_thread_id;$/;"	m	struct:__anon49
requesting_thread_id_	src/breakpad/client/windows/handler/exception_handler.h	/^  DWORD requesting_thread_id_;$/;"	m	class:google_breakpad::ExceptionHandler
res_id	include/freetype/freetype/internal/ftrfork.h	/^    FT_UShort  res_id;$/;"	m	struct:FT_RFork_Ref_
rescanPackage	src/dialog/packagingeditor.cpp	/^void PackagingEditor::rescanPackage(){$/;"	f	class:PackagingEditor
reserved	include/freetype/freetype/freetype.h	/^    FT_UInt           reserved;       \/* retained for binary compatibility *\/$/;"	m	struct:FT_GlyphSlotRec_
reserved	include/freetype/freetype/ftwinfnt.h	/^    FT_Byte    reserved;$/;"	m	struct:FT_WinFNT_HeaderRec_
reserved	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int8_t  reserved[3];$/;"	m	struct:__anon31
reserved	src/lua/lobject.h	/^    lu_byte reserved;$/;"	m	struct:TString::__anon91
reserved0	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t            reserved0[2];$/;"	m	struct:__anon26
reserved1	include/freetype/freetype/ftwinfnt.h	/^    FT_ULong   reserved1[4];$/;"	m	struct:FT_WinFNT_HeaderRec_
reserved1	include/freetype/freetype/internal/ftobjs.h	/^    FT_UShort           reserved1;$/;"	m	struct:FT_Face_InternalRec_
reserved1	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int8_t   reserved1;$/;"	m	struct:__anon55
reserved1	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t            reserved1[2];$/;"	m	struct:__anon26
reserved2	include/freetype/freetype/internal/ftobjs.h	/^    FT_Short            reserved2;$/;"	m	struct:FT_Face_InternalRec_
reserved2	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int16_t  reserved2;$/;"	m	struct:__anon55
reserved2	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int16_t        reserved2;$/;"	m	struct:__anon39
reserved3	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int16_t  reserved3;$/;"	m	struct:__anon55
reserved4	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int8_t   reserved4[96];$/;"	m	struct:__anon55
reset	include/fmod/fmod_dsp.h	/^    FMOD_DSP_RESETCALLBACK       reset;              \/* [w] Reset callback.  This is called by the user to reset any history buffers that may need resetting for a filter, when it is to be used or re-used for the first time to its initial clean state.  Use to avoid clicks or artifacts. *\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
reset	include/freetype/freetype/internal/pshints.h	/^    T1_Hints_ResetFunc     reset;$/;"	m	struct:T1_Hints_FuncsRec_
reset	src/breakpad/processor/linked_ptr.h	/^  void reset(T* ptr = NULL) { depart(); capture(ptr); }$/;"	f	class:google_breakpad::linked_ptr
reset	src/breakpad/processor/scoped_ptr.h	/^  void reset(T* p = 0) {$/;"	f	class:google_breakpad::scoped_array
reset	src/breakpad/processor/scoped_ptr.h	/^  void reset(T* p = 0) {$/;"	f	class:google_breakpad::scoped_ptr
reset	src/breakpad/processor/scoped_ptr.h	/^  void reset(T* p = 0) {$/;"	f	class:google_breakpad::scoped_ptr_malloc
reset	src/core/RoomState.cpp	/^void RoomState::reset()$/;"	f	class:RoomState
reset	src/ui/sprite.h	/^    void reset(){index =0;}$/;"	f	class:QAnimatedEffect
reset2bits	src/lua/lgc.h	36;"	d
resetAI	src/server/room.cpp	/^void Room::resetAI(ServerPlayer *player){$/;"	f	class:Room
resetButtons	src/dialog/generaloverview.cpp	/^void GeneralOverview::resetButtons(){$/;"	f	class:GeneralOverview
resetCard	src/core/RoomState.cpp	/^void RoomState::resetCard(int cardId)$/;"	f	class:RoomState
resetCard	src/server/room.h	/^    inline virtual void resetCard(int cardId) { _m_roomState.resetCard(cardId); }$/;"	f	class:Room
resetPhoto	src/dialog/cardeditor.cpp	/^void CardScene::resetPhoto(){$/;"	f	class:CardScene
resetPiles	src/client/client.cpp	/^void Client::resetPiles(const QString &){$/;"	f	class:Client
resetPiles	src/ui/roomscene.cpp	/^void RoomScene::resetPiles()$/;"	f	class:RoomScene
resetTime	src/ui/sprite.h	/^    int resetTime;$/;"	m	class:Sprite
reset_face	include/freetype/freetype/internal/autohint.h	/^    FT_AutoHinter_GlobalResetFunc  reset_face;$/;"	m	struct:FT_AutoHinter_ServiceRec_
resetbit	src/lua/lgc.h	33;"	d
resetbits	src/lua/lgc.h	27;"	d
resethookcount	src/lua/ldebug.h	18;"	d
resetstack	src/lua/ldo.c	/^static void resetstack (lua_State *L, int status) {$/;"	f	file:
resize	src/jsoncpp/src/json_value.cpp	/^Value::resize( ArrayIndex newSize )$/;"	f	class:Json::Value
resize	src/lua/ltable.c	/^static void resize (lua_State *L, Table *t, int nasize, int nhsize) {$/;"	f	file:
resizeEvent	src/dialog/mainwindow.cpp	/^    virtual void resizeEvent(QResizeEvent *event) {$/;"	f	class:FitView
resolve	src/jsoncpp/src/json_value.cpp	/^Path::resolve( const Value &root ) const$/;"	f	class:Json::Path
resolve	src/jsoncpp/src/json_value.cpp	/^Path::resolve( const Value &root, $/;"	f	class:Json::Path
resolveFont	src/ui/uiUtils.cpp	/^QString QSanUiUtils::QSanFreeTypeFont::resolveFont(const QString& fontName)$/;"	f	class:QSanUiUtils::QSanFreeTypeFont
resolveReference	src/jsoncpp/src/json_value.cpp	/^Value::resolveReference( const char *key, $/;"	f	class:Json::Value
resolver	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  BasicSourceLineResolver resolver;$/;"	m	class:__anon71::TestBasicSourceLineResolver	file:
resolver	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  BasicSourceLineResolver resolver;$/;"	m	class:StackwalkerAMD64Fixture	file:
resolver	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  BasicSourceLineResolver resolver;$/;"	m	class:StackwalkerARMFixture	file:
resolver	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  BasicSourceLineResolver resolver;$/;"	m	class:StackwalkerX86Fixture	file:
resolver_	src/breakpad/google_breakpad/processor/minidump_processor.h	/^  SourceLineResolverInterface *resolver_;$/;"	m	class:google_breakpad::MinidumpProcessor
resolver_	src/breakpad/google_breakpad/processor/stackwalker.h	/^  SourceLineResolverInterface *resolver_;$/;"	m	class:google_breakpad::Stackwalker
response_skill	src/server/ai.h	/^    ResponseSkill *response_skill;$/;"	m	class:TrustAI
response_skill	src/ui/roomscene.h	/^    ResponseSkill *response_skill;$/;"	m	class:RoomScene
restoreFromConfig	src/dialog/mainwindow.cpp	/^void MainWindow::restoreFromConfig(){$/;"	f	class:MainWindow
restore_stack_limit	src/lua/ldo.c	/^static void restore_stack_limit (lua_State *L) {$/;"	f	file:
restoreci	src/lua/ldo.h	28;"	d
restorestack	src/lua/ldo.h	25;"	d
result	include/fmod/fmod.h	/^    FMOD_RESULT     result;         \/* [r\/w] Result code, FMOD_OK tells the system it is ready to consume the data.  Set this last!  Default value = FMOD_ERR_NOTREADY. *\/$/;"	m	struct:__anon108
result	src/server/roomthread3v3.h	/^    QString result;$/;"	m	class:RoomThread3v3
resume	src/lua/ldo.c	/^static void resume (lua_State *L, void *ud) {$/;"	f	file:
resume_error	src/lua/ldo.c	/^static int resume_error (lua_State *L, const char *msg) {$/;"	f	file:
retained	src/ui/cardcontainer.cpp	/^bool CardContainer::retained(){$/;"	f	class:CardContainer
retrial	src/server/room.cpp	/^void Room::retrial(const Card *card, ServerPlayer *player, JudgeStar judge,$/;"	f	class:Room
retstat	src/lua/lparser.c	/^static void retstat (LexState *ls) {$/;"	f	file:
returnButton	src/ui/chatwidget.h	/^    QPushButton *returnButton;$/;"	m	class:ChatWidget
revealGeneral	src/client/client.cpp	/^void Client::revealGeneral(const QString &reveal_str){$/;"	f	class:Client
revealGeneral	src/ui/roomscene.cpp	/^void KOFOrderBox::revealGeneral(const QString &name){$/;"	f	class:KOFOrderBox
revealGeneral	src/ui/roomscene.cpp	/^void RoomScene::revealGeneral(bool self, const QString &general){$/;"	f	class:RoomScene
revealed	src/ui/roomscene.h	/^    int revealed;$/;"	m	class:KOFOrderBox
reverb	include/fmod/fmod_memoryinfo.h	/^    unsigned int reverb;                         \/* [out] Reverb implementation objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
reverbchannelprops	include/fmod/fmod_memoryinfo.h	/^    unsigned int reverbchannelprops;             \/* [out] Reverb channel properties structs *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
reverbdef	include/fmod/fmod_memoryinfo.h	/^    unsigned int reverbdef;                      \/* [out] Reverb definition objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
reverseFor3v3	src/server/room.cpp	/^void Room::reverseFor3v3(const Card *card, ServerPlayer *player, QList<ServerPlayer *> &list){$/;"	f	class:Room
reverseSelection	src/ui/dashboard.cpp	/^void Dashboard::reverseSelection(){$/;"	f	class:Dashboard
revivePlayer	src/client/client.cpp	/^void Client::revivePlayer(const QString &player_name){$/;"	f	class:Client
revivePlayer	src/server/room.cpp	/^void Room::revivePlayer(ServerPlayer *player){$/;"	f	class:Room
revivePlayer	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::revivePlayer()$/;"	f	class:PlayerCardContainer
revivePlayer	src/ui/roomscene.cpp	/^void RoomScene::revivePlayer(const QString &who){$/;"	f	class:RoomScene
rewardAndPunish	src/server/gamerule.cpp	/^void GameRule::rewardAndPunish(ServerPlayer *killer, ServerPlayer *victim) const{$/;"	f	class:GameRule
rewind	src/breakpad/processor/binarystream.h	/^  void rewind() {$/;"	f	class:google_breakpad::binarystream
right	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  right;  \/* index of right glyph in pair *\/$/;"	m	struct:TT_Kern0_PairRec_
right	src/dialog/distanceviewdialog.cpp	/^    QLineEdit *left, *right;$/;"	m	struct:DistanceViewDialogUI	file:
right	src/lua/lparser.c	/^  lu_byte right; \/* right priority *\/$/;"	m	struct:__anon88	file:
rightMargin_	src/jsoncpp/include/json/writer.h	/^      int rightMargin_;$/;"	m	class:Json::StyledStreamWriter
rightMargin_	src/jsoncpp/include/json/writer.h	/^      int rightMargin_;$/;"	m	class:Json::StyledWriter
rip	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  rip;$/;"	m	struct:__anon56
role	src/core/player.h	/^    QString role;$/;"	m	class:Player
role_ComboBox	src/dialog/customassigndialog.h	/^    QComboBox *role_ComboBox, *num_ComboBox, *marks_ComboBox;$/;"	m	class:CustomAssignDialog
role_ComboBox	src/dialog/roleassigndialog.h	/^    QComboBox *role_ComboBox;$/;"	m	class:RoleAssignDialog
role_choose_ComboBox	src/server/server.h	/^    QComboBox *role_choose_ComboBox;$/;"	m	class:ServerDialog
role_items	src/ui/roomscene.h	/^    QList<QGraphicsPixmapItem *> role_items;$/;"	m	class:RoomScene
role_mapping	src/dialog/customassigndialog.h	/^    QMap<QString, QString> role_mapping, general_mapping, general2_mapping;$/;"	m	class:CustomAssignDialog
role_mapping	src/dialog/roleassigndialog.h	/^    QMap<QString, QString> role_mapping;$/;"	m	class:RoleAssignDialog
role_predictable_checkbox	src/server/server.h	/^    QCheckBox *role_predictable_checkbox;$/;"	m	class:ServerDialog
room	src/dialog/halldialog.cpp	/^void Client::room(const QString &room_str){$/;"	f	class:Client
room	src/dialog/halldialog.cpp	/^void HallDialog::room(int room_id, int joined, const QString &setup_string){$/;"	f	class:HallDialog
room	src/server/ai.h	/^    Room *room;$/;"	m	class:AI
room	src/server/roomthread.h	/^    Room *room;$/;"	m	class:RoomThread
room	src/server/roomthread1v1.h	/^    Room *room;$/;"	m	class:RoomThread1v1
room	src/server/roomthread3v3.h	/^    Room *room;$/;"	m	class:RoomThread3v3
room	src/server/serverplayer.h	/^    Room *room;$/;"	m	class:ServerPlayer
roomBegin	src/dialog/halldialog.cpp	/^void Client::roomBegin(const QString &begin_str){$/;"	f	class:Client
roomBegin	src/dialog/halldialog.cpp	/^void HallDialog::roomBegin(int total, int pagelimit){$/;"	f	class:HallDialog
roomCreated	src/dialog/halldialog.cpp	/^void Client::roomCreated(const QString &idstr){$/;"	f	class:Client
roomEnd	src/dialog/halldialog.cpp	/^void Client::roomEnd(const QString &){$/;"	f	class:Client
roomEnd	src/dialog/halldialog.cpp	/^void HallDialog::roomEnd(){$/;"	f	class:HallDialog
roomError	src/dialog/halldialog.cpp	/^void Client::roomError(const QString &errorStr){$/;"	f	class:Client
room_row	src/dialog/halldialog.h	/^    int room_row;$/;"	m	class:HallDialog
rooms	src/server/server.h	/^    QSet<Room *> rooms;$/;"	m	class:Server
root	include/freetype/freetype/ftglyph.h	/^    FT_GlyphRec  root;$/;"	m	struct:FT_BitmapGlyphRec_
root	include/freetype/freetype/ftglyph.h	/^    FT_GlyphRec  root;$/;"	m	struct:FT_OutlineGlyphRec_
root	include/freetype/freetype/ftrender.h	/^    FT_Module_Class            root;$/;"	m	struct:FT_Renderer_Class_
root	include/freetype/freetype/internal/ftdriver.h	/^    FT_Module_Class           root;$/;"	m	struct:FT_Driver_ClassRec_
root	include/freetype/freetype/internal/ftobjs.h	/^    FT_ModuleRec            root;$/;"	m	struct:FT_RendererRec_
root	include/freetype/freetype/internal/ftobjs.h	/^    FT_ModuleRec     root;$/;"	m	struct:FT_DriverRec_
root	include/freetype/freetype/internal/t1types.h	/^    FT_FaceRec       root;$/;"	m	struct:CID_FaceRec_
root	include/freetype/freetype/internal/t1types.h	/^    FT_FaceRec      root;$/;"	m	struct:T1_FaceRec_
root	include/freetype/freetype/internal/tttypes.h	/^    FT_FaceRec            root;$/;"	m	struct:TT_FaceRec_
rootgc	src/lua/lstate.h	/^  GCObject *rootgc;  \/* list of all collectable objects *\/$/;"	m	struct:global_State
round_stem_up	include/freetype/freetype/t1tables.h	/^    FT_Bool    round_stem_up;$/;"	m	struct:PS_PrivateRec_
rows	include/freetype/freetype/ftimage.h	/^    int             rows;$/;"	m	struct:FT_Bitmap_
rpcrt4_module_	src/breakpad/client/windows/crash_generation/minidump_generator.h	/^  HMODULE rpcrt4_module_;$/;"	m	class:google_breakpad::MinidumpGenerator
rpcrt4_module_	src/breakpad/client/windows/handler/exception_handler.h	/^  HMODULE rpcrt4_module_;$/;"	m	class:google_breakpad::ExceptionHandler
rsb_delta	include/freetype/freetype/freetype.h	/^    FT_Pos            rsb_delta;$/;"	m	struct:FT_GlyphSlotRec_
rsi	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  rsi;$/;"	m	struct:__anon56
rsp	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  rsp;$/;"	m	struct:__anon56
rule	src/scenario/scenario.h	/^    ScenarioRule *rule;$/;"	m	class:Scenario
run	src/server/room.cpp	/^void Room::run(){$/;"	f	class:Room
run	src/server/roomthread.cpp	/^void RoomThread::run(){$/;"	f	class:RoomThread
run	src/server/roomthread1v1.cpp	/^void RoomThread1v1::run(){$/;"	f	class:RoomThread1v1
run	src/server/roomthread3v3.cpp	/^void RoomThread3v3::run()$/;"	f	class:RoomThread3v3
run	src/ui/joystick.cpp	/^void Joystick::run(){$/;"	f	class:Joystick
run	src/ui/roomscene.cpp	/^void SpeakThread::run(){$/;"	f	class:SpeakThread
run	src/util/recorder.cpp	/^void Replayer::run(){$/;"	f	class:Replayer
run3v3	src/server/roomthread.cpp	/^void RoomThread::run3v3(){$/;"	f	class:RoomThread
runtime_check	src/lua/lvm.c	341;"	d	file:
rva	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDRVA     rva;$/;"	m	struct:__anon17
s	src/lua/lauxlib.c	/^  const char *s;$/;"	m	struct:LoadS	file:
s	src/lua/lparser.h	/^    struct { int info, aux; } s;$/;"	m	union:expdesc::__anon99	typeref:struct:expdesc::__anon99::__anon100
s.try 	lua/lib/socket/smtp.lua	/^    s.try = socket.newtry(function()$/;"	f
sCapHeight	include/freetype/freetype/tttables.h	/^    FT_Short   sCapHeight;$/;"	m	struct:TT_OS2_
sFamilyClass	include/freetype/freetype/tttables.h	/^    FT_Short   sFamilyClass;$/;"	m	struct:TT_OS2_
sTypoAscender	include/freetype/freetype/tttables.h	/^    FT_Short   sTypoAscender;$/;"	m	struct:TT_OS2_
sTypoDescender	include/freetype/freetype/tttables.h	/^    FT_Short   sTypoDescender;$/;"	m	struct:TT_OS2_
sTypoLineGap	include/freetype/freetype/tttables.h	/^    FT_Short   sTypoLineGap;$/;"	m	struct:TT_OS2_
sacrifice	src/server/generalselector.h	/^    QSet<QString> sacrifice;$/;"	m	class:GeneralSelector
safe_mbstowcs	src/breakpad/common/windows/string_utils.cc	/^bool WindowsStringUtils::safe_mbstowcs(const string &mbs, wstring *wcs) {$/;"	f	class:google_breakpad::WindowsStringUtils
safe_wcscpy	src/breakpad/common/windows/string_utils-inl.h	/^inline void WindowsStringUtils::safe_wcscpy(wchar_t *destination,$/;"	f	class:google_breakpad::WindowsStringUtils
safe_wcsncpy	src/breakpad/common/windows/string_utils-inl.h	/^inline void WindowsStringUtils::safe_wcsncpy(wchar_t *destination,$/;"	f	class:google_breakpad::WindowsStringUtils
safe_wcstombs	src/breakpad/common/windows/string_utils.cc	/^bool WindowsStringUtils::safe_wcstombs(const wstring &wcs, string *mbs) {$/;"	f	class:google_breakpad::WindowsStringUtils
salt	src/server/contestdb.h	/^        QString salt;$/;"	m	struct:ContestDB::Member
sameColorWith	src/core/card.cpp	/^bool Card::sameColorWith(const Card *other) const{$/;"	f	class:Card
same_checkbox	src/server/server.h	/^    QCheckBox *same_checkbox;$/;"	m	class:ServerDialog
same_label	src/client/clientstruct.h	/^    QLabel *same_label;$/;"	m	class:ServerInfoWidget
saturate	include/js.h	/^  float saturate  [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
save	src/client/client.cpp	/^bool Client::save(const QString &filename) const{$/;"	f	class:Client
save	src/dialog/customassigndialog.cpp	/^bool CustomAssignDialog::save(QString path)$/;"	f	class:CustomAssignDialog
save	src/lua/llex.c	/^static void save (LexState *ls, int c) {$/;"	f	file:
save	src/server/server.cpp	/^void BanlistDialog::save(){$/;"	f	class:BanlistDialog
save	src/util/recorder.cpp	/^bool Recorder::save(const QString &filename) const{$/;"	f	class:Recorder
save3v3Generals	src/server/server.cpp	/^void Select3v3GeneralDialog::save3v3Generals(){$/;"	f	class:Select3v3GeneralDialog
saveAll	src/server/server.cpp	/^void BanlistDialog::saveAll()$/;"	f	class:BanlistDialog
saveAvatar	src/dialog/cardeditor.cpp	/^void CardEditor::saveAvatar(const QRectF &rect){$/;"	f	class:CardEditor
saveBanPairs	src/core/banpair.cpp	/^void BanPair::saveBanPairs(){$/;"	f	class:BanPair
saveConfig	src/dialog/cardeditor.cpp	/^void CardScene::saveConfig(){$/;"	f	class:CardScene
saveConfig	src/dialog/cardeditor.cpp	/^void SkillBox::saveConfig(){$/;"	f	class:SkillBox
saveConfig	src/dialog/configdialog.cpp	/^void ConfigDialog::saveConfig()$/;"	f	class:ConfigDialog
saveImage	src/dialog/cardeditor.cpp	/^void CardEditor::saveImage(){$/;"	f	class:CardEditor
saveRecord	src/server/serverplayer.cpp	/^void ServerPlayer::saveRecord(const QString &filename){$/;"	f	class:ServerPlayer
saveReplayRecord	src/ui/roomscene.cpp	/^void RoomScene::saveReplayRecord(){$/;"	f	class:RoomScene
saveResult	src/server/contestdb.cpp	/^void ContestDB::saveResult(const QList<ServerPlayer *> &players, const QString &winner){$/;"	f	class:ContestDB
saveToSettings	src/dialog/packagingeditor.cpp	/^void MetaInfoWidget::saveToSettings(QSettings &settings){$/;"	f	class:MetaInfoWidget
save_and_next	src/lua/llex.c	48;"	d	file:
save_pad5	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int32_t  save_pad5[4];$/;"	m	struct:__anon10
save_pad6	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int32_t  save_pad6[7];$/;"	m	struct:__anon10
save_vr	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int128_t save_vr[MD_VECTORSAVEAREA_PPC_VR_COUNT];$/;"	m	struct:__anon10
save_vrvalid	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int32_t  save_vrvalid;  \/* Identifies which vector registers are saved *\/$/;"	m	struct:__anon10
save_vscr	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int128_t save_vscr;  \/* Status\/control *\/$/;"	m	struct:__anon10
saveci	src/lua/ldo.h	27;"	d
saved_register_size	src/breakpad/processor/windows_frame_info.h	/^  u_int32_t saved_register_size;$/;"	m	struct:google_breakpad::WindowsFrameInfo
savedpc	src/lua/lstate.h	/^  const Instruction *savedpc;  \/* `savedpc' of current function *\/$/;"	m	struct:lua_State
savedpc	src/lua/lstate.h	/^  const Instruction *savedpc;$/;"	m	struct:CallInfo
savestack	src/lua/ldo.h	24;"	d
sbit_num_strikes	include/freetype/freetype/internal/tttypes.h	/^    FT_UInt               sbit_num_strikes;$/;"	m	struct:TT_FaceRec_
sbit_ranges	include/freetype/freetype/internal/tttypes.h	/^    TT_SBit_Range           sbit_ranges;$/;"	m	struct:TT_SBit_StrikeRec_
sbit_scales	include/freetype/freetype/internal/tttypes.h	/^    TT_SBit_Scale         sbit_scales;$/;"	m	struct:TT_FaceRec_
sbit_strikes	include/freetype/freetype/internal/tttypes.h	/^    TT_SBit_Strike        sbit_strikes;$/;"	m	struct:TT_FaceRec_
sbit_table	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*              sbit_table;$/;"	m	struct:TT_FaceRec_
sbit_table_size	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              sbit_table_size;$/;"	m	struct:TT_FaceRec_
scaleSmoothly	src/ui/QSanSelectableItem.cpp	/^void QSanSelectableItem::scaleSmoothly(qreal ratio){$/;"	f	class:QSanSelectableItem
scaleTransform	src/ui/window.h	/^    QGraphicsScale *scaleTransform;$/;"	m	class:Window
scanformat	src/lua/lstrlib.c	/^static const char *scanformat (lua_State *L, const char *strfrmt, char *form) {$/;"	f	file:
scenario	src/server/room.h	/^    const Scenario *scenario;$/;"	m	class:Room
scenario_ComboBox	src/server/server.h	/^    QComboBox *scenario_ComboBox;$/;"	m	class:ServerDialog
scenarios	src/core/engine.h	/^    QHash<QString, const Scenario *> scenarios;$/;"	m	class:Engine
scenarios	src/scenario/scenario.cpp	/^ScenarioHash& ScenarioAdder::scenarios(){$/;"	f	class:ScenarioAdder
scene	src/dialog/mainwindow.h	/^    QGraphicsScene *scene;$/;"	m	class:MainWindow
scene_checkbox	src/server/server.h	/^    QCheckBox *scene_checkbox;	\/\/changjing$/;"	m	class:ServerDialog
scene_label	src/client/clientstruct.h	/^    QLabel *scene_label;$/;"	m	class:ServerInfoWidget
scoped_array	src/breakpad/processor/scoped_ptr.h	/^  explicit scoped_array(T* p = 0) : ptr(p) {}$/;"	f	class:google_breakpad::scoped_array
scoped_array	src/breakpad/processor/scoped_ptr.h	/^class scoped_array {$/;"	c	namespace:google_breakpad
scoped_ptr	src/breakpad/processor/scoped_ptr.h	/^  explicit scoped_ptr(T* p = 0): ptr(p) {}$/;"	f	class:google_breakpad::scoped_ptr
scoped_ptr	src/breakpad/processor/scoped_ptr.h	/^class scoped_ptr {$/;"	c	namespace:google_breakpad
scoped_ptr_malloc	src/breakpad/processor/scoped_ptr.h	/^  explicit scoped_ptr_malloc(T* p = 0): ptr(p) {}$/;"	f	class:google_breakpad::scoped_ptr_malloc
scoped_ptr_malloc	src/breakpad/processor/scoped_ptr.h	/^class scoped_ptr_malloc {$/;"	c	namespace:google_breakpad
screenName	src/core/player.cpp	/^QString Player::screenName() const{$/;"	f	class:Player
screen_name	src/core/player.h	/^    QString screen_name;$/;"	m	class:Player
sd_bytes	include/freetype/freetype/t1tables.h	/^    FT_Int         sd_bytes;$/;"	m	struct:CID_FaceDictRec_
seac	include/freetype/freetype/internal/psaux.h	/^    FT_Bool              seac;$/;"	m	struct:T1_DecoderRec_
search	lua/lib/expand.lua	/^  local function search(index)$/;"	f
search_range	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  search_range;$/;"	m	struct:SFNT_HeaderRec_
searchvar	src/lua/lparser.c	/^static int searchvar (FuncState *fs, TString *n) {$/;"	f	file:
seat	src/core/player.h	/^    int seat;$/;"	m	class:Player
sec	include/fmod/fmod.h	/^    int sec[100];                   \/* [r] The start offset of each track in seconds *\/$/;"	m	struct:FMOD_CDTOC
second_general_checkbox	src/server/server.h	/^    QCheckBox *second_general_checkbox;$/;"	m	class:ServerDialog
second_general_table	src/server/generalselector.h	/^    QHash<QString, int> second_general_table;$/;"	m	class:GeneralSelector
secondaryram	include/fmod/fmod_memoryinfo.h	/^    unsigned int secondaryram;                   \/* [out] Sound data stored in secondary RAM *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
select1v1	src/server/generalselector.cpp	/^QString GeneralSelector::select1v1(const QStringList &candidates){$/;"	f	class:GeneralSelector
select3v3	src/server/generalselector.cpp	/^QString GeneralSelector::select3v3(ServerPlayer *, const QStringList &candidates){$/;"	f	class:GeneralSelector
select3v3Generals	src/server/server.cpp	/^void ServerDialog::select3v3Generals(){$/;"	f	class:ServerDialog
selectAll	src/ui/dashboard.cpp	/^void Dashboard::selectAll(){$/;"	f	class:Dashboard
selectCard	src/package/wind.cpp	/^void GuhuoDialog::selectCard(QAbstractButton *button){$/;"	f	class:GuhuoDialog
selectCard	src/ui/dashboard.cpp	/^void Dashboard::selectCard(CardItem* item, bool isSelected){$/;"	f	class:Dashboard
selectCard	src/ui/dashboard.cpp	/^void Dashboard::selectCard(const QString &pattern, bool forward){$/;"	f	class:Dashboard
selectFirst	src/server/generalselector.cpp	/^QString GeneralSelector::selectFirst(ServerPlayer *player, const QStringList &candidates){$/;"	f	class:GeneralSelector
selectGeneral	src/ui/roomscene.cpp	/^void RoomScene::selectGeneral(){$/;"	f	class:RoomScene
selectHighest	src/server/generalselector.cpp	/^QString GeneralSelector::selectHighest(const QHash<QString, int> &table, const QStringList &candidates, int default_value){$/;"	f	class:GeneralSelector
selectNextTarget	src/ui/roomscene.cpp	/^void RoomScene::selectNextTarget(bool multiple){$/;"	f	class:RoomScene
selectSecond	src/server/generalselector.cpp	/^QString GeneralSelector::selectSecond(ServerPlayer *player, const QStringList &candidates){$/;"	f	class:GeneralSelector
selectSkill	src/dialog/customassigndialog.cpp	/^void SkillAssignDialog::selectSkill(){$/;"	f	class:SkillAssignDialog
selectTarget	src/ui/roomscene.cpp	/^void RoomScene::selectTarget(int order, bool multiple){$/;"	f	class:RoomScene
select_size	include/freetype/freetype/internal/ftdriver.h	/^    FT_Size_SelectFunc        select_size;$/;"	m	struct:FT_Driver_ClassRec_
select_skill	src/dialog/customassigndialog.h	/^    QPushButton *select_skill, *delete_skill;$/;"	m	class:SkillAssignDialog
selected	src/server/serverplayer.h	/^    QStringList selected; \/\/ 3v3 mode use only$/;"	m	class:ServerPlayer
selected	src/ui/dashboard.h	/^    CardItem *selected;$/;"	m	class:Dashboard
selected_targets	src/ui/roomscene.h	/^    QList<const Player *> selected_targets;$/;"	m	class:RoomScene
selector_box	src/ui/roomscene.h	/^    QSanSelectableItem *selector_box;$/;"	m	class:RoomScene
self	src/server/ai.h	/^    ServerPlayer *self;$/;"	m	class:AI
self.lua_ai.callback 	lua/ai/smart-ai.lua	/^	self.lua_ai.callback = function(full_method_name, ...)$/;"	f
self_box	src/ui/roomscene.h	/^    KOFOrderBox *enemy_box, *self_box;$/;"	m	class:RoomScene
self_select_general	src/dialog/customassigndialog.h	/^    QCheckBox *self_select_general, *self_select_general2;$/;"	m	class:CustomAssignDialog
self_select_general2	src/dialog/customassigndialog.h	/^    QCheckBox *self_select_general, *self_select_general2;$/;"	m	class:CustomAssignDialog
sem	src/server/room.h	/^    QSemaphore *sem; \/\/ Legacy semaphore, expected to be reomved after new synchronization is fully deployed.$/;"	m	class:Room
sem	src/ui/roomscene.h	/^    QSemaphore sem;$/;"	m	class:SpeakThread
semas	src/server/serverplayer.h	/^    QSemaphore **semas;$/;"	m	class:ServerPlayer
seminfo	src/lua/llex.h	/^  SemInfo seminfo;$/;"	m	struct:Token
send	src/util/nativesocket.cpp	/^void NativeClientSocket::send(const QString &message){$/;"	f	class:NativeClientSocket
send 	lua/lib/socket/smtp.lua	/^send = socket.protect(function(mailt)$/;"	f
sendBack	src/ui/sprite.cpp	/^void EffectAnimation::sendBack(QGraphicsItem *map)$/;"	f	class:EffectAnimation
sendDamageLog	src/server/room.cpp	/^void Room::sendDamageLog(const DamageStruct &data){$/;"	f	class:Room
sendJudgeResult	src/server/room.cpp	/^void Room::sendJudgeResult(const JudgeStar judge){$/;"	f	class:Room
sendLog	src/server/room.cpp	/^void Room::sendLog(const LogMessage &log){$/;"	f	class:Room
sendLowLevelCommand	src/dialog/mainwindow.cpp	/^void MainWindow::sendLowLevelCommand()$/;"	f	class:MainWindow
sendResult	src/server/contestdb.cpp	/^void ContestDB::sendResult(Room *room){$/;"	f	class:ContestDB
sendText	src/ui/chatwidget.cpp	/^void ChatWidget::sendText()$/;"	f	class:ChatWidget
send_headers	lua/lib/socket/smtp.lua	/^local function send_headers(headers)$/;"	f
send_message	lua/lib/socket/smtp.lua	/^function send_message(mesgt)$/;"	f
send_multipart	lua/lib/socket/smtp.lua	/^local function send_multipart(mesgt)$/;"	f
send_source	lua/lib/socket/smtp.lua	/^local function send_source(mesgt)$/;"	f
send_string	lua/lib/socket/smtp.lua	/^local function send_string(mesgt)$/;"	f
sentinel	src/lua/loadlib.c	448;"	d	file:
sentinel_	src/lua/loadlib.c	/^static const int sentinel_ = 0;$/;"	v	file:
serialized_data_	src/breakpad/processor/map_serializers_unittest.cc	/^  char *serialized_data_;$/;"	m	class:TestAddressMapSerializer	file:
serialized_data_	src/breakpad/processor/map_serializers_unittest.cc	/^  char *serialized_data_;$/;"	m	class:TestContainedRangeMapSerializer	file:
serialized_data_	src/breakpad/processor/map_serializers_unittest.cc	/^  char *serialized_data_;$/;"	m	class:TestRangeMapSerializer	file:
serialized_data_	src/breakpad/processor/map_serializers_unittest.cc	/^  char *serialized_data_;$/;"	m	class:TestStdMapSerializer	file:
serialized_data_	src/breakpad/processor/static_contained_range_map_unittest.cc	/^  scoped_array<char> serialized_data_;$/;"	m	class:google_breakpad::TestStaticCRMMap	file:
serialized_size_	src/breakpad/processor/map_serializers_unittest.cc	/^  u_int32_t serialized_size_;$/;"	m	class:TestAddressMapSerializer	file:
serialized_size_	src/breakpad/processor/map_serializers_unittest.cc	/^  u_int32_t serialized_size_;$/;"	m	class:TestContainedRangeMapSerializer	file:
serialized_size_	src/breakpad/processor/map_serializers_unittest.cc	/^  u_int32_t serialized_size_;$/;"	m	class:TestRangeMapSerializer	file:
serialized_size_	src/breakpad/processor/map_serializers_unittest.cc	/^  u_int32_t serialized_size_;$/;"	m	class:TestStdMapSerializer	file:
serializer	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  ModuleSerializer serializer;$/;"	m	class:__anon73::TestFastSourceLineResolver	file:
serializer	src/breakpad/processor/static_address_map_unittest.cc	/^  google_breakpad::AddressMapSerializer<int, string> serializer;$/;"	m	class:TestStaticAddressMap	file:
serializer	src/breakpad/processor/static_map_unittest.cc	/^  SimpleMapSerializer<KeyType, ValueType> serializer;$/;"	m	class:TestValidMap	file:
serializer_	src/breakpad/processor/map_serializers_unittest.cc	/^  google_breakpad::AddressMapSerializer<AddrType, EntryType> serializer_;$/;"	m	class:TestAddressMapSerializer	file:
serializer_	src/breakpad/processor/map_serializers_unittest.cc	/^  google_breakpad::ContainedRangeMapSerializer<AddrType, EntryType> serializer_;$/;"	m	class:TestContainedRangeMapSerializer	file:
serializer_	src/breakpad/processor/map_serializers_unittest.cc	/^  google_breakpad::RangeMapSerializer<AddrType, EntryType> serializer_;$/;"	m	class:TestRangeMapSerializer	file:
serializer_	src/breakpad/processor/map_serializers_unittest.cc	/^  google_breakpad::StdMapSerializer<AddrType, EntryType> serializer_;$/;"	m	class:TestStdMapSerializer	file:
serializer_	src/breakpad/processor/module_comparer.h	/^  ModuleSerializer serializer_;$/;"	m	class:google_breakpad::ModuleComparer
serializer_	src/breakpad/processor/static_contained_range_map_unittest.cc	/^  google_breakpad::ContainedRangeMapSerializer<unsigned int, int> serializer_;$/;"	m	class:google_breakpad::TestStaticCRMMap	file:
serializer_	src/breakpad/processor/static_range_map_unittest.cc	/^  RangeMapSerializer<AddressType, EntryType> serializer_;$/;"	m	class:google_breakpad::TestStaticRangeMap	file:
serv_data	include/freetype/freetype/internal/ftserv.h	/^    const void*  serv_data;   \/* service pointer\/data *\/$/;"	m	struct:FT_ServiceDescRec_
serv_id	include/freetype/freetype/internal/ftserv.h	/^    const char*  serv_id;     \/* service name         *\/$/;"	m	struct:FT_ServiceDescRec_
server	src/dialog/mainwindow.h	/^    Server *server;$/;"	m	class:BroadcastBox
server	src/server/server.h	/^    ServerSocket *server;$/;"	m	class:Server
server	src/util/nativesocket.h	/^    QTcpServer *server;$/;"	m	class:NativeServerSocket
server_alive_	src/breakpad/client/windows/crash_generation/crash_generation_client.h	/^  HANDLE server_alive_;$/;"	m	class:google_breakpad::CrashGenerationClient
server_alive_handle	src/breakpad/client/windows/common/ipc_protocol.h	/^  HANDLE server_alive_handle;$/;"	m	struct:google_breakpad::ProtocolMessage
server_alive_handle_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  HANDLE server_alive_handle_;$/;"	m	class:google_breakpad::CrashGenerationServer
server_log	src/ui/startscene.h	/^    QTextEdit *server_log;$/;"	m	class:StartScene
server_name_edit	src/server/server.h	/^    QLineEdit *server_name_edit;$/;"	m	class:ServerDialog
server_process_id_	src/breakpad/client/windows/crash_generation/crash_generation_client.h	/^  DWORD server_process_id_;$/;"	m	class:google_breakpad::CrashGenerationClient
server_state_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  IPCServerState server_state_;$/;"	m	class:google_breakpad::CrashGenerationServer
service_GLYPH_DICT	include/freetype/freetype/internal/ftserv.h	/^    FT_Pointer  service_GLYPH_DICT;$/;"	m	struct:FT_ServiceCacheRec_
service_MULTI_MASTERS	include/freetype/freetype/internal/ftserv.h	/^    FT_Pointer  service_MULTI_MASTERS;$/;"	m	struct:FT_ServiceCacheRec_
service_PFR_METRICS	include/freetype/freetype/internal/ftserv.h	/^    FT_Pointer  service_PFR_METRICS;$/;"	m	struct:FT_ServiceCacheRec_
service_POSTSCRIPT_FONT_NAME	include/freetype/freetype/internal/ftserv.h	/^    FT_Pointer  service_POSTSCRIPT_FONT_NAME;$/;"	m	struct:FT_ServiceCacheRec_
service_WINFNT	include/freetype/freetype/internal/ftserv.h	/^    FT_Pointer  service_WINFNT;$/;"	m	struct:FT_ServiceCacheRec_
services	include/freetype/freetype/internal/ftobjs.h	/^    FT_ServiceCacheRec  services;$/;"	m	struct:FT_Face_InternalRec_
session_	src/breakpad/common/windows/pdb_source_line_writer.h	/^  CComPtr<IDiaSession> session_;$/;"	m	class:google_breakpad::PDBSourceLineWriter
set	src/breakpad/client/windows/common/ipc_protocol.h	/^  void set(const wchar_t* name_arg, const wchar_t* value_arg) {$/;"	f	struct:google_breakpad::CustomInfoEntry
set	src/client/aux-skills.cpp	/^    QSet<QString> set;$/;"	m	class:ChoosePlayerCard	file:
set	src/server/ai.cpp	/^    void set(const QString &role1, const QString &role2, AI::Relation relation, bool reverse = false){$/;"	f	struct:RoleMapping
set	swig/sanguosha_wrap.cxx	/^  lua_CFunction set;$/;"	m	struct:__anon145	file:
set2	src/lua/ltablib.c	/^static void set2 (lua_State *L, int i, int j) {$/;"	f	file:
set2bits	src/lua/lgc.h	35;"	d
setAI	src/server/serverplayer.cpp	/^void ServerPlayer::setAI(AI *ai) {$/;"	f	class:ServerPlayer
setAlive	src/core/player.cpp	/^void Player::setAlive(bool alive){$/;"	f	class:Player
setAnchor	src/ui/magatamasItem.cpp	/^void MagatamasBoxItem::setAnchor(QPoint anchor, Qt::Alignment align)$/;"	f	class:MagatamasBoxItem
setAnchorEnable	src/ui/magatamasItem.h	/^    inline void setAnchorEnable(bool enabled) { anchorEnabled = enabled; }$/;"	f	class:MagatamasBoxItem
setAutoBack	src/ui/carditem.cpp	/^void CardItem::setAutoBack(bool auto_back){$/;"	f	class:CardItem
setAutoHide	src/ui/TimedProgressBar.h	/^    inline void setAutoHide(bool enabled) { m_autoHide = enabled; }$/;"	f	class:TimedProgressBar
setAvatarNameBox	src/dialog/cardeditor.cpp	/^void CardScene::setAvatarNameBox(const QString &text){$/;"	f	class:CardScene
setBGMVolume	src/core/audio.cpp	/^void Audio::setBGMVolume(float volume){$/;"	f	class:Audio
setBackgroundBrush	src/dialog/mainwindow.cpp	/^void MainWindow::setBackgroundBrush(bool centerAsOrigin){$/;"	f	class:MainWindow
setBackgroundVisible	src/ui/magatamasItem.h	/^    inline void setBackgroundVisible(bool visible)$/;"	f	class:MagatamasBoxItem
setBadRead	src/breakpad/processor/disassembler_x86.cc	/^bool DisassemblerX86::setBadRead() {$/;"	f	class:google_breakpad::DisassemblerX86
setBadWrite	src/breakpad/processor/disassembler_x86.cc	/^bool DisassemblerX86::setBadWrite() {$/;"	f	class:google_breakpad::DisassemblerX86
setButtonName	src/ui/qsanbutton.h	/^    inline void setButtonName(QString buttonName) { _m_buttonName = buttonName; }$/;"	f	class:QSanButton
setButtonWidth	src/ui/qsanbutton.h	/^    inline void setButtonWidth(SkillButtonWidth width) { _m_enumWidth = width; _repaint(); }$/;"	f	class:QSanInvokeSkillButton
setCancelable	src/package/standard.cpp	/^void TrickCard::setCancelable(bool cancelable){$/;"	f	class:TrickCard
setCard	src/ui/carditem.cpp	/^void CardItem::setCard(const Card* card)$/;"	f	class:CardItem
setCardFlag	src/client/client.cpp	/^void Client::setCardFlag(const QString &pattern_str){$/;"	f	class:Client
setCardFlag	src/server/room.cpp	/^void Room::setCardFlag(const Card *card, const QString &flag, ServerPlayer *who){$/;"	f	class:Room
setCardFlag	src/server/room.cpp	/^void Room::setCardFlag(int card_id, const QString &flag, ServerPlayer *who){$/;"	f	class:Room
setCardFrame	src/dialog/cardeditor.cpp	/^void CardEditor::setCardFrame(){$/;"	f	class:CardEditor
setCardLocked	src/core/player.cpp	/^void Player::setCardLocked(const QString &name){$/;"	f	class:Player
setCardMapping	src/server/room.cpp	/^void Room::setCardMapping(int card_id, ServerPlayer *owner, Player::Place place){$/;"	f	class:Room
setCards	src/client/aux-skills.cpp	/^void YijiViewAsSkill::setCards(const QString &card_str){$/;"	f	class:YijiViewAsSkill
setCards	src/client/clientplayer.cpp	/^void ClientPlayer::setCards(const QList<int> &card_ids){$/;"	f	class:ClientPlayer
setCenter	include/js.h	/^  void setCenter   ( float *axes ) { memcpy ( center, axes, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
setChained	src/core/player.cpp	/^void Player::setChained(bool chained){$/;"	f	class:Player
setClientReply	src/server/serverplayer.h	/^    inline void setClientReply(const Json::Value &val){_m_clientResponse = val;}    $/;"	f	class:ServerPlayer
setClientReplyString	src/server/serverplayer.h	/^    inline void setClientReplyString(const QString &val){m_clientResponseString = val;}$/;"	f	class:ServerPlayer
setColor	src/dialog/cardeditor.cpp	/^void BlackEdgeTextItem::setColor(const QColor &color){$/;"	f	class:BlackEdgeTextItem
setComment	src/jsoncpp/src/json_value.cpp	/^Value::CommentInfo::setComment( const char *text )$/;"	f	class:Json::Value::CommentInfo
setComment	src/jsoncpp/src/json_value.cpp	/^Value::setComment( const char *comment,$/;"	f	class:Json::Value
setComment	src/jsoncpp/src/json_value.cpp	/^Value::setComment( const std::string &comment,$/;"	f	class:Json::Value
setCountdown	src/client/client.h	/^    inline void setCountdown(QSanProtocol::Countdown countdown) $/;"	f	class:Client
setCountdown	src/ui/TimedProgressBar.cpp	/^void QSanCommandProgressBar::setCountdown(CommandType command)$/;"	f	class:QSanCommandProgressBar
setCountdown	src/ui/TimedProgressBar.cpp	/^void QSanCommandProgressBar::setCountdown(Countdown countdown)$/;"	f	class:QSanCommandProgressBar
setCountdown	src/ui/TimedProgressBar.h	/^    inline void setCountdown(time_t maximum, time_t startVal = 0)$/;"	f	class:TimedProgressBar
setCurrent	src/server/room.cpp	/^void Room::setCurrent(ServerPlayer *current){$/;"	f	class:Room
setDeadBand	include/js.h	/^  void  setDeadBand ( int axis, float db )   { dead_band [ axis ] = db   ; }$/;"	f	class:jsJoystick
setEmotion	src/client/client.cpp	/^void Client::setEmotion(const QString &set_str){$/;"	f	class:Client
setEmotion	src/server/room.cpp	/^void Room::setEmotion(ServerPlayer *target, const QString &emotion){$/;"	f	class:Room
setEmotion	src/ui/photo.cpp	/^void Photo::setEmotion(const QString &emotion, bool permanent){$/;"	f	class:Photo
setEmotion	src/ui/roomscene.cpp	/^void RoomScene::setEmotion(const QString &who, const QString &emotion ,bool permanent){$/;"	f	class:RoomScene
setEmotion	src/ui/roomscene.cpp	/^void RoomScene::setEmotion(const QString &who, const QString &emotion){$/;"	f	class:RoomScene
setEnabled	src/ui/carditem.cpp	/^void CardItem::setEnabled(bool enabled)$/;"	f	class:CardItem
setEnabled	src/ui/qsanbutton.cpp	/^void QSanButton::setEnabled(bool enabled)$/;"	f	class:QSanButton
setEnabled	src/ui/qsanbutton.h	/^    inline virtual void setEnabled(bool enabled) {$/;"	f	class:QSanSkillButton
setEquip	src/core/player.cpp	/^void Player::setEquip(WrappedCard *equip){$/;"	f	class:Player
setError	include/js.h	/^  void  setError      () { error = JS_TRUE ; }$/;"	f	class:jsJoystick
setFaceUp	src/core/player.cpp	/^void Player::setFaceUp(bool face_up){$/;"	f	class:Player
setFinish	src/ui/indicatoritem.cpp	/^void IndicatorItem::setFinish(const QPointF &finish){$/;"	f	class:IndicatorItem
setFixedDistance	src/client/client.cpp	/^void Client::setFixedDistance(const QString &set_str){$/;"	f	class:Client
setFixedDistance	src/core/player.cpp	/^void Player::setFixedDistance(const Player *player, int distance){$/;"	f	class:Player
setFixedDistance	src/server/room.cpp	/^void Room::setFixedDistance(Player *from, const Player *to, int distance){$/;"	f	class:Room
setFlag	src/core/skill.cpp	/^void Skill::setFlag(ServerPlayer *player) const{$/;"	f	class:Skill
setFlags	src/client/clientplayer.cpp	/^void ClientPlayer::setFlags(const QString &flag){$/;"	f	class:ClientPlayer
setFlags	src/core/WrappedCard.cpp	/^void WrappedCard::setFlags(const QString &flag) const{$/;"	f	class:WrappedCard
setFlags	src/core/card.cpp	/^void Card::setFlags(const QString &flag) const{$/;"	f	class:Card
setFlags	src/core/card.h	/^    inline void setFlags(const QStringList &fs) { flags = fs; }$/;"	f	class:Card
setFlags	src/core/player.cpp	/^void Player::setFlags(const QString &flag){$/;"	f	class:Player
setFloatingArea	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::setFloatingArea(QRect rect)$/;"	f	class:PlayerCardContainer
setFont	src/dialog/cardeditor.cpp	/^    void setFont(const QFont &font){$/;"	f	class:SkillTitle
setFont	src/dialog/cardeditor.cpp	/^void BlackEdgeTextItem::setFont(const QFont &font){$/;"	f	class:BlackEdgeTextItem
setFont	src/ui/button.cpp	/^void Button::setFont(const QFont &font){$/;"	f	class:Button
setFootnote	src/ui/carditem.cpp	/^void CardItem::setFootnote(const QString &desc)$/;"	f	class:CardItem
setFrame	src/dialog/cardeditor.cpp	/^void CardScene::setFrame(const QString &kingdom, bool is_lord){$/;"	f	class:CardScene
setFrame	src/ui/photo.cpp	/^void Photo::setFrame(FrameType type){$/;"	f	class:Photo
setFrozen	src/ui/carditem.cpp	/^void CardItem::setFrozen(bool is_frozen){$/;"	f	class:CardItem
setGameProcess	src/server/gamerule.cpp	/^void GameRule::setGameProcess(Room *room) const{$/;"	f	class:GameRule
setGender	src/core/general.cpp	/^void General::setGender(Gender gender){$/;"	f	class:General
setGeneral	src/core/player.cpp	/^void Player::setGeneral(const General *new_general){$/;"	f	class:Player
setGeneral2Name	src/core/player.cpp	/^void Player::setGeneral2Name(const QString &general_name){$/;"	f	class:Player
setGeneralName	src/core/player.cpp	/^void Player::setGeneralName(const QString &general_name){$/;"	f	class:Player
setGeneralPhoto	src/dialog/cardeditor.cpp	/^void CardScene::setGeneralPhoto(const QString &filename){$/;"	f	class:CardScene
setHandcardNum	src/client/clientplayer.cpp	/^void ClientPlayer::setHandcardNum(int n){$/;"	f	class:ClientPlayer
setHomeOpacity	src/ui/carditem.h	/^    inline void setHomeOpacity(double opacity) { m_opacityAtHome = opacity; }$/;"	f	class:CardItem
setHomePos	src/ui/carditem.cpp	/^void CardItem::setHomePos(QPointF home_pos){$/;"	f	class:CardItem
setHp	src/core/player.cpp	/^void Player::setHp(int hp){$/;"	f	class:Player
setHp	src/ui/magatamasItem.cpp	/^void MagatamasBoxItem::setHp(int hp)$/;"	f	class:MagatamasBoxItem
setIconSize	src/ui/magatamasItem.cpp	/^void MagatamasBoxItem::setIconSize(QSize size)$/;"	f	class:MagatamasBoxItem
setId	src/core/WrappedCard.h	/^    inline virtual void setId(int id)$/;"	f	class:WrappedCard
setId	src/core/card.cpp	/^void Card::setId(int id){$/;"	f	class:Card
setImageArea	src/ui/magatamasItem.h	/^    inline void setImageArea(QRect rect) { m_imageArea = rect; }$/;"	f	class:MagatamasBoxItem
setIncludeEquip	src/client/aux-skills.cpp	/^void DiscardSkill::setIncludeEquip(bool include_equip){$/;"	f	class:DiscardSkill
setIndex	src/ui/sprite.h	/^    void setIndex(int ind){index = ind;}$/;"	f	class:QAnimatedEffect
setInitialTables	lua/ai/smart-ai.lua	/^function setInitialTables()$/;"	f
setInstanceType	src/ui/TimedProgressBar.h	/^    inline void setInstanceType(QSanProtocol::ProcessInstanceType type) { m_instanceType = type; }$/;"	f	class:QSanCommandProgressBar
setItemUsed	src/jsoncpp/include/json/value.h	/^      inline void setItemUsed( bool isUsed = true )$/;"	f	class:Json::Value
setKingdom	src/core/player.cpp	/^void Player::setKingdom(const QString &kingdom){$/;"	f	class:Player
setKingdom	src/dialog/cardeditor.cpp	/^    void setKingdom(const QString &kingdom){$/;"	f	class:SkillTitle
setKingdom	src/dialog/cardeditor.cpp	/^void AvatarRectItem::setKingdom(const QString &kingdom){$/;"	f	class:AvatarRectItem
setKingdom	src/dialog/cardeditor.cpp	/^void SkillBox::setKingdom(const QString &kingdom){$/;"	f	class:SkillBox
setLines	src/client/client.cpp	/^void Client::setLines(const QString &filename){$/;"	f	class:Client
setListText	src/dialog/customassigndialog.cpp	/^QString CustomAssignDialog::setListText(QString name, QString role, int index){$/;"	f	class:CustomAssignDialog
setMapping	src/dialog/cardeditor.cpp	/^void CardEditor::setMapping(QFontDialog *dialog, QPushButton *button){$/;"	f	class:CardEditor
setMark	src/client/client.cpp	/^void Client::setMark(const QString &mark_str){$/;"	f	class:Client
setMark	src/client/clientplayer.cpp	/^void ClientPlayer::setMark(const QString &mark, int value){$/;"	f	class:ClientPlayer
setMark	src/core/player.cpp	/^void Player::setMark(const QString &mark, int value){$/;"	f	class:Player
setMarkable	src/ui/QSanSelectableItem.cpp	/^void QSanSelectableItem::setMarkable(bool markable){$/;"	f	class:QSanSelectableItem
setMaxHp	src/core/player.cpp	/^void Player::setMaxHp(int max_hp){$/;"	f	class:Player
setMaxHp	src/dialog/cardeditor.cpp	/^void CardScene::setMaxHp(int max_hp){$/;"	f	class:CardScene
setMaxHp	src/ui/magatamasItem.cpp	/^void MagatamasBoxItem::setMaxHp(int maxHp) $/;"	f	class:MagatamasBoxItem
setMaxRange	include/js.h	/^  void setMaxRange ( float *axes ) { memcpy ( max   , axes, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
setMaxVotes	src/ui/GenericCardContainerUI.h	/^    inline void setMaxVotes(int maxVotes) { _m_maxVotes = maxVotes; }$/;"	f	class:PlayerCardContainer
setMemberNameIsStatic	src/jsoncpp/include/json/value.h	/^      inline void setMemberNameIsStatic( bool isStatic )$/;"	f	class:Json::Value
setMenu	src/dialog/cardeditor.cpp	/^void CardScene::setMenu(QMenu *menu){$/;"	f	class:CardScene
setMessageBody	src/core/protocol.h	/^        inline void setMessageBody(const Json::Value &value){m_msgBody = value;}$/;"	f	class:QSanProtocol::QSanGeneralPacket
setMiddleHeight	src/dialog/cardeditor.cpp	/^void SkillBox::setMiddleHeight(int height){$/;"	f	class:SkillBox
setMinNum	src/client/aux-skills.cpp	/^void DiscardSkill::setMinNum(int minnum){$/;"	f	class:DiscardSkill
setMinRange	include/js.h	/^  void setMinRange ( float *axes ) { memcpy ( min   , axes, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
setMiniCheckBox	src/server/server.cpp	/^void ServerDialog::setMiniCheckBox(){$/;"	f	class:ServerDialog
setModified	src/core/WrappedCard.h	/^    void setModified(bool modified) {m_isModified = modified;}$/;"	f	class:WrappedCard
setMoveButtonAvaliable	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::setMoveButtonAvaliable(bool toggled){$/;"	f	class:CustomAssignDialog
setMute	src/ui/button.cpp	/^void Button::setMute(bool mute){$/;"	f	class:Button
setName	src/dialog/cardeditor.cpp	/^void AvatarRectItem::setName(const QString &name){$/;"	f	class:AvatarRectItem
setNationality	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::setNationality(int index){$/;"	f	class:CustomAssignDialog
setNationalityEnable	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::setNationalityEnable(bool toggled){$/;"	f	class:CustomAssignDialog
setNature	src/package/standard-cards.cpp	/^void Slash::setNature(DamageStruct::Nature nature){$/;"	f	class:Slash
setNext	src/server/serverplayer.cpp	/^void ServerPlayer::setNext(ServerPlayer *next){$/;"	f	class:ServerPlayer
setNum	src/client/aux-skills.cpp	/^void DiscardSkill::setNum(int num){$/;"	f	class:DiscardSkill
setNumCardsVisible	src/ui/TablePile.h	/^    inline void setNumCardsVisible(int num) { m_numCardsVisible = num; }$/;"	f	class:TablePile
setNumber	src/core/WrappedCard.h	/^    inline virtual void setNumber(int number) $/;"	f	class:WrappedCard
setNumber	src/core/card.cpp	/^void Card::setNumber(int number){$/;"	f	class:Card
setOptions	src/scenario/miniscenarios.cpp	/^void MiniSceneRule::setOptions(QStringList option){$/;"	f	class:MiniSceneRule
setOrientation	src/ui/magatamasItem.cpp	/^void MagatamasBoxItem::setOrientation(Qt::Orientation orientation)$/;"	f	class:MagatamasBoxItem
setOutline	src/dialog/cardeditor.cpp	/^void BlackEdgeTextItem::setOutline(int outline){$/;"	f	class:BlackEdgeTextItem
setOwner	src/core/player.cpp	/^void Player::setOwner(bool owner){$/;"	f	class:Player
setPath	src/ui/pixmapanimation.cpp	/^void PixmapAnimation::setPath(const QString &path)$/;"	f	class:PixmapAnimation
setPattern	src/client/aux-skills.cpp	/^void ResponseSkill::setPattern(const QString &pattern){$/;"	f	class:ResponseSkill
setPhase	src/core/player.cpp	/^void Player::setPhase(Phase phase){$/;"	f	class:Player
setPhaseString	src/core/player.cpp	/^void Player::setPhaseString(const QString &phase_str){$/;"	f	class:Player
setPile	src/scenario/miniscenarios.cpp	/^void MiniSceneRule::setPile(QString cardList)$/;"	f	class:MiniSceneRule
setPileNumber	src/client/client.cpp	/^void Client::setPileNumber(const QString &pile_str){$/;"	f	class:Client
setPixmap	src/ui/QSanSelectableItem.cpp	/^void QSanSelectableItem::setPixmap(const QPixmap &pixmap){$/;"	f	class:QSanSelectableItem
setPixmapAtMid	src/ui/sprite.cpp	/^void Sprite::setPixmapAtMid(const QPixmap &pixmap)$/;"	f	class:Sprite
setPlayer	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::setPlayer(ClientPlayer* player)$/;"	f	class:PlayerCardContainer
setPlayerCardLock	src/server/room.cpp	/^void Room::setPlayerCardLock(ServerPlayer *player, const QString &name){$/;"	f	class:Room
setPlayerFlag	src/server/room.cpp	/^void Room::setPlayerFlag(ServerPlayer *player, const QString &flag){$/;"	f	class:Room
setPlayerHpEnabled	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::setPlayerHpEnabled(bool toggled){$/;"	f	class:CustomAssignDialog
setPlayerMark	src/server/room.cpp	/^void Room::setPlayerMark(ServerPlayer *player, const QString &mark, int value){$/;"	f	class:Room
setPlayerMarks	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::setPlayerMarks(int value){$/;"	f	class:CustomAssignDialog
setPlayerMaxHpEnabled	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::setPlayerMaxHpEnabled(bool toggled){$/;"	f	class:CustomAssignDialog
setPlayerNames	src/client/aux-skills.cpp	/^    void setPlayerNames(const QStringList &names){$/;"	f	class:ChoosePlayerCard
setPlayerNames	src/client/aux-skills.cpp	/^void ChoosePlayerSkill::setPlayerNames(const QStringList &names){$/;"	f	class:ChoosePlayerSkill
setPlayerProperty	src/server/room.cpp	/^void Room::setPlayerProperty(ServerPlayer *player, const char *property_name, const QVariant &value){$/;"	f	class:Room
setPlayerStartDraw	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::setPlayerStartDraw(int draw_num){$/;"	f	class:CustomAssignDialog
setPromptList	src/client/client.cpp	/^void Client::setPromptList(const QStringList &texts){$/;"	f	class:Client
setRatio	src/dialog/cardeditor.cpp	/^void CardScene::setRatio(int ratio){$/;"	f	class:CardScene
setReady	src/core/player.cpp	/^void Player::setReady(bool ready){$/;"	f	class:Player
setRect	src/ui/qsanbutton.cpp	/^void QSanButton::setRect(QRect rect)$/;"	f	class:QSanButton
setResetTime	src/ui/sprite.cpp	/^void Sprite::setResetTime(int time)$/;"	f	class:Sprite
setRole	src/core/player.cpp	/^void Player::setRole(const QString &role){$/;"	f	class:Player
setRole	src/ui/rolecombobox.cpp	/^void RoleComboBoxItem::setRole(const QString& role){$/;"	f	class:RoleComboBoxItem
setSaturation	include/js.h	/^  void  setSaturation ( int axis, float st ) { saturate [ axis ] = st    ; }$/;"	f	class:jsJoystick
setScreenName	src/client/client.cpp	/^void Client::setScreenName(const QString &set_str){$/;"	f	class:Client
setScreenName	src/core/player.cpp	/^void Player::setScreenName(const QString &screen_name){$/;"	f	class:Player
setSeat	src/core/player.cpp	/^void Player::setSeat(int seat){$/;"	f	class:Player
setSelected	src/ui/carditem.h	/^    inline void setSelected(bool selected) { m_isSelected = selected; }$/;"	f	class:CardItem
setServerLogBackground	src/ui/startscene.cpp	/^void StartScene::setServerLogBackground(){$/;"	f	class:StartScene
setSize	src/ui/TablePile.cpp	/^void TablePile::setSize(double width, double height) $/;"	f	class:TablePile
setSize	src/ui/TablePile.h	/^    inline void setSize(QSize newSize) $/;"	f	class:TablePile
setSize	src/ui/chatwidget.cpp	/^void MyPixmapItem::setSize(int x, int y)$/;"	f	class:MyPixmapItem
setSize	src/ui/qsanbutton.cpp	/^void QSanButton::setSize(QSize newSize)$/;"	f	class:QSanButton
setSkill	src/ui/qsanbutton.cpp	/^void QSanSkillButton::setSkill(const Skill* skill)$/;"	f	class:QSanSkillButton
setSkillDescriptionFont	src/dialog/cardeditor.cpp	/^void SkillBox::setSkillDescriptionFont(const QFont &font){$/;"	f	class:SkillBox
setSkillName	src/core/WrappedCard.h	/^    inline virtual void setSkillName(const QString &skillName)$/;"	f	class:WrappedCard
setSkillName	src/core/card.cpp	/^void Card::setSkillName(const QString &name){$/;"	f	class:Card
setSkillTitleFont	src/dialog/cardeditor.cpp	/^void SkillBox::setSkillTitleFont(const QFont &font){$/;"	f	class:SkillBox
setSkip	src/dialog/cardeditor.cpp	/^void BlackEdgeTextItem::setSkip(int skip){$/;"	f	class:BlackEdgeTextItem
setSocket	src/server/serverplayer.cpp	/^void ServerPlayer::setSocket(ClientSocket *socket){$/;"	f	class:ServerPlayer
setSpeed	src/ui/roomscene.cpp	/^void ReplayerControlBar::setSpeed(qreal speed){$/;"	f	class:ReplayerControlBar
setSpouse	src/scenario/couple-scenario.cpp	/^void CoupleScenario::setSpouse(ServerPlayer *player, ServerPlayer *spouse) const{$/;"	f	class:CoupleScenario
setStarter	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::setStarter(bool toggled){$/;"	f	class:CustomAssignDialog
setState	src/core/player.cpp	/^void Player::setState(const QString &state){$/;"	f	class:Player
setState	src/ui/qsanbutton.cpp	/^void QSanButton::setState(QSanButton::ButtonState state)$/;"	f	class:QSanButton
setStatus	src/client/client.cpp	/^void Client::setStatus(Status status){    $/;"	f	class:Client
setStay	src/ui/sprite.cpp	/^void QAnimatedEffect::setStay(bool stay)$/;"	f	class:QAnimatedEffect
setStyle	src/ui/qsanbutton.cpp	/^void QSanButton::setStyle(ButtonStyle style)$/;"	f	class:QSanButton
setSuit	src/core/WrappedCard.h	/^    inline virtual void setSuit(Suit suit)$/;"	f	class:WrappedCard
setSuit	src/core/card.cpp	/^void Card::setSuit(Suit suit){$/;"	f	class:Card
setTag	src/server/room.cpp	/^void Room::setTag(const QString &key, const QVariant &value){$/;"	f	class:Room
setTargetFixed	src/core/lua-wrapper.cpp	/^void LuaSkillCard::setTargetFixed(bool target_fixed){$/;"	f	class:LuaSkillCard
setText	src/dialog/cardeditor.cpp	/^    void setText(const QString &text){$/;"	f	class:SkillTitle
setText	src/dialog/cardeditor.cpp	/^void BlackEdgeTextItem::setText(const QString &text){$/;"	f	class:BlackEdgeTextItem
setTextEditable	src/dialog/cardeditor.cpp	/^void SkillBox::setTextEditable(bool editable){$/;"	f	class:SkillBox
setTime	src/ui/roomscene.cpp	/^void ReplayerControlBar::setTime(int secs){$/;"	f	class:ReplayerControlBar
setTimerEnabled	src/ui/TimedProgressBar.h	/^    inline void setTimerEnabled(bool enabled) { m_hasTimer = enabled; }$/;"	f	class:TimedProgressBar
setTinyFont	src/dialog/cardeditor.cpp	/^void SkillBox::setTinyFont(const QFont &font){$/;"	f	class:SkillBox
setTrust	src/ui/dashboard.cpp	/^void Dashboard::setTrust(bool trust){$/;"	f	class:Dashboard
setUpdateInterval	src/ui/TimedProgressBar.h	/^    inline void setUpdateInterval(time_t step) { m_step = step; }$/;"	f	class:TimedProgressBar
setUserString	src/core/card.cpp	/^void SkillCard::setUserString(const QString &user_string){$/;"	f	class:SkillCard
setViewAsSkill	src/core/lua-wrapper.cpp	/^void LuaTriggerSkill::setViewAsSkill(ViewAsSkill *view_as_skill){$/;"	f	class:LuaTriggerSkill
setVirtual	src/server/room.cpp	/^void Room::setVirtual()$/;"	f	class:Room
setWidth	src/ui/dashboard.cpp	/^void Dashboard::setWidth(int width){$/;"	f	class:Dashboard
setWidth	src/ui/qsanbutton.cpp	/^void QSanInvokeSkillDock::setWidth(int width)$/;"	f	class:QSanInvokeSkillDock
setWillThrow	src/core/lua-wrapper.cpp	/^void LuaSkillCard::setWillThrow(bool will_throw){$/;"	f	class:LuaSkillCard
set_chained	src/dialog/customassigndialog.h	/^    QCheckBox *set_turned, *set_chained;$/;"	m	class:CustomAssignDialog
set_char_sizes	include/freetype/freetype/internal/ftdriver.h	/^    FT_Size_ResetPointsFunc   set_char_sizes;$/;"	m	struct:FT_Driver_ClassRec_
set_dictionary	src/breakpad/processor/postfix_evaluator.h	/^  void set_dictionary(DictionaryType *dictionary) {dictionary_ = dictionary; }$/;"	f	class:google_breakpad::PostfixEvaluator
set_dump_path	src/breakpad/client/windows/handler/exception_handler.h	/^  void set_dump_path(const wstring &dump_path) {$/;"	f	class:google_breakpad::ExceptionHandler
set_dump_request_wait_handle	src/breakpad/client/windows/crash_generation/client_info.h	/^  void set_dump_request_wait_handle(HANDLE value) {$/;"	f	class:google_breakpad::ClientInfo
set_handle_debug_exceptions	src/breakpad/client/windows/handler/exception_handler.h	/^  void set_handle_debug_exceptions(bool handle_debug_exceptions) {$/;"	f	class:google_breakpad::ExceptionHandler
set_interrupt	src/breakpad/processor/exploitability_unittest.cc	/^  void set_interrupt(bool interrupt) { interrupt_ = interrupt; }$/;"	f	class:__anon74::TestSymbolSupplier
set_interrupt	src/breakpad/processor/minidump_processor_unittest.cc	/^  void set_interrupt(bool interrupt) { interrupt_ = interrupt; }$/;"	f	class:__anon77::TestSymbolSupplier
set_max_bytes	src/breakpad/google_breakpad/processor/minidump.h	/^  static void set_max_bytes(u_int32_t max_bytes) { max_bytes_ = max_bytes; }$/;"	f	class:google_breakpad::MinidumpMemoryRegion
set_max_cv_bytes	src/breakpad/google_breakpad/processor/minidump.h	/^  static void set_max_cv_bytes(u_int32_t max_cv_bytes) {$/;"	f	class:google_breakpad::MinidumpModule
set_max_frames	src/breakpad/google_breakpad/processor/stackwalker.h	/^  static void set_max_frames(u_int32_t max_frames) { max_frames_ = max_frames; }$/;"	f	class:google_breakpad::Stackwalker
set_max_misc_bytes	src/breakpad/google_breakpad/processor/minidump.h	/^  static void set_max_misc_bytes(u_int32_t max_misc_bytes) {$/;"	f	class:google_breakpad::MinidumpModule
set_max_modules	src/breakpad/google_breakpad/processor/minidump.h	/^  static void set_max_modules(u_int32_t max_modules) {$/;"	f	class:google_breakpad::MinidumpModuleList
set_max_regions	src/breakpad/google_breakpad/processor/minidump.h	/^  static void set_max_regions(u_int32_t max_regions) {$/;"	f	class:google_breakpad::MinidumpMemoryList
set_max_streams	src/breakpad/google_breakpad/processor/minidump.h	/^  static void set_max_streams(u_int32_t max_streams) {$/;"	f	class:google_breakpad::Minidump
set_max_string_length	src/breakpad/google_breakpad/processor/minidump.h	/^  static void set_max_string_length(u_int32_t max_string_length) {$/;"	f	class:google_breakpad::Minidump
set_max_threads	src/breakpad/google_breakpad/processor/minidump.h	/^  static void set_max_threads(u_int32_t max_threads) {$/;"	f	class:google_breakpad::MinidumpThreadList
set_mode	include/freetype/freetype/ftrender.h	/^    FT_Renderer_SetModeFunc    set_mode;$/;"	m	struct:FT_Renderer_Class_
set_name	src/breakpad/client/windows/common/ipc_protocol.h	/^  void set_name(const wchar_t* name_arg) {$/;"	f	struct:google_breakpad::CustomInfoEntry
set_nationality	src/dialog/customassigndialog.h	/^    QMap<QString, bool> set_nationality;$/;"	m	class:CustomAssignDialog
set_options	src/dialog/customassigndialog.h	/^    QList<bool> set_options;$/;"	m	class:CustomAssignDialog
set_pile	src/dialog/customassigndialog.h	/^    QList<int> set_pile;$/;"	m	class:CustomAssignDialog
set_pixel_sizes	include/freetype/freetype/internal/ftdriver.h	/^    FT_Size_ResetPixelsFunc   set_pixel_sizes;$/;"	m	struct:FT_Driver_ClassRec_
set_process_exit_wait_handle	src/breakpad/client/windows/crash_generation/client_info.h	/^  void set_process_exit_wait_handle(HANDLE value) {$/;"	f	class:google_breakpad::ClientInfo
set_sbit_strike	include/freetype/freetype/internal/sfnt.h	/^    TT_Set_SBit_Strike_Func      set_sbit_strike;$/;"	m	struct:SFNT_Interface_
set_sbit_strike_stub	include/freetype/freetype/internal/sfnt.h	/^    TT_Set_SBit_Strike_OldFunc   set_sbit_strike_stub;$/;"	m	struct:SFNT_Interface_
set_scale	include/freetype/freetype/internal/pshints.h	/^    PSH_Globals_SetScaleFunc  set_scale;$/;"	m	struct:PSH_Globals_FuncsRec_
set_turned	src/dialog/customassigndialog.h	/^    QCheckBox *set_turned, *set_chained;$/;"	m	class:CustomAssignDialog
set_value	src/breakpad/client/windows/common/ipc_protocol.h	/^  void set_value(const wchar_t* value_arg) {$/;"	f	struct:google_breakpad::CustomInfoEntry
setarrayvector	src/lua/ltable.c	/^static void setarrayvector (lua_State *L, Table *t, int size) {$/;"	f	file:
setbits	src/lua/lgc.h	28;"	d
setboolfield	src/lua/loslib.c	/^static void setboolfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setbvalue	src/lua/lobject.h	125;"	d
setclvalue	src/lua/lobject.h	143;"	d
setfenv	src/lua/loadlib.c	/^static void setfenv (lua_State *L) {$/;"	f	file:
setfield	src/lua/loslib.c	/^static void setfield (lua_State *L, const char *key, int value) {$/;"	f	file:
sethvalue	src/lua/lobject.h	148;"	d
sethvalue2s	src/lua/lobject.h	176;"	d
setmetatable(klass.static, { __index 	lua/lib/middleclass.lua	/^    setmetatable(klass.static, { __index = function(_,k) return dict[k] end })$/;"	f
setmetatable(klass.static, { __index 	lua/lib/middleclass.lua	/^    setmetatable(klass.static, { __index = function(_,k) return dict[k] or superStatic[k] end })$/;"	f
setmethod	swig/sanguosha_wrap.cxx	/^  lua_CFunction   setmethod;$/;"	m	struct:__anon148	file:
setn	src/lua/ltablib.c	/^static int setn (lua_State *L) {$/;"	f	file:
setnilvalue	src/lua/lobject.h	117;"	d
setnodevector	src/lua/ltable.c	/^static void setnodevector (lua_State *L, Table *t, int size) {$/;"	f	file:
setnvalue	src/lua/lobject.h	119;"	d
setobj	src/lua/lobject.h	161;"	d
setobj2n	src/lua/lobject.h	183;"	d
setobj2s	src/lua/lobject.h	174;"	d
setobj2t	src/lua/lobject.h	181;"	d
setobjs2s	src/lua/lobject.h	172;"	d
setobjt2t	src/lua/lobject.h	179;"	d
setparameter	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SETPARAMCALLBACK    setparameter;       \/* [w] This is called when the user calls DSP::setParameter.  Can be null. *\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
setpath	src/lua/loadlib.c	/^static void setpath (lua_State *L, const char *fieldname, const char *envname,$/;"	f	file:
setposition	include/fmod/fmod_codec.h	/^    FMOD_CODEC_SETPOSITIONCALLBACK  setposition;     \/* [in] Seek callback for the codec for when FMOD tries to seek within the file with Channel::setPosition. *\/$/;"	m	struct:FMOD_CODEC_DESCRIPTION
setposition	include/fmod/fmod_dsp.h	/^    FMOD_DSP_SETPOSITIONCALLBACK setposition;        \/* [w] Set position callback.  This is called if the unit wants to update its position info but not process data, or reset a cursor position internally if it is reading data from a certain source.  Can be null. *\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
setprogdir	src/lua/loadlib.c	/^static void setprogdir (lua_State *L) {$/;"	f	file:
setprogdir	src/lua/loadlib.c	42;"	d	file:
setprogdir	src/lua/loadlib.c	95;"	d	file:
setptvalue	src/lua/lobject.h	153;"	d
setptvalue2s	src/lua/lobject.h	177;"	d
setpvalue	src/lua/lobject.h	122;"	d
setsvalue	src/lua/lobject.h	128;"	d
setsvalue2n	src/lua/lobject.h	184;"	d
setsvalue2s	src/lua/lobject.h	175;"	d
settabsi	src/lua/ldblib.c	/^static void settabsi (lua_State *L, const char *i, int v) {$/;"	f	file:
settabss	src/lua/ldblib.c	/^static void settabss (lua_State *L, const char *i, const char *v) {$/;"	f	file:
setthreshold	src/lua/lgc.c	59;"	d	file:
setthvalue	src/lua/lobject.h	138;"	d
setttype	src/lua/lobject.h	186;"	d
setup	src/client/client.cpp	/^void Client::setup(const QString &setup_str){$/;"	f	class:Client
setup	src/scenario/miniscenarios.h	/^    QString setup;$/;"	m	class:MiniSceneRule
setupCustom	src/scenario/miniscenarios.cpp	/^void MiniScene::setupCustom(QString name) const$/;"	f	class:MiniScene
setuvalue	src/lua/lobject.h	133;"	d
sfnt	include/freetype/freetype/internal/ftpic.h	/^    void* sfnt;$/;"	m	struct:FT_PIC_Container_
sfnt	include/freetype/freetype/internal/tttypes.h	/^    void*                 sfnt;$/;"	m	struct:TT_FaceRec_
sfnt_max	include/freetype/freetype/tttables.h	/^    sfnt_max   \/* internal end mark *\/$/;"	e	enum:FT_Sfnt_Tag_
sget	lua/lib/socket/ftp.lua	/^local function sget(u)$/;"	f
sgs.Card_Parse	lua/ai/debug-ai.lua	/^function sgs.Card_Parse(str)$/;"	f
sgs.CreateDistanceSkill	lua/sgs_ex.lua	/^function sgs.CreateDistanceSkill(spec)$/;"	f
sgs.CreateFilterSkill	lua/sgs_ex.lua	/^function sgs.CreateFilterSkill(spec)$/;"	f
sgs.CreateGameStartSkill	lua/sgs_ex.lua	/^function sgs.CreateGameStartSkill(spec)$/;"	f
sgs.CreateMasochismSkill	lua/sgs_ex.lua	/^function sgs.CreateMasochismSkill(spec)$/;"	f
sgs.CreateMaxCardsSkill	lua/sgs_ex.lua	/^function sgs.CreateMaxCardsSkill(spec)$/;"	f
sgs.CreateProhibitSkill	lua/sgs_ex.lua	/^function sgs.CreateProhibitSkill(spec)$/;"	f
sgs.CreateSkillCard	lua/sgs_ex.lua	/^function sgs.CreateSkillCard(spec)$/;"	f
sgs.CreateTriggerSkill	lua/sgs_ex.lua	/^function sgs.CreateTriggerSkill(spec)$/;"	f
sgs.CreateViewAsSkill	lua/sgs_ex.lua	/^function sgs.CreateViewAsSkill(spec)$/;"	f
sgs.LoadTranslationTable	lua/sgs_ex.lua	/^function sgs.LoadTranslationTable(t)$/;"	f
sgs.QList2Table	lua/sgs_ex.lua	/^function sgs.QList2Table(qlist)$/;"	f
sgs.ai_armor_value.EightDiagram	lua/ai/standard_cards-ai.lua	/^function sgs.ai_armor_value.EightDiagram(player, self)$/;"	f
sgs.ai_armor_value.RenwangShield	lua/ai/standard_cards-ai.lua	/^function sgs.ai_armor_value.RenwangShield()$/;"	f
sgs.ai_armor_value.bazhen	lua/ai/fire-ai.lua	/^function sgs.ai_armor_value.bazhen(card)$/;"	f
sgs.ai_armor_value.silver_lion	lua/ai/standard_cards-ai.lua	/^function sgs.ai_armor_value.silver_lion(player, self)$/;"	f
sgs.ai_armor_value.vine	lua/ai/maneuvering-ai.lua	/^function sgs.ai_armor_value.vine(player, self)$/;"	f
sgs.ai_armor_value.yizhong	lua/ai/yjcm-ai.lua	/^function sgs.ai_armor_value.yizhong(card)$/;"	f
sgs.ai_armor_value["GaleShell"] 	lua/ai/joy-ai.lua	/^sgs.ai_armor_value["GaleShell"] = function()$/;"	f
sgs.ai_card_intention.AnxuCard 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_card_intention.AnxuCard = function(card, from, to)$/;"	f
sgs.ai_card_intention.Collateral 	lua/ai/standard_cards-ai.lua	/^sgs.ai_card_intention.Collateral = function(card, from, tos)$/;"	f
sgs.ai_card_intention.DimengCard 	lua/ai/thicket-ai.lua	/^sgs.ai_card_intention.DimengCard = function(card, from, to)$/;"	f
sgs.ai_card_intention.Dismantlement	lua/ai/standard_cards-ai.lua	/^function sgs.ai_card_intention.Dismantlement()$/;"	f
sgs.ai_card_intention.Duel	lua/ai/standard_cards-ai.lua	/^sgs.ai_card_intention.Duel=function(card,from,tos,source)$/;"	f
sgs.ai_card_intention.FangzhuCard 	lua/ai/thicket-ai.lua	/^sgs.ai_card_intention.FangzhuCard = function(card, from, tos)$/;"	f
sgs.ai_card_intention.IronChain	extension-doc/16-RoleJudgement.lua	/^sgs.ai_card_intention.IronChain=function(card,from,tos,source)$/;"	f
sgs.ai_card_intention.IronChain	lua/ai/maneuvering-ai.lua	/^sgs.ai_card_intention.IronChain=function(card,from,tos)$/;"	f
sgs.ai_card_intention.LijianCard 	lua/ai/standard-ai.lua	/^sgs.ai_card_intention.LijianCard = function(card, from, to)$/;"	f
sgs.ai_card_intention.LiuliCard 	lua/ai/standard-ai.lua	/^sgs.ai_card_intention.LiuliCard = function(card,from,to)$/;"	f
sgs.ai_card_intention.QiaobianCard 	lua/ai/mountain-ai.lua	/^sgs.ai_card_intention.QiaobianCard = function(card, from, tos, source)$/;"	f
sgs.ai_card_intention.Slash 	lua/ai/standard_cards-ai.lua	/^sgs.ai_card_intention.Slash = function(card,from,tos)$/;"	f
sgs.ai_card_intention.Snatch	lua/ai/standard_cards-ai.lua	/^function sgs.ai_card_intention.Snatch()$/;"	f
sgs.ai_card_intention.YihunCard 	lua/ai/standard-ai.lua	/^sgs.ai_card_intention.YihunCard = function(card, from, to)$/;"	f
sgs.ai_card_intention.ZhibaCard	lua/ai/mountain-ai.lua	/^function sgs.ai_card_intention.ZhibaCard(card, from, tos, source)$/;"	f
sgs.ai_card_intention.general	lua/ai/smart-ai.lua	/^sgs.ai_card_intention.general=function(from,to,level)$/;"	f
sgs.ai_card_intention["general"] 	lua/ai/hegemony-ai.lua	/^	sgs.ai_card_intention["general"] = function(to, level)$/;"	f
sgs.ai_cardneed.bignumber	lua/ai/smart-ai.lua	/^function sgs.ai_cardneed.bignumber(to, card, self)$/;"	f
sgs.ai_cardneed.chengxiang	lua/ai/yitian-ai.lua	/^function sgs.ai_cardneed.chengxiang(to, card, self)$/;"	f
sgs.ai_cardneed.equip	lua/ai/smart-ai.lua	/^function sgs.ai_cardneed.equip(to, card, self)$/;"	f
sgs.ai_cardneed.jizhi	lua/ai/standard-ai.lua	/^function sgs.ai_cardneed.jizhi(to, card)$/;"	f
sgs.ai_cardneed.leiji	lua/ai/wind-ai.lua	/^function sgs.ai_cardneed.leiji(to, card, self)$/;"	f
sgs.ai_cardneed.paoxiao	lua/ai/standard-ai.lua	/^function sgs.ai_cardneed.paoxiao(to, card)$/;"	f
sgs.ai_cardshow.buyi 	lua/ai/yjcm-ai.lua	/^sgs.ai_cardshow.buyi = function(self, requestor)$/;"	f
sgs.ai_cardshow.fire_attack 	extension-doc/14-Responsing.lua	/^sgs.ai_cardshow.fire_attack = function(self, requestor)$/;"	f
sgs.ai_cardshow.fire_attack 	lua/ai/maneuvering-ai.lua	/^sgs.ai_cardshow.fire_attack = function(self, requestor)$/;"	f
sgs.ai_cardshow.lexue 	lua/ai/yitian-ai.lua	/^sgs.ai_cardshow.lexue = function(self, requestor)$/;"	f
sgs.ai_cardsview.Spear	lua/ai/standard_cards-ai.lua	/^function sgs.ai_cardsview.Spear(class_name, player)$/;"	f
sgs.ai_cardsview.jiushi	lua/ai/yjcm-ai.lua	/^function sgs.ai_cardsview.jiushi(class_name, player)$/;"	f
sgs.ai_choicemade_filter.Nullification.general 	lua/ai/smart-ai.lua	/^sgs.ai_choicemade_filter.Nullification.general = function(player, promptlist)$/;"	f
sgs.ai_choicemade_filter.cardResponsed["@hujia-jink"] 	lua/ai/standard-ai.lua	/^sgs.ai_choicemade_filter.cardResponsed["@hujia-jink"] = function(player, promptlist)$/;"	f
sgs.ai_choicemade_filter.cardResponsed["@jijiang-slash"] 	extension-doc/16-RoleJudgement.lua	/^sgs.ai_choicemade_filter.cardResponsed["@jijiang-slash"] = function(player, promptlist)$/;"	f
sgs.ai_choicemade_filter.cardResponsed["@jijiang-slash"] 	lua/ai/standard-ai.lua	/^sgs.ai_choicemade_filter.cardResponsed["@jijiang-slash"] = function(player, promptlist)$/;"	f
sgs.ai_choicemade_filter.cardResponsed["@lianli-jink"] 	lua/ai/yitian-ai.lua	/^sgs.ai_choicemade_filter.cardResponsed["@lianli-jink"] = function(player, promptlist)$/;"	f
sgs.ai_choicemade_filter.cardResponsed["@lianli-slash"] 	lua/ai/yitian-ai.lua	/^sgs.ai_choicemade_filter.cardResponsed["@lianli-slash"] = function(player, promptlist)$/;"	f
sgs.ai_choicemade_filter.playerChosen.general 	lua/ai/smart-ai.lua	/^sgs.ai_choicemade_filter.playerChosen.general = function(from, promptlist)$/;"	f
sgs.ai_choicemade_filter.skillChoice.guhuo 	lua/ai/wind-ai.lua	/^sgs.ai_choicemade_filter.skillChoice.guhuo = function(player, promptlist)$/;"	f
sgs.ai_choicemade_filter.skillInvoke.hujia 	lua/ai/standard-ai.lua	/^sgs.ai_choicemade_filter.skillInvoke.hujia = function(player, promptlist)$/;"	f
sgs.ai_choicemade_filter.skillInvoke.jijiang 	extension-doc/16-RoleJudgement.lua	/^sgs.ai_choicemade_filter.skillInvoke.jijiang = function(player, promptlist)$/;"	f
sgs.ai_choicemade_filter.skillInvoke.jijiang 	lua/ai/standard-ai.lua	/^sgs.ai_choicemade_filter.skillInvoke.jijiang = function(player, promptlist)$/;"	f
sgs.ai_choicemade_filter.skillInvoke["lianli-jink"] 	lua/ai/yitian-ai.lua	/^sgs.ai_choicemade_filter.skillInvoke["lianli-jink"] = function(player, promptlist)$/;"	f
sgs.ai_filterskill_filter.ganran	lua/ai/zombie_mode-ai.lua	/^	function sgs.ai_filterskill_filter.ganran(card, card_place)$/;"	f
sgs.ai_filterskill_filter.hongyan	lua/ai/wind-ai.lua	/^function sgs.ai_filterskill_filter.hongyan(card, card_place)$/;"	f
sgs.ai_filterskill_filter.jinjiu 	lua/ai/yjcm-ai.lua	/^sgs.ai_filterskill_filter.jinjiu = function(card, card_place)$/;"	f
sgs.ai_filterskill_filter.wushen 	extension-doc/13-ViewAs.lua	/^sgs.ai_filterskill_filter.wushen = function(card, card_place) -- 武神技能的锁定视为技$/;"	f
sgs.ai_filterskill_filter.wushen 	lua/ai/god-ai.lua	/^sgs.ai_filterskill_filter.wushen = function(card, card_place)$/;"	f
sgs.ai_get_cardType	lua/ai/wind-ai.lua	/^sgs.ai_get_cardType=function(card)$/;"	f
sgs.ai_skill_askforag.buqu 	extension-doc/14-Responsing.lua	/^sgs.ai_skill_askforag.buqu = function(self, card_ids)$/;"	f
sgs.ai_skill_askforag.buqu 	lua/ai/wind-ai.lua	/^sgs.ai_skill_askforag.buqu = function(self, card_ids)$/;"	f
sgs.ai_skill_askforag.guzheng 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_askforag.guzheng = function(self, card_ids)$/;"	f
sgs.ai_skill_askforag.jixi 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_askforag.jixi = function(self, card_ids)$/;"	f
sgs.ai_skill_askforag.luoying 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_askforag.luoying = function(self, card_ids)$/;"	f
sgs.ai_skill_askforag.manjuan 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_askforag.manjuan = function(self, card_ids)$/;"	f
sgs.ai_skill_askforag.paiyi 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_askforag.paiyi = function(self, card_ids)$/;"	f
sgs.ai_skill_askforag.qixing 	lua/ai/god-ai.lua	/^sgs.ai_skill_askforag.qixing = function(self, card_ids)$/;"	f
sgs.ai_skill_cardask.aoe 	lua/ai/standard_cards-ai.lua	/^sgs.ai_skill_cardask.aoe = function(self, data, pattern, target, name)$/;"	f
sgs.ai_skill_cardask.nullfilter	lua/ai/smart-ai.lua	/^function sgs.ai_skill_cardask.nullfilter(self, data, pattern, target)$/;"	f
sgs.ai_skill_cardask["@Axe"] 	lua/ai/standard_cards-ai.lua	/^sgs.ai_skill_cardask["@Axe"] = function(self, data, pattern, target)$/;"	f
sgs.ai_skill_cardask["@anxian-discard"] 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_cardask["@anxian-discard"] = function(self, data)$/;"	f
sgs.ai_skill_cardask["@dahe-jink"] 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_cardask["@dahe-jink"] = function(self, data, pattern, target)$/;"	f
sgs.ai_skill_cardask["@enyuan"] 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_cardask["@enyuan"] = function(self)$/;"	f
sgs.ai_skill_cardask["@enyuanheart"] 	lua/ai/nostalgia-ai.lua	/^sgs.ai_skill_cardask["@enyuanheart"] = function(self)$/;"	f
sgs.ai_skill_cardask["@guicai-card"]	extension-doc/14-Responsing.lua	/^sgs.ai_skill_cardask["@guicai-card"]=function(self) -- 仅仅用到了第一个参数 self，后面的都可以省略$/;"	f
sgs.ai_skill_cardask["@guicai-card"]	lua/ai/standard-ai.lua	/^sgs.ai_skill_cardask["@guicai-card"]=function(self, data)$/;"	f
sgs.ai_skill_cardask["@guidao-card"]	lua/ai/wind-ai.lua	/^sgs.ai_skill_cardask["@guidao-card"]=function(self, data)$/;"	f
sgs.ai_skill_cardask["@huanshi-card"] 	lua/ai/special3v3-ai.lua	/^sgs.ai_skill_cardask["@huanshi-card"] = function(self, data)$/;"	f
sgs.ai_skill_cardask["@hujia-jink"] 	lua/ai/standard-ai.lua	/^sgs.ai_skill_cardask["@hujia-jink"] = function(self)$/;"	f
sgs.ai_skill_cardask["@jijiang-slash"] 	lua/ai/standard-ai.lua	/^sgs.ai_skill_cardask["@jijiang-slash"] = function(self)$/;"	f
sgs.ai_skill_cardask["@lianli-jink"] 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_cardask["@lianli-jink"] = function(self)$/;"	f
sgs.ai_skill_cardask["@lianli-slash"] 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_cardask["@lianli-slash"] = function(self)$/;"	f
sgs.ai_skill_cardask["@luoyi-discard"] 	lua/ai/ling-ai.lua	/^sgs.ai_skill_cardask["@luoyi-discard"] = function(self, data)$/;"	f
sgs.ai_skill_cardask["@weidai-analeptic"] 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_cardask["@weidai-analeptic"] = function(self, data)$/;"	f
sgs.ai_skill_cardask["@wushuang-jink-1"] 	lua/ai/standard-ai.lua	/^sgs.ai_skill_cardask["@wushuang-jink-1"] = function(self, data, pattern, target)$/;"	f
sgs.ai_skill_cardask["@wushuang-slash-1"] 	lua/ai/standard-ai.lua	/^sgs.ai_skill_cardask["@wushuang-slash-1"] = function(self, data, pattern, target)$/;"	f
sgs.ai_skill_cardask["@xiangle-discard"] 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_cardask["@xiangle-discard"] = function(self, data)$/;"	f
sgs.ai_skill_cardask["@xianzhen-slash"] 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_cardask["@xianzhen-slash"] = function(self)$/;"	f
sgs.ai_skill_cardask["Blade-slash"] 	lua/ai/standard_cards-ai.lua	/^sgs.ai_skill_cardask["Blade-slash"] = function(self, data, pattern, target)$/;"	f
sgs.ai_skill_cardask["archery-attack-jink"] 	lua/ai/standard_cards-ai.lua	/^sgs.ai_skill_cardask["archery-attack-jink"] = function(self, data, pattern, target)$/;"	f
sgs.ai_skill_cardask["collateral-slash"] 	lua/ai/standard_cards-ai.lua	/^sgs.ai_skill_cardask["collateral-slash"] = function(self, data, pattern, target, target2)$/;"	f
sgs.ai_skill_cardask["double-sword-card"] 	lua/ai/standard_cards-ai.lua	/^sgs.ai_skill_cardask["double-sword-card"] = function(self, data, pattern, target)$/;"	f
sgs.ai_skill_cardask["duel-slash"] 	lua/ai/standard_cards-ai.lua	/^sgs.ai_skill_cardask["duel-slash"] = function(self, data, pattern, target)$/;"	f
sgs.ai_skill_cardask["jiefan-slash"] 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_skill_cardask["jiefan-slash"] = function(self, data, pattern, target)$/;"	f
sgs.ai_skill_cardask["savage-assault-slash"] 	lua/ai/standard_cards-ai.lua	/^sgs.ai_skill_cardask["savage-assault-slash"] = function(self, data, pattern, target)$/;"	f
sgs.ai_skill_cardask["slash-jink"] 	lua/ai/standard_cards-ai.lua	/^sgs.ai_skill_cardask["slash-jink"] = function(self, data, pattern, target)$/;"	f
sgs.ai_skill_cardask["xuanhuo-slash"] 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_cardask["xuanhuo-slash"] = function(self, data, pattern, target, target2)$/;"	f
sgs.ai_skill_cardchosen.neofanjian 	lua/ai/ling-ai.lua	/^sgs.ai_skill_cardchosen.neofanjian = function(self)$/;"	f
sgs.ai_skill_cardchosen.qiaobian 	extension-doc/14-Responsing.lua	/^sgs.ai_skill_cardchosen.qiaobian = function(self, who, flags)$/;"	f
sgs.ai_skill_cardchosen.qiaobian 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_cardchosen.qiaobian = function(self, who, flags)$/;"	f
sgs.ai_skill_choice.RevealGeneral 	lua/ai/basara-ai.lua	/^sgs.ai_skill_choice.RevealGeneral = function(self, choices)$/;"	f
sgs.ai_skill_choice.RevealGeneral 	lua/ai/hegemony-ai.lua	/^	sgs.ai_skill_choice.RevealGeneral = function(self, choices)$/;"	f
sgs.ai_skill_choice.dahe 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_choice.dahe = function(self, choices)$/;"	f
sgs.ai_skill_choice.fuzuo 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_choice.fuzuo = function(self , choices)$/;"	f
sgs.ai_skill_choice.gongxin 	lua/ai/god-ai.lua	/^sgs.ai_skill_choice.gongxin = function(self, choices)$/;"	f
sgs.ai_skill_choice.guhuo 	lua/ai/wind-ai.lua	/^sgs.ai_skill_choice.guhuo = function(self, choices)$/;"	f
sgs.ai_skill_choice.huanshi 	lua/ai/special3v3-ai.lua	/^sgs.ai_skill_choice.huanshi = function(self, choices)$/;"	f
sgs.ai_skill_choice.huashen	lua/ai/mountain-ai.lua	/^function sgs.ai_skill_choice.huashen(self, choices)$/;"	f
sgs.ai_skill_choice.jiangchi 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_skill_choice.jiangchi = function(self, choices)$/;"	f
sgs.ai_skill_choice.jilei 	lua/ai/sp-ai.lua	/^sgs.ai_skill_choice.jilei = function(self, choices)$/;"	f
sgs.ai_skill_choice.jincui 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_choice.jincui = function(self, choices)$/;"	f
sgs.ai_skill_choice.jujian 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_choice.jujian = function(self, choices)$/;"	f
sgs.ai_skill_choice.mingce 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_choice.mingce = function(self, choices)$/;"	f
sgs.ai_skill_choice.neoganglie 	lua/ai/ling-ai.lua	/^sgs.ai_skill_choice.neoganglie = function(self, choices)$/;"	f
sgs.ai_skill_choice.nosxuanfeng 	lua/ai/nostalgia-ai.lua	/^sgs.ai_skill_choice.nosxuanfeng = function(self, choices)$/;"	f
sgs.ai_skill_choice.qinyin 	lua/ai/god-ai.lua	/^sgs.ai_skill_choice.qinyin = function(self, choices)$/;"	f
sgs.ai_skill_choice.shenjun	lua/ai/yitian-ai.lua	/^function sgs.ai_skill_choice.shenjun(self, choices)$/;"	f
sgs.ai_skill_choice.weiwudi_guixin 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_choice.weiwudi_guixin = function(self, choices)$/;"	f
sgs.ai_skill_choice.wuling 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_choice.wuling = function(self, choices)$/;"	f
sgs.ai_skill_choice.wumou 	lua/ai/god-ai.lua	/^sgs.ai_skill_choice.wumou = function(self, choices)$/;"	f
sgs.ai_skill_choice.xuanfeng 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_choice.xuanfeng = function(self, choices)$/;"	f
sgs.ai_skill_choice.xuanhuo 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_choice.xuanhuo = function(self, choices)$/;"	f
sgs.ai_skill_choice.yinghun 	lua/ai/thicket-ai.lua	/^sgs.ai_skill_choice.yinghun = function(self, choices)$/;"	f
sgs.ai_skill_choice.yisheask	extension-doc/14-Responsing.lua	/^sgs.ai_skill_choice.yisheask=function(self,choices)$/;"	f
sgs.ai_skill_choice.yisheask	extension-doc/17-Example.lua	/^sgs.ai_skill_choice.yisheask=function(self,choices) -- sgs.ai_skill_choice 见 14-Responsing.lua$/;"	f
sgs.ai_skill_choice.yisheask	lua/ai/yitian-ai.lua	/^sgs.ai_skill_choice.yisheask=function(self,choices)$/;"	f
sgs.ai_skill_choice.zhaolie 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_choice.zhaolie = function(self, choices, data)$/;"	f
sgs.ai_skill_choice.zhiba_pindian 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_choice.zhiba_pindian = function(self, choices)$/;"	f
sgs.ai_skill_choice.zhiji 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_choice.zhiji = function(self, choice)$/;"	f
sgs.ai_skill_choice.zhulou 	lua/ai/ling-ai.lua	/^sgs.ai_skill_choice.zhulou = function(self, choices)$/;"	f
sgs.ai_skill_choice.zili 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_choice.zili = function(self, choice)$/;"	f
sgs.ai_skill_discard.fangquan 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_discard.fangquan = function(self, discard_num, min_num, optional, include_equip)$/;"	f
sgs.ai_skill_discard.ganglie 	extension-doc/14-Responsing.lua	/^sgs.ai_skill_discard.ganglie = function(self, discard_num, optional, include_equip)$/;"	f
sgs.ai_skill_discard.ganglie 	lua/ai/standard-ai.lua	/^sgs.ai_skill_discard.ganglie = function(self, discard_num, min_num, optional, include_equip)$/;"	f
sgs.ai_skill_discard.gongmou 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_discard.gongmou = function(self, discard_num, optional, include_equip)$/;"	f
sgs.ai_skill_discard.lihun 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_discard.lihun = function(self, discard_num, min_num, optional, include_equip)$/;"	f
sgs.ai_skill_discard.neoganglie 	lua/ai/ling-ai.lua	/^sgs.ai_skill_discard.neoganglie = function(self, discard_num, min_num, optional, include_equip)$/;"	f
sgs.ai_skill_discard.quanji 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_discard.quanji = function(self)$/;"	f
sgs.ai_skill_discard.zhaolie 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_discard.zhaolie = function(self, discard_num, min_num, optional, include_equip)$/;"	f
sgs.ai_skill_invoke.EightDiagram 	lua/ai/standard_cards-ai.lua	/^sgs.ai_skill_invoke.EightDiagram = function(self, data)$/;"	f
sgs.ai_skill_invoke.IceSword	lua/ai/standard_cards-ai.lua	/^sgs.ai_skill_invoke.IceSword=function(self, data)$/;"	f
sgs.ai_skill_invoke.KylinBow 	lua/ai/standard_cards-ai.lua	/^sgs.ai_skill_invoke.KylinBow = function(self, data)$/;"	f
sgs.ai_skill_invoke.SPMoonSpear 	lua/ai/sp-ai.lua	/^sgs.ai_skill_invoke.SPMoonSpear = function(self, data)$/;"	f
sgs.ai_skill_invoke.anxian 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_invoke.anxian = function(self, data)$/;"	f
sgs.ai_skill_invoke.badao 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_invoke.badao = function(self, data)$/;"	f
sgs.ai_skill_invoke.bawang 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_invoke.bawang = function(self, data)$/;"	f
sgs.ai_skill_invoke.beige 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_invoke.beige = function(self, data)$/;"	f
sgs.ai_skill_invoke.buqu	lua/ai/wind-ai.lua	/^function sgs.ai_skill_invoke.buqu(self, data)$/;"	f
sgs.ai_skill_invoke.buyi 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_invoke.buyi = function(self, data)$/;"	f
sgs.ai_skill_invoke.caizhaoji_hujia 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_invoke.caizhaoji_hujia = function(self, data)$/;"	f
sgs.ai_skill_invoke.chongzhen 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_invoke.chongzhen = function(self, data)$/;"	f
sgs.ai_skill_invoke.chujia 	lua/ai/sp-ai.lua	/^sgs.ai_skill_invoke.chujia = function(self, data)$/;"	f
sgs.ai_skill_invoke.chunlao 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_skill_invoke.chunlao = function(self, data)$/;"	f
sgs.ai_skill_invoke.danlao 	lua/ai/sp-ai.lua	/^sgs.ai_skill_invoke.danlao = function(self, data)$/;"	f
sgs.ai_skill_invoke.enyuan 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_invoke.enyuan = function(self, data)$/;"	f
sgs.ai_skill_invoke.fan 	lua/ai/maneuvering-ai.lua	/^sgs.ai_skill_invoke.fan = function(self, data)$/;"	f
sgs.ai_skill_invoke.fangquan 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_invoke.fangquan = function(self, data)$/;"	f
sgs.ai_skill_invoke.fankui 	lua/ai/standard-ai.lua	/^sgs.ai_skill_invoke.fankui = function(self, data)$/;"	f
sgs.ai_skill_invoke.fanqun 	lua/ai/sp-ai.lua	/^sgs.ai_skill_invoke.fanqun = function(self, data)$/;"	f
sgs.ai_skill_invoke.fuhun 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_skill_invoke.fuhun = function(self, data)$/;"	f
sgs.ai_skill_invoke.ganglie 	lua/ai/standard-ai.lua	/^sgs.ai_skill_invoke.ganglie = function(self, data)$/;"	f
sgs.ai_skill_invoke.grab_peach 	lua/ai/joy-ai.lua	/^sgs.ai_skill_invoke.grab_peach = function(self, data)$/;"	f
sgs.ai_skill_invoke.guixiang 	lua/ai/sp-ai.lua	/^sgs.ai_skill_invoke.guixiang = function(self, data)$/;"	f
sgs.ai_skill_invoke.guixin 	lua/ai/god-ai.lua	/^sgs.ai_skill_invoke.guixin = function(self,data)$/;"	f
sgs.ai_skill_invoke.guzheng 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_invoke.guzheng = function(self, data)$/;"	f
sgs.ai_skill_invoke.haoshi 	lua/ai/thicket-ai.lua	/^sgs.ai_skill_invoke.haoshi = function(self, data)$/;"	f
sgs.ai_skill_invoke.hongyuan 	lua/ai/special3v3-ai.lua	/^sgs.ai_skill_invoke.hongyuan = function(self, data)$/;"	f
sgs.ai_skill_invoke.huashen 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_invoke.huashen = function(self)$/;"	f
sgs.ai_skill_invoke.hujia 	lua/ai/standard-ai.lua	/^sgs.ai_skill_invoke.hujia = function(self, data)$/;"	f
sgs.ai_skill_invoke.jianxiong 	lua/ai/standard-ai.lua	/^sgs.ai_skill_invoke.jianxiong = function(self, data)$/;"	f
sgs.ai_skill_invoke.jiefan 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_skill_invoke.jiefan = function(self, data)$/;"	f
sgs.ai_skill_invoke.jijiang 	extension-doc/16-RoleJudgement.lua	/^sgs.ai_skill_invoke.jijiang = function(self, data)$/;"	f
sgs.ai_skill_invoke.jijiang 	lua/ai/standard-ai.lua	/^sgs.ai_skill_invoke.jijiang = function(self, data)$/;"	f
sgs.ai_skill_invoke.jilei 	lua/ai/sp-ai.lua	/^sgs.ai_skill_invoke.jilei = function(self, data)$/;"	f
sgs.ai_skill_invoke.jilve	lua/ai/god-ai.lua	/^sgs.ai_skill_invoke.jilve=function(self,data)$/;"	f
sgs.ai_skill_invoke.jincui 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_invoke.jincui = function(self, data)$/;"	f
sgs.ai_skill_invoke.jiushi	lua/ai/yjcm-ai.lua	/^function sgs.ai_skill_invoke.jiushi(self, data)$/;"	f
sgs.ai_skill_invoke.jushou	lua/ai/wind-ai.lua	/^function sgs.ai_skill_invoke.jushou(self, data)$/;"	f
sgs.ai_skill_invoke.kuiwei	lua/ai/bgm-ai.lua	/^function sgs.ai_skill_invoke.kuiwei(self, data)$/;"	f
sgs.ai_skill_invoke.lianli_jink 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_invoke.lianli_jink = function(self, data)$/;"	f
sgs.ai_skill_invoke.lianli_slash 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_invoke.lianli_slash = function(self, data)$/;"	f
sgs.ai_skill_invoke.liegong 	lua/ai/wind-ai.lua	/^sgs.ai_skill_invoke.liegong = function(self, data)$/;"	f
sgs.ai_skill_invoke.lieren 	lua/ai/thicket-ai.lua	/^sgs.ai_skill_invoke.lieren = function(self, data)$/;"	f
sgs.ai_skill_invoke.longluo 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_invoke.longluo = function(self, data)$/;"	f
sgs.ai_skill_invoke.lukang_weiyan 	extension-doc/15-Activate.lua	/^sgs.ai_skill_invoke.lukang_weiyan = function(self, data)$/;"	f
sgs.ai_skill_invoke.lukang_weiyan 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_invoke.lukang_weiyan = function(self, data)$/;"	f
sgs.ai_skill_invoke.luoyi	lua/ai/standard-ai.lua	/^sgs.ai_skill_invoke.luoyi=function(self,data)$/;"	f
sgs.ai_skill_invoke.mengjin 	lua/ai/fire-ai.lua	/^sgs.ai_skill_invoke.mengjin = function(self, data)$/;"	f
sgs.ai_skill_invoke.mouduan 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_invoke.mouduan = function(self, data)$/;"	f
sgs.ai_skill_invoke.neoganglie 	lua/ai/ling-ai.lua	/^sgs.ai_skill_invoke.neoganglie = function(self, data)$/;"	f
sgs.ai_skill_invoke.neojushou	lua/ai/ling-ai.lua	/^function sgs.ai_skill_invoke.neojushou(self, data)$/;"	f
sgs.ai_skill_invoke.niepan 	lua/ai/fire-ai.lua	/^sgs.ai_skill_invoke.niepan = function(self, data)$/;"	f
sgs.ai_skill_invoke.pojun 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_invoke.pojun = function(self, data)$/;"	f
sgs.ai_skill_invoke.qianxi 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_skill_invoke.qianxi = function(self, data)$/;"	f
sgs.ai_skill_invoke.qinyin 	lua/ai/god-ai.lua	/^sgs.ai_skill_invoke.qinyin = function(self, data)$/;"	f
sgs.ai_skill_invoke.shaoying	lua/ai/yitian-ai.lua	/^function sgs.ai_skill_invoke.shaoying(self, data)$/;"	f
sgs.ai_skill_invoke.shichou 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_invoke.shichou = function(self, data)$/;"	f
sgs.ai_skill_invoke.shien 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_invoke.shien = function(self, data)$/;"	f
sgs.ai_skill_invoke.shipo 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_invoke.shipo = function(self, data)$/;"	f
sgs.ai_skill_invoke.shuangxiong	lua/ai/fire-ai.lua	/^sgs.ai_skill_invoke.shuangxiong=function(self,data)$/;"	f
sgs.ai_skill_invoke.songwei 	extension-doc/11-Fundamentals.lua	/^sgs.ai_skill_invoke.songwei = function(self, data)$/;"	f
sgs.ai_skill_invoke.songwei 	lua/ai/thicket-ai.lua	/^sgs.ai_skill_invoke.songwei = function(self, data)$/;"	f
sgs.ai_skill_invoke.tanlan 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_invoke.tanlan = function(self, data)$/;"	f
sgs.ai_skill_invoke.tieji 	lua/ai/standard-ai.lua	/^sgs.ai_skill_invoke.tieji = function(self, data)$/;"	f
sgs.ai_skill_invoke.toudu 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_invoke.toudu = function(self, data)$/;"	f
sgs.ai_skill_invoke.tuoqiao 	lua/ai/sp-ai.lua	/^sgs.ai_skill_invoke.tuoqiao = function(self, data)$/;"	f
sgs.ai_skill_invoke.xiansheng	lua/ai/fancheng-ai.lua	/^sgs.ai_skill_invoke.xiansheng=function(self)$/;"	f
sgs.ai_skill_invoke.xiuluo 	lua/ai/hulaoguan-ai.lua	/^sgs.ai_skill_invoke.xiuluo = function(self, data)$/;"	f
sgs.ai_skill_invoke.yicai 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_invoke.yicai = function(self, data)$/;"	f
sgs.ai_skill_invoke.yitian 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_invoke.yitian = function(self, data)$/;"	f
sgs.ai_skill_invoke.yx_sword 	lua/ai/joy-ai.lua	/^sgs.ai_skill_invoke.yx_sword = function(self, data)$/;"	f
sgs.ai_skill_invoke.zaiqi 	lua/ai/thicket-ai.lua	/^sgs.ai_skill_invoke.zaiqi = function(self, data)$/;"	f
sgs.ai_skill_invoke.zhaolie 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_invoke.zhaolie = function(self, data)$/;"	f
sgs.ai_skill_invoke.zhenlie 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_skill_invoke.zhenlie = function(self, data)$/;"	f
sgs.ai_skill_invoke.zhiyu 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_skill_invoke.zhiyu = function(self)$/;"	f
sgs.ai_skill_invoke.zhongyi 	lua/ai/ling-ai.lua	/^sgs.ai_skill_invoke.zhongyi = function(self, data)$/;"	f
sgs.ai_skill_invoke.zhuiyi 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_skill_invoke.zhuiyi = function(self, data)$/;"	f
sgs.ai_skill_invoke.zhulou 	lua/ai/ling-ai.lua	/^sgs.ai_skill_invoke.zhulou = function(self, data)$/;"	f
sgs.ai_skill_invoke.zishou 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_skill_invoke.zishou = function(self, data)$/;"	f
sgs.ai_skill_invoke["draw_1v3"] 	lua/ai/hulaoguan-ai.lua	/^sgs.ai_skill_invoke["draw_1v3"] = function(self, data)$/;"	f
sgs.ai_skill_invoke["weapon_recast"] 	lua/ai/hulaoguan-ai.lua	/^sgs.ai_skill_invoke["weapon_recast"] = function(self, data)$/;"	f
sgs.ai_skill_pindian.dahe	lua/ai/bgm-ai.lua	/^function sgs.ai_skill_pindian.dahe(minusecard, self, requestor)$/;"	f
sgs.ai_skill_pindian.jueji	lua/ai/yitian-ai.lua	/^function sgs.ai_skill_pindian.jueji(minusecard, self, requestor, maxcard)$/;"	f
sgs.ai_skill_pindian.lieren	lua/ai/thicket-ai.lua	/^function sgs.ai_skill_pindian.lieren(minusecard, self, requestor)$/;"	f
sgs.ai_skill_pindian.tianyi	lua/ai/fire-ai.lua	/^function sgs.ai_skill_pindian.tianyi(minusecard, self, requestor)$/;"	f
sgs.ai_skill_pindian.xianzhen	lua/ai/yjcm-ai.lua	/^function sgs.ai_skill_pindian.xianzhen(minusecard, self, requestor)$/;"	f
sgs.ai_skill_pindian.zhiba	lua/ai/mountain-ai.lua	/^function sgs.ai_skill_pindian.zhiba(minusecard, self, requestor, maxcard)$/;"	f
sgs.ai_skill_playerchosen.dahe 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_playerchosen.dahe = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.damage 	lua/ai/smart-ai.lua	/^sgs.ai_skill_playerchosen.damage = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.fangquan 	extension-doc/14-Responsing.lua	/^sgs.ai_skill_playerchosen.fangquan = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.fangquan 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_playerchosen.fangquan = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.gongmou 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_playerchosen.gongmou = function(self,choices)$/;"	f
sgs.ai_skill_playerchosen.jincui 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_playerchosen.jincui = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.jixi 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_playerchosen.jixi = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.longluo 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_playerchosen.longluo = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.miji 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_skill_playerchosen.miji = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.nosxuanhuo 	lua/ai/nostalgia-ai.lua	/^sgs.ai_skill_playerchosen.nosxuanhuo = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.qiaobian 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_playerchosen.qiaobian = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.shaoying 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_playerchosen.shaoying = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.shichou 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_playerchosen.shichou = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.shihun 	lua/ai/standard-ai.lua	/^sgs.ai_skill_playerchosen.shihun = function(self, targets)	$/;"	f
sgs.ai_skill_playerchosen.weiwudi_guixin 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_playerchosen.weiwudi_guixin = function(self, players)$/;"	f
sgs.ai_skill_playerchosen.wuhun 	lua/ai/god-ai.lua	/^sgs.ai_skill_playerchosen.wuhun = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.xuanfeng 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_playerchosen.xuanfeng = function(self, targets)	$/;"	f
sgs.ai_skill_playerchosen.xuanhuo 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_playerchosen.xuanhuo = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.yx_sword 	lua/ai/joy-ai.lua	/^sgs.ai_skill_playerchosen.yx_sword = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.zero_card_as_slash 	lua/ai/standard_cards-ai.lua	/^sgs.ai_skill_playerchosen.zero_card_as_slash = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.zhaolie 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_playerchosen.zhaolie = function(self, targets)$/;"	f
sgs.ai_skill_playerchosen.zhuiyi 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_skill_playerchosen.zhuiyi = function(self, targets)	$/;"	f
sgs.ai_skill_suit.fanjian	lua/ai/standard-ai.lua	/^function sgs.ai_skill_suit.fanjian()$/;"	f
sgs.ai_skill_suit.neofanjian	lua/ai/ling-ai.lua	/^function sgs.ai_skill_suit.neofanjian()$/;"	f
sgs.ai_skill_use.slash 	lua/ai/standard_cards-ai.lua	/^sgs.ai_skill_use.slash = function(self, prompt)$/;"	f
sgs.ai_skill_use["@@bawang"] 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_use["@@bawang"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@@chengxiang"]	lua/ai/yitian-ai.lua	/^sgs.ai_skill_use["@@chengxiang"]=function(self,prompt)$/;"	f
sgs.ai_skill_use["@@chunlao"] 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_skill_use["@@chunlao"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@@dawu"] 	lua/ai/god-ai.lua	/^sgs.ai_skill_use["@@dawu"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@@fangzhu"] 	lua/ai/thicket-ai.lua	/^sgs.ai_skill_use["@@fangzhu"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@@haoshi!"] 	lua/ai/thicket-ai.lua	/^sgs.ai_skill_use["@@haoshi!"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@@hongyuan"] 	lua/ai/special3v3-ai.lua	/^sgs.ai_skill_use["@@hongyuan"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@@jieming"] 	lua/ai/fire-ai.lua	/^sgs.ai_skill_use["@@jieming"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@@jueji"]	lua/ai/yitian-ai.lua	/^sgs.ai_skill_use["@@jueji"]=function(self,prompt)$/;"	f
sgs.ai_skill_use["@@jujian"] 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_use["@@jujian"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@@kuangfeng"] 	lua/ai/god-ai.lua	/^sgs.ai_skill_use["@@kuangfeng"] = function(self,prompt)$/;"	f
sgs.ai_skill_use["@@leiji"]	lua/ai/wind-ai.lua	/^sgs.ai_skill_use["@@leiji"]=function(self,prompt)$/;"	f
sgs.ai_skill_use["@@lianli"] 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_use["@@lianli"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@@liuli"] 	lua/ai/standard-ai.lua	/^sgs.ai_skill_use["@@liuli"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@@shensu1"]	lua/ai/wind-ai.lua	/^sgs.ai_skill_use["@@shensu1"]=function(self,prompt)$/;"	f
sgs.ai_skill_use["@@shensu2"]	lua/ai/wind-ai.lua	/^sgs.ai_skill_use["@@shensu2"]=function(self,prompt)$/;"	f
sgs.ai_skill_use["@@tianxiang"] 	lua/ai/wind-ai.lua	/^sgs.ai_skill_use["@@tianxiang"] = function(self, data)$/;"	f
sgs.ai_skill_use["@@tuxi"] 	lua/ai/standard-ai.lua	/^sgs.ai_skill_use["@@tuxi"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@@weidai"] 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_use["@@weidai"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@@xuanfeng"] 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_use["@@xuanfeng"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@@xuanhuo"] 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_use["@@xuanhuo"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@@yinghun"] 	lua/ai/thicket-ai.lua	/^sgs.ai_skill_use["@@yinghun"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@dujiang-card"]	lua/ai/fancheng-ai.lua	/^sgs.ai_skill_use["@dujiang-card"]=function(self)$/;"	f
sgs.ai_skill_use["@lianli"] 	extension-doc/14-Responsing.lua	/^sgs.ai_skill_use["@lianli"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@qiaobian"] 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_use["@qiaobian"] = function(self, prompt)$/;"	f
sgs.ai_skill_use["@zhiheng"]	lua/ai/god-ai.lua	/^sgs.ai_skill_use["@zhiheng"]=function(self,prompt)$/;"	f
sgs.ai_skill_use_func.AnxuCard	lua/ai/yjcm2012-ai.lua	/^sgs.ai_skill_use_func.AnxuCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.DaheCard	lua/ai/bgm-ai.lua	/^sgs.ai_skill_use_func.DaheCard=function(card,use,self)	$/;"	f
sgs.ai_skill_use_func.DimengCard	lua/ai/thicket-ai.lua	/^sgs.ai_skill_use_func.DimengCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.FanjianCard	lua/ai/standard-ai.lua	/^sgs.ai_skill_use_func.FanjianCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.GanluCard 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_use_func.GanluCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.GongxinCard	lua/ai/god-ai.lua	/^sgs.ai_skill_use_func.GongxinCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.GreatYeyanCard	lua/ai/god-ai.lua	/^sgs.ai_skill_use_func.GreatYeyanCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.GuhuoCard	lua/ai/wind-ai.lua	/^sgs.ai_skill_use_func.GuhuoCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.GuihanCard	lua/ai/yitian-ai.lua	/^function sgs.ai_skill_use_func.GuihanCard(card, use, self)$/;"	f
sgs.ai_skill_use_func.HouyuanCard 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_use_func.HouyuanCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.HuangtianCard	lua/ai/wind-ai.lua	/^sgs.ai_skill_use_func.HuangtianCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.JieyinCard	lua/ai/standard-ai.lua	/^sgs.ai_skill_use_func.JieyinCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.JijiangCard	lua/ai/standard-ai.lua	/^sgs.ai_skill_use_func.JijiangCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.JilveCard	extension-doc/15-Activate.lua	/^sgs.ai_skill_use_func.JilveCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.JilveCard	lua/ai/god-ai.lua	/^sgs.ai_skill_use_func.JilveCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.JixiCard 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_use_func.JixiCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.JuaoCard 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_use_func.JuaoCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.KurouCard	lua/ai/standard-ai.lua	/^sgs.ai_skill_use_func.KurouCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.LexueCard 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_use_func.LexueCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.LianliSlashCard 	lua/ai/yitian-ai.lua	/^sgs.ai_skill_use_func.LianliSlashCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.LihunCard 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_use_func.LihunCard = function(card,use,self)$/;"	f
sgs.ai_skill_use_func.LijianCard	lua/ai/standard-ai.lua	/^sgs.ai_skill_use_func.LijianCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.LuanwuCard	lua/ai/thicket-ai.lua	/^sgs.ai_skill_use_func.LuanwuCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.LuoyiCard	lua/ai/ling-ai.lua	/^sgs.ai_skill_use_func.LuoyiCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.MingceCard	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_use_func.MingceCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.NeoFanjianCard	lua/ai/ling-ai.lua	/^sgs.ai_skill_use_func.NeoFanjianCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.NosJujianCard 	lua/ai/nostalgia-ai.lua	/^sgs.ai_skill_use_func.NosJujianCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.NosXuanhuoCard 	lua/ai/nostalgia-ai.lua	/^sgs.ai_skill_use_func.NosXuanhuoCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.PaiyiCard 	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_use_func.PaiyiCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.PeachingCard	lua/ai/zombie_mode-ai.lua	/^	function sgs.ai_skill_use_func.PeachingCard(card, use, self)$/;"	f
sgs.ai_skill_use_func.QiangxiCard 	extension-doc/15-Activate.lua	/^sgs.ai_skill_use_func.QiangxiCard = function(card, use, self) -- card 参数在下面没有用到$/;"	f
sgs.ai_skill_use_func.QiangxiCard 	lua/ai/fire-ai.lua	/^sgs.ai_skill_use_func.QiangxiCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.QiceCard	lua/ai/yjcm2012-ai.lua	/^sgs.ai_skill_use_func.QiceCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.QingnangCard	lua/ai/standard-ai.lua	/^sgs.ai_skill_use_func.QingnangCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.QuhuCard 	lua/ai/fire-ai.lua	/^sgs.ai_skill_use_func.QuhuCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.RendeCard 	lua/ai/standard-ai.lua	/^sgs.ai_skill_use_func.RendeCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.ShenfenCard	lua/ai/god-ai.lua	/^sgs.ai_skill_use_func.ShenfenCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.ShouyeCard 	extension-doc/15-Activate.lua	/^sgs.ai_skill_use_func.ShouyeCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.ShouyeCard 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_use_func.ShouyeCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.SmallYeyanCard	lua/ai/god-ai.lua	/^sgs.ai_skill_use_func.SmallYeyanCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.TaichenCard	lua/ai/yitian-ai.lua	/^sgs.ai_skill_use_func.TaichenCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.TanhuCard 	lua/ai/bgm-ai.lua	/^sgs.ai_skill_use_func.TanhuCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.TianyiCard	lua/ai/fire-ai.lua	/^sgs.ai_skill_use_func.TianyiCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.TiaoxinCard 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_use_func.TiaoxinCard = function(card,use,self)$/;"	f
sgs.ai_skill_use_func.WeidaiCard 	lua/ai/wisdom-ai.lua	/^sgs.ai_skill_use_func.WeidaiCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.WuqianCard	lua/ai/god-ai.lua	/^sgs.ai_skill_use_func.WuqianCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.XianzhenCard	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_use_func.XianzhenCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.XianzhenSlashCard	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_use_func.XianzhenSlashCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.XinzhanCard	lua/ai/yjcm-ai.lua	/^sgs.ai_skill_use_func.XinzhanCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.XunzhiCard	lua/ai/yitian-ai.lua	/^function sgs.ai_skill_use_func.XunzhiCard(card, use)$/;"	f
sgs.ai_skill_use_func.YihunCard	lua/ai/standard-ai.lua	/^sgs.ai_skill_use_func.YihunCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.YisheAskCard	extension-doc/17-Example.lua	/^sgs.ai_skill_use_func.YisheAskCard=function(card,use,self) -- 义舍要牌技能卡的使用函数$/;"	f
sgs.ai_skill_use_func.YisheAskCard	lua/ai/yitian-ai.lua	/^sgs.ai_skill_use_func.YisheAskCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.YisheCard	extension-doc/17-Example.lua	/^sgs.ai_skill_use_func.YisheCard=function(card,use,self) -- 义舍技能卡的使用函数$/;"	f
sgs.ai_skill_use_func.YisheCard	lua/ai/yitian-ai.lua	/^sgs.ai_skill_use_func.YisheCard=function(card,use,self)$/;"	f
sgs.ai_skill_use_func.ZhibaCard 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_use_func.ZhibaCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.ZhihengCard 	lua/ai/standard-ai.lua	/^sgs.ai_skill_use_func.ZhihengCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func.ZhijianCard 	lua/ai/mountain-ai.lua	/^sgs.ai_skill_use_func.ZhijianCard = function(card, use, self)$/;"	f
sgs.ai_skill_use_func["FloodCard"]	lua/ai/fancheng-ai.lua	/^sgs.ai_skill_use_func["FloodCard"]=function(card,use,self)$/;"	f
sgs.ai_skill_use_func["TaichenFightCard"]	lua/ai/fancheng-ai.lua	/^sgs.ai_skill_use_func["TaichenFightCard"]=function(card,use,self)$/;"	f
sgs.ai_skill_use_func["ZhiyuanCard"]	lua/ai/fancheng-ai.lua	/^sgs.ai_skill_use_func["ZhiyuanCard"]=function(card,use,self)$/;"	f
sgs.ai_slash_prohibit.duanchang	lua/ai/mountain-ai.lua	/^function sgs.ai_slash_prohibit.duanchang(self, to)$/;"	f
sgs.ai_slash_prohibit.dushi	lua/ai/yitian-ai.lua	/^function sgs.ai_slash_prohibit.dushi(self, to)$/;"	f
sgs.ai_slash_prohibit.enyuan	lua/ai/yjcm-ai.lua	/^function sgs.ai_slash_prohibit.enyuan(self)$/;"	f
sgs.ai_slash_prohibit.ganglie	lua/ai/standard-ai.lua	/^function sgs.ai_slash_prohibit.ganglie(self, to)$/;"	f
sgs.ai_slash_prohibit.huilei	lua/ai/yjcm-ai.lua	/^function sgs.ai_slash_prohibit.huilei(self, to)$/;"	f
sgs.ai_slash_prohibit.hujia	lua/ai/standard-ai.lua	/^function sgs.ai_slash_prohibit.hujia(self, to)$/;"	f
sgs.ai_slash_prohibit.leiji	lua/ai/wind-ai.lua	/^function sgs.ai_slash_prohibit.leiji(self, to, card)$/;"	f
sgs.ai_slash_prohibit.liuli	lua/ai/standard-ai.lua	/^function sgs.ai_slash_prohibit.liuli(self, to, card)$/;"	f
sgs.ai_slash_prohibit.nosenyuan	lua/ai/nostalgia-ai.lua	/^function sgs.ai_slash_prohibit.nosenyuan(self)$/;"	f
sgs.ai_slash_prohibit.tiandu	lua/ai/standard-ai.lua	/^function sgs.ai_slash_prohibit.tiandu(self, to)$/;"	f
sgs.ai_slash_prohibit.tianxiang	lua/ai/wind-ai.lua	/^function sgs.ai_slash_prohibit.tianxiang(self, to)$/;"	f
sgs.ai_slash_prohibit.weidi	lua/ai/sp-ai.lua	/^function sgs.ai_slash_prohibit.weidi(self, to, card)$/;"	f
sgs.ai_slash_prohibit.wuhun	lua/ai/god-ai.lua	/^function sgs.ai_slash_prohibit.wuhun(self, to)$/;"	f
sgs.ai_slash_prohibit.xiangle	lua/ai/mountain-ai.lua	/^function sgs.ai_slash_prohibit.xiangle(self, to)$/;"	f
sgs.ai_slash_weaponfilter.DoubleSword	lua/ai/standard_cards-ai.lua	/^function sgs.ai_slash_weaponfilter.DoubleSword(to, self)$/;"	f
sgs.ai_slash_weaponfilter.KylinBow	lua/ai/standard_cards-ai.lua	/^function sgs.ai_slash_weaponfilter.KylinBow(to)$/;"	f
sgs.ai_slash_weaponfilter.axe	lua/ai/standard_cards-ai.lua	/^function sgs.ai_slash_weaponfilter.axe(to, self)$/;"	f
sgs.ai_slash_weaponfilter.fan	lua/ai/standard_cards-ai.lua	/^function sgs.ai_slash_weaponfilter.fan(to)$/;"	f
sgs.ai_slash_weaponfilter.guding_Blade	lua/ai/standard_cards-ai.lua	/^function sgs.ai_slash_weaponfilter.guding_Blade(to)$/;"	f
sgs.ai_view_as.fan 	lua/ai/maneuvering-ai.lua	/^sgs.ai_view_as.fan = function(card, player, card_place)$/;"	f
sgs.ai_view_as.gongqi 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_view_as.gongqi = function(card, player, card_place)$/;"	f
sgs.ai_view_as.jijiu 	extension-doc/13-ViewAs.lua	/^sgs.ai_view_as.jijiu = function(card, player, card_place)$/;"	f
sgs.ai_view_as.jijiu 	lua/ai/standard-ai.lua	/^sgs.ai_view_as.jijiu = function(card, player, card_place)$/;"	f
sgs.ai_view_as.jiuchi 	lua/ai/thicket-ai.lua	/^sgs.ai_view_as.jiuchi = function(card, player, card_place)$/;"	f
sgs.ai_view_as.kanpo 	lua/ai/fire-ai.lua	/^sgs.ai_view_as.kanpo = function(card, player, card_place)$/;"	f
sgs.ai_view_as.lihuo 	lua/ai/yjcm2012-ai.lua	/^sgs.ai_view_as.lihuo = function(card, player, card_place)$/;"	f
sgs.ai_view_as.longdan 	lua/ai/standard-ai.lua	/^sgs.ai_view_as.longdan = function(card, player, card_place)$/;"	f
sgs.ai_view_as.longhun 	lua/ai/god-ai.lua	/^sgs.ai_view_as.longhun = function(card, player, card_place)$/;"	f
sgs.ai_view_as.qingguo 	extension-doc/13-ViewAs.lua	/^sgs.ai_view_as.qingguo = function(card, player, card_place)$/;"	f
sgs.ai_view_as.qingguo 	lua/ai/standard-ai.lua	/^sgs.ai_view_as.qingguo = function(card, player, card_place)$/;"	f
sgs.ai_view_as.wusheng 	lua/ai/standard-ai.lua	/^sgs.ai_view_as.wusheng = function(card, player, card_place)$/;"	f
sgs.ai_view_as.yanzheng 	lua/ai/bgm-ai.lua	/^sgs.ai_view_as.yanzheng = function(card, player, card_place)$/;"	f
sgs.ai_weapon_value.Blade	lua/ai/standard_cards-ai.lua	/^function sgs.ai_weapon_value.Blade(self, enemy)$/;"	f
sgs.ai_weapon_value.DoubleSword	lua/ai/standard_cards-ai.lua	/^function sgs.ai_weapon_value.DoubleSword(self, enemy)$/;"	f
sgs.ai_weapon_value.KylinBow	lua/ai/standard_cards-ai.lua	/^function sgs.ai_weapon_value.KylinBow(self, target)$/;"	f
sgs.ai_weapon_value.QinggangSword	lua/ai/standard_cards-ai.lua	/^function sgs.ai_weapon_value.QinggangSword(self, enemy)$/;"	f
sgs.ai_weapon_value.axe	lua/ai/standard_cards-ai.lua	/^function sgs.ai_weapon_value.axe(self, enemy)$/;"	f
sgs.ai_weapon_value.fan	lua/ai/maneuvering-ai.lua	/^function sgs.ai_weapon_value.fan(self, enemy)$/;"	f
sgs.ai_weapon_value.guding_Blade	lua/ai/standard_cards-ai.lua	/^function sgs.ai_weapon_value.guding_Blade(self, enemy)$/;"	f
sgs.backwardEvaluation	lua/ai/smart-ai.lua	/^function sgs.backwardEvaluation(player)$/;"	f
sgs.checkMisjudge	lua/ai/debug-ai.lua	/^function sgs.checkMisjudge(player)$/;"	f
sgs.compareRoleEvaluation	lua/ai/smart-ai.lua	/^function sgs.compareRoleEvaluation(player, first, second)$/;"	f
sgs.evaluatePlayerRole	lua/ai/smart-ai.lua	/^function sgs.evaluatePlayerRole(player)$/;"	f
sgs.evaluateRoleTrends	lua/ai/smart-ai.lua	/^function sgs.evaluateRoleTrends(player)$/;"	f
sgs.findIntersectionSkills	lua/ai/smart-ai.lua	/^function sgs.findIntersectionSkills(first, second)$/;"	f
sgs.findUnionSkills	lua/ai/smart-ai.lua	/^function sgs.findUnionSkills(first, second)$/;"	f
sgs.gameProcess	lua/ai/smart-ai.lua	/^function sgs.gameProcess(room)$/;"	f
sgs.getDefense	lua/ai/smart-ai.lua	/^function sgs.getDefense(player)$/;"	f
sgs.getSkillLists	lua/ai/smart-ai.lua	/^function sgs.getSkillLists(player)$/;"	f
sgs.getValue	lua/ai/smart-ai.lua	/^function sgs.getValue(player)$/;"	f
sgs.isLordHealthy	lua/ai/smart-ai.lua	/^function sgs.isLordHealthy()$/;"	f
sgs.isLordInDanger	lua/ai/smart-ai.lua	/^function sgs.isLordInDanger()$/;"	f
sgs.isRolePredictable	lua/ai/smart-ai.lua	/^function sgs.isRolePredictable()$/;"	f
sgs.isRolePredictable 	lua/ai/hegemony-ai.lua	/^	sgs.isRolePredictable = function()$/;"	f
sgs.list	lua/sgs_ex.lua	/^function sgs.list(list)$/;"	f
sgs.modifiedRoleEvaluation	lua/ai/smart-ai.lua	/^function sgs.modifiedRoleEvaluation()$/;"	f
sgs.modifiedRoleTrends	lua/ai/smart-ai.lua	/^function sgs.modifiedRoleTrends(role)$/;"	f
sgs.outputProcessValues	lua/ai/smart-ai.lua	/^function sgs.outputProcessValues(room)$/;"	f
sgs.outputRoleValues	lua/ai/smart-ai.lua	/^function sgs.outputRoleValues(player, level)$/;"	f
sgs.qlist	lua/sgs_ex.lua	/^function sgs.qlist(list)$/;"	f
sgs.reverse	lua/sgs_ex.lua	/^function sgs.reverse(list)$/;"	f
sgs.updateIntention	lua/ai/smart-ai.lua	/^function sgs.updateIntention(from, to, intention, card)$/;"	f
sgs.updateIntention 	lua/ai/hegemony-ai.lua	/^	sgs.updateIntention = function(player, to, intention)$/;"	f
sgs.updateIntentions	extension-doc/16-RoleJudgement.lua	/^function sgs.updateIntentions(from, tos, intention, card)$/;"	f
sgs.updateIntentions	lua/ai/smart-ai.lua	/^function sgs.updateIntentions(from, tos, intention, card)$/;"	f
sgs["@foo"] 	extension-doc/16-RoleJudgement.lua	/^sgs["@foo"] == function(a, b)$/;"	f
shenfen_skill.getTurnUseCard	lua/ai/god-ai.lua	/^shenfen_skill.getTurnUseCard=function(self)$/;"	f
shift	include/freetype/freetype/ftimage.h	/^    int                     shift;$/;"	m	struct:FT_Outline_Funcs_
shift	src/ui/window.cpp	/^void Window::shift(){$/;"	f	class:Window
short_metrics	include/freetype/freetype/tttables.h	/^    void*      short_metrics;$/;"	m	struct:TT_HoriHeader_
short_metrics	include/freetype/freetype/tttables.h	/^    void*      short_metrics;$/;"	m	struct:TT_VertHeader_
short_src	src/lua/lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug
shouldreceivebody	lua/lib/socket/http.lua	/^local function shouldreceivebody(reqt, code)$/;"	f
shouldredirect	lua/lib/socket/http.lua	/^local function shouldredirect(reqt, code, headers)$/;"	f
shouye_skill.getTurnUseCard	lua/ai/wisdom-ai.lua	/^shouye_skill.getTurnUseCard=function(self)$/;"	f
showAllCards	src/server/room.cpp	/^void Room::showAllCards(ServerPlayer *player, ServerPlayer *to){$/;"	f	class:Room
showAvatar	src/ui/carditem.cpp	/^void CardItem::showAvatar(const General *general){$/;"	f	class:CardItem
showCard	src/client/client.cpp	/^void Client::showCard(const Json::Value &show_str){$/;"	f	class:Client
showCard	src/server/room.cpp	/^void Room::showCard(ServerPlayer *player, int card_id, ServerPlayer *only_viewer){$/;"	f	class:Room
showCard	src/ui/photo.cpp	/^void Photo::showCard(int card_id){$/;"	f	class:Photo
showCard	src/ui/roomscene.cpp	/^void RoomScene::showCard(const QString &player_name, int card_id){$/;"	f	class:RoomScene
showDistance	src/dialog/distanceviewdialog.cpp	/^void DistanceViewDialog::showDistance()$/;"	f	class:DistanceViewDialog
showEasyTextBoard	src/ui/chatwidget.cpp	/^void ChatWidget::showEasyTextBoard(){$/;"	f	class:ChatWidget
showEvent	src/ui/TimedProgressBar.cpp	/^void TimedProgressBar::showEvent(QShowEvent* showEvent)$/;"	f	class:TimedProgressBar
showFaceBoard	src/ui/chatwidget.cpp	/^void ChatWidget::showFaceBoard(){$/;"	f	class:ChatWidget
showFont	src/dialog/configdialog.cpp	/^void ConfigDialog::showFont(QLineEdit *lineedit, const QFont &font){$/;"	f	class:ConfigDialog
showFootnote	src/ui/carditem.h	/^    inline void showFootnote() { _m_showFootnote = false; }$/;"	f	class:CardItem
showFrame	src/ui/carditem.cpp	/^void CardItem::showFrame(const QString &result){$/;"	f	class:CardItem
showIndicator	src/ui/roomscene.cpp	/^void RoomScene::showIndicator(const QString &from, const QString &to){$/;"	f	class:RoomScene
showJudgeResult	src/ui/TablePile.cpp	/^void TablePile::showJudgeResult(int cardId, bool takeEffect){$/;"	f	class:TablePile
showOwnerButtons	src/ui/roomscene.cpp	/^void RoomScene::showOwnerButtons(bool owner){$/;"	f	class:RoomScene
showPlayerCards	src/ui/roomscene.cpp	/^void RoomScene::showPlayerCards(){$/;"	f	class:RoomScene
showProgressBar	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::showProgressBar(Countdown countdown)$/;"	f	class:PlayerCardContainer
showPromptBox	src/ui/roomscene.cpp	/^void RoomScene::showPromptBox()$/;"	f	class:RoomScene
showServerInformation	src/ui/roomscene.cpp	/^void RoomScene::showServerInformation()$/;"	f	class:RoomScene
showSettings	src/dialog/packagingeditor.cpp	/^void MetaInfoWidget::showSettings(const QSettings *settings){$/;"	f	class:MetaInfoWidget
showSkillInvocation	src/ui/roomscene.cpp	/^void RoomScene::showSkillInvocation(const QString &who, const QString &skill_name){$/;"	f	class:RoomScene
showSkillName	src/ui/photo.cpp	/^void Photo::showSkillName(const QString &skill_name){$/;"	f	class:Photo
showorpindian_skill	src/ui/roomscene.h	/^    ShowOrPindianSkill *showorpindian_skill;$/;"	m	class:RoomScene
shuangxiong_skill.getTurnUseCard	lua/ai/fire-ai.lua	/^shuangxiong_skill.getTurnUseCard=function(self)$/;"	f
shutting_down_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  bool shutting_down_;$/;"	m	class:google_breakpad::CrashGenerationServer
signature	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDGUID    signature;         \/* GUID, identifies PDB file *\/$/;"	m	struct:__anon29
signature	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t  signature;         \/* time_t debug information created *\/$/;"	m	struct:__anon28
signature	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t signature;$/;"	m	struct:__anon16
signature	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t signature;$/;"	m	struct:__anon19
signature	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t signature;$/;"	m	struct:__anon27
signup	src/client/client.cpp	/^void Client::signup(){$/;"	f	class:Client
signup	src/server/room.cpp	/^void Room::signup(ServerPlayer *player, const QString &screen_name, const QString &avatar, bool is_robot){$/;"	f	class:Room
signupPlayer	src/server/server.cpp	/^void Server::signupPlayer(ServerPlayer *player){$/;"	f	class:Server
simpleexp	src/lua/lparser.c	/^static void simpleexp (LexState *ls, expdesc *v) {$/;"	f	file:
single_turn	src/dialog/customassigndialog.h	/^    QCheckBox *single_turn, *before_next;$/;"	m	class:CustomAssignDialog
single_turn_box	src/dialog/customassigndialog.h	/^    QComboBox *single_turn_box, *before_next_box;$/;"	m	class:CustomAssignDialog
single_turn_text	src/dialog/customassigndialog.h	/^    QLabel *single_turn_text, *single_turn_text2, *before_next_text, *before_next_text2;$/;"	m	class:CustomAssignDialog
single_turn_text2	src/dialog/customassigndialog.h	/^    QLabel *single_turn_text, *single_turn_text2, *before_next_text, *before_next_text2;$/;"	m	class:CustomAssignDialog
singlematch	src/lua/lstrlib.c	/^static int singlematch (int c, const char *p, const char *ep) {$/;"	f	file:
singlestep	src/lua/lgc.c	/^static l_mem singlestep (lua_State *L) {$/;"	f	file:
singlevar	src/lua/lparser.c	/^static void singlevar (LexState *ls, expdesc *var) {$/;"	f	file:
singlevaraux	src/lua/lparser.c	/^static int singlevaraux (FuncState *fs, TString *n, expdesc *var, int base) {$/;"	f	file:
sink.chain	lua/lib/ltn12.lua	/^function sink.chain(f, snk)$/;"	f
sink.error	lua/lib/ltn12.lua	/^function sink.error(err)$/;"	f
sink.file	lua/lib/ltn12.lua	/^function sink.file(handle, io_err)$/;"	f
sink.null	lua/lib/ltn12.lua	/^function sink.null()$/;"	f
sink.simplify	lua/lib/ltn12.lua	/^function sink.simplify(snk)$/;"	f
sink.table	lua/lib/ltn12.lua	/^function sink.table(t)$/;"	f
sinkt["close-when-done"] 	lua/lib/socket.lua	/^sinkt["close-when-done"] = function(sock)$/;"	f
sinkt["keep-open"] 	lua/lib/socket.lua	/^sinkt["keep-open"] = function(sock)$/;"	f
size	include/freetype/freetype/freetype.h	/^    FT_Pos    size;$/;"	m	struct:FT_Bitmap_Size_
size	include/freetype/freetype/freetype.h	/^    FT_Size           size;$/;"	m	struct:FT_FaceRec_
size	include/freetype/freetype/ftsizes.h	/^  FT_Activate_Size( FT_Size  size );$/;"	v
size	include/freetype/freetype/ftsizes.h	/^  FT_Done_Size( FT_Size  size );$/;"	v
size	include/freetype/freetype/ftsystem.h	/^    unsigned long        size;$/;"	m	struct:FT_StreamRec_
size	include/freetype/freetype/internal/ftobjs.h	/^    FT_ULong               size;$/;"	m	struct:FT_CMap_ClassRec_
size	include/freetype/freetype/internal/ftstream.h	/^    FT_Byte    size;$/;"	m	struct:FT_Frame_Field_
size	include/freetype/freetype/internal/psaux.h	/^    FT_Byte             size;         \/* size of field in bytes         *\/$/;"	m	struct:T1_FieldRec_
size	include/freetype/freetype/internal/tttypes.h	/^    FT_Size          size;$/;"	m	struct:TT_LoaderRec_
size	src/breakpad/google_breakpad/common/minidump_size.h	/^  static size_t size() { return MDCVInfoPDB20_minsize; }$/;"	f	class:google_breakpad::minidump_size
size	src/breakpad/google_breakpad/common/minidump_size.h	/^  static size_t size() { return MDCVInfoPDB70_minsize; }$/;"	f	class:google_breakpad::minidump_size
size	src/breakpad/google_breakpad/common/minidump_size.h	/^  static size_t size() { return MDImageDebugMisc_minsize; }$/;"	f	class:google_breakpad::minidump_size
size	src/breakpad/google_breakpad/common/minidump_size.h	/^  static size_t size() { return MDRawMemoryList_minsize; }$/;"	f	class:google_breakpad::minidump_size
size	src/breakpad/google_breakpad/common/minidump_size.h	/^  static size_t size() { return MDRawModuleList_minsize; }$/;"	f	class:google_breakpad::minidump_size
size	src/breakpad/google_breakpad/common/minidump_size.h	/^  static size_t size() { return MDRawThreadList_minsize; }$/;"	f	class:google_breakpad::minidump_size
size	src/breakpad/google_breakpad/common/minidump_size.h	/^  static size_t size() { return MDString_minsize; }$/;"	f	class:google_breakpad::minidump_size
size	src/breakpad/google_breakpad/common/minidump_size.h	/^  static size_t size() { return MD_MODULE_SIZE; }$/;"	f	class:google_breakpad::minidump_size
size	src/breakpad/google_breakpad/common/minidump_size.h	/^  static size_t size() { return sizeof(T); }$/;"	f	class:google_breakpad::minidump_size
size	src/breakpad/google_breakpad/processor/minidump.h	/^  virtual u_int64_t size() const { return valid_ ? module_.size_of_image : 0; }$/;"	f	class:google_breakpad::MinidumpModule
size	src/breakpad/processor/basic_code_module.h	/^  virtual u_int64_t size() const { return size_; }$/;"	f	class:google_breakpad::BasicCodeModule
size	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  virtual u_int64_t size() const { return 0xb000; }$/;"	f	class:__anon71::TestCodeModule
size	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  virtual u_int64_t size() const { return 0xb000; }$/;"	f	class:__anon73::TestCodeModule
size	src/breakpad/processor/range_map_unittest.cc	/^  AddressType size;$/;"	m	struct:__anon84::RangeTest	file:
size	src/breakpad/processor/source_line_resolver_base_types.h	/^  MemAddr size;$/;"	m	struct:google_breakpad::SourceLineResolverBase::Function
size	src/breakpad/processor/source_line_resolver_base_types.h	/^  MemAddr size;$/;"	m	struct:google_breakpad::SourceLineResolverBase::Line
size	src/breakpad/processor/stackwalker_unittest_utils.h	/^  u_int64_t size()               const { return size_; }$/;"	f	class:MockCodeModule
size	src/breakpad/processor/static_map.h	/^  inline unsigned int size() const { return num_nodes_; }$/;"	f	class:google_breakpad::StaticMap
size	src/breakpad/processor/static_map_unittest.cc	/^  unsigned int size[kNumberTestCases];$/;"	m	class:TestValidMap	file:
size	src/breakpad/processor/static_range_map_unittest.cc	/^  AddressType size;$/;"	m	struct:__anon85::RangeTest	file:
size	src/jsoncpp/src/json_value.cpp	/^Value::size() const$/;"	f	class:Json::Value
size	src/lua/lauxlib.c	/^  size_t size;$/;"	m	struct:LoadS	file:
size	src/lua/lstate.h	/^  int size;$/;"	m	struct:stringtable
size	src/ui/button.h	/^    QSizeF size;$/;"	m	class:Button
size	src/ui/window.h	/^    QSizeF size;$/;"	m	class:Window
size	swig/sanguosha_wrap.cxx	/^  size_t                 size;		        \/* Number of types in this module *\/$/;"	m	struct:swig_module_info	file:
sizeCclosure	src/lua/lfunc.h	14;"	d
sizeLclosure	src/lua/lfunc.h	17;"	d
size_	src/breakpad/processor/basic_code_module.h	/^  u_int64_t size_;$/;"	m	class:google_breakpad::BasicCodeModule
size_	src/breakpad/processor/disassembler_x86.h	/^    u_int32_t size_;$/;"	m	class:google_breakpad::DisassemblerX86
size_	src/breakpad/processor/stackwalker_unittest_utils.h	/^  u_int64_t size_;$/;"	m	class:MockCodeModule
size_	src/breakpad/processor/synth_minidump.h	/^  Label file_offset_, size_;$/;"	m	class:google_breakpad::SynthMinidump::Section
size_	src/jsoncpp/include/json/value.h	/^      ArrayIndex size_;$/;"	m	class:Json::ValueInternalArray
size_ci	src/lua/lstate.h	/^  int size_ci;  \/* size of array `base_ci' *\/$/;"	m	struct:lua_State
size_object_size	include/freetype/freetype/internal/ftdriver.h	/^    FT_Long                   size_object_size;$/;"	m	struct:FT_Driver_ClassRec_
size_of_entry	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t size_of_entry;     \/* sizeof(MDRawMemoryInfo) *\/$/;"	m	struct:__anon44
size_of_header	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t size_of_header;    \/* sizeof(MDRawMemoryInfoList) *\/$/;"	m	struct:__anon44
size_of_image	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t            size_of_image;$/;"	m	struct:__anon26
size_of_info	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t size_of_info;  \/* Length of entire MDRawMiscInfo structure. *\/$/;"	m	struct:__anon42
size_t	src/jsoncpp/include/json/value.h	/^      typedef unsigned int size_t;$/;"	t	class:Json::ValueConstIterator
size_t	src/jsoncpp/include/json/value.h	/^      typedef unsigned int size_t;$/;"	t	class:Json::ValueIterator
size_t	src/jsoncpp/include/json/value.h	/^      typedef unsigned int size_t;$/;"	t	class:Json::ValueIteratorBase
sizearray	src/lua/lobject.h	/^  int sizearray;  \/* size of `array' array *\/$/;"	m	struct:Table
sizebytes	include/fmod/fmod.h	/^    unsigned int    sizebytes;      \/* [r] how many bytes requested for read. *\/$/;"	m	struct:__anon108
sizecode	src/lua/lobject.h	/^  int sizecode;$/;"	m	struct:Proto
sizek	src/lua/lobject.h	/^  int sizek;  \/* size of `k' *\/$/;"	m	struct:Proto
sizelineinfo	src/lua/lobject.h	/^  int sizelineinfo;$/;"	m	struct:Proto
sizelocvars	src/lua/lobject.h	/^  int sizelocvars;$/;"	m	struct:Proto
sizenode	src/lua/lobject.h	360;"	d
sizep	src/lua/lobject.h	/^  int sizep;  \/* size of `p' *\/$/;"	m	struct:Proto
sizes_list	include/freetype/freetype/freetype.h	/^    FT_ListRec        sizes_list;$/;"	m	struct:FT_FaceRec_
sizestring	src/lua/lstring.h	16;"	d
sizeudata	src/lua/lstring.h	18;"	d
sizeupvalues	src/lua/lobject.h	/^  int sizeupvalues;$/;"	m	struct:Proto
sizex	src/ui/chatwidget.h	/^    int sizex;$/;"	m	class:MyPixmapItem
sizey	src/ui/chatwidget.h	/^    int sizey;$/;"	m	class:MyPixmapItem
skill	src/package/standard.h	/^    TriggerSkill *skill;$/;"	m	class:EquipCard
skill:view_as	lua/sgs_ex.lua	/^	function skill:view_as(cards)$/;"	f
skill:view_filter	lua/sgs_ex.lua	/^	function skill:view_filter(selected, to_select)$/;"	f
skillButtonActivated	src/ui/dashboard.cpp	/^void Dashboard::skillButtonActivated(){$/;"	f	class:Dashboard
skillButtonDeactivated	src/ui/dashboard.cpp	/^void Dashboard::skillButtonDeactivated(){$/;"	f	class:Dashboard
skillInvoked	src/client/client.cpp	/^void Client::skillInvoked(const Json::Value &arg){$/;"	f	class:Client
skillSet	src/server/roomthread.h	/^    QSet<const TriggerSkill *> skillSet;$/;"	m	class:RoomThread
skillStateChange	src/ui/roomscene.cpp	/^void RoomScene::skillStateChange(const QString &skill_name){$/;"	f	class:RoomScene
skill_box	src/dialog/cardeditor.h	/^    SkillBox *skill_box;$/;"	m	class:CardScene
skill_description	src/dialog/cardeditor.h	/^    QGraphicsTextItem *skill_description;$/;"	m	class:SkillBox
skill_info	src/dialog/customassigndialog.h	/^    QTextEdit *skill_info;$/;"	m	class:SkillAssignDialog
skill_line	src/client/client.h	/^    QString skill_title, skill_line;$/;"	m	class:Client
skill_list	src/dialog/customassigndialog.h	/^    QListWidget *skill_list;$/;"	m	class:SkillAssignDialog
skill_mark	src/server/gamerule.h	/^    QMap<QString, QString> skill_mark;$/;"	m	class:BasaraMode
skill_name	src/client/client.h	/^    QString skill_name;$/;"	m	class:Client
skill_set	src/core/general.h	/^    QSet<QString> skill_set;$/;"	m	class:General
skill_table	src/server/roomthread.h	/^    QList<const TriggerSkill *> skill_table[NumOfEvents];$/;"	m	class:RoomThread
skill_title	src/client/client.h	/^    QString skill_title, skill_line;$/;"	m	class:Client
skill_titles	src/dialog/cardeditor.h	/^    QList<SkillTitle *> skill_titles;$/;"	m	class:SkillBox
skill_to_invoke	src/client/client.h	/^    QString skill_to_invoke;$/;"	m	class:Client
skills	src/core/engine.h	/^    QHash<QString, const Skill *> skills;$/;"	m	class:Engine
skills	src/core/player.h	/^    QStringList skills;$/;"	m	class:Player
skills	src/package/package.h	/^    QList<const Skill *> skills;$/;"	m	class:Package
skip	src/dialog/cardeditor.h	/^    int skip;$/;"	m	class:BlackEdgeTextItem
skip	src/server/serverplayer.cpp	/^void ServerPlayer::skip(){$/;"	f	class:ServerPlayer
skip	src/server/serverplayer.cpp	/^void ServerPlayer::skip(Player::Phase phase){$/;"	f	class:ServerPlayer
skip	src/ui/cardcontainer.h	/^    static const int skip = 102;$/;"	m	class:GuanxingBox
skipCommentTokens	src/jsoncpp/src/json_reader.cpp	/^Reader::skipCommentTokens( Token &token )$/;"	f	class:Json::Reader
skipSpaces	src/jsoncpp/src/json_reader.cpp	/^Reader::skipSpaces()$/;"	f	class:Json::Reader
skip_PS_token	include/freetype/freetype/internal/psaux.h	/^    (*skip_PS_token)( PS_Parser  parser );$/;"	m	struct:PS_Parser_FuncsRec_
skip_sep	src/lua/llex.c	/^static int skip_sep (LexState *ls) {$/;"	f	file:
skip_spaces	include/freetype/freetype/internal/psaux.h	/^    (*skip_spaces)( PS_Parser  parser );$/;"	m	struct:PS_Parser_FuncsRec_
slash	src/core/structs.h	/^    const Slash *slash;$/;"	m	struct:SlashEffectStruct
slashEffect	src/server/room.cpp	/^void Room::slashEffect(const SlashEffectStruct &effect){$/;"	f	class:Room
slashResult	src/server/room.cpp	/^void Room::slashResult(const SlashEffectStruct &effect, const Card *jink){$/;"	f	class:Room
slot	include/freetype/freetype/ftbitmap.h	/^  FT_GlyphSlot_Own_Bitmap( FT_GlyphSlot  slot );$/;"	v
slot	include/freetype/freetype/ftsynth.h	/^  FT_GlyphSlot_Embolden( FT_GlyphSlot  slot );$/;"	v
slot	include/freetype/freetype/ftsynth.h	/^  FT_GlyphSlot_Oblique( FT_GlyphSlot  slot );$/;"	v
slot	include/freetype/freetype/internal/ftobjs.h	/^  FT_Done_GlyphSlot( FT_GlyphSlot  slot );$/;"	v
slot	include/freetype/freetype/internal/ftobjs.h	/^  ft_glyphslot_free_bitmap( FT_GlyphSlot  slot );$/;"	v
slot_object_size	include/freetype/freetype/internal/ftdriver.h	/^    FT_Long                   slot_object_size;$/;"	m	struct:FT_Driver_ClassRec_
slowDown	src/util/recorder.cpp	/^void Replayer::slowDown(){$/;"	f	class:Replayer
small_avatar_rect	src/dialog/cardeditor.h	/^    AvatarRectItem *big_avatar_rect, *small_avatar_rect, *tiny_avatar_rect;$/;"	m	class:CardScene
smooth	include/freetype/freetype/internal/ftpic.h	/^    void* smooth;$/;"	m	struct:FT_PIC_Container_
snap_heights	include/freetype/freetype/t1tables.h	/^    FT_Short   snap_heights[13];  \/* including std height *\/$/;"	m	struct:PS_PrivateRec_
snap_widths	include/freetype/freetype/t1tables.h	/^    FT_Short   snap_widths [13];  \/* including std width  *\/$/;"	m	struct:PS_PrivateRec_
snprintf	src/breakpad/processor/logging.cc	49;"	d	file:
snprintf	src/breakpad/processor/minidump.cc	49;"	d	file:
socket	src/client/client.h	/^    ClientSocket *socket;$/;"	m	class:Client
socket	src/server/serverplayer.h	/^    ClientSocket *socket;$/;"	m	class:ServerPlayer
socket	src/util/detector.h	/^    QUdpSocket *socket;$/;"	m	class:UdpDetector
socket	src/util/nativesocket.h	/^    QTcpSocket * const socket;$/;"	m	class:NativeClientSocket
socket.sinkt["http-chunked"] 	lua/lib/socket/http.lua	/^socket.sinkt["http-chunked"] = function(sock)$/;"	f
socket.sourcet["http-chunked"] 	lua/lib/socket/http.lua	/^socket.sourcet["http-chunked"] = function(sock, headers)$/;"	f
sort	src/lua/ltablib.c	/^static int sort (lua_State *L) {$/;"	f	file:
sortCards	src/ui/dashboard.cpp	/^void Dashboard::sortCards(bool doAnimation){$/;"	f	class:Dashboard
sort_comp	src/lua/ltablib.c	/^static int sort_comp (lua_State *L, int a, int b) {$/;"	f	file:
sound	include/fmod/fmod_memoryinfo.h	/^    unsigned int sound;                          \/* [out] Sound objects and internals *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
sound	src/core/audio.cpp	/^    FMOD_SOUND *sound;$/;"	m	class:Sound	file:
soundbankclass	include/fmod/fmod_memoryinfo.h	/^    unsigned int soundbankclass;                 \/* [out] Objects used to manage wave banks *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
soundbanklist	include/fmod/fmod_memoryinfo.h	/^    unsigned int soundbanklist;                  \/* [out] Data used to manage lists of wave bank usage *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
soundcreate	include/fmod/fmod_codec.h	/^    FMOD_CODEC_SOUNDCREATECALLBACK  soundcreate;     \/* [in] Sound creation callback for the codec when FMOD finishes creating the sound.  (So the codec can set more parameters for the related created sound, ie loop points\/mode or 3D attributes etc). *\/$/;"	m	struct:FMOD_CODEC_DESCRIPTION
sounddefclass	include/fmod/fmod_memoryinfo.h	/^    unsigned int sounddefclass;                  \/* [out] Sound definition objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
sounddefdefclass	include/fmod/fmod_memoryinfo.h	/^    unsigned int sounddefdefclass;               \/* [out] Sound definition static data objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
sounddefpool	include/fmod/fmod_memoryinfo.h	/^    unsigned int sounddefpool;                   \/* [out] Sound definition pool data *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
soundgroup	include/fmod/fmod_memoryinfo.h	/^    unsigned int soundgroup;                     \/* [out] SoundGroup objects and internals *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
source	include/freetype/freetype/ftimage.h	/^    const void*             source;$/;"	m	struct:FT_Raster_Params_
source	src/lua/llex.h	/^  TString *source;  \/* current source name *\/$/;"	m	struct:LexState
source	src/lua/lobject.h	/^  TString  *source;$/;"	m	struct:Proto
source	src/lua/lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug
source.cat	lua/lib/ltn12.lua	/^function source.cat(...)$/;"	f
source.chain	lua/lib/ltn12.lua	/^function source.chain(src, f)$/;"	f
source.empty	lua/lib/ltn12.lua	/^function source.empty()$/;"	f
source.error	lua/lib/ltn12.lua	/^function source.error(err)$/;"	f
source.file	lua/lib/ltn12.lua	/^function source.file(handle, io_err)$/;"	f
source.rewind	lua/lib/ltn12.lua	/^function source.rewind(src)$/;"	f
source.simplify	lua/lib/ltn12.lua	/^function source.simplify(src)$/;"	f
source.string	lua/lib/ltn12.lua	/^function source.string(s)$/;"	f
source_file_id	src/breakpad/processor/source_line_resolver_base_types.h	/^  int32_t source_file_id;$/;"	m	struct:google_breakpad::SourceLineResolverBase::Line
source_file_name	src/breakpad/google_breakpad/processor/stack_frame.h	/^  string source_file_name;$/;"	m	struct:google_breakpad::StackFrame
source_line	src/breakpad/google_breakpad/processor/stack_frame.h	/^  int source_line;$/;"	m	struct:google_breakpad::StackFrame
source_line_base	src/breakpad/google_breakpad/processor/stack_frame.h	/^  u_int64_t source_line_base;$/;"	m	struct:google_breakpad::StackFrame
sources	src/core/skill.h	/^    QStringList sources;$/;"	m	class:Skill
sourcet["by-length"] 	lua/lib/socket.lua	/^sourcet["by-length"] = function(sock, length)$/;"	f
sourcet["until-closed"] 	lua/lib/socket.lua	/^sourcet["until-closed"] = function(sock)$/;"	f
sp	src/breakpad/processor/cfi_frame_info_unittest.cc	/^    u_int64_t r0, r1, r2, r3, r4, sp, pc;$/;"	m	struct:SimpleCFIWalkerFixture::RawContext	file:
speak	lua/ai/chat-ai.lua	/^function speak(to,type)$/;"	f
speak	src/client/client.cpp	/^void Client::speak(const QString &speak_data){$/;"	f	class:Client
speak	src/ui/photo.cpp	/^void Photo::speak(const QString &content)$/;"	f	class:Photo
speak	src/ui/roomscene.cpp	/^void RoomScene::speak(){$/;"	f	class:RoomScene
speak	src/ui/roomscene.cpp	/^void SpeakThread::speak(const QString &text){$/;"	f	class:SpeakThread
speakCommand	src/server/room.cpp	/^void Room::speakCommand(ServerPlayer *player, const QString &arg){$/;"	f	class:Room
speakToServer	src/client/client.cpp	/^void Client::speakToServer(const QString &text){$/;"	f	class:Client
speakTrigger	lua/ai/chat-ai.lua	/^function speakTrigger(card,from,to,event)$/;"	f
speakermap	include/fmod/fmod.h	/^    FMOD_SPEAKERMAPTYPE            speakermap;         \/* [w] Optional. Specify 0 to ignore. Use this to differ the way fmod maps multichannel sounds to speakers.  See FMOD_SPEAKERMAPTYPE for more. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
speakermask	include/fmod/fmod_dsp.h	/^	unsigned short speakermask;	  \/* [w] Specifies which speakers the DSP effect is active on *\/$/;"	m	struct:FMOD_DSP_STATE
spec.on_trigger	lua/sgs_ex.lua	/^	function spec.on_trigger(skill, event, player, data)$/;"	f
speed	src/ui/roomscene.h	/^    qreal speed;$/;"	m	class:ReplayerControlBar
speed	src/util/recorder.h	/^    qreal speed;$/;"	m	class:Replayer
speedUp	src/util/recorder.cpp	/^void Replayer::speedUp(){$/;"	f	class:Replayer
sput	lua/lib/socket/ftp.lua	/^local function sput(u, body)$/;"	f
sqlite3.open	lua/lib/sqlite3.lua	/^function sqlite3.open(filename)$/;"	f
sqlite3.open_memory	lua/lib/sqlite3.lua	/^function sqlite3.open_memory()$/;"	f
src_end	src/lua/lstrlib.c	/^  const char *src_end;  \/* end (`\\0') of source string *\/$/;"	m	struct:MatchState	file:
src_init	src/lua/lstrlib.c	/^  const char *src_init;  \/* init of source string *\/$/;"	m	struct:MatchState	file:
srequest	lua/lib/socket/http.lua	/^local function srequest(u, b)$/;"	f
srr0	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int32_t             srr0;    \/* Machine status save\/restore: stores pc$/;"	m	struct:__anon11
srr0	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	/^  u_int64_t             srr0;    \/* Machine status save\/restore: stores pc$/;"	m	struct:__anon8
srr1	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int32_t             srr1;    \/* Machine status save\/restore: stores msr$/;"	m	struct:__anon11
srr1	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	/^  u_int64_t             srr1;    \/* Machine status save\/restore: stores msr$/;"	m	struct:__anon8
ss	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int16_t  ss;$/;"	m	struct:__anon56
ss	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t             ss;$/;"	m	struct:__anon7
sse_registers	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^    } sse_registers;$/;"	m	union:__anon56::__anon57	typeref:struct:__anon56::__anon57::__anon58
ssize_t	src/breakpad/processor/minidump.cc	/^typedef SSIZE_T ssize_t;$/;"	t	file:
stack	include/freetype/freetype/internal/psaux.h	/^    FT_Long              stack[T1_MAX_CHARSTRINGS_OPERANDS];$/;"	m	struct:T1_DecoderRec_
stack	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDMemoryDescriptor   stack;$/;"	m	struct:__anon24
stack	src/lua/lstate.h	/^  StkId stack;  \/* stack base *\/$/;"	m	struct:lua_State
stack_	src/breakpad/processor/postfix_evaluator-inl.h	/^  vector<string> *stack_;$/;"	m	class:google_breakpad::AutoStackClearer
stack_	src/breakpad/processor/postfix_evaluator.h	/^  vector<string> stack_;$/;"	m	class:google_breakpad::PostfixEvaluator
stack_init	src/lua/lstate.c	/^static void stack_init (lua_State *L1, lua_State *L) {$/;"	f	file:
stack_last	src/lua/lstate.h	/^  StkId stack_last;  \/* last free slot in the stack *\/$/;"	m	struct:lua_State
stack_region	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  MockMemoryRegion stack_region;$/;"	m	class:StackwalkerAMD64Fixture	file:
stack_region	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  MockMemoryRegion stack_region;$/;"	m	class:StackwalkerARMFixture	file:
stack_region	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  MockMemoryRegion stack_region;$/;"	m	class:StackwalkerX86Fixture	file:
stack_section	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  Section stack_section;$/;"	m	class:StackwalkerAMD64Fixture	file:
stack_section	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  Section stack_section;$/;"	m	class:StackwalkerARMFixture	file:
stack_section	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  Section stack_section;$/;"	m	class:StackwalkerX86Fixture	file:
stacksize	src/lua/lstate.h	/^  int stacksize;$/;"	m	struct:lua_State
standard	include/freetype/freetype/internal/psaux.h	/^    FT_CMap_Class  standard;$/;"	m	struct:T1_CMap_ClassesRec_
standard_3v3_radiobutton	src/server/server.h	/^    QRadioButton *standard_3v3_radiobutton;$/;"	m	class:ServerDialog
standard_height	include/freetype/freetype/t1tables.h	/^    FT_UShort  standard_height[1];$/;"	m	struct:PS_PrivateRec_
standard_width	include/freetype/freetype/t1tables.h	/^    FT_UShort  standard_width[1];$/;"	m	struct:PS_PrivateRec_
start	include/freetype/freetype/internal/psaux.h	/^    FT_Byte*      start;   \/* first character of token in input stream *\/$/;"	m	struct:T1_TokenRec_
start	src/ui/indicatoritem.h	/^    QPointF start, finish, real_finish;$/;"	m	class:IndicatorItem
start	src/ui/pixmapanimation.cpp	/^void PixmapAnimation::start(bool permanent,int interval)$/;"	f	class:PixmapAnimation
start	src/ui/sprite.cpp	/^void Sprite::start(int loops)$/;"	f	class:Sprite
startArrange	src/client/client.cpp	/^void Client::startArrange(const QString &){$/;"	f	class:Client
startArrange	src/server/roomthread1v1.cpp	/^void RoomThread1v1::startArrange(ServerPlayer *player){$/;"	f	class:RoomThread1v1
startArrange	src/server/roomthread3v3.cpp	/^void RoomThread3v3::startArrange(ServerPlayer *player){$/;"	f	class:RoomThread3v3
startArrange	src/ui/roomscene.cpp	/^void RoomScene::startArrange(){$/;"	f	class:RoomScene
startAssign	src/dialog/roleassigndialog.cpp	/^void RoomScene::startAssign(){$/;"	f	class:RoomScene
startChoose	src/ui/cardcontainer.cpp	/^void CardContainer::startChoose(){$/;"	f	class:CardContainer
startConnection	src/dialog/mainwindow.cpp	/^void MainWindow::startConnection(){$/;"	f	class:MainWindow
startDeadJudge	src/scenario/boss-mode-scenario.cpp	/^    void startDeadJudge(ServerPlayer *lord) const{$/;"	f	class:ImpasseRule
startDetection	src/dialog/connectiondialog.cpp	/^void UdpDetectorDialog::startDetection(){$/;"	f	class:UdpDetectorDialog
startGame	src/client/client.cpp	/^void Client::startGame(const QString &){$/;"	f	class:Client
startGame	src/server/room.cpp	/^void Room::startGame(){$/;"	f	class:Room
startGameInAnotherInstance	src/dialog/mainwindow.cpp	/^void MainWindow::startGameInAnotherInstance(){$/;"	f	class:MainWindow
startGeneralSelection	src/ui/roomscene.cpp	/^void RoomScene::startGeneralSelection(){$/;"	f	class:RoomScene
startGongxin	src/ui/cardcontainer.cpp	/^void CardContainer::startGongxin(){$/;"	f	class:CardContainer
startHuaShen	src/ui/GenericCardContainerUI.cpp	/^ void PlayerCardContainer::startHuaShen(QString generalName, QString skillName)$/;"	f	class:PlayerCardContainer
startInXs	src/client/client.cpp	/^void Client::startInXs(const QString &left_seconds){$/;"	f	class:Client
startInXs	src/ui/roomscene.cpp	/^void RoomScene::startInXs(){$/;"	f	class:RoomScene
startNetworkDelayTest	src/server/serverplayer.cpp	/^void ServerPlayer::startNetworkDelayTest(){$/;"	f	class:ServerPlayer
startPending	src/ui/dashboard.cpp	/^void Dashboard::startPending(const ViewAsSkill *skill){$/;"	f	class:Dashboard
startRecord	src/server/serverplayer.cpp	/^void ServerPlayer::startRecord(){$/;"	f	class:ServerPlayer
start_	src/jsoncpp/include/json/reader.h	/^         Location start_;$/;"	m	class:Json::Reader::Token
start_capture	src/lua/lstrlib.c	/^static const char *start_capture (MatchState *ms, const char *s,$/;"	f	file:
start_glyph	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort               start_glyph;$/;"	m	struct:TT_SBit_StrikeRec_
start_of_memory_range	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int64_t            start_of_memory_range;$/;"	m	struct:__anon18
start_point	include/freetype/freetype/internal/psaux.h	/^    T1_Builder_Start_Point_Func    start_point;$/;"	m	struct:T1_Builder_FuncsRec_
start_time_	src/breakpad/client/windows/crash_generation/client_info.h	/^  FILETIME start_time_;$/;"	m	class:google_breakpad::ClientInfo
start_x	src/ui/cardcontainer.h	/^    static const int start_x = 76;$/;"	m	class:GuanxingBox
start_y1	src/ui/cardcontainer.h	/^    static const int start_y1 = 105;$/;"	m	class:GuanxingBox
start_y2	src/ui/cardcontainer.h	/^    static const int start_y2 = 249;$/;"	m	class:GuanxingBox
starter	src/dialog/customassigndialog.h	/^    QString starter;$/;"	m	class:CustomAssignDialog
starter_box	src/dialog/customassigndialog.h	/^    QCheckBox  *starter_box;$/;"	m	class:CustomAssignDialog
startpc	src/lua/lobject.h	/^  int startpc;  \/* first point where variable is active *\/$/;"	m	struct:LocVar
state	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t state;                  \/* MDMemoryState *\/$/;"	m	struct:__anon45
state	src/core/player.h	/^    QString state;$/;"	m	class:Player
state_size	src/lua/lstate.c	27;"	d	file:
statement	src/lua/lparser.c	/^static int statement (LexState *ls) {$/;"	f	file:
statnames	src/lua/lbaselib.c	/^static const char *const statnames[] =$/;"	v	file:
status	src/client/client.h	/^    Status status;  $/;"	m	class:Client
status	src/lua/ldo.c	/^  volatile int status;  \/* error code *\/$/;"	m	struct:lua_longjmp	file:
status	src/lua/ldump.c	/^ int status;$/;"	m	struct:__anon87	file:
status	src/lua/lstate.h	/^  lu_byte status;$/;"	m	struct:lua_State
status_word	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int16_t  status_word;$/;"	m	struct:__anon55
status_word	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t status_word;$/;"	m	struct:__anon6
stay	src/ui/sprite.h	/^    bool stay;$/;"	m	class:QAnimatedEffect
std_map	src/breakpad/processor/static_map_unittest.cc	/^  StdMap std_map[kNumberTestCases];$/;"	m	class:TestValidMap	file:
std_map_	src/breakpad/processor/map_serializers_unittest.cc	/^  std::map<AddrType, EntryType> std_map_;$/;"	m	class:TestStdMapSerializer	file:
std_map_serializer_	src/breakpad/processor/map_serializers.h	/^  StdMapSerializer<Addr, Entry> std_map_serializer_;$/;"	m	class:google_breakpad::AddressMapSerializer
stem	include/freetype/freetype/internal/pshints.h	/^    T1_Hints_SetStemFunc   stem;$/;"	m	struct:T1_Hints_FuncsRec_
stem3	include/freetype/freetype/internal/pshints.h	/^    T1_Hints_SetStem3Func  stem3;$/;"	m	struct:T1_Hints_FuncsRec_
stems	include/freetype/freetype/internal/pshints.h	/^    T2_Hints_StemsFunc    stems;$/;"	m	struct:T2_Hints_FuncsRec_
stmt_class.bind	lua/lib/sqlite3.lua	/^function stmt_class.bind(stmt, ...)$/;"	f
stmt_class.close	lua/lib/sqlite3.lua	/^function stmt_class.close(stmt)$/;"	f
stmt_class.cols	lua/lib/sqlite3.lua	/^function stmt_class.cols(stmt, autoclose)$/;"	f
stmt_class.column_count	lua/lib/sqlite3.lua	/^function stmt_class.column_count(stmt)$/;"	f
stmt_class.column_decltypes	lua/lib/sqlite3.lua	/^function stmt_class.column_decltypes(stmt)$/;"	f
stmt_class.column_names	lua/lib/sqlite3.lua	/^function stmt_class.column_names(stmt)$/;"	f
stmt_class.exec	lua/lib/sqlite3.lua	/^function stmt_class.exec(stmt)$/;"	f
stmt_class.first_cols	lua/lib/sqlite3.lua	/^function stmt_class.first_cols(stmt, autoclose)$/;"	f
stmt_class.first_irow	lua/lib/sqlite3.lua	/^function stmt_class.first_irow(stmt, tab, autoclose)$/;"	f
stmt_class.first_row	lua/lib/sqlite3.lua	/^function stmt_class.first_row(stmt, tab, autoclose)$/;"	f
stmt_class.irows	lua/lib/sqlite3.lua	/^function stmt_class.irows(stmt, tab, autoclose)$/;"	f
stmt_class.parameter_names	lua/lib/sqlite3.lua	/^function stmt_class.parameter_names(stmt)$/;"	f
stmt_class.reset	lua/lib/sqlite3.lua	/^function stmt_class.reset(stmt)$/;"	f
stmt_class.rows	lua/lib/sqlite3.lua	/^function stmt_class.rows(stmt, tab, autoclose)$/;"	f
stmt_column_info	lua/lib/sqlite3.lua	/^local function stmt_column_info(stmt, info_func)$/;"	f
stmt_rows	lua/lib/sqlite3.lua	/^local function stmt_rows(stmt, get_row_func, tab, autoclose)$/;"	f
stock_version_info	src/breakpad/processor/synth_minidump.cc	/^const MDVSFixedFileInfo Module::stock_version_info = {$/;"	m	class:google_breakpad::SynthMinidump::Module	file:
stock_version_info	src/breakpad/processor/synth_minidump.h	/^  static const MDVSFixedFileInfo stock_version_info;$/;"	m	class:google_breakpad::SynthMinidump::Module
stop	src/core/audio.cpp	/^void Audio::stop(){$/;"	f	class:Audio
stop	src/ui/pixmapanimation.cpp	/^void PixmapAnimation::stop()$/;"	f	class:PixmapAnimation
stop	src/util/detector.cpp	/^void UdpDetector::stop(){$/;"	f	class:UdpDetector
stopBGM	src/core/audio.cpp	/^void Audio::stopBGM(){$/;"	f	class:Audio
stopDetection	src/dialog/connectiondialog.cpp	/^void UdpDetectorDialog::stopDetection(){$/;"	f	class:UdpDetectorDialog
stopHuaShen	src/ui/GenericCardContainerUI.cpp	/^ void PlayerCardContainer::stopHuaShen()$/;"	f	class:PlayerCardContainer
stopPending	src/ui/dashboard.cpp	/^void Dashboard::stopPending(){$/;"	f	class:Dashboard
storageOffset	include/freetype/freetype/internal/tttypes.h	/^    FT_UInt           storageOffset;$/;"	m	struct:TT_NameTableRec_
str	src/breakpad/processor/binarystream.h	/^  string str() const { return stream_.str(); }$/;"	f	class:google_breakpad::binarystream
str	src/breakpad/processor/binarystream.h	/^  void str(const string &s) { stream_.str(s); }$/;"	f	class:google_breakpad::binarystream
str	swig/sanguosha_wrap.cxx	/^  const char             *str;			\/* human readable name of this type *\/$/;"	m	struct:swig_type_info	file:
str_	src/jsoncpp/include/json/value.h	/^      const char *str_;$/;"	m	class:Json::StaticString
str_byte	src/lua/lstrlib.c	/^static int str_byte (lua_State *L) {$/;"	f	file:
str_char	src/lua/lstrlib.c	/^static int str_char (lua_State *L) {$/;"	f	file:
str_checkname	src/lua/lparser.c	/^static TString *str_checkname (LexState *ls) {$/;"	f	file:
str_dump	src/lua/lstrlib.c	/^static int str_dump (lua_State *L) {$/;"	f	file:
str_find	src/lua/lstrlib.c	/^static int str_find (lua_State *L) {$/;"	f	file:
str_find_aux	src/lua/lstrlib.c	/^static int str_find_aux (lua_State *L, int find) {$/;"	f	file:
str_format	src/lua/lstrlib.c	/^static int str_format (lua_State *L) {$/;"	f	file:
str_gsub	src/lua/lstrlib.c	/^static int str_gsub (lua_State *L) {$/;"	f	file:
str_len	src/lua/lstrlib.c	/^static int str_len (lua_State *L) {$/;"	f	file:
str_lower	src/lua/lstrlib.c	/^static int str_lower (lua_State *L) {$/;"	f	file:
str_match	src/lua/lstrlib.c	/^static int str_match (lua_State *L) {$/;"	f	file:
str_rep	src/lua/lstrlib.c	/^static int str_rep (lua_State *L) {$/;"	f	file:
str_reverse	src/lua/lstrlib.c	/^static int str_reverse (lua_State *L) {$/;"	f	file:
str_sub	src/lua/lstrlib.c	/^static int str_sub (lua_State *L) {$/;"	f	file:
str_upper	src/lua/lstrlib.c	/^static int str_upper (lua_State *L) {$/;"	f	file:
stream	include/freetype/freetype/freetype.h	/^    FT_Stream         stream;$/;"	m	struct:FT_FaceRec_
stream	include/freetype/freetype/freetype.h	/^    FT_Stream       stream;$/;"	m	struct:FT_Open_Args_
stream	include/freetype/freetype/internal/ftstream.h	/^  FT_Stream_Close( FT_Stream  stream );$/;"	v
stream	include/freetype/freetype/internal/ftstream.h	/^  FT_Stream_ExitFrame( FT_Stream  stream );$/;"	v
stream	include/freetype/freetype/internal/ftstream.h	/^  FT_Stream_GetChar( FT_Stream  stream );$/;"	v
stream	include/freetype/freetype/internal/ftstream.h	/^  FT_Stream_GetULong( FT_Stream  stream );$/;"	v
stream	include/freetype/freetype/internal/ftstream.h	/^  FT_Stream_GetULongLE( FT_Stream  stream );$/;"	v
stream	include/freetype/freetype/internal/ftstream.h	/^  FT_Stream_GetUOffset( FT_Stream  stream );$/;"	v
stream	include/freetype/freetype/internal/ftstream.h	/^  FT_Stream_GetUShort( FT_Stream  stream );$/;"	v
stream	include/freetype/freetype/internal/ftstream.h	/^  FT_Stream_GetUShortLE( FT_Stream  stream );$/;"	v
stream	include/freetype/freetype/internal/ftstream.h	/^  FT_Stream_Pos( FT_Stream  stream );$/;"	v
stream	include/freetype/freetype/internal/psaux.h	/^    AFM_Stream    stream;$/;"	m	struct:AFM_ParserRec_
stream	include/freetype/freetype/internal/tttypes.h	/^    FT_Stream         stream;$/;"	m	struct:TT_NameTableRec_
stream	include/freetype/freetype/internal/tttypes.h	/^    FT_Stream        stream;$/;"	m	struct:TT_LoaderRec_
stream	src/breakpad/google_breakpad/processor/minidump.h	/^    MinidumpStream* stream;$/;"	m	struct:google_breakpad::Minidump::MinidumpStreamInfo
stream	src/breakpad/processor/binarystream_unittest.cc	/^  binarystream stream;$/;"	m	class:__anon72::BinaryStreamBasicTest	file:
stream	src/breakpad/processor/binarystream_unittest.cc	/^  binarystream stream;$/;"	m	class:__anon72::BinaryStreamU8Test	file:
stream_	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^  std::vector<char> stream_;$/;"	m	class:__anon67::HandleTraceData	file:
stream_	src/breakpad/google_breakpad/processor/minidump.h	/^  std::istream*             stream_;$/;"	m	class:google_breakpad::Minidump
stream_	src/breakpad/processor/binarystream.h	/^  std::stringstream stream_;$/;"	m	class:google_breakpad::binarystream
stream_	src/breakpad/processor/logging.h	/^  std::ostream &stream_;$/;"	m	class:google_breakpad::LogStream
stream_count	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t stream_count;$/;"	m	struct:__anon19
stream_count_	src/breakpad/processor/synth_minidump.h	/^  size_t stream_count_;                 \/\/ The number of streams so far.$/;"	m	class:google_breakpad::SynthMinidump::Dump
stream_count_label_	src/breakpad/processor/synth_minidump.h	/^  Label stream_count_label_;            \/\/ Cited in file header.$/;"	m	class:google_breakpad::SynthMinidump::Dump
stream_directory_	src/breakpad/processor/synth_minidump.h	/^  SynthMinidump::Section stream_directory_; \/\/ The directory's contents.$/;"	m	class:google_breakpad::SynthMinidump::Dump
stream_directory_rva	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDRVA     stream_directory_rva;  \/* A |stream_count|-sized array of$/;"	m	struct:__anon19
stream_directory_rva_	src/breakpad/processor/synth_minidump.h	/^  Label stream_directory_rva_;          \/\/ The directory's file offset.$/;"	m	class:google_breakpad::SynthMinidump::Dump
stream_index	src/breakpad/google_breakpad/processor/minidump.h	/^    unsigned int    stream_index;$/;"	m	struct:google_breakpad::Minidump::MinidumpStreamInfo
stream_map_	src/breakpad/google_breakpad/processor/minidump.h	/^  MinidumpStreamMap*        stream_map_;$/;"	m	class:google_breakpad::Minidump
stream_type	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t            stream_type;$/;"	m	struct:__anon21
streambuffer	include/fmod/fmod_memoryinfo.h	/^    unsigned int streambuffer;                   \/* [out] Stream buffer memory *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
streaminstance	include/fmod/fmod_memoryinfo.h	/^    unsigned int streaminstance;                 \/* [out] Stream objects and internals *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
strictMode	src/jsoncpp/src/json_reader.cpp	/^Features::strictMode()$/;"	f	class:Json::Features
strictRoot_	src/jsoncpp/include/json/features.h	/^      bool strictRoot_;$/;"	m	class:Json::Features
strid	include/freetype/freetype/ftmm.h	/^    FT_UInt     strid;$/;"	m	struct:FT_Var_Axis_
strid	include/freetype/freetype/ftmm.h	/^    FT_UInt    strid;$/;"	m	struct:FT_Var_Named_Style_
strike_out	include/freetype/freetype/ftwinfnt.h	/^    FT_Byte    strike_out;$/;"	m	struct:FT_WinFNT_HeaderRec_
string	include/fmod/fmod_memoryinfo.h	/^    unsigned int string;                         \/* [out] String data *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
string	include/freetype/freetype/ftsnames.h	/^    FT_Byte*   string;      \/* this string is *not* null-terminated! *\/$/;"	m	struct:FT_SfntName_
string	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*   string;$/;"	m	struct:TT_NameEntryRec_
string:matchOne	lua/sgs_ex.lua	/^function string:matchOne(option)$/;"	f
string:split	lua/sgs_ex.lua	/^function string:split(delimiter)$/;"	f
stringLength	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort  stringLength;$/;"	m	struct:TT_NameEntryRec_
stringOffset	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong   stringOffset;$/;"	m	struct:TT_NameEntryRec_
stringValue	src/jsoncpp/include/json/value.h	/^      stringValue,   \/\/\/< UTF-8 string value$/;"	e	enum:Json::ValueType
string_	src/jsoncpp/include/json/value.h	/^         char *string_;$/;"	m	union:Json::Value::ValueHolder
string_len	include/freetype/freetype/ftsnames.h	/^    FT_UInt    string_len;  \/* in bytes *\/$/;"	m	struct:FT_SfntName_
stringmark	src/lua/lgc.c	40;"	d	file:
strings	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*   strings;$/;"	m	struct:TT_BDFRec_
strings_size	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong   strings_size;$/;"	m	struct:TT_BDFRec_
stringtable	src/lua/lstate.h	/^typedef struct stringtable {$/;"	s
stringtable	src/lua/lstate.h	/^} stringtable;$/;"	t	typeref:struct:stringtable
strip	src/lua/ldump.c	/^ int strip;$/;"	m	struct:__anon87	file:
strlib	src/lua/lstrlib.c	/^static const luaL_Reg strlib[] = {$/;"	v	file:
stroke_width	include/freetype/freetype/internal/t1types.h	/^    FT_Fixed         stroke_width;$/;"	m	struct:T1_FontRec_
stroke_width	include/freetype/freetype/t1tables.h	/^    FT_Pos         stroke_width;$/;"	m	struct:CID_FaceDictRec_
stroker	include/freetype/freetype/ftstroke.h	/^  FT_Stroker_Done( FT_Stroker  stroker );$/;"	v
stroker	include/freetype/freetype/ftstroke.h	/^  FT_Stroker_EndSubPath( FT_Stroker  stroker );$/;"	v
stroker	include/freetype/freetype/ftstroke.h	/^  FT_Stroker_Rewind( FT_Stroker  stroker );$/;"	v
strt	src/lua/lstate.h	/^  stringtable strt;  \/* hash table for strings *\/$/;"	m	struct:global_State
struct_version	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t struct_version;$/;"	m	struct:__anon16
stuff	lua/lib/mime.lua	/^function stuff()$/;"	f
style_flags	include/freetype/freetype/freetype.h	/^    FT_Long           style_flags;$/;"	m	struct:FT_FaceRec_
style_name	include/freetype/freetype/freetype.h	/^    FT_String*        style_name;$/;"	m	struct:FT_FaceRec_
subcardString	src/core/card.cpp	/^QString Card::subcardString() const{$/;"	f	class:Card
subcards	src/core/card.h	/^    QList<int> subcards;$/;"	m	class:Card
subcardsLength	src/core/card.cpp	/^int Card::subcardsLength() const{$/;"	f	class:Card
subclassOf	lua/lib/middleclass.lua	/^function subclassOf(other, aClass)$/;"	f
subexpr	src/lua/lparser.c	/^static BinOpr subexpr (LexState *ls, expdesc *v, unsigned int limit) {$/;"	f	file:
subglyphs	include/freetype/freetype/freetype.h	/^    FT_SubGlyph       subglyphs;$/;"	m	struct:FT_GlyphSlotRec_
subglyphs	include/freetype/freetype/internal/ftgloadr.h	/^    FT_SubGlyph  subglyphs;     \/* subglyphs                 *\/$/;"	m	struct:FT_GlyphLoadRec_
subrmap_offset	include/freetype/freetype/t1tables.h	/^    FT_ULong       subrmap_offset;$/;"	m	struct:CID_FaceDictRec_
subrs	include/freetype/freetype/internal/psaux.h	/^    FT_Byte**            subrs;$/;"	m	struct:T1_DecoderRec_
subrs	include/freetype/freetype/internal/t1types.h	/^    CID_Subrs        subrs;$/;"	m	struct:CID_FaceRec_
subrs	include/freetype/freetype/internal/t1types.h	/^    FT_Byte**        subrs;$/;"	m	struct:T1_FontRec_
subrs_block	include/freetype/freetype/internal/t1types.h	/^    FT_Byte*         subrs_block;$/;"	m	struct:T1_FontRec_
subrs_len	include/freetype/freetype/internal/psaux.h	/^    FT_PtrDist*          subrs_len;    \/* array of subrs length (optional) *\/$/;"	m	struct:T1_DecoderRec_
subrs_len	include/freetype/freetype/internal/t1types.h	/^    FT_PtrDist*      subrs_len;$/;"	m	struct:T1_FontRec_
suggestedsoundtype	include/fmod/fmod.h	/^    FMOD_SOUND_TYPE                suggestedsoundtype; \/* [w] Optional. Specify 0 or FMOD_SOUND_TYPE_UNKNOWN to ignore.  Instead of scanning all codec types, use this to speed up loading by making it jump straight to this codec. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
suite_mask	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int16_t        suite_mask;       \/* Windows: VER_SUITE_* from WinNT.h *\/$/;"	m	struct:__anon39
supplement	include/freetype/freetype/t1tables.h	/^    FT_Int          supplement;$/;"	m	struct:CID_FaceInfoRec_
supplier	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  MockSymbolSupplier supplier;$/;"	m	class:StackwalkerAMD64Fixture	file:
supplier	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  MockSymbolSupplier supplier;$/;"	m	class:StackwalkerARMFixture	file:
supplier	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  MockSymbolSupplier supplier;$/;"	m	class:StackwalkerX86Fixture	file:
supplier_	src/breakpad/google_breakpad/processor/minidump_processor.h	/^  SymbolSupplier *supplier_;$/;"	m	class:google_breakpad::MinidumpProcessor
supplier_	src/breakpad/google_breakpad/processor/stackwalker.h	/^  SymbolSupplier *supplier_;$/;"	m	class:google_breakpad::Stackwalker
surrender	src/ui/roomscene.cpp	/^void RoomScene::surrender(){$/;"	f	class:RoomScene
suspend_count	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t            suspend_count;$/;"	m	struct:__anon24
svalue	src/lua/lobject.h	211;"	d
swap	src/breakpad/google_breakpad/processor/minidump.h	/^  bool swap() const { return valid_ ? swap_ : false; }$/;"	f	class:google_breakpad::Minidump
swap	src/breakpad/processor/scoped_ptr.h	/^  void swap(scoped_array & b) {$/;"	f	class:google_breakpad::scoped_array
swap	src/breakpad/processor/scoped_ptr.h	/^  void swap(scoped_ptr & b) {$/;"	f	class:google_breakpad::scoped_ptr
swap	src/breakpad/processor/scoped_ptr.h	/^  void swap(scoped_ptr_malloc & b) {$/;"	f	class:google_breakpad::scoped_ptr_malloc
swap	src/breakpad/processor/scoped_ptr.h	/^void swap(scoped_array<T>& a, scoped_array<T>& b) {$/;"	f	namespace:google_breakpad
swap	src/breakpad/processor/scoped_ptr.h	/^void swap(scoped_ptr<T>& a, scoped_ptr<T>& b) {$/;"	f	namespace:google_breakpad
swap	src/breakpad/processor/scoped_ptr.h	/^void swap(scoped_ptr_malloc<T,FP>& a, scoped_ptr_malloc<T,FP>& b) {$/;"	f	namespace:google_breakpad
swap	src/jsoncpp/src/json_value.cpp	/^Value::CZString::swap( CZString &other )$/;"	f	class:Json::Value::CZString
swap	src/jsoncpp/src/json_value.cpp	/^Value::swap( Value &other )$/;"	f	class:Json::Value
swapEquip	src/package/yjcm-package.cpp	/^void GanluCard::swapEquip(ServerPlayer *first, ServerPlayer *second) const{$/;"	f	class:GanluCard
swapPile	src/server/room.cpp	/^void Room::swapPile(){$/;"	f	class:Room
swapSeat	src/server/room.cpp	/^void Room::swapSeat(ServerPlayer *a, ServerPlayer *b){$/;"	f	class:Room
swap_	src/breakpad/google_breakpad/processor/minidump.h	/^  bool                      swap_;$/;"	m	class:google_breakpad::Minidump
swap_pile	src/client/client.h	/^    int swap_pile;$/;"	m	class:Client
sweepgc	src/lua/lstate.h	/^  GCObject **sweepgc;  \/* position of sweep in `rootgc' *\/$/;"	m	struct:global_State
sweeplist	src/lua/lgc.c	/^static GCObject **sweeplist (lua_State *L, GCObject **p, lu_mem count) {$/;"	f	file:
sweepstrgc	src/lua/lstate.h	/^  int sweepstrgc;  \/* position of sweep in `strt' *\/$/;"	m	struct:global_State
sweepwholelist	src/lua/lgc.c	404;"	d	file:
swig	swig/sanguosha_wrap.cxx	/^namespace swig {$/;"	n	file:
swig_AI_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_AI_attributes[] = {$/;"	v	file:
swig_AI_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_AI_base_names[] = {"QObject *",0};$/;"	v	file:
swig_AI_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_AI_bases[] = {0,0};$/;"	v	file:
swig_AI_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_AI_methods[] = {$/;"	v	file:
swig_Armor_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_Armor_attributes[] = {$/;"	v	file:
swig_Armor_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_Armor_base_names[] = {"EquipCard *",0};$/;"	v	file:
swig_Armor_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_Armor_bases[] = {0,0};$/;"	v	file:
swig_Armor_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_Armor_methods[] = {$/;"	v	file:
swig_BasicCard_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_BasicCard_attributes[] = {$/;"	v	file:
swig_BasicCard_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_BasicCard_base_names[] = {"Card *",0};$/;"	v	file:
swig_BasicCard_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_BasicCard_bases[] = {0,0};$/;"	v	file:
swig_BasicCard_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_BasicCard_methods[] = {$/;"	v	file:
swig_CardEffectStruct_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_CardEffectStruct_attributes[] = {$/;"	v	file:
swig_CardEffectStruct_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_CardEffectStruct_base_names[] = {0};$/;"	v	file:
swig_CardEffectStruct_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_CardEffectStruct_bases[] = {0};$/;"	v	file:
swig_CardEffectStruct_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_CardEffectStruct_methods[] = {$/;"	v	file:
swig_CardMoveReason_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_CardMoveReason_attributes[] = {$/;"	v	file:
swig_CardMoveReason_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_CardMoveReason_base_names[] = {0};$/;"	v	file:
swig_CardMoveReason_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_CardMoveReason_bases[] = {0};$/;"	v	file:
swig_CardMoveReason_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_CardMoveReason_methods[] = {$/;"	v	file:
swig_CardUseStruct_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_CardUseStruct_attributes[] = {$/;"	v	file:
swig_CardUseStruct_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_CardUseStruct_base_names[] = {0};$/;"	v	file:
swig_CardUseStruct_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_CardUseStruct_bases[] = {0};$/;"	v	file:
swig_CardUseStruct_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_CardUseStruct_methods[] = {$/;"	v	file:
swig_Card_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_Card_attributes[] = {$/;"	v	file:
swig_Card_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_Card_base_names[] = {"QObject *",0};$/;"	v	file:
swig_Card_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_Card_bases[] = {0,0};$/;"	v	file:
swig_Card_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_Card_methods[] = {$/;"	v	file:
swig_CardsMoveOneTimeStruct_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_CardsMoveOneTimeStruct_attributes[] = {$/;"	v	file:
swig_CardsMoveOneTimeStruct_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_CardsMoveOneTimeStruct_base_names[] = {0};$/;"	v	file:
swig_CardsMoveOneTimeStruct_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_CardsMoveOneTimeStruct_bases[] = {0};$/;"	v	file:
swig_CardsMoveOneTimeStruct_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_CardsMoveOneTimeStruct_methods[] = {$/;"	v	file:
swig_CardsMoveStruct_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_CardsMoveStruct_attributes[] = {$/;"	v	file:
swig_CardsMoveStruct_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_CardsMoveStruct_base_names[] = {0};$/;"	v	file:
swig_CardsMoveStruct_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_CardsMoveStruct_bases[] = {0};$/;"	v	file:
swig_CardsMoveStruct_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_CardsMoveStruct_methods[] = {$/;"	v	file:
swig_ClientPlayer_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_ClientPlayer_attributes[] = {$/;"	v	file:
swig_ClientPlayer_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_ClientPlayer_base_names[] = {"Player *",0};$/;"	v	file:
swig_ClientPlayer_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_ClientPlayer_bases[] = {0,0};$/;"	v	file:
swig_ClientPlayer_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_ClientPlayer_methods[] = {$/;"	v	file:
swig_DamageStruct_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_DamageStruct_attributes[] = {$/;"	v	file:
swig_DamageStruct_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_DamageStruct_base_names[] = {0};$/;"	v	file:
swig_DamageStruct_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_DamageStruct_bases[] = {0};$/;"	v	file:
swig_DamageStruct_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_DamageStruct_methods[] = {$/;"	v	file:
swig_DefensiveHorse_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_DefensiveHorse_attributes[] = {$/;"	v	file:
swig_DefensiveHorse_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_DefensiveHorse_base_names[] = {"Horse *",0};$/;"	v	file:
swig_DefensiveHorse_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_DefensiveHorse_bases[] = {0,0};$/;"	v	file:
swig_DefensiveHorse_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_DefensiveHorse_methods[] = {$/;"	v	file:
swig_DelayedTrick_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_DelayedTrick_attributes[] = {$/;"	v	file:
swig_DelayedTrick_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_DelayedTrick_base_names[] = {"TrickCard *",0};$/;"	v	file:
swig_DelayedTrick_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_DelayedTrick_bases[] = {0,0};$/;"	v	file:
swig_DelayedTrick_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_DelayedTrick_methods[] = {$/;"	v	file:
swig_DistanceSkill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_DistanceSkill_attributes[] = {$/;"	v	file:
swig_DistanceSkill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_DistanceSkill_base_names[] = {"Skill *",0};$/;"	v	file:
swig_DistanceSkill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_DistanceSkill_bases[] = {0,0};$/;"	v	file:
swig_DistanceSkill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_DistanceSkill_methods[] = {$/;"	v	file:
swig_DummyCard_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_DummyCard_attributes[] = {$/;"	v	file:
swig_DummyCard_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_DummyCard_base_names[] = {"Card *",0};$/;"	v	file:
swig_DummyCard_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_DummyCard_bases[] = {0,0};$/;"	v	file:
swig_DummyCard_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_DummyCard_methods[] = {$/;"	v	file:
swig_DyingStruct_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_DyingStruct_attributes[] = {$/;"	v	file:
swig_DyingStruct_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_DyingStruct_base_names[] = {0};$/;"	v	file:
swig_DyingStruct_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_DyingStruct_bases[] = {0};$/;"	v	file:
swig_DyingStruct_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_DyingStruct_methods[] = {$/;"	v	file:
swig_Engine_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_Engine_attributes[] = {$/;"	v	file:
swig_Engine_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_Engine_base_names[] = {"QObject *",0};$/;"	v	file:
swig_Engine_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_Engine_bases[] = {0,0};$/;"	v	file:
swig_Engine_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_Engine_methods[] = {$/;"	v	file:
swig_EquipCard_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_EquipCard_attributes[] = {$/;"	v	file:
swig_EquipCard_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_EquipCard_base_names[] = {"Card *",0};$/;"	v	file:
swig_EquipCard_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_EquipCard_bases[] = {0,0};$/;"	v	file:
swig_EquipCard_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_EquipCard_methods[] = {$/;"	v	file:
swig_FilterSkill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_FilterSkill_attributes[] = {$/;"	v	file:
swig_FilterSkill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_FilterSkill_base_names[] = {"OneCardViewAsSkill *",0};$/;"	v	file:
swig_FilterSkill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_FilterSkill_bases[] = {0,0};$/;"	v	file:
swig_FilterSkill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_FilterSkill_methods[] = {$/;"	v	file:
swig_GameStartSkill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_GameStartSkill_attributes[] = {$/;"	v	file:
swig_GameStartSkill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_GameStartSkill_base_names[] = {"TriggerSkill *",0};$/;"	v	file:
swig_GameStartSkill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_GameStartSkill_bases[] = {0,0};$/;"	v	file:
swig_GameStartSkill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_GameStartSkill_methods[] = {$/;"	v	file:
swig_General_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_General_attributes[] = {$/;"	v	file:
swig_General_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_General_base_names[] = {"QObject *",0};$/;"	v	file:
swig_General_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_General_bases[] = {0,0};$/;"	v	file:
swig_General_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_General_methods[] = {$/;"	v	file:
swig_Horse_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_Horse_attributes[] = {$/;"	v	file:
swig_Horse_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_Horse_base_names[] = {"EquipCard *",0};$/;"	v	file:
swig_Horse_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_Horse_bases[] = {0,0};$/;"	v	file:
swig_Horse_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_Horse_methods[] = {$/;"	v	file:
swig_JudgeStruct_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_JudgeStruct_attributes[] = {$/;"	v	file:
swig_JudgeStruct_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_JudgeStruct_base_names[] = {0};$/;"	v	file:
swig_JudgeStruct_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_JudgeStruct_bases[] = {0};$/;"	v	file:
swig_JudgeStruct_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_JudgeStruct_methods[] = {$/;"	v	file:
swig_LogMessage_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_LogMessage_attributes[] = {$/;"	v	file:
swig_LogMessage_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_LogMessage_base_names[] = {0};$/;"	v	file:
swig_LogMessage_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_LogMessage_bases[] = {0};$/;"	v	file:
swig_LogMessage_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_LogMessage_methods[] = {$/;"	v	file:
swig_LuaAI_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_LuaAI_attributes[] = {$/;"	v	file:
swig_LuaAI_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_LuaAI_base_names[] = {"TrustAI *",0};$/;"	v	file:
swig_LuaAI_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_LuaAI_bases[] = {0,0};$/;"	v	file:
swig_LuaAI_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_LuaAI_methods[] = {$/;"	v	file:
swig_LuaDistanceSkill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_LuaDistanceSkill_attributes[] = {$/;"	v	file:
swig_LuaDistanceSkill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_LuaDistanceSkill_base_names[] = {"DistanceSkill *",0};$/;"	v	file:
swig_LuaDistanceSkill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_LuaDistanceSkill_bases[] = {0,0};$/;"	v	file:
swig_LuaDistanceSkill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_LuaDistanceSkill_methods[] = {$/;"	v	file:
swig_LuaFilterSkill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_LuaFilterSkill_attributes[] = {$/;"	v	file:
swig_LuaFilterSkill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_LuaFilterSkill_base_names[] = {"FilterSkill *",0};$/;"	v	file:
swig_LuaFilterSkill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_LuaFilterSkill_bases[] = {0,0};$/;"	v	file:
swig_LuaFilterSkill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_LuaFilterSkill_methods[] = {$/;"	v	file:
swig_LuaMaxCardsSkill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_LuaMaxCardsSkill_attributes[] = {$/;"	v	file:
swig_LuaMaxCardsSkill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_LuaMaxCardsSkill_base_names[] = {"MaxCardsSkill *",0};$/;"	v	file:
swig_LuaMaxCardsSkill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_LuaMaxCardsSkill_bases[] = {0,0};$/;"	v	file:
swig_LuaMaxCardsSkill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_LuaMaxCardsSkill_methods[] = {$/;"	v	file:
swig_LuaProhibitSkill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_LuaProhibitSkill_attributes[] = {$/;"	v	file:
swig_LuaProhibitSkill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_LuaProhibitSkill_base_names[] = {"ProhibitSkill *",0};$/;"	v	file:
swig_LuaProhibitSkill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_LuaProhibitSkill_bases[] = {0,0};$/;"	v	file:
swig_LuaProhibitSkill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_LuaProhibitSkill_methods[] = {$/;"	v	file:
swig_LuaSkillCard_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_LuaSkillCard_attributes[] = {$/;"	v	file:
swig_LuaSkillCard_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_LuaSkillCard_base_names[] = {"SkillCard *",0};$/;"	v	file:
swig_LuaSkillCard_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_LuaSkillCard_bases[] = {0,0};$/;"	v	file:
swig_LuaSkillCard_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_LuaSkillCard_methods[] = {$/;"	v	file:
swig_LuaTriggerSkill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_LuaTriggerSkill_attributes[] = {$/;"	v	file:
swig_LuaTriggerSkill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_LuaTriggerSkill_base_names[] = {"TriggerSkill *",0};$/;"	v	file:
swig_LuaTriggerSkill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_LuaTriggerSkill_bases[] = {0,0};$/;"	v	file:
swig_LuaTriggerSkill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_LuaTriggerSkill_methods[] = {$/;"	v	file:
swig_LuaViewAsSkill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_LuaViewAsSkill_attributes[] = {$/;"	v	file:
swig_LuaViewAsSkill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_LuaViewAsSkill_base_names[] = {"ViewAsSkill *",0};$/;"	v	file:
swig_LuaViewAsSkill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_LuaViewAsSkill_bases[] = {0,0};$/;"	v	file:
swig_LuaViewAsSkill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_LuaViewAsSkill_methods[] = {$/;"	v	file:
swig_MaxCardsSkill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_MaxCardsSkill_attributes[] = {$/;"	v	file:
swig_MaxCardsSkill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_MaxCardsSkill_base_names[] = {"Skill *",0};$/;"	v	file:
swig_MaxCardsSkill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_MaxCardsSkill_bases[] = {0,0};$/;"	v	file:
swig_MaxCardsSkill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_MaxCardsSkill_methods[] = {$/;"	v	file:
swig_OffensiveHorse_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_OffensiveHorse_attributes[] = {$/;"	v	file:
swig_OffensiveHorse_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_OffensiveHorse_base_names[] = {"Horse *",0};$/;"	v	file:
swig_OffensiveHorse_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_OffensiveHorse_bases[] = {0,0};$/;"	v	file:
swig_OffensiveHorse_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_OffensiveHorse_methods[] = {$/;"	v	file:
swig_OneCardViewAsSkill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_OneCardViewAsSkill_attributes[] = {$/;"	v	file:
swig_OneCardViewAsSkill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_OneCardViewAsSkill_base_names[] = {"ViewAsSkill *",0};$/;"	v	file:
swig_OneCardViewAsSkill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_OneCardViewAsSkill_bases[] = {0,0};$/;"	v	file:
swig_OneCardViewAsSkill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_OneCardViewAsSkill_methods[] = {$/;"	v	file:
swig_Package_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_Package_attributes[] = {$/;"	v	file:
swig_Package_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_Package_base_names[] = {"QObject *",0};$/;"	v	file:
swig_Package_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_Package_bases[] = {0,0};$/;"	v	file:
swig_Package_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_Package_methods[] = {$/;"	v	file:
swig_PhaseChangeStruct_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_PhaseChangeStruct_attributes[] = {$/;"	v	file:
swig_PhaseChangeStruct_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_PhaseChangeStruct_base_names[] = {0};$/;"	v	file:
swig_PhaseChangeStruct_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_PhaseChangeStruct_bases[] = {0};$/;"	v	file:
swig_PhaseChangeStruct_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_PhaseChangeStruct_methods[] = {$/;"	v	file:
swig_PindianStruct_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_PindianStruct_attributes[] = {$/;"	v	file:
swig_PindianStruct_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_PindianStruct_base_names[] = {0};$/;"	v	file:
swig_PindianStruct_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_PindianStruct_bases[] = {0};$/;"	v	file:
swig_PindianStruct_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_PindianStruct_methods[] = {$/;"	v	file:
swig_Player_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_Player_attributes[] = {$/;"	v	file:
swig_Player_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_Player_base_names[] = {"QObject *",0};$/;"	v	file:
swig_Player_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_Player_bases[] = {0,0};$/;"	v	file:
swig_Player_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_Player_methods[] = {$/;"	v	file:
swig_ProhibitSkill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_ProhibitSkill_attributes[] = {$/;"	v	file:
swig_ProhibitSkill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_ProhibitSkill_base_names[] = {"Skill *",0};$/;"	v	file:
swig_ProhibitSkill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_ProhibitSkill_bases[] = {0,0};$/;"	v	file:
swig_ProhibitSkill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_ProhibitSkill_methods[] = {$/;"	v	file:
swig_QList_Sl_CardItem_Sm__Sg__attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_QList_Sl_CardItem_Sm__Sg__attributes[] = {$/;"	v	file:
swig_QList_Sl_CardItem_Sm__Sg__base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_QList_Sl_CardItem_Sm__Sg__base_names[] = {0};$/;"	v	file:
swig_QList_Sl_CardItem_Sm__Sg__bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_QList_Sl_CardItem_Sm__Sg__bases[] = {0};$/;"	v	file:
swig_QList_Sl_CardItem_Sm__Sg__methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_QList_Sl_CardItem_Sm__Sg__methods[] = {$/;"	v	file:
swig_QList_Sl_Card_SS_const_Sm__Sg__attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_QList_Sl_Card_SS_const_Sm__Sg__attributes[] = {$/;"	v	file:
swig_QList_Sl_Card_SS_const_Sm__Sg__base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_QList_Sl_Card_SS_const_Sm__Sg__base_names[] = {0};$/;"	v	file:
swig_QList_Sl_Card_SS_const_Sm__Sg__bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_QList_Sl_Card_SS_const_Sm__Sg__bases[] = {0};$/;"	v	file:
swig_QList_Sl_Card_SS_const_Sm__Sg__methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_QList_Sl_Card_SS_const_Sm__Sg__methods[] = {$/;"	v	file:
swig_QList_Sl_CardsMoveStruct_Sg__attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_QList_Sl_CardsMoveStruct_Sg__attributes[] = {$/;"	v	file:
swig_QList_Sl_CardsMoveStruct_Sg__base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_QList_Sl_CardsMoveStruct_Sg__base_names[] = {0};$/;"	v	file:
swig_QList_Sl_CardsMoveStruct_Sg__bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_QList_Sl_CardsMoveStruct_Sg__bases[] = {0};$/;"	v	file:
swig_QList_Sl_CardsMoveStruct_Sg__methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_QList_Sl_CardsMoveStruct_Sg__methods[] = {$/;"	v	file:
swig_QList_Sl_DelayedTrick_SS_const_Sm__Sg__attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_QList_Sl_DelayedTrick_SS_const_Sm__Sg__attributes[] = {$/;"	v	file:
swig_QList_Sl_DelayedTrick_SS_const_Sm__Sg__base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_QList_Sl_DelayedTrick_SS_const_Sm__Sg__base_names[] = {0};$/;"	v	file:
swig_QList_Sl_DelayedTrick_SS_const_Sm__Sg__bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_QList_Sl_DelayedTrick_SS_const_Sm__Sg__bases[] = {0};$/;"	v	file:
swig_QList_Sl_DelayedTrick_SS_const_Sm__Sg__methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_QList_Sl_DelayedTrick_SS_const_Sm__Sg__methods[] = {$/;"	v	file:
swig_QList_Sl_Player_Phase_Sg__attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_QList_Sl_Player_Phase_Sg__attributes[] = {$/;"	v	file:
swig_QList_Sl_Player_Phase_Sg__base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_QList_Sl_Player_Phase_Sg__base_names[] = {0};$/;"	v	file:
swig_QList_Sl_Player_Phase_Sg__bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_QList_Sl_Player_Phase_Sg__bases[] = {0};$/;"	v	file:
swig_QList_Sl_Player_Phase_Sg__methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_QList_Sl_Player_Phase_Sg__methods[] = {$/;"	v	file:
swig_QList_Sl_Player_Place_Sg__attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_QList_Sl_Player_Place_Sg__attributes[] = {$/;"	v	file:
swig_QList_Sl_Player_Place_Sg__base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_QList_Sl_Player_Place_Sg__base_names[] = {0};$/;"	v	file:
swig_QList_Sl_Player_Place_Sg__bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_QList_Sl_Player_Place_Sg__bases[] = {0};$/;"	v	file:
swig_QList_Sl_Player_Place_Sg__methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_QList_Sl_Player_Place_Sg__methods[] = {$/;"	v	file:
swig_QList_Sl_Player_SS_const_Sm__Sg__attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_QList_Sl_Player_SS_const_Sm__Sg__attributes[] = {$/;"	v	file:
swig_QList_Sl_Player_SS_const_Sm__Sg__base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_QList_Sl_Player_SS_const_Sm__Sg__base_names[] = {0};$/;"	v	file:
swig_QList_Sl_Player_SS_const_Sm__Sg__bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_QList_Sl_Player_SS_const_Sm__Sg__bases[] = {0};$/;"	v	file:
swig_QList_Sl_Player_SS_const_Sm__Sg__methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_QList_Sl_Player_SS_const_Sm__Sg__methods[] = {$/;"	v	file:
swig_QList_Sl_ServerPlayer_Sm__Sg__attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_QList_Sl_ServerPlayer_Sm__Sg__attributes[] = {$/;"	v	file:
swig_QList_Sl_ServerPlayer_Sm__Sg__base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_QList_Sl_ServerPlayer_Sm__Sg__base_names[] = {0};$/;"	v	file:
swig_QList_Sl_ServerPlayer_Sm__Sg__bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_QList_Sl_ServerPlayer_Sm__Sg__bases[] = {0};$/;"	v	file:
swig_QList_Sl_ServerPlayer_Sm__Sg__methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_QList_Sl_ServerPlayer_Sm__Sg__methods[] = {$/;"	v	file:
swig_QList_Sl_Skill_SS_const_Sm__Sg__attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_QList_Sl_Skill_SS_const_Sm__Sg__attributes[] = {$/;"	v	file:
swig_QList_Sl_Skill_SS_const_Sm__Sg__base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_QList_Sl_Skill_SS_const_Sm__Sg__base_names[] = {0};$/;"	v	file:
swig_QList_Sl_Skill_SS_const_Sm__Sg__bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_QList_Sl_Skill_SS_const_Sm__Sg__bases[] = {0};$/;"	v	file:
swig_QList_Sl_Skill_SS_const_Sm__Sg__methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_QList_Sl_Skill_SS_const_Sm__Sg__methods[] = {$/;"	v	file:
swig_QList_Sl_int_Sg__attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_QList_Sl_int_Sg__attributes[] = {$/;"	v	file:
swig_QList_Sl_int_Sg__base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_QList_Sl_int_Sg__base_names[] = {0};$/;"	v	file:
swig_QList_Sl_int_Sg__bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_QList_Sl_int_Sg__bases[] = {0};$/;"	v	file:
swig_QList_Sl_int_Sg__methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_QList_Sl_int_Sg__methods[] = {$/;"	v	file:
swig_QObject_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_QObject_attributes[] = {$/;"	v	file:
swig_QObject_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_QObject_base_names[] = {0};$/;"	v	file:
swig_QObject_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_QObject_bases[] = {0};$/;"	v	file:
swig_QObject_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_QObject_methods[] = {$/;"	v	file:
swig_QRegExp_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_QRegExp_attributes[] = {$/;"	v	file:
swig_QRegExp_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_QRegExp_base_names[] = {0};$/;"	v	file:
swig_QRegExp_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_QRegExp_bases[] = {0};$/;"	v	file:
swig_QRegExp_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_QRegExp_methods[] = {$/;"	v	file:
swig_QThread_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_QThread_attributes[] = {$/;"	v	file:
swig_QThread_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_QThread_base_names[] = {"QObject *",0};$/;"	v	file:
swig_QThread_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_QThread_bases[] = {0,0};$/;"	v	file:
swig_QThread_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_QThread_methods[] = {$/;"	v	file:
swig_QVariant_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_QVariant_attributes[] = {$/;"	v	file:
swig_QVariant_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_QVariant_base_names[] = {0};$/;"	v	file:
swig_QVariant_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_QVariant_bases[] = {0};$/;"	v	file:
swig_QVariant_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_QVariant_methods[] = {$/;"	v	file:
swig_RecoverStruct_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_RecoverStruct_attributes[] = {$/;"	v	file:
swig_RecoverStruct_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_RecoverStruct_base_names[] = {0};$/;"	v	file:
swig_RecoverStruct_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_RecoverStruct_bases[] = {0};$/;"	v	file:
swig_RecoverStruct_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_RecoverStruct_methods[] = {$/;"	v	file:
swig_RoomThread_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_RoomThread_attributes[] = {$/;"	v	file:
swig_RoomThread_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_RoomThread_base_names[] = {"QThread *",0};$/;"	v	file:
swig_RoomThread_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_RoomThread_bases[] = {0,0};$/;"	v	file:
swig_RoomThread_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_RoomThread_methods[] = {$/;"	v	file:
swig_Room_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_Room_attributes[] = {$/;"	v	file:
swig_Room_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_Room_base_names[] = {"QThread *",0};$/;"	v	file:
swig_Room_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_Room_bases[] = {0,0};$/;"	v	file:
swig_Room_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_Room_methods[] = {$/;"	v	file:
swig_SPConvertSkill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_SPConvertSkill_attributes[] = {$/;"	v	file:
swig_SPConvertSkill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_SPConvertSkill_base_names[] = {"GameStartSkill *",0};$/;"	v	file:
swig_SPConvertSkill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_SPConvertSkill_bases[] = {0,0};$/;"	v	file:
swig_SPConvertSkill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_SPConvertSkill_methods[] = {$/;"	v	file:
swig_ServerPlayer_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_ServerPlayer_attributes[] = {$/;"	v	file:
swig_ServerPlayer_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_ServerPlayer_base_names[] = {"Player *",0};$/;"	v	file:
swig_ServerPlayer_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_ServerPlayer_bases[] = {0,0};$/;"	v	file:
swig_ServerPlayer_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_ServerPlayer_methods[] = {$/;"	v	file:
swig_SkillCard_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_SkillCard_attributes[] = {$/;"	v	file:
swig_SkillCard_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_SkillCard_base_names[] = {"Card *",0};$/;"	v	file:
swig_SkillCard_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_SkillCard_bases[] = {0,0};$/;"	v	file:
swig_SkillCard_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_SkillCard_methods[] = {$/;"	v	file:
swig_Skill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_Skill_attributes[] = {$/;"	v	file:
swig_Skill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_Skill_base_names[] = {"QObject *",0};$/;"	v	file:
swig_Skill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_Skill_bases[] = {0,0};$/;"	v	file:
swig_Skill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_Skill_methods[] = {$/;"	v	file:
swig_SlashEffectStruct_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_SlashEffectStruct_attributes[] = {$/;"	v	file:
swig_SlashEffectStruct_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_SlashEffectStruct_base_names[] = {0};$/;"	v	file:
swig_SlashEffectStruct_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_SlashEffectStruct_bases[] = {0};$/;"	v	file:
swig_SlashEffectStruct_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_SlashEffectStruct_methods[] = {$/;"	v	file:
swig_Slash_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_Slash_attributes[] = {$/;"	v	file:
swig_Slash_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_Slash_base_names[] = {"BasicCard *",0};$/;"	v	file:
swig_Slash_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_Slash_bases[] = {0,0};$/;"	v	file:
swig_Slash_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_Slash_methods[] = {$/;"	v	file:
swig_TrickCard_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_TrickCard_attributes[] = {$/;"	v	file:
swig_TrickCard_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_TrickCard_base_names[] = {"Card *",0};$/;"	v	file:
swig_TrickCard_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_TrickCard_bases[] = {0,0};$/;"	v	file:
swig_TrickCard_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_TrickCard_methods[] = {$/;"	v	file:
swig_TriggerSkill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_TriggerSkill_attributes[] = {$/;"	v	file:
swig_TriggerSkill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_TriggerSkill_base_names[] = {"Skill *",0};$/;"	v	file:
swig_TriggerSkill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_TriggerSkill_bases[] = {0,0};$/;"	v	file:
swig_TriggerSkill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_TriggerSkill_methods[] = {$/;"	v	file:
swig_TrustAI_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_TrustAI_attributes[] = {$/;"	v	file:
swig_TrustAI_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_TrustAI_base_names[] = {"AI *",0};$/;"	v	file:
swig_TrustAI_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_TrustAI_bases[] = {0,0};$/;"	v	file:
swig_TrustAI_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_TrustAI_methods[] = {$/;"	v	file:
swig_ViewAsSkill_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_ViewAsSkill_attributes[] = {$/;"	v	file:
swig_ViewAsSkill_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_ViewAsSkill_base_names[] = {"Skill *",0};$/;"	v	file:
swig_ViewAsSkill_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_ViewAsSkill_bases[] = {0,0};$/;"	v	file:
swig_ViewAsSkill_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_ViewAsSkill_methods[] = {$/;"	v	file:
swig_Weapon_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_Weapon_attributes[] = {$/;"	v	file:
swig_Weapon_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_Weapon_base_names[] = {"EquipCard *",0};$/;"	v	file:
swig_Weapon_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_Weapon_bases[] = {0,0};$/;"	v	file:
swig_Weapon_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_Weapon_methods[] = {$/;"	v	file:
swig_WrappedCard_attributes	swig/sanguosha_wrap.cxx	/^static swig_lua_attribute swig_WrappedCard_attributes[] = {$/;"	v	file:
swig_WrappedCard_base_names	swig/sanguosha_wrap.cxx	/^static const char *swig_WrappedCard_base_names[] = {"Card *",0};$/;"	v	file:
swig_WrappedCard_bases	swig/sanguosha_wrap.cxx	/^static swig_lua_class *swig_WrappedCard_bases[] = {0,0};$/;"	v	file:
swig_WrappedCard_methods	swig/sanguosha_wrap.cxx	/^static swig_lua_method swig_WrappedCard_methods[] = {$/;"	v	file:
swig_cast_info	swig/sanguosha_wrap.cxx	/^typedef struct swig_cast_info {$/;"	s	file:
swig_cast_info	swig/sanguosha_wrap.cxx	/^} swig_cast_info;$/;"	t	typeref:struct:swig_cast_info	file:
swig_cast_initial	swig/sanguosha_wrap.cxx	/^static swig_cast_info *swig_cast_initial[] = {$/;"	v	file:
swig_commands	swig/sanguosha_wrap.cxx	/^static const struct luaL_Reg swig_commands[] = {$/;"	v	typeref:struct:luaL_Reg	file:
swig_constants	swig/sanguosha_wrap.cxx	/^static swig_lua_const_info swig_constants[] = {$/;"	v	file:
swig_converter_func	swig/sanguosha_wrap.cxx	/^typedef void *(*swig_converter_func)(void *, int *);$/;"	t	file:
swig_delete_AI	swig/sanguosha_wrap.cxx	/^static void swig_delete_AI(void *obj) {$/;"	f	file:
swig_delete_Armor	swig/sanguosha_wrap.cxx	/^static void swig_delete_Armor(void *obj) {$/;"	f	file:
swig_delete_BasicCard	swig/sanguosha_wrap.cxx	/^static void swig_delete_BasicCard(void *obj) {$/;"	f	file:
swig_delete_Card	swig/sanguosha_wrap.cxx	/^static void swig_delete_Card(void *obj) {$/;"	f	file:
swig_delete_CardEffectStruct	swig/sanguosha_wrap.cxx	/^static void swig_delete_CardEffectStruct(void *obj) {$/;"	f	file:
swig_delete_CardList	swig/sanguosha_wrap.cxx	/^static void swig_delete_CardList(void *obj) {$/;"	f	file:
swig_delete_CardMoveReason	swig/sanguosha_wrap.cxx	/^static void swig_delete_CardMoveReason(void *obj) {$/;"	f	file:
swig_delete_CardUseStruct	swig/sanguosha_wrap.cxx	/^static void swig_delete_CardUseStruct(void *obj) {$/;"	f	file:
swig_delete_CardsMoveList	swig/sanguosha_wrap.cxx	/^static void swig_delete_CardsMoveList(void *obj) {$/;"	f	file:
swig_delete_CardsMoveOneTimeStruct	swig/sanguosha_wrap.cxx	/^static void swig_delete_CardsMoveOneTimeStruct(void *obj) {$/;"	f	file:
swig_delete_CardsMoveStruct	swig/sanguosha_wrap.cxx	/^static void swig_delete_CardsMoveStruct(void *obj) {$/;"	f	file:
swig_delete_ClientPlayer	swig/sanguosha_wrap.cxx	/^static void swig_delete_ClientPlayer(void *obj) {$/;"	f	file:
swig_delete_DamageStruct	swig/sanguosha_wrap.cxx	/^static void swig_delete_DamageStruct(void *obj) {$/;"	f	file:
swig_delete_DefensiveHorse	swig/sanguosha_wrap.cxx	/^static void swig_delete_DefensiveHorse(void *obj) {$/;"	f	file:
swig_delete_DelayedTrick	swig/sanguosha_wrap.cxx	/^static void swig_delete_DelayedTrick(void *obj) {$/;"	f	file:
swig_delete_DelayedTrickList	swig/sanguosha_wrap.cxx	/^static void swig_delete_DelayedTrickList(void *obj) {$/;"	f	file:
swig_delete_DistanceSkill	swig/sanguosha_wrap.cxx	/^static void swig_delete_DistanceSkill(void *obj) {$/;"	f	file:
swig_delete_DummyCard	swig/sanguosha_wrap.cxx	/^static void swig_delete_DummyCard(void *obj) {$/;"	f	file:
swig_delete_DyingStruct	swig/sanguosha_wrap.cxx	/^static void swig_delete_DyingStruct(void *obj) {$/;"	f	file:
swig_delete_Engine	swig/sanguosha_wrap.cxx	/^static void swig_delete_Engine(void *obj) {$/;"	f	file:
swig_delete_EquipCard	swig/sanguosha_wrap.cxx	/^static void swig_delete_EquipCard(void *obj) {$/;"	f	file:
swig_delete_FilterSkill	swig/sanguosha_wrap.cxx	/^static void swig_delete_FilterSkill(void *obj) {$/;"	f	file:
swig_delete_GameStartSkill	swig/sanguosha_wrap.cxx	/^static void swig_delete_GameStartSkill(void *obj) {$/;"	f	file:
swig_delete_General	swig/sanguosha_wrap.cxx	/^static void swig_delete_General(void *obj) {$/;"	f	file:
swig_delete_Horse	swig/sanguosha_wrap.cxx	/^static void swig_delete_Horse(void *obj) {$/;"	f	file:
swig_delete_IntList	swig/sanguosha_wrap.cxx	/^static void swig_delete_IntList(void *obj) {$/;"	f	file:
swig_delete_ItemList	swig/sanguosha_wrap.cxx	/^static void swig_delete_ItemList(void *obj) {$/;"	f	file:
swig_delete_JudgeStruct	swig/sanguosha_wrap.cxx	/^static void swig_delete_JudgeStruct(void *obj) {$/;"	f	file:
swig_delete_LogMessage	swig/sanguosha_wrap.cxx	/^static void swig_delete_LogMessage(void *obj) {$/;"	f	file:
swig_delete_LuaAI	swig/sanguosha_wrap.cxx	/^static void swig_delete_LuaAI(void *obj) {$/;"	f	file:
swig_delete_LuaDistanceSkill	swig/sanguosha_wrap.cxx	/^static void swig_delete_LuaDistanceSkill(void *obj) {$/;"	f	file:
swig_delete_LuaFilterSkill	swig/sanguosha_wrap.cxx	/^static void swig_delete_LuaFilterSkill(void *obj) {$/;"	f	file:
swig_delete_LuaMaxCardsSkill	swig/sanguosha_wrap.cxx	/^static void swig_delete_LuaMaxCardsSkill(void *obj) {$/;"	f	file:
swig_delete_LuaProhibitSkill	swig/sanguosha_wrap.cxx	/^static void swig_delete_LuaProhibitSkill(void *obj) {$/;"	f	file:
swig_delete_LuaSkillCard	swig/sanguosha_wrap.cxx	/^static void swig_delete_LuaSkillCard(void *obj) {$/;"	f	file:
swig_delete_LuaTriggerSkill	swig/sanguosha_wrap.cxx	/^static void swig_delete_LuaTriggerSkill(void *obj) {$/;"	f	file:
swig_delete_LuaViewAsSkill	swig/sanguosha_wrap.cxx	/^static void swig_delete_LuaViewAsSkill(void *obj) {$/;"	f	file:
swig_delete_MaxCardsSkill	swig/sanguosha_wrap.cxx	/^static void swig_delete_MaxCardsSkill(void *obj) {$/;"	f	file:
swig_delete_OffensiveHorse	swig/sanguosha_wrap.cxx	/^static void swig_delete_OffensiveHorse(void *obj) {$/;"	f	file:
swig_delete_OneCardViewAsSkill	swig/sanguosha_wrap.cxx	/^static void swig_delete_OneCardViewAsSkill(void *obj) {$/;"	f	file:
swig_delete_Package	swig/sanguosha_wrap.cxx	/^static void swig_delete_Package(void *obj) {$/;"	f	file:
swig_delete_PhaseChangeStruct	swig/sanguosha_wrap.cxx	/^static void swig_delete_PhaseChangeStruct(void *obj) {$/;"	f	file:
swig_delete_PhaseList	swig/sanguosha_wrap.cxx	/^static void swig_delete_PhaseList(void *obj) {$/;"	f	file:
swig_delete_PindianStruct	swig/sanguosha_wrap.cxx	/^static void swig_delete_PindianStruct(void *obj) {$/;"	f	file:
swig_delete_PlaceList	swig/sanguosha_wrap.cxx	/^static void swig_delete_PlaceList(void *obj) {$/;"	f	file:
swig_delete_Player	swig/sanguosha_wrap.cxx	/^static void swig_delete_Player(void *obj) {$/;"	f	file:
swig_delete_PlayerList	swig/sanguosha_wrap.cxx	/^static void swig_delete_PlayerList(void *obj) {$/;"	f	file:
swig_delete_ProhibitSkill	swig/sanguosha_wrap.cxx	/^static void swig_delete_ProhibitSkill(void *obj) {$/;"	f	file:
swig_delete_QObject	swig/sanguosha_wrap.cxx	/^static void swig_delete_QObject(void *obj) {$/;"	f	file:
swig_delete_QRegExp	swig/sanguosha_wrap.cxx	/^static void swig_delete_QRegExp(void *obj) {$/;"	f	file:
swig_delete_QThread	swig/sanguosha_wrap.cxx	/^static void swig_delete_QThread(void *obj) {$/;"	f	file:
swig_delete_QVariant	swig/sanguosha_wrap.cxx	/^static void swig_delete_QVariant(void *obj) {$/;"	f	file:
swig_delete_RecoverStruct	swig/sanguosha_wrap.cxx	/^static void swig_delete_RecoverStruct(void *obj) {$/;"	f	file:
swig_delete_Room	swig/sanguosha_wrap.cxx	/^static void swig_delete_Room(void *obj) {$/;"	f	file:
swig_delete_RoomThread	swig/sanguosha_wrap.cxx	/^static void swig_delete_RoomThread(void *obj) {$/;"	f	file:
swig_delete_SPConvertSkill	swig/sanguosha_wrap.cxx	/^static void swig_delete_SPConvertSkill(void *obj) {$/;"	f	file:
swig_delete_SPlayerList	swig/sanguosha_wrap.cxx	/^static void swig_delete_SPlayerList(void *obj) {$/;"	f	file:
swig_delete_ServerPlayer	swig/sanguosha_wrap.cxx	/^static void swig_delete_ServerPlayer(void *obj) {$/;"	f	file:
swig_delete_Skill	swig/sanguosha_wrap.cxx	/^static void swig_delete_Skill(void *obj) {$/;"	f	file:
swig_delete_SkillCard	swig/sanguosha_wrap.cxx	/^static void swig_delete_SkillCard(void *obj) {$/;"	f	file:
swig_delete_SkillList	swig/sanguosha_wrap.cxx	/^static void swig_delete_SkillList(void *obj) {$/;"	f	file:
swig_delete_Slash	swig/sanguosha_wrap.cxx	/^static void swig_delete_Slash(void *obj) {$/;"	f	file:
swig_delete_SlashEffectStruct	swig/sanguosha_wrap.cxx	/^static void swig_delete_SlashEffectStruct(void *obj) {$/;"	f	file:
swig_delete_TrickCard	swig/sanguosha_wrap.cxx	/^static void swig_delete_TrickCard(void *obj) {$/;"	f	file:
swig_delete_TriggerSkill	swig/sanguosha_wrap.cxx	/^static void swig_delete_TriggerSkill(void *obj) {$/;"	f	file:
swig_delete_TrustAI	swig/sanguosha_wrap.cxx	/^static void swig_delete_TrustAI(void *obj) {$/;"	f	file:
swig_delete_ViewAsSkill	swig/sanguosha_wrap.cxx	/^static void swig_delete_ViewAsSkill(void *obj) {$/;"	f	file:
swig_delete_Weapon	swig/sanguosha_wrap.cxx	/^static void swig_delete_Weapon(void *obj) {$/;"	f	file:
swig_delete_WrappedCard	swig/sanguosha_wrap.cxx	/^static void swig_delete_WrappedCard(void *obj) {$/;"	f	file:
swig_dycast_func	swig/sanguosha_wrap.cxx	/^typedef struct swig_type_info *(*swig_dycast_func)(void **);$/;"	t	typeref:struct:swig_dycast_func	file:
swig_lua_attribute	swig/sanguosha_wrap.cxx	/^} swig_lua_attribute;$/;"	t	typeref:struct:__anon148	file:
swig_lua_class	swig/sanguosha_wrap.cxx	/^typedef struct swig_lua_class {$/;"	s	file:
swig_lua_class	swig/sanguosha_wrap.cxx	/^} swig_lua_class;$/;"	t	typeref:struct:swig_lua_class	file:
swig_lua_const_info	swig/sanguosha_wrap.cxx	/^} swig_lua_const_info;$/;"	t	typeref:struct:__anon146	file:
swig_lua_method	swig/sanguosha_wrap.cxx	/^} swig_lua_method;$/;"	t	typeref:struct:__anon147	file:
swig_lua_rawdata	swig/sanguosha_wrap.cxx	/^} swig_lua_rawdata;$/;"	t	typeref:struct:__anon150	file:
swig_lua_userdata	swig/sanguosha_wrap.cxx	/^} swig_lua_userdata;$/;"	t	typeref:struct:__anon149	file:
swig_lua_var_info	swig/sanguosha_wrap.cxx	/^} swig_lua_var_info;$/;"	t	typeref:struct:__anon145	file:
swig_module	swig/sanguosha_wrap.cxx	/^static swig_module_info swig_module = {swig_types, 88, 0, 0, 0, 0};$/;"	v	file:
swig_module_info	swig/sanguosha_wrap.cxx	/^typedef struct swig_module_info {$/;"	s	file:
swig_module_info	swig/sanguosha_wrap.cxx	/^} swig_module_info;$/;"	t	typeref:struct:swig_module_info	file:
swig_type_info	swig/sanguosha_wrap.cxx	/^typedef struct swig_type_info {$/;"	s	file:
swig_type_info	swig/sanguosha_wrap.cxx	/^} swig_type_info;$/;"	t	typeref:struct:swig_type_info	file:
swig_type_initial	swig/sanguosha_wrap.cxx	/^static swig_type_info *swig_type_initial[] = {$/;"	v	file:
swig_types	swig/sanguosha_wrap.cxx	/^static swig_type_info *swig_types[89];$/;"	v	file:
swig_variables	swig/sanguosha_wrap.cxx	/^static swig_lua_var_info swig_variables[] = {$/;"	v	file:
switchSkin	src/ui/SkinBank.cpp	/^bool QSanSkinFactory::switchSkin(QString skinName)$/;"	f	class:QSanSkinFactory
switchTo	src/server/server.cpp	/^void BanlistDialog::switchTo(int item)$/;"	f	class:BanlistDialog
switchToServer	src/ui/startscene.cpp	/^void StartScene::switchToServer(Server *server){    $/;"	f	class:StartScene
swprintf	src/breakpad/common/windows/string_utils-inl.h	58;"	d
swprintf	src/breakpad/common/windows/string_utils-inl.h	62;"	d
sxHeight	include/freetype/freetype/tttables.h	/^    FT_Short   sxHeight;$/;"	m	struct:TT_OS2_
symbexec	src/lua/ldebug.c	/^static Instruction symbexec (const Proto *pt, int lastpc, int reg) {$/;"	f	file:
symbol_data_to_free_	src/breakpad/processor/stackwalker_unittest_utils.h	/^  SymbolDataVector symbol_data_to_free_;$/;"	m	class:MockSymbolSupplier
symbol_file	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  string symbol_file(int file_index) {$/;"	f	class:__anon73::TestFastSourceLineResolver
sync_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  CRITICAL_SECTION sync_;$/;"	m	class:google_breakpad::CrashGenerationServer
syncpoint	include/fmod/fmod_memoryinfo.h	/^    unsigned int syncpoint;                      \/* [out] Sync point memory. *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
syslib	src/lua/loslib.c	/^static const luaL_Reg syslib[] = {$/;"	v	file:
system	include/fmod/fmod_memoryinfo.h	/^    unsigned int system;                         \/* [out] System object and various internals *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
system_info	src/breakpad/google_breakpad/processor/minidump.h	/^  const MDRawSystemInfo* system_info() const {$/;"	f	class:google_breakpad::MinidumpSystemInfo
system_info	src/breakpad/google_breakpad/processor/process_state.h	/^  const SystemInfo* system_info() const { return &system_info_; }$/;"	f	class:google_breakpad::ProcessState
system_info	src/breakpad/processor/stackwalker_amd64_unittest.cc	/^  SystemInfo system_info;$/;"	m	class:StackwalkerAMD64Fixture	file:
system_info	src/breakpad/processor/stackwalker_arm_unittest.cc	/^  SystemInfo system_info;$/;"	m	class:StackwalkerARMFixture	file:
system_info	src/breakpad/processor/stackwalker_x86_unittest.cc	/^  SystemInfo system_info;$/;"	m	class:StackwalkerX86Fixture	file:
system_info_	src/breakpad/google_breakpad/processor/exploitability.h	/^  SystemInfo *system_info_;$/;"	m	class:google_breakpad::Exploitability
system_info_	src/breakpad/google_breakpad/processor/minidump.h	/^  MDRawSystemInfo system_info_;$/;"	m	class:google_breakpad::MinidumpSystemInfo
system_info_	src/breakpad/google_breakpad/processor/process_state.h	/^  SystemInfo system_info_;$/;"	m	class:google_breakpad::ProcessState
system_info_	src/breakpad/google_breakpad/processor/stackwalker.h	/^  const SystemInfo *system_info_;$/;"	m	class:google_breakpad::Stackwalker
systray	src/dialog/mainwindow.h	/^    QSystemTrayIcon *systray;$/;"	m	class:MainWindow
t	src/lua/llex.h	/^  Token t;  \/* current token *\/$/;"	m	struct:LexState
t	src/lua/lparser.c	/^  expdesc *t;  \/* table descriptor *\/$/;"	m	struct:ConsControl	file:
t	src/lua/lparser.h	/^  int t;  \/* patch list of `exit when true' *\/$/;"	m	struct:expdesc
t1_blend_blue_scale	include/freetype/freetype/t1tables.h	231;"	d
t1_blend_blue_shift	include/freetype/freetype/t1tables.h	232;"	d
t1_blend_blue_values	include/freetype/freetype/t1tables.h	225;"	d
t1_blend_family_blues	include/freetype/freetype/t1tables.h	233;"	d
t1_blend_family_other_blues	include/freetype/freetype/t1tables.h	234;"	d
t1_blend_force_bold	include/freetype/freetype/t1tables.h	235;"	d
t1_blend_italic_angle	include/freetype/freetype/t1tables.h	224;"	d
t1_blend_max	include/freetype/freetype/t1tables.h	236;"	d
t1_blend_other_blues	include/freetype/freetype/t1tables.h	226;"	d
t1_blend_standard_height	include/freetype/freetype/t1tables.h	228;"	d
t1_blend_standard_widths	include/freetype/freetype/t1tables.h	227;"	d
t1_blend_stem_snap_heights	include/freetype/freetype/t1tables.h	230;"	d
t1_blend_stem_snap_widths	include/freetype/freetype/t1tables.h	229;"	d
t1_blend_underline_position	include/freetype/freetype/t1tables.h	222;"	d
t1_blend_underline_thickness	include/freetype/freetype/t1tables.h	223;"	d
t1_builder_funcs	include/freetype/freetype/internal/psaux.h	/^    const T1_Builder_FuncsRec*  t1_builder_funcs;$/;"	m	struct:PSAux_ServiceRec_
t1_cmap_classes	include/freetype/freetype/internal/psaux.h	/^    T1_CMap_Classes  t1_cmap_classes;$/;"	m	struct:PSAux_ServiceRec_
t1_decoder_funcs	include/freetype/freetype/internal/psaux.h	/^    const T1_Decoder_FuncsRec*  t1_decoder_funcs;$/;"	m	struct:PSAux_ServiceRec_
t1_decrypt	include/freetype/freetype/internal/psaux.h	/^    (*t1_decrypt)( FT_Byte*   buffer,$/;"	m	struct:PSAux_ServiceRec_
tab_funcs	src/lua/ltablib.c	/^static const luaL_Reg tab_funcs[] = {$/;"	v	file:
tab_widget	src/server/server.h	/^    QTabWidget *tab_widget;$/;"	m	class:Select3v3GeneralDialog
table	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*   table;$/;"	m	struct:TT_BDFRec_
table	src/dialog/halldialog.h	/^    QTableWidget *table;$/;"	m	class:HallDialog
table.copyFrom	lua/sgs_ex.lua	/^function table.copyFrom(list)$/;"	f
table:contains	lua/sgs_ex.lua	/^function table:contains(element)$/;"	f
table:insertTable	lua/sgs_ex.lua	/^function table:insertTable(list)$/;"	f
table:removeAll	lua/sgs_ex.lua	/^function table:removeAll(element)$/;"	f
table:removeOne	lua/sgs_ex.lua	/^function table:removeOne(element)$/;"	f
table:removeTable	lua/sgs_ex.lua	/^function table:removeTable(list)$/;"	f
tablePileClearTimeStamp	src/ui/carditem.h	/^        int tablePileClearTimeStamp;$/;"	m	struct:CardItem::UiHelper
table_cards	src/server/room.h	/^    QList<int> table_cards;$/;"	m	class:Room
table_end	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*   table_end;$/;"	m	struct:TT_BDFRec_
table_offset	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong            table_offset;$/;"	m	struct:TT_SBit_RangeRec_
tag	include/freetype/freetype/freetype.h	/^    FT_ULong    tag;$/;"	m	struct:FT_Parameter_
tag	include/freetype/freetype/ftmm.h	/^    FT_ULong    tag;$/;"	m	struct:FT_Var_Axis_
tag	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong   tag;$/;"	m	struct:TTC_HeaderRec_
tag	src/breakpad/client/windows/common/ipc_protocol.h	/^  MessageTag tag;$/;"	m	struct:google_breakpad::ProtocolMessage
tag	src/core/player.h	/^    QVariantMap tag;$/;"	m	class:Player
tag	src/server/room.h	/^    QVariantMap tag;$/;"	m	class:Room
tag_error	src/lua/lauxlib.c	/^static void tag_error (lua_State *L, int narg, int tag) {$/;"	f	file:
tag_word	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int8_t   tag_word;$/;"	m	struct:__anon55
tag_word	src/breakpad/google_breakpad/common/minidump_cpu_x86.h	/^  u_int32_t tag_word;$/;"	m	struct:__anon6
tags	include/freetype/freetype/ftimage.h	/^    char*       tags;            \/* the points flags                   *\/$/;"	m	struct:FT_Outline_
tags	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*    tags;        \/* current touch flags         *\/$/;"	m	struct:TT_GlyphZoneRec_
taichen_fight_skill.getTurnUseCard	lua/ai/fancheng-ai.lua	/^taichen_fight_skill.getTurnUseCard=function(self)$/;"	f
taichen_skill.getTurnUseCard	lua/ai/yitian-ai.lua	/^taichen_skill.getTurnUseCard=function(self)$/;"	f
tail	include/freetype/freetype/fttypes.h	/^    FT_ListNode  tail;$/;"	m	struct:FT_ListRec_
tailLink_	src/jsoncpp/include/json/value.h	/^      ValueInternalLink *tailLink_;$/;"	m	class:Json::ValueInternalMap
tailcalls	src/lua/lstate.h	/^  int tailcalls;  \/* number of tail calls lost under this entry *\/$/;"	m	struct:CallInfo
takeAG	src/client/client.cpp	/^void Client::takeAG(const QString &take_str){$/;"	f	class:Client
takeAG	src/server/room.cpp	/^void Room::takeAG(ServerPlayer *player, int card_id){$/;"	f	class:Room
takeAmazingGrace	src/ui/roomscene.cpp	/^void RoomScene::takeAmazingGrace(ClientPlayer *taker, int card_id){$/;"	f	class:RoomScene
takeEffect	src/package/bgm-package.cpp	/^void YanxiaoCard::takeEffect(ServerPlayer *) const{$/;"	f	class:YanxiaoCard
takeEffect	src/package/joypackage.cpp	/^void Deluge::takeEffect(ServerPlayer *target) const{$/;"	f	class:Deluge
takeEffect	src/package/joypackage.cpp	/^void Earthquake::takeEffect(ServerPlayer *target) const{$/;"	f	class:Earthquake
takeEffect	src/package/joypackage.cpp	/^void MudSlide::takeEffect(ServerPlayer *target) const{$/;"	f	class:MudSlide
takeEffect	src/package/joypackage.cpp	/^void Typhoon::takeEffect(ServerPlayer *target) const{$/;"	f	class:Typhoon
takeEffect	src/package/joypackage.cpp	/^void Volcano::takeEffect(ServerPlayer *target) const{$/;"	f	class:Volcano
takeEffect	src/package/maneuvering.cpp	/^void SupplyShortage::takeEffect(ServerPlayer *target) const{$/;"	f	class:SupplyShortage
takeEffect	src/package/standard-cards.cpp	/^void Indulgence::takeEffect(ServerPlayer *target) const{$/;"	f	class:Indulgence
takeEffect	src/package/standard-cards.cpp	/^void Lightning::takeEffect(ServerPlayer *target) const{$/;"	f	class:Lightning
takeGeneral	src/client/client.cpp	/^void Client::takeGeneral(const QString &take_str){$/;"	f	class:Client
takeGeneral	src/server/roomthread1v1.cpp	/^void RoomThread1v1::takeGeneral(ServerPlayer *player, const QString &name){$/;"	f	class:RoomThread1v1
takeGeneral	src/server/roomthread3v3.cpp	/^void RoomThread3v3::takeGeneral(ServerPlayer *player, const QString &name){$/;"	f	class:RoomThread3v3
takeGeneral	src/ui/roomscene.cpp	/^void RoomScene::takeGeneral(const QString &who, const QString &name){$/;"	f	class:RoomScene
takeGeneralCommand	src/server/room.cpp	/^void Room::takeGeneralCommand(ServerPlayer *player, const QString &arg){$/;"	f	class:Room
takeOver	src/core/WrappedCard.cpp	/^void WrappedCard::takeOver(Card* card)$/;"	f	class:WrappedCard
taken_	src/breakpad/client/windows/common/auto_critical_section.h	/^  bool taken_;$/;"	m	class:google_breakpad::AutoCriticalSection
tanhu_skill.getTurnUseCard	lua/ai/bgm-ai.lua	/^tanhu_skill.getTurnUseCard=function(self)$/;"	f
target	include/freetype/freetype/ftimage.h	/^    const FT_Bitmap*        target;$/;"	m	struct:FT_Raster_Params_
targetFilter	src/client/aux-skills.cpp	/^    virtual bool targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *) const{$/;"	f	class:ChoosePlayerCard
targetFilter	src/core/WrappedCard.h	/^    inline virtual bool targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const$/;"	f	class:WrappedCard
targetFilter	src/core/WrappedCard.h	/^    inline virtual bool targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self,$/;"	f	class:WrappedCard
targetFilter	src/core/card.cpp	/^bool Card::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:Card
targetFilter	src/core/card.cpp	/^bool Card::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self,$/;"	f	class:Card
targetFilter	src/package/bgm-package.cpp	/^bool DaheCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:DaheCard
targetFilter	src/package/bgm-package.cpp	/^bool LihunCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:LihunCard
targetFilter	src/package/bgm-package.cpp	/^bool TanhuCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:TanhuCard
targetFilter	src/package/bgm-package.cpp	/^bool YanxiaoCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *) const$/;"	f	class:YanxiaoCard
targetFilter	src/package/firepackage.cpp	/^bool JiemingCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:JiemingCard
targetFilter	src/package/firepackage.cpp	/^bool QiangxiCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:QiangxiCard
targetFilter	src/package/firepackage.cpp	/^bool QuhuCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:QuhuCard
targetFilter	src/package/firepackage.cpp	/^bool TianyiCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:TianyiCard
targetFilter	src/package/god.cpp	/^bool DawuCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:DawuCard
targetFilter	src/package/god.cpp	/^bool GongxinCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:GongxinCard
targetFilter	src/package/god.cpp	/^bool GreatYeyanCard::targetFilter(const QList<const Player *> &targets,$/;"	f	class:GreatYeyanCard
targetFilter	src/package/god.cpp	/^bool KuangfengCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:KuangfengCard
targetFilter	src/package/god.cpp	/^bool SmallYeyanCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const$/;"	f	class:SmallYeyanCard
targetFilter	src/package/god.cpp	/^bool WuqianCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:WuqianCard
targetFilter	src/package/joypackage.cpp	/^bool GaleShell::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:GaleShell
targetFilter	src/package/maneuvering.cpp	/^bool FireAttack::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:FireAttack
targetFilter	src/package/maneuvering.cpp	/^bool IronChain::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:IronChain
targetFilter	src/package/maneuvering.cpp	/^bool SupplyShortage::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:SupplyShortage
targetFilter	src/package/mountainpackage.cpp	/^bool QiaobianCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:QiaobianCard
targetFilter	src/package/mountainpackage.cpp	/^bool TiaoxinCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:TiaoxinCard
targetFilter	src/package/mountainpackage.cpp	/^bool ZhibaCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:ZhibaCard
targetFilter	src/package/mountainpackage.cpp	/^bool ZhijianCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:ZhijianCard
targetFilter	src/package/special3v3-package.cpp	/^bool HongyuanCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:HongyuanCard
targetFilter	src/package/standard-cards.cpp	/^bool Collateral::targetFilter(const QList<const Player *> &targets, $/;"	f	class:Collateral
targetFilter	src/package/standard-cards.cpp	/^bool Dismantlement::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:Dismantlement
targetFilter	src/package/standard-cards.cpp	/^bool Duel::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:Duel
targetFilter	src/package/standard-cards.cpp	/^bool Indulgence::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const$/;"	f	class:Indulgence
targetFilter	src/package/standard-cards.cpp	/^bool Slash::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:Slash
targetFilter	src/package/standard-cards.cpp	/^bool Snatch::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:Snatch
targetFilter	src/package/standard-generals.cpp	/^bool YihunCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:YihunCard
targetFilter	src/package/standard-skillcards.cpp	/^bool JieyinCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:JieyinCard
targetFilter	src/package/standard-skillcards.cpp	/^bool JijiangCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:JijiangCard
targetFilter	src/package/standard-skillcards.cpp	/^bool LijianCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:LijianCard
targetFilter	src/package/standard-skillcards.cpp	/^bool LiuliCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:LiuliCard
targetFilter	src/package/standard-skillcards.cpp	/^bool QingnangCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:QingnangCard
targetFilter	src/package/standard-skillcards.cpp	/^bool TuxiCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:TuxiCard
targetFilter	src/package/standard.cpp	/^bool SingleTargetTrick::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:SingleTargetTrick
targetFilter	src/package/thicket.cpp	/^bool DimengCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:DimengCard
targetFilter	src/package/thicket.cpp	/^bool HaoshiCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:HaoshiCard
targetFilter	src/package/wind.cpp	/^bool GuhuoCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:GuhuoCard
targetFilter	src/package/wind.cpp	/^bool HuangtianCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:HuangtianCard
targetFilter	src/package/wind.cpp	/^bool LeijiCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:LeijiCard
targetFilter	src/package/wind.cpp	/^bool ShensuCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:ShensuCard
targetFilter	src/package/wisdompackage.cpp	/^bool BawangCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:BawangCard
targetFilter	src/package/wisdompackage.cpp	/^bool JuaoCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:JuaoCard
targetFilter	src/package/wisdompackage.cpp	/^bool ShouyeCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:ShouyeCard
targetFilter	src/package/yitianpackage.cpp	/^bool ChengxiangCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:ChengxiangCard
targetFilter	src/package/yitianpackage.cpp	/^bool JuejiCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:JuejiCard
targetFilter	src/package/yitianpackage.cpp	/^bool LexueCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:LexueCard
targetFilter	src/package/yitianpackage.cpp	/^bool LianliCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:LianliCard
targetFilter	src/package/yitianpackage.cpp	/^bool LianliSlashCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:LianliSlashCard
targetFilter	src/package/yitianpackage.cpp	/^bool TaichenCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:TaichenCard
targetFilter	src/package/yjcm-package.cpp	/^bool GanluCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:GanluCard
targetFilter	src/package/yjcm-package.cpp	/^bool JujianCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:JujianCard
targetFilter	src/package/yjcm-package.cpp	/^bool PaiyiCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:PaiyiCard
targetFilter	src/package/yjcm-package.cpp	/^bool XianzhenCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:XianzhenCard
targetFilter	src/package/yjcm-package.cpp	/^bool XuanfengCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:XuanfengCard
targetFilter	src/package/yjcm-package.cpp	/^bool XuanhuoCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:XuanhuoCard
targetFilter	src/package/yjcm2012-package.cpp	/^bool AnxuCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:AnxuCard
targetFilter	src/package/yjcm2012-package.cpp	/^bool QiceCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:QiceCard
targetFilter	src/scenario/fancheng-scenario.cpp	/^bool ZhiyuanCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:ZhiyuanCard
targetFilter	src/scenario/guandu-scenario.cpp	/^bool SmallTuxiCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:SmallTuxiCard
targetFilter	src/scenario/guandu-scenario.cpp	/^bool ZhanShuangxiongCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:ZhanShuangxiongCard
targetFilter	src/scenario/scenerule.cpp	/^    virtual bool targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const {$/;"	f	class:Scene27Card
targetFilter	src/scenario/zombie-mode-scenario.cpp	/^bool PeachingCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *Self) const{$/;"	f	class:PeachingCard
targetFilter	swig/sanguosha_wrap.cxx	/^bool LuaSkillCard::targetFilter(const QList<const Player *> &targets, const Player *to_select, const Player *self) const{$/;"	f	class:LuaSkillCard
targetFixed	src/core/WrappedCard.h	/^    inline virtual bool targetFixed() const { return m_card->targetFixed(); }$/;"	f	class:WrappedCard
targetFixed	src/core/card.cpp	/^bool Card::targetFixed() const{$/;"	f	class:Card
targetFixed	src/package/wind.cpp	/^bool GuhuoCard::targetFixed() const{$/;"	f	class:GuhuoCard
targetFixed	src/package/yjcm2012-package.cpp	/^bool QiceCard::targetFixed() const{$/;"	f	class:QiceCard
target_fixed	src/core/card.h	/^    bool target_fixed;$/;"	m	class:Card
targetsFeasible	src/core/WrappedCard.h	/^    inline virtual bool targetsFeasible(const QList<const Player *> &targets, const Player *Self) const$/;"	f	class:WrappedCard
targetsFeasible	src/core/card.cpp	/^bool Card::targetsFeasible(const QList<const Player *> &targets, const Player *) const{$/;"	f	class:Card
targetsFeasible	src/package/god.cpp	/^bool GreatYeyanCard::targetsFeasible(const QList<const Player *> &targets, const Player *Self) const$/;"	f	class:GreatYeyanCard
targetsFeasible	src/package/god.cpp	/^bool SmallYeyanCard::targetsFeasible(const QList<const Player *> &targets, const Player *Self) const$/;"	f	class:SmallYeyanCard
targetsFeasible	src/package/maneuvering.cpp	/^bool IronChain::targetsFeasible(const QList<const Player *> &targets, const Player *Self) const{$/;"	f	class:IronChain
targetsFeasible	src/package/mountainpackage.cpp	/^bool QiaobianCard::targetsFeasible(const QList<const Player *> &targets, const Player *Self) const{$/;"	f	class:QiaobianCard
targetsFeasible	src/package/standard-cards.cpp	/^bool Collateral::targetsFeasible(const QList<const Player *> &targets, const Player *) const{$/;"	f	class:Collateral
targetsFeasible	src/package/standard-cards.cpp	/^bool Slash::targetsFeasible(const QList<const Player *> &targets, const Player *) const{$/;"	f	class:Slash
targetsFeasible	src/package/standard-generals.cpp	/^bool YihunCard::targetsFeasible(const QList<const Player *> &targets, const Player *Self) const{$/;"	f	class:YihunCard
targetsFeasible	src/package/standard-skillcards.cpp	/^bool LijianCard::targetsFeasible(const QList<const Player *> &targets, const Player *Self) const{$/;"	f	class:LijianCard
targetsFeasible	src/package/standard-skillcards.cpp	/^bool QingnangCard::targetsFeasible(const QList<const Player *> &targets, const Player *Self) const{$/;"	f	class:QingnangCard
targetsFeasible	src/package/thicket.cpp	/^bool DimengCard::targetsFeasible(const QList<const Player *> &targets, const Player *Self) const{$/;"	f	class:DimengCard
targetsFeasible	src/package/wind.cpp	/^bool GuhuoCard::targetsFeasible(const QList<const Player *> &targets, const Player *Self) const{$/;"	f	class:GuhuoCard
targetsFeasible	src/package/yitianpackage.cpp	/^bool ChengxiangCard::targetsFeasible(const QList<const Player *> &targets, const Player *Self) const{$/;"	f	class:ChengxiangCard
targetsFeasible	src/package/yjcm-package.cpp	/^bool GanluCard::targetsFeasible(const QList<const Player *> &targets, const Player *Self) const{$/;"	f	class:GanluCard
targetsFeasible	src/package/yjcm2012-package.cpp	/^bool AnxuCard::targetsFeasible(const QList<const Player *> &targets, const Player *Self) const{$/;"	f	class:AnxuCard
targetsFeasible	src/package/yjcm2012-package.cpp	/^bool QiceCard::targetsFeasible(const QList<const Player *> &targets, const Player *Self) const{$/;"	f	class:QiceCard
targetsFeasible	swig/sanguosha_wrap.cxx	/^bool LuaSkillCard::targetsFeasible(const QList<const Player *> &targets, const Player *self) const{$/;"	f	class:LuaSkillCard
tconcat	src/lua/ltablib.c	/^static int tconcat (lua_State *L) {$/;"	f	file:
teb	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int64_t            teb;             \/* Thread environment block *\/$/;"	m	struct:__anon24
test2bits	src/lua/lgc.h	37;"	d
testAMode	src/lua/lopcodes.h	257;"	d
testTMode	src/lua/lopcodes.h	258;"	d
test_data	src/breakpad/processor/static_contained_range_map_unittest.cc	/^const int test_data[] = {$/;"	m	namespace:__anon81	file:
test_eof	src/lua/liolib.c	/^static int test_eof (lua_State *L, FILE *f) {$/;"	f	file:
test_map	src/breakpad/processor/static_address_map_unittest.cc	/^  TestMap test_map[kNumberTestCases];$/;"	m	class:TestStaticAddressMap	file:
test_map	src/breakpad/processor/static_map_unittest.cc	/^  TestMap test_map;$/;"	m	class:TestInvalidMap	file:
test_map	src/breakpad/processor/static_map_unittest.cc	/^  TestMap test_map[kNumberTestCases];$/;"	m	class:TestValidMap	file:
test_map_	src/breakpad/processor/static_contained_range_map_unittest.cc	/^  google_breakpad::StaticContainedRangeMap<unsigned int, int> test_map_;$/;"	m	class:google_breakpad::TestStaticCRMMap	file:
test_then_block	src/lua/lparser.c	/^static int test_then_block (LexState *ls) {$/;"	f	file:
test_time	src/server/serverplayer.h	/^    QDateTime test_time;$/;"	m	class:ServerPlayer
testbit	src/lua/lgc.h	34;"	d
testbits	src/lua/lgc.h	29;"	d
testdata	src/breakpad/processor/static_address_map_unittest.cc	/^  int *testdata[kNumberTestCases];$/;"	m	class:TestStaticAddressMap	file:
testdata_dir	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  string testdata_dir;$/;"	m	class:__anon71::TestBasicSourceLineResolver	file:
testdata_dir	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  string testdata_dir;$/;"	m	class:__anon73::TestFastSourceLineResolver	file:
testnext	src/lua/lparser.c	/^static int testnext (LexState *ls, int c) {$/;"	f	file:
testsize	src/breakpad/processor/static_address_map_unittest.cc	/^  static const int testsize[];$/;"	m	class:TestStaticAddressMap	file:
testsize	src/breakpad/processor/static_address_map_unittest.cc	/^const int TestStaticAddressMap::testsize[] = {0, 1, 6, 1000};$/;"	m	class:TestStaticAddressMap	file:
text	src/dialog/cardeditor.cpp	/^    QString text() const{$/;"	f	class:SkillTitle
text	src/dialog/cardeditor.h	/^    QString text;$/;"	m	class:BlackEdgeTextItem
text_edit	src/dialog/mainwindow.h	/^    QTextEdit *text_edit;$/;"	m	class:BroadcastBox
tget	lua/lib/socket/ftp.lua	/^local function tget(gett)$/;"	f
th	src/lua/lstate.h	/^  struct lua_State th;  \/* thread *\/$/;"	m	union:GCObject	typeref:struct:GCObject::lua_State
thread	src/breakpad/google_breakpad/processor/minidump.h	/^  const MDRawThread* thread() const { return valid_ ? &thread_ : NULL; }$/;"	f	class:google_breakpad::MinidumpThread
thread	src/server/room.h	/^    RoomThread *thread;$/;"	m	class:Room
thread_	src/breakpad/google_breakpad/processor/minidump.h	/^  MDRawThread           thread_;$/;"	m	class:google_breakpad::MinidumpThread
thread_1v1	src/server/room.h	/^    RoomThread1v1 *thread_1v1;$/;"	m	class:Room
thread_3v3	src/server/room.h	/^    RoomThread3v3 *thread_3v3;$/;"	m	class:Room
thread_context	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDLocationDescriptor thread_context;    \/* MDRawContext[CPU] *\/$/;"	m	struct:__anon35
thread_context	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDLocationDescriptor thread_context;  \/* MDRawContext[CPU] *\/$/;"	m	struct:__anon24
thread_count	src/breakpad/google_breakpad/processor/minidump.h	/^  unsigned int thread_count() const {$/;"	f	class:google_breakpad::MinidumpThreadList
thread_count_	src/breakpad/google_breakpad/processor/minidump.h	/^  u_int32_t        thread_count_;$/;"	m	class:google_breakpad::MinidumpThreadList
thread_id	src/breakpad/client/windows/common/ipc_protocol.h	/^  DWORD* thread_id;$/;"	m	struct:google_breakpad::ProtocolMessage
thread_id	src/breakpad/client/windows/crash_generation/client_info.h	/^  DWORD* thread_id() const { return thread_id_; }$/;"	f	class:google_breakpad::ClientInfo
thread_id	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t            thread_id;         \/* Thread in which the exception$/;"	m	struct:__anon35
thread_id	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t            thread_id;$/;"	m	struct:__anon24
thread_id_	src/breakpad/client/windows/crash_generation/client_info.h	/^  DWORD* thread_id_;$/;"	m	class:google_breakpad::ClientInfo
thread_id_	src/breakpad/client/windows/crash_generation/crash_generation_client.h	/^  DWORD thread_id_;$/;"	m	class:google_breakpad::CrashGenerationClient
thread_list_	src/breakpad/processor/synth_minidump.h	/^  List<Thread> thread_list_;$/;"	m	class:google_breakpad::SynthMinidump::Dump
thread_memory_regions	src/breakpad/google_breakpad/processor/process_state.h	/^  const vector<MinidumpMemoryRegion*>* thread_memory_regions() const {$/;"	f	class:google_breakpad::ProcessState
thread_memory_regions_	src/breakpad/google_breakpad/processor/process_state.h	/^  vector<MinidumpMemoryRegion*> thread_memory_regions_;$/;"	m	class:google_breakpad::ProcessState
threads	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDRawThread threads[1];$/;"	m	struct:__anon25
threads	src/breakpad/google_breakpad/processor/process_state.h	/^  const vector<CallStack*>* threads() const { return &threads_; }$/;"	f	class:google_breakpad::ProcessState
threads_	src/breakpad/google_breakpad/processor/minidump.h	/^  MinidumpThreads* threads_;$/;"	m	class:google_breakpad::MinidumpThreadList
threads_	src/breakpad/google_breakpad/processor/process_state.h	/^  vector<CallStack*> threads_;$/;"	m	class:google_breakpad::ProcessState
threat 	lua/ai/smart-ai.lua	/^	threat = function (a, b)$/;"	f
throwAllCards	src/server/serverplayer.cpp	/^void ServerPlayer::throwAllCards(){$/;"	f	class:ServerPlayer
throwAllEquips	src/server/serverplayer.cpp	/^void ServerPlayer::throwAllEquips(){$/;"	f	class:ServerPlayer
throwAllHandCards	src/server/serverplayer.cpp	/^void ServerPlayer::throwAllHandCards(){$/;"	f	class:ServerPlayer
throwAllHandCardsAndEquips	src/server/serverplayer.cpp	/^void ServerPlayer::throwAllHandCardsAndEquips(){$/;"	f	class:ServerPlayer
throwAllMarks	src/server/serverplayer.cpp	/^void ServerPlayer::throwAllMarks(){$/;"	f	class:ServerPlayer
throwCard	src/server/room.cpp	/^void Room::throwCard(const Card *card, ServerPlayer *who){$/;"	f	class:Room
throwCard	src/server/room.cpp	/^void Room::throwCard(const Card *card, const CardMoveReason &reason, ServerPlayer *who){$/;"	f	class:Room
throwCard	src/server/room.cpp	/^void Room::throwCard(int card_id, ServerPlayer *who){$/;"	f	class:Room
thvalue	src/lua/lobject.h	101;"	d
tianyi_skill.getTurnUseCard	lua/ai/fire-ai.lua	/^tianyi_skill.getTurnUseCard=function(self)$/;"	f
tiaoxin_skill.getTurnUseCard 	lua/ai/mountain-ai.lua	/^tiaoxin_skill.getTurnUseCard = function(self)$/;"	f
tick	src/ui/roomscene.h	/^    int tick;$/;"	m	class:RoomScene
time_consuming	src/core/structs.h	/^    bool time_consuming;$/;"	m	struct:JudgeStruct
time_date_stamp	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t            time_date_stamp;  \/* time_t *\/$/;"	m	struct:__anon26
time_date_stamp	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t time_date_stamp;       \/* time_t *\/$/;"	m	struct:__anon19
time_date_stamp	src/breakpad/google_breakpad/processor/process_state.h	/^  u_int32_t time_date_stamp() const { return time_date_stamp_; }$/;"	f	class:google_breakpad::ProcessState
time_date_stamp_	src/breakpad/google_breakpad/processor/process_state.h	/^  u_int32_t time_date_stamp_;$/;"	m	class:google_breakpad::ProcessState
time_label	src/ui/roomscene.h	/^    QLabel *time_label;$/;"	m	class:ReplayerControlBar
time_limit_label	src/client/clientstruct.h	/^    QLabel *time_limit_label;$/;"	m	class:ServerInfoWidget
timeout_spinbox	src/server/server.h	/^    QSpinBox *timeout_spinbox;$/;"	m	class:ServerDialog
timerEvent	src/ui/TablePile.cpp	/^void TablePile::timerEvent(QTimerEvent *)$/;"	f	class:TablePile
timerEvent	src/ui/TimedProgressBar.cpp	/^void TimedProgressBar::timerEvent(QTimerEvent* timerEvent)$/;"	f	class:TimedProgressBar
timerEvent	src/ui/button.cpp	/^void Button::timerEvent(QTimerEvent *)$/;"	f	class:Button
timerEvent	src/ui/pixmapanimation.cpp	/^void PixmapAnimation::timerEvent(QTimerEvent *)$/;"	f	class:PixmapAnimation
timer_id	src/ui/button.h	/^    int timer_id;$/;"	m	class:Button
timer_id	src/ui/roomscene.h	/^    int timer_id;$/;"	m	class:RoomScene
timeunits	include/fmod/fmod_codec.h	/^    FMOD_TIMEUNIT                   timeunits;       \/* [in] When setposition codec is called, only these time formats will be passed to the codec. Use bitwise OR to accumulate different types. *\/$/;"	m	struct:FMOD_CODEC_DESCRIPTION
tinsert	src/lua/ltablib.c	/^static int tinsert (lua_State *L) {$/;"	f	file:
tiny_avatar_rect	src/dialog/cardeditor.h	/^    AvatarRectItem *big_avatar_rect, *small_avatar_rect, *tiny_avatar_rect;$/;"	m	class:CardScene
title	src/dialog/cardeditor.h	/^    BlackEdgeTextItem *name, *title;$/;"	m	class:CardScene
title	src/ui/button.h	/^    QPixmap *title;$/;"	m	class:Button
title	src/ui/window.h	/^    QString title;$/;"	m	class:Window
title_item	src/ui/button.h	/^    QGraphicsPixmapItem *title_item;$/;"	m	class:Button
title_text	src/dialog/cardeditor.cpp	/^    AATextItem *title_text;$/;"	m	class:SkillTitle	file:
tmname	src/lua/lstate.h	/^  TString *tmname[TM_N];  \/* array with tag-method names *\/$/;"	m	struct:global_State
tmudata	src/lua/lstate.h	/^  GCObject *tmudata;  \/* last element of list of userdata to be GC *\/$/;"	m	struct:global_State
to	src/core/skill.h	/^    QString from, to;$/;"	m	class:SPConvertSkill
to	src/core/structs.h	/^    Player *from, *to;$/;"	m	struct:CardMoveStruct
to	src/core/structs.h	/^    Player *from, *to;$/;"	m	struct:CardsMoveOneTimeStruct
to	src/core/structs.h	/^    Player *from, *to;$/;"	m	struct:CardsMoveStruct
to	src/core/structs.h	/^    Player::Phase to;$/;"	m	struct:PhaseChangeStruct
to	src/core/structs.h	/^    QList<ServerPlayer *> to;$/;"	m	struct:CardUseStruct
to	src/core/structs.h	/^    ServerPlayer *to;$/;"	m	struct:CardEffectStruct
to	src/core/structs.h	/^    ServerPlayer *to;$/;"	m	struct:DamageStruct
to	src/core/structs.h	/^    ServerPlayer *to;$/;"	m	struct:PindianStruct
to	src/core/structs.h	/^    ServerPlayer *to;$/;"	m	struct:SlashEffectStruct
to	src/dialog/distanceviewdialog.cpp	/^    QComboBox *from, *to;$/;"	m	struct:DistanceViewDialogUI	file:
to	src/server/roomthread.h	/^    QList<ServerPlayer *> to;$/;"	m	struct:LogMessage
toCenter	src/dialog/cardeditor.cpp	/^void AvatarRectItem::toCenter(QGraphicsScene *scene){$/;"	f	class:AvatarRectItem
toCenter	src/dialog/cardeditor.cpp	/^void BlackEdgeTextItem::toCenter(const QRectF &rect){$/;"	f	class:BlackEdgeTextItem
toJsonArray	src/core/jsonutils.cpp	/^Json::Value QSanProtocol::Utils:: toJsonArray(const QList<QString>& arg)$/;"	f	class:QSanProtocol::Utils
toJsonArray	src/core/jsonutils.cpp	/^Json::Value QSanProtocol::Utils:: toJsonArray(const QStringList& arg)$/;"	f	class:QSanProtocol::Utils
toJsonArray	src/core/jsonutils.cpp	/^Json::Value QSanProtocol::Utils::toJsonArray(const QList<int>& arg)$/;"	f	class:QSanProtocol::Utils
toJsonArray	src/core/jsonutils.cpp	/^Json::Value QSanProtocol::Utils::toJsonArray(const QString& s1, const Json::Value& s2)$/;"	f	class:QSanProtocol::Utils
toJsonArray	src/core/jsonutils.cpp	/^Json::Value QSanProtocol::Utils::toJsonArray(const QString& s1, const QString& s2)$/;"	f	class:QSanProtocol::Utils
toJsonArray	src/core/jsonutils.cpp	/^Json::Value QSanProtocol::Utils::toJsonArray(const QString& s1, const QString& s2, const QString& s3)$/;"	f	class:QSanProtocol::Utils
toJsonString	src/core/jsonutils.h	/^        inline Json::Value toJsonString(const QString& s)$/;"	f	namespace:QSanProtocol::Utils
toJsonValue	src/core/protocol.h	/^        inline Json::Value toJsonValue()$/;"	f	class:QSanProtocol::Countdown
toJsonValue	src/core/structs.cpp	/^Json::Value CardMoveReason::toJsonValue() const$/;"	f	class:CardMoveReason
toJsonValue	src/core/structs.cpp	/^Json::Value CardMoveStruct::toJsonValue() const$/;"	f	class:CardMoveStruct
toJsonValue	src/core/structs.cpp	/^Json::Value CardsMoveStruct::toJsonValue() const$/;"	f	class:CardsMoveStruct
toQString	src/core/jsonutils.h	/^        inline QString toQString(const Json::Value& value)$/;"	f	namespace:QSanProtocol::Utils
toString	src/core/WrappedCard.h	/^    inline virtual QString toString() const { return QString::number(m_id); }$/;"	f	class:WrappedCard
toString	src/core/card.cpp	/^QString Card::toString() const{$/;"	f	class:Card
toString	src/core/card.cpp	/^QString DummyCard::toString() const{$/;"	f	class:DummyCard
toString	src/core/card.cpp	/^QString SkillCard::toString() const{$/;"	f	class:SkillCard
toString	src/core/lua-wrapper.cpp	/^QString LuaSkillCard::toString() const{$/;"	f	class:LuaSkillCard
toString	src/core/protocol.cpp	/^string QSanProtocol::QSanGeneralPacket::toString() const$/;"	f	class:QSanProtocol::QSanGeneralPacket
toString	src/server/roomthread.cpp	/^QString EventTriplet::toString() const{$/;"	f	class:EventTriplet
toString	src/server/roomthread.cpp	/^QString LogMessage::toString() const{$/;"	f	class:LogMessage
toStyledString	src/jsoncpp/src/json_value.cpp	/^Value::toStyledString() const$/;"	f	class:Json::Value
to_bytes	include/freetype/freetype/internal/psaux.h	/^    (*to_bytes)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_
to_card	src/core/structs.h	/^    const Card *to_card;$/;"	m	struct:PindianStruct
to_change	src/ui/roomscene.h	/^    CardItem *to_change;$/;"	m	class:RoomScene
to_coord_array	include/freetype/freetype/internal/psaux.h	/^    (*to_coord_array)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_
to_fixed	include/freetype/freetype/internal/psaux.h	/^    (*to_fixed)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_
to_fixed_array	include/freetype/freetype/internal/psaux.h	/^    (*to_fixed_array)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_
to_int	include/freetype/freetype/internal/psaux.h	/^    (*to_int)( PS_Parser  parser );$/;"	m	struct:PS_Parser_FuncsRec_
to_pile_name	src/core/structs.h	/^    QString from_pile_name, to_pile_name;$/;"	m	struct:CardMoveStruct
to_pile_name	src/core/structs.h	/^    QString from_pile_name, to_pile_name;$/;"	m	struct:CardsMoveStruct
to_place	src/core/structs.h	/^    Player::Place from_place, to_place;$/;"	m	struct:CardMoveStruct
to_place	src/core/structs.h	/^    Player::Place from_place, to_place;$/;"	m	struct:CardsMoveStruct
to_place	src/core/structs.h	/^    Player::Place to_place;$/;"	m	struct:CardsMoveOneTimeStruct
to_player_name	src/core/structs.h	/^    QString from_player_name, to_player_name;$/;"	m	struct:CardMoveStruct
to_player_name	src/core/structs.h	/^    QString from_player_name, to_player_name;$/;"	m	struct:CardsMoveStruct
to_seat	src/dialog/distanceviewdialog.cpp	/^    QLineEdit *from_seat, *to_seat;$/;"	m	struct:DistanceViewDialogUI	file:
to_speak	src/ui/roomscene.h	/^    QString to_speak;$/;"	m	class:SpeakThread
to_token	include/freetype/freetype/internal/psaux.h	/^    (*to_token)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_
to_token_array	include/freetype/freetype/internal/psaux.h	/^    (*to_token_array)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_
tocEntries	scenarios/basara.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	scenarios/couple.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	scenarios/fancheng.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	scenarios/guandu.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	scenarios/hegemony.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	scenarios/hulaopass.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	scenarios/impasse_fight.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	scenarios/miniscene.html	/^  function tocEntries(el, toclevels) {$/;"	f
tocEntries	scenarios/zombie_mode.html	/^  function tocEntries(el, toclevels) {$/;"	f
tofile	src/lua/liolib.c	/^static FILE *tofile (lua_State *L) {$/;"	f	file:
tofilep	src/lua/liolib.c	54;"	d	file:
toggle	src/ui/rolecombobox.cpp	/^void RoleComboBox::toggle() {$/;"	f	class:RoleComboBox
toggle	src/ui/roomscene.cpp	/^void ReplayerControlBar::toggle(){$/;"	f	class:ReplayerControlBar
toggle	src/util/recorder.cpp	/^void Replayer::toggle(){$/;"	f	class:Replayer
toggleArrange	src/ui/roomscene.cpp	/^void RoomScene::toggleArrange(){$/;"	f	class:RoomScene
toggleCheck	src/server/server.cpp	/^void Select3v3GeneralDialog::toggleCheck(){$/;"	f	class:Select3v3GeneralDialog
toggleDiscards	src/ui/roomscene.cpp	/^void RoomScene::toggleDiscards(){$/;"	f	class:RoomScene
toggleDisplay	src/dialog/halldialog.cpp	/^void HallDialog::toggleDisplay(bool only_nonful){$/;"	f	class:HallDialog
toggleReadyCommand	src/server/room.cpp	/^void Room::toggleReadyCommand(ServerPlayer *player, const QString &){$/;"	f	class:Room
token	src/lua/llex.h	/^  int token;$/;"	m	struct:Token
tokenArrayBegin	src/jsoncpp/include/json/reader.h	/^         tokenArrayBegin,$/;"	e	enum:Json::Reader::TokenType
tokenArrayEnd	src/jsoncpp/include/json/reader.h	/^         tokenArrayEnd,$/;"	e	enum:Json::Reader::TokenType
tokenArraySeparator	src/jsoncpp/include/json/reader.h	/^         tokenArraySeparator,$/;"	e	enum:Json::Reader::TokenType
tokenComment	src/jsoncpp/include/json/reader.h	/^         tokenComment,$/;"	e	enum:Json::Reader::TokenType
tokenEndOfStream	src/jsoncpp/include/json/reader.h	/^         tokenEndOfStream = 0,$/;"	e	enum:Json::Reader::TokenType
tokenError	src/jsoncpp/include/json/reader.h	/^         tokenError$/;"	e	enum:Json::Reader::TokenType
tokenFalse	src/jsoncpp/include/json/reader.h	/^         tokenFalse,$/;"	e	enum:Json::Reader::TokenType
tokenMemberSeparator	src/jsoncpp/include/json/reader.h	/^         tokenMemberSeparator,$/;"	e	enum:Json::Reader::TokenType
tokenNull	src/jsoncpp/include/json/reader.h	/^         tokenNull,$/;"	e	enum:Json::Reader::TokenType
tokenNumber	src/jsoncpp/include/json/reader.h	/^         tokenNumber,$/;"	e	enum:Json::Reader::TokenType
tokenObjectBegin	src/jsoncpp/include/json/reader.h	/^         tokenObjectBegin,$/;"	e	enum:Json::Reader::TokenType
tokenObjectEnd	src/jsoncpp/include/json/reader.h	/^         tokenObjectEnd,$/;"	e	enum:Json::Reader::TokenType
tokenString	src/jsoncpp/include/json/reader.h	/^         tokenString,$/;"	e	enum:Json::Reader::TokenType
tokenTrue	src/jsoncpp/include/json/reader.h	/^         tokenTrue,$/;"	e	enum:Json::Reader::TokenType
token_	src/jsoncpp/include/json/reader.h	/^         Token token_;$/;"	m	class:Json::Reader::ErrorInfo
tokens	src/dialog/mainwindow.h	/^    QList<QObject*> tokens,equipped,loaded;$/;"	m	class:AcknowledgementScene
tonumber	src/lua/lvm.h	18;"	d
top	include/freetype/freetype/ftcache.h	/^    FT_Char   top;$/;"	m	struct:FTC_SBitRec_
top	include/freetype/freetype/ftglyph.h	/^    FT_Int       top;$/;"	m	struct:FT_BitmapGlyphRec_
top	include/freetype/freetype/internal/psaux.h	/^    FT_Long*             top;$/;"	m	struct:T1_DecoderRec_
top	src/lua/lstate.h	/^  StkId	top;  \/* top for this function *\/$/;"	m	struct:CallInfo
top	src/lua/lstate.h	/^  StkId top;  \/* first free slot in the stack *\/$/;"	m	struct:lua_State
top_bearing	include/freetype/freetype/internal/tttypes.h	/^    FT_Int           top_bearing;$/;"	m	struct:TT_LoaderRec_
tostate	src/lua/lstate.c	29;"	d	file:
tostore	src/lua/lparser.c	/^  int tostore;  \/* number of array elements pending to be stored *\/$/;"	m	struct:ConsControl	file:
tostring	src/lua/lvm.h	16;"	d
total_time	src/ui/sprite.h	/^    int total_time;$/;"	m	class:Sprite
totalbytes	src/lua/lstate.h	/^  lu_mem totalbytes;  \/* number of bytes currently allocated *\/$/;"	m	struct:global_State
tput	lua/lib/socket/ftp.lua	/^local function tput(putt)$/;"	f
trace_count	include/freetype/freetype/internal/ftdebug.h	/^    trace_count$/;"	e	enum:FT_Trace_
traceexec	src/lua/lvm.c	/^static void traceexec (lua_State *L, const Instruction *pc) {$/;"	f	file:
transfer	src/core/structs.h	/^    bool transfer;$/;"	m	struct:DamageStruct
transfigure	src/client/client.cpp	/^void Client::transfigure(const QString &transfigure_tr){$/;"	f	class:Client
transfigure	src/server/room.cpp	/^void Room::transfigure(ServerPlayer *player, const QString &new_general, bool full_state, bool invoke_start, const QString &old_general){$/;"	f	class:Room
transform	include/freetype/freetype/internal/ftgloadr.h	/^    FT_Matrix  transform;$/;"	m	struct:FT_SubGlyphRec_
transform_delta	include/freetype/freetype/internal/ftobjs.h	/^    FT_Vector           transform_delta;$/;"	m	struct:FT_Face_InternalRec_
transform_flags	include/freetype/freetype/internal/ftobjs.h	/^    FT_Int              transform_flags;$/;"	m	struct:FT_Face_InternalRec_
transform_glyph	include/freetype/freetype/ftrender.h	/^    FT_Renderer_TransformFunc  transform_glyph;$/;"	m	struct:FT_Renderer_Class_
transform_matrix	include/freetype/freetype/internal/ftobjs.h	/^    FT_Matrix           transform_matrix;$/;"	m	struct:FT_Face_InternalRec_
translate	src/core/engine.cpp	/^QString Engine::translate(const QString &to_translate) const{$/;"	f	class:Engine
translations	src/core/engine.h	/^    QHash<QString, QString> translations;$/;"	m	class:Engine
traverseclosure	src/lua/lgc.c	/^static void traverseclosure (global_State *g, Closure *cl) {$/;"	f	file:
traverseproto	src/lua/lgc.c	/^static void traverseproto (global_State *g, Proto *f) {$/;"	f	file:
traversestack	src/lua/lgc.c	/^static void traversestack (global_State *g, lua_State *l) {$/;"	f	file:
traversetable	src/lua/lgc.c	/^static int traversetable (global_State *g, Table *h) {$/;"	f	file:
treatstackoption	src/lua/ldblib.c	/^static void treatstackoption (lua_State *L, lua_State *L1, const char *fname) {$/;"	f	file:
tredirect	lua/lib/socket/http.lua	/^function tredirect(reqt, location)$/;"	f
tremble	src/ui/photo.cpp	/^void Photo::tremble(){$/;"	f	class:Photo
tremove	src/lua/ltablib.c	/^static int tremove (lua_State *L) {$/;"	f	file:
trequest	lua/lib/socket/http.lua	/^function trequest(reqt)$/;"	f
trigger	src/core/skill.cpp	/^bool DrawCardsSkill::trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:DrawCardsSkill
trigger	src/core/skill.cpp	/^bool GameStartSkill::trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &) const{$/;"	f	class:GameStartSkill
trigger	src/core/skill.cpp	/^bool MasochismSkill::trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:MasochismSkill
trigger	src/core/skill.cpp	/^bool PhaseChangeSkill::trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &) const{$/;"	f	class:PhaseChangeSkill
trigger	src/core/skill.cpp	/^bool SlashBuffSkill::trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:SlashBuffSkill
trigger	src/package/bgm-package.cpp	/^    virtual bool trigger(TriggerEvent , Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:DahePindian
trigger	src/package/bgm-package.cpp	/^    virtual bool trigger(TriggerEvent event, Room* room, ServerPlayer *daqiao, QVariant &data) const{$/;"	f	class:Anxian
trigger	src/package/bgm-package.cpp	/^    virtual bool trigger(TriggerEvent event, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Shichou
trigger	src/package/bgm-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:ChongZhen
trigger	src/package/bgm-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Dahe
trigger	src/package/bgm-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Mouduan
trigger	src/package/bgm-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *sp_pangtong, QVariant &data) const{$/;"	f	class:Manjuan
trigger	src/package/bgm-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *sp_pangtong, QVariant &data) const{$/;"	f	class:Zuixiang
trigger	src/package/bgm-package.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *caoren, QVariant &) const{$/;"	f	class:Kuiwei
trigger	src/package/bgm-package.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *diaochan, QVariant &) const{$/;"	f	class:Lihun
trigger	src/package/bgm-package.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *liubei, QVariant &data) const{$/;"	f	class:ZhaolieAct
trigger	src/package/bgm-package.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Jie
trigger	src/package/firepackage.cpp	/^    virtual bool trigger(TriggerEvent , Room* room, ServerPlayer *taishici, QVariant &data) const{$/;"	f	class:Tianyi
trigger	src/package/firepackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *shuangxiong, QVariant &data) const{$/;"	f	class:Shuangxiong
trigger	src/package/firepackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *pangde, QVariant &data) const{$/;"	f	class:Mengjin
trigger	src/package/firepackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *pangtong, QVariant &data) const{$/;"	f	class:Niepan
trigger	src/package/firepackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *wolong, QVariant &data) const{$/;"	f	class:Bazhen
trigger	src/package/god.cpp	/^    virtual bool trigger(TriggerEvent , Room *, ServerPlayer *shenzhuge, QVariant &) const{$/;"	f	class:Qixing
trigger	src/package/god.cpp	/^    virtual bool trigger(TriggerEvent , Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:LianpoCount
trigger	src/package/god.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Dawu
trigger	src/package/god.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Jilve
trigger	src/package/god.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Kuangbao
trigger	src/package/god.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Kuangfeng
trigger	src/package/god.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Renjie
trigger	src/package/god.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Wumou
trigger	src/package/god.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Wuqian
trigger	src/package/god.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *shenzhouyu, QVariant &data) const{$/;"	f	class:Qinyin
trigger	src/package/god.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &) const{$/;"	f	class:QixingClear
trigger	src/package/god.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Wuhun
trigger	src/package/god.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *shenguanyu, QVariant &) const{$/;"	f	class:WuhunRevenge
trigger	src/package/joypackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:GaleShellSkill
trigger	src/package/joypackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:GrabPeach
trigger	src/package/joypackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:YxSwordSkill
trigger	src/package/lingpackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Yishi
trigger	src/package/maneuvering.cpp	/^    virtual bool trigger(TriggerEvent , Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:GudingBladeSkill
trigger	src/package/maneuvering.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:SilverLionSkill
trigger	src/package/maneuvering.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:VineSkill
trigger	src/package/maneuvering.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:FireFanSkill
trigger	src/package/mountainpackage.cpp	/^    virtual bool trigger(TriggerEvent , Room *room, ServerPlayer *liushan, QVariant &data) const{$/;"	f	class:Fangquan
trigger	src/package/mountainpackage.cpp	/^    virtual bool trigger(TriggerEvent , Room *room, ServerPlayer *player, QVariant &) const{$/;"	f	class:GuzhengGet
trigger	src/package/mountainpackage.cpp	/^    virtual bool trigger(TriggerEvent , Room *room, ServerPlayer *zhanghe, QVariant &data) const{$/;"	f	class:Qiaobian
trigger	src/package/mountainpackage.cpp	/^    virtual bool trigger(TriggerEvent , Room* , ServerPlayer *zuoci, QVariant &data) const{$/;"	f	class:HuashenEnd
trigger	src/package/mountainpackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *liushan, QVariant &data) const{$/;"	f	class:Xiangle
trigger	src/package/mountainpackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:SunceZhiba
trigger	src/package/mountainpackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:TuntianGet
trigger	src/package/mountainpackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Beige
trigger	src/package/mountainpackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Duanchang
trigger	src/package/mountainpackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Guzheng
trigger	src/package/mountainpackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *sunce, QVariant &data) const{$/;"	f	class:Jiang
trigger	src/package/nostalgia.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *lingtong, QVariant &data) const{$/;"	f	class:NosXuanfeng
trigger	src/package/nostalgia.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:MoonSpearSkill
trigger	src/package/nostalgia.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:NosEnyuan
trigger	src/package/nostalgia.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:NosWuyan
trigger	src/package/sp-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Danlao
trigger	src/package/sp-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:SPMoonSpearSkill
trigger	src/package/sp-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *yangxiu, QVariant &data) const{$/;"	f	class:Jilei
trigger	src/package/sp-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *yuanshu, QVariant &data) const{$/;"	f	class:Yongsi
trigger	src/package/special3v3-package.cpp	/^    virtual bool trigger(TriggerEvent , Room *room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Mingzhe
trigger	src/package/special3v3-package.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Huanshi
trigger	src/package/special3v3-package.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *zhugejin, QVariant &data) const{$/;"	f	class:HongyuanAct
trigger	src/package/standard-cards.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *, QVariant &data) const{$/;"	f	class:QinggangSwordSkill
trigger	src/package/standard-cards.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:AxeSkill
trigger	src/package/standard-cards.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:BladeSkill
trigger	src/package/standard-cards.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:DoubleSwordSkill
trigger	src/package/standard-cards.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:EightDiagramSkill
trigger	src/package/standard-cards.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:IceSwordSkill
trigger	src/package/standard-cards.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:KylinBowSkill
trigger	src/package/standard-cards.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:RenwangShieldSkill
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent , Room *room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Chushi
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent , Room* room, ServerPlayer *luxun, QVariant &data) const{$/;"	f	class:Lianying
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room *room, ServerPlayer *lvmeng, QVariant &data) const{$/;"	f	class:Keji
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room *room, ServerPlayer *sp_shenzhaoyun, QVariant &data) const{$/;"	f	class:Longnu
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Tieji
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Wushuang
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *sunquan, QVariant &data) const{$/;"	f	class:Jiuyuan
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *yueying, QVariant &data) const{$/;"	f	class:Jizhi
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *zhenji, QVariant &data) const{$/;"	f	class:Luoshen
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent, Room *room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Shihun
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *caocao, QVariant &data) const{$/;"	f	class:Hujia
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *daqiao, QVariant &data) const{$/;"	f	class:Liuli
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *guojia, QVariant &data) const{$/;"	f	class:Tiandu
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *liubei, QVariant &data) const{$/;"	f	class:Jijiang
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Guicai
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:KongchengEffect
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *sunshangxiang, QVariant &data) const{$/;"	f	class:Xiaoji
trigger	src/package/standard-generals.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *xuchu, QVariant &data) const{$/;"	f	class:LuoyiBuff
trigger	src/package/thicket.cpp	/^    virtual bool trigger(TriggerEvent , Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:SavageAssaultAvoid
trigger	src/package/thicket.cpp	/^    virtual bool trigger(TriggerEvent , Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Wansha
trigger	src/package/thicket.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Baonue
trigger	src/package/thicket.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Huoshou
trigger	src/package/thicket.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *, QVariant &data) const{$/;"	f	class:Roulin
trigger	src/package/thicket.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Juxiang
trigger	src/package/thicket.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Songwei
trigger	src/package/thicket.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Xingshang
trigger	src/package/thicket.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *zhurong, QVariant &data) const{$/;"	f	class:Lieren
trigger	src/package/wind.cpp	/^    virtual bool trigger(TriggerEvent , Room *room, ServerPlayer *xiahouyuan, QVariant &data) const{$/;"	f	class:Shensu
trigger	src/package/wind.cpp	/^    virtual bool trigger(TriggerEvent event, Room* room, ServerPlayer *zhoutai, QVariant &) const{$/;"	f	class:Buqu
trigger	src/package/wind.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent , Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Liegong
trigger	src/package/wind.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &) const{$/;"	f	class:Huangtian
trigger	src/package/wind.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Kuanggu
trigger	src/package/wind.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *xiaoqiao, QVariant &data) const{$/;"	f	class:Tianxiang
trigger	src/package/wind.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Guidao
trigger	src/package/wind.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *zhangjiao, QVariant &data) const{$/;"	f	class:Leiji
trigger	src/package/wind.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *zhoutai, QVariant &) const{$/;"	f	class:BuquRemove
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *jiangwei, QVariant &data) const{$/;"	f	class:Yicai
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Longluo
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Shien
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Wenjiu
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *tianfeng, QVariant &data) const{$/;"	f	class:Gushou
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *xuyou, QVariant &data) const{$/;"	f	class:Tanlan
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *, QVariant &data) const{$/;"	f	class:Fuzuo
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *hua, QVariant &data) const{$/;"	f	class:Badao
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *jiangwei, QVariant &data) const{$/;"	f	class:Beifa
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Jiehuo
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Jincui
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Shicai
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Shipo
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *sunce, QVariant &data) const{$/;"	f	class:Bawang
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *sunce, QVariant &data) const{$/;"	f	class:Weidai
trigger	src/package/wisdompackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *tianfeng, QVariant &data) const{$/;"	f	class:Yuwen
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent , Room *, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Conghui
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent , Room *, ServerPlayer *target, QVariant &data) const{$/;"	f	class:LukangWeiyan
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *caizhaoji, QVariant &data) const{$/;"	f	class:CaizhaojiHujia
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *elai, QVariant &data) const{$/;"	f	class:Sizhan
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:LianliSlash
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Shenjun
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:WulingEffect
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:WulingExEffect
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Zonghuo
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *xiahoujuan, QVariant &data) const{$/;"	f	class:LianliJink
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *elai, QVariant &data) const{$/;"	f	class:Shenli
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &) const{$/;"	f	class:LianliClear
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &) const{$/;"	f	class:YitianSwordSkill
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &) const{$/;"	f	class:Zhenggong
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Dushi
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:JuejiGet
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Shaoying
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Xiliang
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Yitian
trigger	src/package/yitianpackage.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Zhenwei
trigger	src/package/yjcm-package.cpp	/^    virtual bool trigger(TriggerEvent ,  Room* room, ServerPlayer *player, QVariant &data) const$/;"	f	class:Jueqing
trigger	src/package/yjcm-package.cpp	/^    virtual bool trigger(TriggerEvent , Room* room, ServerPlayer *caozhi, QVariant &data) const{$/;"	f	class:Luoying
trigger	src/package/yjcm-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *gaoshun, QVariant &data) const{$/;"	f	class:Xianzhen
trigger	src/package/yjcm-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *lingtong, QVariant &data) const{$/;"	f	class:Xuanfeng
trigger	src/package/yjcm-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Enyuan
trigger	src/package/yjcm-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:JiushiFlip
trigger	src/package/yjcm-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Wuyan
trigger	src/package/yjcm-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Zhichi
trigger	src/package/yjcm-package.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &) const{$/;"	f	class:ZhichiClear
trigger	src/package/yjcm-package.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Buyi
trigger	src/package/yjcm-package.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Huilei
trigger	src/package/yjcm-package.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Pojun
trigger	src/package/yjcm-package.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Yizhong
trigger	src/package/yjcm-package.cpp	/^bool Shangshi::trigger(TriggerEvent triggerEvent,  Room* room, ServerPlayer *player, QVariant &data) const$/;"	f	class:Shangshi
trigger	src/package/yjcm2012-package.cpp	/^    virtual bool trigger(TriggerEvent , Room *room, ServerPlayer *liaohua, QVariant &data) const{$/;"	f	class:Dangxian
trigger	src/package/yjcm2012-package.cpp	/^    virtual bool trigger(TriggerEvent , Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Shiyong
trigger	src/package/yjcm2012-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *chengpu, QVariant &data) const{$/;"	f	class:Chunlao
trigger	src/package/yjcm2012-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *handang, QVariant &data) const{$/;"	f	class:Jiefan
trigger	src/package/yjcm2012-package.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Lihuo
trigger	src/package/yjcm2012-package.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *liaohua, QVariant &data) const{$/;"	f	class:Fuli
trigger	src/package/yjcm2012-package.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Qianxi
trigger	src/package/yjcm2012-package.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Zhenlie
trigger	src/package/yjcm2012-package.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Zhuiyi
trigger	src/scenario/boss-mode-scenario.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Daji
trigger	src/scenario/boss-mode-scenario.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Guzhan
trigger	src/scenario/boss-mode-scenario.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:ImpasseRule
trigger	src/scenario/boss-mode-scenario.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Jizhan
trigger	src/scenario/couple-scenario.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:CoupleScenarioRule
trigger	src/scenario/fancheng-scenario.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:FanchengRule
trigger	src/scenario/fancheng-scenario.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:Guagu
trigger	src/scenario/guandu-scenario.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:GuanduRule
trigger	src/scenario/miniscenarios.cpp	/^bool MiniSceneRule::trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const$/;"	f	class:MiniSceneRule
trigger	src/scenario/scenerule.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const {$/;"	f	class:Scene26Effect
trigger	src/scenario/scenerule.cpp	/^bool SceneRule::trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const {$/;"	f	class:SceneRule
trigger	src/scenario/zombie-mode-scenario.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:ZombieRule
trigger	src/scenario/zombie-mode-scenario.cpp	/^    virtual bool trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *zombie, QVariant &) const{$/;"	f	class:Zaibian
trigger	src/scenario/zombie-mode-scenario.cpp	/^    virtual bool trigger(TriggerEvent, Room* room, ServerPlayer *zombie, QVariant &data) const{$/;"	f	class:Xunmeng
trigger	src/server/gamerule.cpp	/^bool BasaraMode::trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:BasaraMode
trigger	src/server/gamerule.cpp	/^bool GameRule::trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:GameRule
trigger	src/server/gamerule.cpp	/^bool HulaoPassMode::trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:HulaoPassMode
trigger	src/server/roomthread.cpp	/^bool RoomThread::trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *target){$/;"	f	class:RoomThread
trigger	src/server/roomthread.cpp	/^bool RoomThread::trigger(TriggerEvent triggerEvent, Room* room, ServerPlayer *target, QVariant &data){$/;"	f	class:RoomThread
trigger	swig/sanguosha_wrap.cxx	/^bool LuaTriggerSkill::trigger(TriggerEvent event, Room* room, ServerPlayer *player, QVariant &data) const{$/;"	f	class:LuaTriggerSkill
trigger_chain	src/core/structs.h	/^    bool trigger_chain;$/;"	m	struct:DamageStruct
triggerable	src/core/skill.cpp	/^bool ArmorSkill::triggerable(const ServerPlayer *target) const{$/;"	f	class:ArmorSkill
triggerable	src/core/skill.cpp	/^bool SPConvertSkill::triggerable(const ServerPlayer *target) const{$/;"	f	class:SPConvertSkill
triggerable	src/core/skill.cpp	/^bool ScenarioRule::triggerable(const ServerPlayer *) const{$/;"	f	class:ScenarioRule
triggerable	src/core/skill.cpp	/^bool TriggerSkill::triggerable(const ServerPlayer *target) const{$/;"	f	class:TriggerSkill
triggerable	src/core/skill.cpp	/^bool WeaponSkill::triggerable(const ServerPlayer *target) const{$/;"	f	class:WeaponSkill
triggerable	src/package/bgm-package.cpp	/^    virtual bool triggerable(const ServerPlayer *player) const{$/;"	f	class:Shichou
triggerable	src/package/bgm-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Dahe
triggerable	src/package/bgm-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:DahePindian
triggerable	src/package/bgm-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Lihun
triggerable	src/package/bgm-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Mouduan
triggerable	src/package/bgm-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Yanxiao
triggerable	src/package/firepackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Bazhen
triggerable	src/package/firepackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Niepan
triggerable	src/package/firepackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Shuangxiong
triggerable	src/package/firepackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Tianyi
triggerable	src/package/god.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Baiyin
triggerable	src/package/god.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Dawu
triggerable	src/package/god.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Jilve
triggerable	src/package/god.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:JilveClear
triggerable	src/package/god.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Kuangfeng
triggerable	src/package/god.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Lianpo
triggerable	src/package/god.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:LianpoCount
triggerable	src/package/god.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:LianpoDo
triggerable	src/package/god.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Qixing
triggerable	src/package/god.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:QixingClear
triggerable	src/package/god.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:WuhunRevenge
triggerable	src/package/god.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Wuqian
triggerable	src/package/joypackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:GrabPeach
triggerable	src/package/maneuvering.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:SilverLionSkill
triggerable	src/package/mountainpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Beige
triggerable	src/package/mountainpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Duanchang
triggerable	src/package/mountainpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:FangquanGive
triggerable	src/package/mountainpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Guzheng
triggerable	src/package/mountainpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:GuzhengGet
triggerable	src/package/mountainpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:HuashenBegin
triggerable	src/package/mountainpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Hunzi
triggerable	src/package/mountainpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Qiaobian
triggerable	src/package/mountainpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Ruoyu
triggerable	src/package/mountainpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:SunceZhiba
triggerable	src/package/mountainpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:TuntianGet
triggerable	src/package/mountainpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Zaoxian
triggerable	src/package/mountainpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Zhiji
triggerable	src/package/nostalgia.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:NosWuyan
triggerable	src/package/sp-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Danji
triggerable	src/package/sp-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:JileiClear
triggerable	src/package/sp-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Xiuluo
triggerable	src/package/special3v3-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Huanshi
triggerable	src/package/standard-generals.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Chushi
triggerable	src/package/standard-generals.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Guicai
triggerable	src/package/standard-generals.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Hujia
triggerable	src/package/standard-generals.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Jijiang
triggerable	src/package/standard-generals.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Jiuyuan
triggerable	src/package/standard-generals.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:LuoyiBuff
triggerable	src/package/standard-generals.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Rende
triggerable	src/package/standard-generals.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Shihun
triggerable	src/package/thicket.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Baonue
triggerable	src/package/thicket.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Huoshou
triggerable	src/package/thicket.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Juxiang
triggerable	src/package/thicket.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Roulin
triggerable	src/package/thicket.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Songwei
triggerable	src/package/thicket.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Wansha
triggerable	src/package/thicket.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Xingshang
triggerable	src/package/thicket.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Yinghun
triggerable	src/package/wind.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Guidao
triggerable	src/package/wind.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Huangtian
triggerable	src/package/wind.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Kuanggu
triggerable	src/package/wind.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Tianxiang
triggerable	src/package/wisdompackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Fuzuo
triggerable	src/package/wisdompackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Jiehuo
triggerable	src/package/wisdompackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Jincui
triggerable	src/package/wisdompackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Juao
triggerable	src/package/wisdompackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Shicai
triggerable	src/package/wisdompackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Shien
triggerable	src/package/wisdompackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Shipo
triggerable	src/package/wisdompackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Weidai
triggerable	src/package/wisdompackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Wenjiu
triggerable	src/package/wisdompackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Yuwen
triggerable	src/package/yitianpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Dushi
triggerable	src/package/yitianpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:GongmouExchange
triggerable	src/package/yitianpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Kegou
triggerable	src/package/yitianpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:LianliClear
triggerable	src/package/yitianpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:LianliJink
triggerable	src/package/yitianpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:LianliSlash
triggerable	src/package/yitianpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Shaoying
triggerable	src/package/yitianpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Tongxin
triggerable	src/package/yitianpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:WulingEffect
triggerable	src/package/yitianpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:WulingExEffect
triggerable	src/package/yitianpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Xiliang
triggerable	src/package/yitianpackage.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Zhenggong
triggerable	src/package/yjcm-package.cpp	/^    virtual bool triggerable(const ServerPlayer *player) const{$/;"	f	class:Buyi
triggerable	src/package/yjcm-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Huilei
triggerable	src/package/yjcm-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Wuyan
triggerable	src/package/yjcm-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Xianzhen
triggerable	src/package/yjcm-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Yizhong
triggerable	src/package/yjcm-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:ZhichiClear
triggerable	src/package/yjcm-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Zili
triggerable	src/package/yjcm2012-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Fuli
triggerable	src/package/yjcm2012-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:JiangchiClear
triggerable	src/package/yjcm2012-package.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Zhuiyi
triggerable	src/scenario/boss-mode-scenario.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Jishi
triggerable	src/scenario/fancheng-scenario.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Dujiang
triggerable	src/scenario/fancheng-scenario.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:Xiansheng
triggerable	src/scenario/guandu-scenario.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const{$/;"	f	class:SmallTuxi
triggerable	src/scenario/scenerule.cpp	/^    virtual bool triggerable(const ServerPlayer *target) const {$/;"	f	class:Scene26Effect
triggerable	src/server/gamerule.cpp	/^bool GameRule::triggerable(const ServerPlayer *target) const{$/;"	f	class:GameRule
triggerable	swig/sanguosha_wrap.cxx	/^bool LuaTriggerSkill::triggerable(const ServerPlayer *target) const{$/;"	f	class:LuaTriggerSkill
truetype	include/freetype/freetype/internal/ftpic.h	/^    void* truetype;$/;"	m	struct:FT_PIC_Container_
trust	src/breakpad/google_breakpad/processor/stack_frame.h	/^  FrameTrust trust;$/;"	m	struct:google_breakpad::StackFrame
trust	src/client/client.cpp	/^void Client::trust(){$/;"	f	class:Client
trustCommand	src/server/room.cpp	/^void Room::trustCommand(ServerPlayer *player, const QString &){$/;"	f	class:Room
trust_ai	src/server/serverplayer.h	/^    AI *trust_ai;$/;"	m	class:ServerPlayer
trust_button	src/ui/roomscene.h	/^    QSanButton *trust_button;$/;"	m	class:RoomScene
trust_description	src/breakpad/google_breakpad/processor/stack_frame.h	/^  string trust_description() const {$/;"	f	struct:google_breakpad::StackFrame
trusting_item	src/ui/dashboard.h	/^    QGraphicsRectItem *trusting_item;$/;"	m	class:Dashboard
trusting_text	src/ui/dashboard.h	/^    QGraphicsSimpleTextItem *trusting_text;$/;"	m	class:Dashboard
tryAcquireLock	src/server/serverplayer.h	/^    inline bool tryAcquireLock(SemaphoreType type, int timeout = 0){$/;"	f	class:ServerPlayer
tryParse	src/core/jsonutils.cpp	/^bool QSanProtocol::Utils::tryParse(const Json::Value &arg, Qt::Alignment &align)$/;"	f	class:QSanProtocol::Utils
tryParse	src/core/jsonutils.cpp	/^bool QSanProtocol::Utils::tryParse(const Json::Value& arg, QColor& color)$/;"	f	class:QSanProtocol::Utils
tryParse	src/core/jsonutils.cpp	/^bool QSanProtocol::Utils::tryParse(const Json::Value& arg, QList<int>& result)$/;"	f	class:QSanProtocol::Utils
tryParse	src/core/jsonutils.cpp	/^bool QSanProtocol::Utils::tryParse(const Json::Value& arg, QPoint& result)$/;"	f	class:QSanProtocol::Utils
tryParse	src/core/jsonutils.cpp	/^bool QSanProtocol::Utils::tryParse(const Json::Value& arg, QRect& result)$/;"	f	class:QSanProtocol::Utils
tryParse	src/core/jsonutils.cpp	/^bool QSanProtocol::Utils::tryParse(const Json::Value& arg, QSize& result)$/;"	f	class:QSanProtocol::Utils
tryParse	src/core/jsonutils.cpp	/^bool QSanProtocol::Utils::tryParse(const Json::Value& arg, QString& result)$/;"	f	class:QSanProtocol::Utils
tryParse	src/core/jsonutils.cpp	/^bool QSanProtocol::Utils::tryParse(const Json::Value& arg, QStringList& result)$/;"	f	class:QSanProtocol::Utils
tryParse	src/core/jsonutils.cpp	/^bool QSanProtocol::Utils::tryParse(const Json::Value& arg, bool& result)$/;"	f	class:QSanProtocol::Utils
tryParse	src/core/jsonutils.cpp	/^bool QSanProtocol::Utils::tryParse(const Json::Value& arg, double& result)$/;"	f	class:QSanProtocol::Utils
tryParse	src/core/jsonutils.cpp	/^bool QSanProtocol::Utils::tryParse(const Json::Value& arg, int& result)$/;"	f	class:QSanProtocol::Utils
tryParse	src/core/protocol.cpp	/^bool QSanProtocol::Countdown::tryParse(Json::Value val)$/;"	f	class:QSanProtocol::Countdown
tryParse	src/core/protocol.cpp	/^bool QSanProtocol::QSanGeneralPacket::tryParse(const string &s, int &val)$/;"	f	class:QSanProtocol::QSanGeneralPacket
tryParse	src/core/structs.cpp	/^bool CardMoveReason::tryParse(const Json::Value& arg)$/;"	f	class:CardMoveReason
tryParse	src/core/structs.cpp	/^bool CardMoveStruct::tryParse(const Json::Value &arg)$/;"	f	class:CardMoveStruct
tryParse	src/core/structs.cpp	/^bool CardsMoveStruct::tryParse(const Json::Value &arg)$/;"	f	class:CardsMoveStruct
tryParse	src/server/roomthread.cpp	/^bool CardUseStruct::tryParse(const Json::Value &usage, Room *room){$/;"	f	class:CardUseStruct
tryParse	src/ui/SkinBank.cpp	/^bool IQSanComponentSkin::AnchoredRect::tryParse(Json::Value value)$/;"	f	class:IQSanComponentSkin::AnchoredRect
tryParse	src/ui/SkinBank.cpp	/^bool IQSanComponentSkin::QSanShadowTextFont::tryParse(Json::Value arg)$/;"	f	class:IQSanComponentSkin::QSanShadowTextFont
tryParse	src/ui/SkinBank.cpp	/^bool IQSanComponentSkin::QSanSimpleTextFont::tryParse(Json::Value arg)$/;"	f	class:IQSanComponentSkin::QSanSimpleTextFont
trydecpoint	src/lua/llex.c	/^static void trydecpoint (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
tryfuncTM	src/lua/ldo.c	/^static StkId tryfuncTM (lua_State *L, StkId func) {$/;"	f	file:
ts	src/lua/llex.h	/^  TString *ts;$/;"	m	union:__anon97
ts	src/lua/lstate.h	/^  union TString ts;$/;"	m	union:GCObject	typeref:union:GCObject::TString
tsv	src/lua/lobject.h	/^  } tsv;$/;"	m	union:TString	typeref:struct:TString::__anon91
tsvalue	src/lua/lobject.h	95;"	d
ttc_header	include/freetype/freetype/internal/tttypes.h	/^    TTC_HeaderRec         ttc_header;$/;"	m	struct:TT_FaceRec_
ttisboolean	src/lua/lobject.h	84;"	d
ttisfunction	src/lua/lobject.h	83;"	d
ttislightuserdata	src/lua/lobject.h	87;"	d
ttisnil	src/lua/lobject.h	79;"	d
ttisnumber	src/lua/lobject.h	80;"	d
ttisstring	src/lua/lobject.h	81;"	d
ttistable	src/lua/lobject.h	82;"	d
ttisthread	src/lua/lobject.h	86;"	d
ttisuserdata	src/lua/lobject.h	85;"	d
ttype	src/lua/lobject.h	90;"	d
turnOver	src/server/serverplayer.cpp	/^void ServerPlayer::turnOver(){$/;"	f	class:ServerPlayer
tvk	src/lua/lobject.h	/^  TValue tvk;$/;"	m	union:TKey
two_general_label	src/client/clientstruct.h	/^    QLabel *two_general_label;$/;"	m	class:ServerInfoWidget
twoto	src/lua/lobject.h	359;"	d
txtToken	src/lua/llex.c	/^static const char *txtToken (LexState *ls, int token) {$/;"	f	file:
type	include/fmod/fmod.h	/^    FMOD_TAGTYPE      type;         \/* [r] The type of this tag. *\/$/;"	m	struct:FMOD_TAG
type	include/freetype/freetype/freetype.h	/^    FT_Size_Request_Type  type;$/;"	m	struct:FT_Size_RequestRec_
type	include/freetype/freetype/ftbdf.h	/^    BDF_PropertyType  type;$/;"	m	struct:BDF_PropertyRec_
type	include/freetype/freetype/internal/ftrfork.h	/^    FT_RFork_Rule          type;$/;"	m	struct:ft_raccess_guess_rec_
type	include/freetype/freetype/internal/psaux.h	/^    T1_FieldType        type;         \/* type of field                  *\/$/;"	m	struct:T1_FieldRec_
type	include/freetype/freetype/internal/psaux.h	/^    T1_TokenType  type;    \/* type of token                            *\/$/;"	m	struct:T1_TokenRec_
type	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t type;                   \/* MDMemoryType *\/$/;"	m	struct:__anon45
type	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t type;$/;"	m	struct:__anon51
type	src/jsoncpp/src/json_value.cpp	/^Value::type() const$/;"	f	class:Json::Value
type	src/package/bgm-package.cpp	/^    QMap<Card::CardType, QString> type;$/;"	m	class:Zuixiang	file:
type	src/package/package.h	/^    Type type;$/;"	m	class:Package
type	src/server/roomthread.h	/^    QString type;$/;"	m	struct:LogMessage
type	swig/sanguosha_wrap.cxx	/^    int type;$/;"	m	struct:__anon146	file:
type	swig/sanguosha_wrap.cxx	/^  swig_type_info         *type;			\/* pointer to type that is equivalent to this type *\/$/;"	m	struct:swig_cast_info	file:
type	swig/sanguosha_wrap.cxx	/^  swig_type_info   **type;$/;"	m	struct:swig_lua_class	file:
type	swig/sanguosha_wrap.cxx	/^  swig_type_info   *type;$/;"	m	struct:__anon149	file:
type	swig/sanguosha_wrap.cxx	/^  swig_type_info   *type;$/;"	m	struct:__anon150	file:
type1	include/freetype/freetype/internal/t1types.h	/^    T1_FontRec      type1;$/;"	m	struct:T1_FaceRec_
type_	src/breakpad/processor/synth_minidump.h	/^  u_int32_t type_;$/;"	m	class:google_breakpad::SynthMinidump::Stream
type_	src/breakpad/processor/windows_frame_info.h	/^  StackInfoTypes type_;$/;"	m	struct:google_breakpad::WindowsFrameInfo
type_	src/jsoncpp/include/json/reader.h	/^         TokenType type_;$/;"	m	class:Json::Reader::Token
type_initial	swig/sanguosha_wrap.cxx	/^  swig_type_info         **type_initial;	\/* Array of initially generated type structures *\/$/;"	m	struct:swig_module_info	file:
types	swig/sanguosha_wrap.cxx	/^  swig_type_info         **types;		\/* Array of pointers to swig_type_info structures that are in this module *\/$/;"	m	struct:swig_module_info	file:
u	include/freetype/freetype/ftbdf.h	/^    } u;$/;"	m	struct:BDF_PropertyRec_	typeref:union:BDF_PropertyRec_::__anon104
u	src/lua/lobject.h	/^  } u;$/;"	m	struct:UpVal	typeref:union:UpVal::__anon93
u	src/lua/lparser.h	/^  } u;$/;"	m	struct:expdesc	typeref:union:expdesc::__anon99
u	src/lua/lstate.h	/^  union Udata u;$/;"	m	union:GCObject	typeref:union:GCObject::Udata
u_int128_t	src/breakpad/google_breakpad/common/breakpad_types.h	/^} u_int128_t;$/;"	t	typeref:struct:__anon5
u_int16_t	src/breakpad/google_breakpad/common/breakpad_types.h	/^typedef uint16_t u_int16_t;$/;"	t
u_int16_t	src/breakpad/google_breakpad/common/breakpad_types.h	/^typedef unsigned __int16 u_int16_t;$/;"	t
u_int32_t	src/breakpad/google_breakpad/common/breakpad_types.h	/^typedef uint32_t u_int32_t;$/;"	t
u_int32_t	src/breakpad/google_breakpad/common/breakpad_types.h	/^typedef unsigned __int32 u_int32_t;$/;"	t
u_int64_t	src/breakpad/google_breakpad/common/breakpad_types.h	/^typedef uint64_t u_int64_t;$/;"	t
u_int64_t	src/breakpad/google_breakpad/common/breakpad_types.h	/^typedef unsigned __int64 u_int64_t;$/;"	t
u_int8_t	src/breakpad/google_breakpad/common/breakpad_types.h	/^typedef uint8_t u_int8_t;$/;"	t
u_int8_t	src/breakpad/google_breakpad/common/breakpad_types.h	/^typedef unsigned __int8  u_int8_t;$/;"	t
uchar	src/lua/lstrlib.c	24;"	d	file:
ud	src/lua/lapi.c	/^  void *ud;$/;"	m	struct:CCallS	file:
ud	src/lua/lstate.h	/^  void *ud;         \/* auxiliary data to `frealloc' *\/$/;"	m	struct:global_State
ui	src/dialog/cardoverview.h	/^    Ui::CardOverview *ui;$/;"	m	class:CardOverview
ui	src/dialog/configdialog.h	/^    Ui::ConfigDialog *ui;$/;"	m	class:ConfigDialog
ui	src/dialog/connectiondialog.h	/^    Ui::ConnectionDialog *ui;$/;"	m	class:ConnectionDialog
ui	src/dialog/distanceviewdialog.h	/^    DistanceViewDialogUI *ui;$/;"	m	class:DistanceViewDialog
ui	src/dialog/generaloverview.h	/^    Ui::GeneralOverview *ui;$/;"	m	class:GeneralOverview
ui	src/dialog/mainwindow.h	/^    Ui::MainWindow *ui;$/;"	m	class:MainWindow
uid_base	include/freetype/freetype/t1tables.h	/^    FT_ULong        uid_base;$/;"	m	struct:CID_FaceInfoRec_
uintToString	src/jsoncpp/src/json_tool.h	/^uintToString( LargestUInt value, $/;"	f	namespace:Json
uintToStringBufferSize	src/jsoncpp/src/json_tool.h	/^   uintToStringBufferSize = 3*sizeof(LargestUInt)+1 $/;"	e	enum:Json::__anon1
uintValue	src/jsoncpp/include/json/value.h	/^      uintValue,     \/\/\/< unsigned integer value$/;"	e	enum:Json::ValueType
uint_	src/jsoncpp/include/json/value.h	/^         LargestUInt uint_;$/;"	m	union:Json::Value::ValueHolder
ulCodePageRange1	include/freetype/freetype/tttables.h	/^    FT_ULong   ulCodePageRange1;       \/* Bits 0-31   *\/$/;"	m	struct:TT_OS2_
ulCodePageRange2	include/freetype/freetype/tttables.h	/^    FT_ULong   ulCodePageRange2;       \/* Bits 32-63  *\/$/;"	m	struct:TT_OS2_
ulUnicodeRange1	include/freetype/freetype/tttables.h	/^    FT_ULong   ulUnicodeRange1;        \/* Bits 0-31   *\/$/;"	m	struct:TT_OS2_
ulUnicodeRange2	include/freetype/freetype/tttables.h	/^    FT_ULong   ulUnicodeRange2;        \/* Bits 32-63  *\/$/;"	m	struct:TT_OS2_
ulUnicodeRange3	include/freetype/freetype/tttables.h	/^    FT_ULong   ulUnicodeRange3;        \/* Bits 64-95  *\/$/;"	m	struct:TT_OS2_
ulUnicodeRange4	include/freetype/freetype/tttables.h	/^    FT_ULong   ulUnicodeRange4;        \/* Bits 96-127 *\/$/;"	m	struct:TT_OS2_
unbound_search	src/lua/ltable.c	/^static int unbound_search (Table *t, unsigned int j) {$/;"	f	file:
uncheckExtraButton	src/dialog/choosegeneraldialog.cpp	/^void FreeChooseDialog::uncheckExtraButton(QAbstractButton *click_button){$/;"	f	class:FreeChooseDialog
underline	include/freetype/freetype/ftwinfnt.h	/^    FT_Byte    underline;$/;"	m	struct:FT_WinFNT_HeaderRec_
underlinePosition	include/freetype/freetype/tttables.h	/^    FT_Short  underlinePosition;$/;"	m	struct:TT_Postscript_
underlineThickness	include/freetype/freetype/tttables.h	/^    FT_Short  underlineThickness;$/;"	m	struct:TT_Postscript_
underline_position	include/freetype/freetype/freetype.h	/^    FT_Short          underline_position;$/;"	m	struct:FT_FaceRec_
underline_position	include/freetype/freetype/t1tables.h	/^    FT_Short    underline_position;$/;"	m	struct:PS_FontInfoRec_
underline_thickness	include/freetype/freetype/freetype.h	/^    FT_Short          underline_thickness;$/;"	m	struct:FT_FaceRec_
underline_thickness	include/freetype/freetype/t1tables.h	/^    FT_UShort   underline_thickness;$/;"	m	struct:PS_FontInfoRec_
unescape	lua/lib/socket/url.lua	/^function unescape(s)$/;"	f
unicast	src/server/serverplayer.cpp	/^void ServerPlayer::unicast(const QString &message) const{$/;"	f	class:ServerPlayer
unicode	include/freetype/freetype/internal/psaux.h	/^    FT_CMap_Class  unicode;$/;"	m	struct:T1_CMap_ClassesRec_
unicode	include/freetype/freetype/internal/services/svpscmap.h	/^    FT_UInt32  unicode;      \/* bit 31 set: is glyph variant *\/$/;"	m	struct:PS_UniMap_
unicode	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int8_t  unicode;      \/* True if data is multibyte *\/$/;"	m	struct:__anon31
unicode_map	include/freetype/freetype/internal/t1types.h	/^    PS_Unicodes     unicode_map;$/;"	m	struct:T1_FaceRec_
uniform	src/util/recorder.cpp	/^void Replayer::uniform(){$/;"	f	class:Replayer
unindent	src/jsoncpp/src/json_writer.cpp	/^StyledStreamWriter::unindent()$/;"	f	class:Json::StyledStreamWriter
unindent	src/jsoncpp/src/json_writer.cpp	/^StyledWriter::unindent()$/;"	f	class:Json::StyledWriter
uninstallPackage	src/dialog/packagingeditor.cpp	/^void PackagingEditor::uninstallPackage(){$/;"	f	class:PackagingEditor
unique_files_	src/breakpad/common/windows/pdb_source_line_writer.h	/^  hash_map<wstring, DWORD> unique_files_;$/;"	m	class:google_breakpad::PDBSourceLineWriter
unique_id	include/freetype/freetype/t1tables.h	/^    FT_Int     unique_id;$/;"	m	struct:PS_PrivateRec_
units_per_EM	include/freetype/freetype/freetype.h	/^    FT_UShort         units_per_EM;$/;"	m	struct:FT_FaceRec_
unknown	src/jsoncpp/src/json_value.cpp	/^static const unsigned int unknown = (unsigned)-1;$/;"	m	namespace:Json	file:
unknown_list	src/server/roomthread1v1.h	/^    QStringList unknown_list;$/;"	m	class:RoomThread1v1
unlinkupval	src/lua/lfunc.c	/^static void unlinkupval (UpVal *uv) {$/;"	f	file:
unlock	include/fmod/fmod_output.h	/^    FMOD_OUTPUT_UNLOCKCALLBACK         unlock;                \/* [in] This is called from the FMOD software mixer thread if 'polling' = true.  This optional function accepts the data that has been mixed and copies it or does whatever it needs to before sending it to the hardware. *\/$/;"	m	struct:FMOD_OUTPUT_DESCRIPTION
unmakemask	src/lua/ldblib.c	/^static char *unmakemask (int mask, char *smask) {$/;"	f	file:
unpatented_hinting	include/freetype/freetype/internal/tttypes.h	/^    FT_Bool               unpatented_hinting;$/;"	m	struct:TT_FaceRec_
unregister	lua/lib/sqlite3.lua	/^local function unregister(registry, id)$/;"	f
unregisterRoom	src/core/engine.cpp	/^void Engine::unregisterRoom() {$/;"	f	class:Engine
unselectAll	src/ui/dashboard.cpp	/^void Dashboard::unselectAll(){$/;"	f	class:Dashboard
unselectAllTargets	src/ui/roomscene.cpp	/^void RoomScene::unselectAllTargets(const QGraphicsItem *except){$/;"	f	class:RoomScene
unsetFlag	src/core/skill.cpp	/^void Skill::unsetFlag(ServerPlayer *player) const{$/;"	f	class:Skill
up	src/dialog/cardeditor.h	/^    QPixmap up, middle, down;$/;"	m	class:SkillBox
up_generals	src/ui/roomscene.h	/^    QList<CardItem *> general_items, up_generals, down_generals;$/;"	m	class:RoomScene
up_items	src/ui/cardcontainer.h	/^    QList<CardItem *> up_items, down_items;$/;"	m	class:GuanxingBox
up_only	src/ui/cardcontainer.h	/^    bool up_only;$/;"	m	class:GuanxingBox
update	include/fmod/fmod_output.h	/^    FMOD_OUTPUT_UPDATECALLBACK         update;                \/* [in] Update function that is called once a frame by the user.  This is called from System::update. *\/$/;"	m	struct:FMOD_OUTPUT_DESCRIPTION
update	src/ui/magatamasItem.cpp	/^void MagatamasBoxItem::update()$/;"	f	class:MagatamasBoxItem
update	src/ui/qsanbutton.cpp	/^void QSanInvokeSkillDock::update()$/;"	f	class:QSanInvokeSkillDock
updateAllRoles	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::updateAllRoles(bool toggled){$/;"	f	class:CustomAssignDialog
updateAvatar	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::updateAvatar()$/;"	f	class:PlayerCardContainer
updateButtonEnablility	src/server/server.cpp	/^void ServerDialog::updateButtonEnablility(QAbstractButton *button)$/;"	f	class:ServerDialog
updateButtonText	src/dialog/cardeditor.cpp	/^void CardEditor::updateButtonText(const QFont &font){$/;"	f	class:CardEditor
updateCard	src/client/client.cpp	/^void Client::updateCard(const Json::Value &val)$/;"	f	class:Client
updateCardList	src/dialog/customassigndialog.cpp	/^void CardAssignDialog::updateCardList(){$/;"	f	class:CardAssignDialog
updateCardsOnGet	src/server/room.cpp	/^void Room::updateCardsOnGet(const CardsMoveStruct &move)$/;"	f	class:Room
updateCardsOnLose	src/server/room.cpp	/^void Room::updateCardsOnLose(const CardsMoveStruct &move)$/;"	f	class:Room
updateDelayedTricks	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::updateDelayedTricks()$/;"	f	class:PlayerCardContainer
updateDrankState	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::updateDrankState()$/;"	f	class:PlayerCardContainer
updateExcluded	src/dialog/customassigndialog.cpp	/^void CardAssignDialog::updateExcluded(int card_id){$/;"	f	class:CardAssignDialog
updateHandcardNum	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::updateHandcardNum()$/;"	f	class:PlayerCardContainer
updateHp	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::updateHp()$/;"	f	class:PlayerCardContainer
updateLack	src/client/clientstruct.cpp	/^void ServerInfoWidget::updateLack(int count){$/;"	f	class:ServerInfoWidget
updateListItems	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::updateListItems(){$/;"	f	class:CustomAssignDialog
updateMarks	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::updateMarks()$/;"	f	class:PlayerCardContainer
updateMetaInfo	src/dialog/packagingeditor.cpp	/^void PackagingEditor::updateMetaInfo(QListWidgetItem *item){$/;"	f	class:PackagingEditor
updateNumber	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::updateNumber(int num){$/;"	f	class:CustomAssignDialog
updatePending	src/ui/dashboard.cpp	/^void Dashboard::updatePending(){$/;"	f	class:Dashboard
updatePhase	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::updatePhase()$/;"	f	class:PlayerCardContainer
updatePhase	src/ui/photo.cpp	/^void Photo::updatePhase(){$/;"	f	class:Photo
updatePile	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::updatePile(const QString &pile_name)$/;"	f	class:PlayerCardContainer
updatePileInfo	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::updatePileInfo(int row){$/;"	f	class:CustomAssignDialog
updatePileNum	src/client/client.cpp	/^void Client::updatePileNum(){$/;"	f	class:Client
updatePlayerExSkills	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::updatePlayerExSkills(QStringList update_skills){$/;"	f	class:CustomAssignDialog
updatePlayerHpInfo	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::updatePlayerHpInfo(QString name){$/;"	f	class:CustomAssignDialog
updatePlayerInfo	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::updatePlayerInfo(QString name)$/;"	f	class:CustomAssignDialog
updateProperty	src/client/client.cpp	/^void Client::updateProperty(const Json::Value &arg)$/;"	f	class:Client
updateReadyItem	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::updateReadyItem(bool visible)$/;"	f	class:PlayerCardContainer
updateRole	src/dialog/customassigndialog.cpp	/^void CustomAssignDialog::updateRole(int index){$/;"	f	class:CustomAssignDialog
updateRole	src/dialog/roleassigndialog.cpp	/^void RoleAssignDialog::updateRole(QListWidgetItem *current){$/;"	f	class:RoleAssignDialog
updateRole	src/dialog/roleassigndialog.cpp	/^void RoleAssignDialog::updateRole(int index){$/;"	f	class:RoleAssignDialog
updateRole	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::updateRole(const QString &role)$/;"	f	class:PlayerCardContainer
updateRoles	src/ui/roomscene.cpp	/^void RoomScene::updateRoles(const QString &roles)$/;"	f	class:RoomScene
updateRolesBox	src/ui/roomscene.cpp	/^void RoomScene::updateRolesBox()$/;"	f	class:RoomScene
updateSelectedTargets	src/ui/roomscene.cpp	/^void RoomScene::updateSelectedTargets(){$/;"	f	class:RoomScene
updateSkillButtons	src/ui/roomscene.cpp	/^void RoomScene::updateSkillButtons(){$/;"	f	class:RoomScene
updateSkillList	src/dialog/customassigndialog.cpp	/^void SkillAssignDialog::updateSkillList(){$/;"	f	class:SkillAssignDialog
updateSmallAvatar	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::updateSmallAvatar()$/;"	f	class:PlayerCardContainer
updateStateItem	src/client/client.cpp	/^void Client::updateStateItem(const QString &state_str)$/;"	f	class:Client
updateStateItem	src/server/room.cpp	/^void Room::updateStateItem(){$/;"	f	class:Room
updateStatus	src/ui/roomscene.cpp	/^void RoomScene::updateStatus(Client::Status oldStatus, Client::Status newStatus){$/;"	f	class:RoomScene
updateTable	src/ui/roomscene.cpp	/^void RoomScene::updateTable()$/;"	f	class:RoomScene
updateTargetsEnablity	src/ui/roomscene.cpp	/^void RoomScene::updateTargetsEnablity(const Card *card){$/;"	f	class:RoomScene
updateTrustButton	src/ui/roomscene.cpp	/^void RoomScene::updateTrustButton(){$/;"	f	class:RoomScene
updateVotes	src/ui/GenericCardContainerUI.cpp	/^void PlayerCardContainer::updateVotes(){$/;"	f	class:PlayerCardContainer
update_skills	src/dialog/customassigndialog.h	/^    QStringList update_skills;$/;"	m	class:SkillAssignDialog
updated	include/fmod/fmod.h	/^    FMOD_BOOL         updated;      \/* [r] True if this tag has been updated since last being accessed with Sound::getTag *\/$/;"	m	struct:FMOD_TAG
upload_context_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  void* upload_context_;$/;"	m	class:google_breakpad::CrashGenerationServer
upload_request_callback_	src/breakpad/client/windows/crash_generation/crash_generation_server.h	/^  OnClientUploadRequestCallback upload_request_callback_;$/;"	m	class:google_breakpad::CrashGenerationServer
upper_bound	src/breakpad/processor/static_map-inl.h	/^StaticMap<Key, Value, Compare>::upper_bound(const Key &key) const {$/;"	f	class:google_breakpad::StaticMap
upval	src/lua/lparser.c	/^  lu_byte upval;  \/* true if some variable in the block is an upvalue *\/$/;"	m	struct:BlockCnt	file:
upvaldesc	src/lua/lparser.h	/^typedef struct upvaldesc {$/;"	s
upvaldesc	src/lua/lparser.h	/^} upvaldesc;$/;"	t	typeref:struct:upvaldesc
upvals	src/lua/lobject.h	/^  UpVal *upvals[1];$/;"	m	struct:LClosure
upvalue	src/lua/lobject.h	/^  TValue upvalue[1];$/;"	m	struct:CClosure
upvalues	src/lua/lobject.h	/^  TString **upvalues;  \/* upvalue names *\/$/;"	m	struct:Proto
upvalues	src/lua/lparser.h	/^  upvaldesc upvalues[LUAI_MAXUPVALUES];  \/* upvalues *\/$/;"	m	struct:FuncState
url 	lua/lib/socket/url.lua	/^    url = string.gsub(url, "#(.*)$", function(f)$/;"	f
url 	lua/lib/socket/url.lua	/^    url = string.gsub(url, "%;(.*)", function(p)$/;"	f
url 	lua/lib/socket/url.lua	/^    url = string.gsub(url, "%?(.*)", function(q)$/;"	f
url 	lua/lib/socket/url.lua	/^    url = string.gsub(url, "^\/\/([^\/]*)", function(n)$/;"	f
usBreakChar	include/freetype/freetype/tttables.h	/^    FT_UShort  usBreakChar;$/;"	m	struct:TT_OS2_
usDefaultChar	include/freetype/freetype/tttables.h	/^    FT_UShort  usDefaultChar;$/;"	m	struct:TT_OS2_
usFirstCharIndex	include/freetype/freetype/tttables.h	/^    FT_UShort  usFirstCharIndex;$/;"	m	struct:TT_OS2_
usLastCharIndex	include/freetype/freetype/tttables.h	/^    FT_UShort  usLastCharIndex;$/;"	m	struct:TT_OS2_
usMaxContext	include/freetype/freetype/tttables.h	/^    FT_UShort  usMaxContext;$/;"	m	struct:TT_OS2_
usWeightClass	include/freetype/freetype/tttables.h	/^    FT_UShort  usWeightClass;$/;"	m	struct:TT_OS2_
usWidthClass	include/freetype/freetype/tttables.h	/^    FT_UShort  usWidthClass;$/;"	m	struct:TT_OS2_
usWinAscent	include/freetype/freetype/tttables.h	/^    FT_UShort  usWinAscent;$/;"	m	struct:TT_OS2_
usWinDescent	include/freetype/freetype/tttables.h	/^    FT_UShort  usWinDescent;$/;"	m	struct:TT_OS2_
usage	src/breakpad/processor/minidump_stackwalk.cc	/^static void usage(const char *program_name) {$/;"	f	file:
use	src/core/WrappedCard.h	/^    inline virtual void use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const$/;"	f	class:WrappedCard
use	src/core/card.cpp	/^void Card::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:Card
use	src/package/bgm-package.cpp	/^void DaheCard::use(Room *room, ServerPlayer *zhangfei, QList<ServerPlayer *> &targets) const{$/;"	f	class:DaheCard
use	src/package/bgm-package.cpp	/^void TanhuCard::use(Room *room, ServerPlayer *lvmeng, QList<ServerPlayer *> &targets) const{$/;"	f	class:TanhuCard
use	src/package/firepackage.cpp	/^void QuhuCard::use(Room *room, ServerPlayer *xunyu, QList<ServerPlayer *> &targets) const{$/;"	f	class:QuhuCard
use	src/package/firepackage.cpp	/^void TianyiCard::use(Room *room, ServerPlayer *taishici, QList<ServerPlayer *> &targets) const{$/;"	f	class:TianyiCard
use	src/package/god.cpp	/^void DawuCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:DawuCard
use	src/package/god.cpp	/^void GreatYeyanCard::use(Room *room, ServerPlayer *shenzhouyu, QList<ServerPlayer *> &targets) const{$/;"	f	class:GreatYeyanCard
use	src/package/god.cpp	/^void ShenfenCard::use(Room *room, ServerPlayer *shenlvbu, QList<ServerPlayer *> &) const{$/;"	f	class:ShenfenCard
use	src/package/god.cpp	/^void SmallYeyanCard::use(Room *room, ServerPlayer *shenzhouyu, QList<ServerPlayer *> &targets) const{$/;"	f	class:SmallYeyanCard
use	src/package/lingpackage.cpp	/^void LuoyiCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &) const{$/;"	f	class:LuoyiCard
use	src/package/maneuvering.cpp	/^void Analeptic::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:Analeptic
use	src/package/maneuvering.cpp	/^void IronChain::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:IronChain
use	src/package/mountainpackage.cpp	/^void QiaobianCard::use(Room *room, ServerPlayer *zhanghe, QList<ServerPlayer *> &targets) const{$/;"	f	class:QiaobianCard
use	src/package/mountainpackage.cpp	/^void ZhibaCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:ZhibaCard
use	src/package/special3v3-package.cpp	/^void HuanshiCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:HuanshiCard
use	src/package/standard-cards.cpp	/^void AmazingGrace::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:AmazingGrace
use	src/package/standard-cards.cpp	/^void Nullification::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &) const{$/;"	f	class:Nullification
use	src/package/standard-cards.cpp	/^void Peach::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:Peach
use	src/package/standard-cards.cpp	/^void SingleTargetTrick::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:SingleTargetTrick
use	src/package/standard-cards.cpp	/^void Slash::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:Slash
use	src/package/standard-generals.cpp	/^void YihunCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:YihunCard
use	src/package/standard-skillcards.cpp	/^void GuicaiCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:GuicaiCard
use	src/package/standard-skillcards.cpp	/^void JijiangCard::use(Room *room, ServerPlayer *liubei, QList<ServerPlayer *> &targets) const{$/;"	f	class:JijiangCard
use	src/package/standard-skillcards.cpp	/^void KurouCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &) const{$/;"	f	class:KurouCard
use	src/package/standard-skillcards.cpp	/^void LijianCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:LijianCard
use	src/package/standard-skillcards.cpp	/^void QingnangCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:QingnangCard
use	src/package/standard-skillcards.cpp	/^void RendeCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:RendeCard
use	src/package/standard-skillcards.cpp	/^void TuxiCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:TuxiCard
use	src/package/standard-skillcards.cpp	/^void ZhihengCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &) const{$/;"	f	class:ZhihengCard
use	src/package/standard.cpp	/^void DelayedTrick::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:DelayedTrick
use	src/package/standard.cpp	/^void EquipCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:EquipCard
use	src/package/thicket.cpp	/^void DimengCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:DimengCard
use	src/package/thicket.cpp	/^void HaoshiCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:HaoshiCard
use	src/package/thicket.cpp	/^void LuanwuCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &) const{$/;"	f	class:LuanwuCard
use	src/package/wind.cpp	/^void GuidaoCard::use(Room *room, ServerPlayer *zhangjiao, QList<ServerPlayer *> &targets) const{$/;"	f	class:GuidaoCard
use	src/package/wind.cpp	/^void HuangtianCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:HuangtianCard
use	src/package/wind.cpp	/^void ShensuCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:ShensuCard
use	src/package/wisdompackage.cpp	/^void WeidaiCard::use(Room *room, ServerPlayer *sunce, QList<ServerPlayer *> &) const{$/;"	f	class:WeidaiCard
use	src/package/yitianpackage.cpp	/^void ChengxiangCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:ChengxiangCard
use	src/package/yitianpackage.cpp	/^void XunzhiCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &) const{$/;"	f	class:XunzhiCard
use	src/package/yitianpackage.cpp	/^void YisheAskCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &) const{$/;"	f	class:YisheAskCard
use	src/package/yitianpackage.cpp	/^void YisheCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &) const{$/;"	f	class:YisheCard
use	src/package/yjcm-package.cpp	/^void GanluCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:GanluCard
use	src/package/yjcm-package.cpp	/^void XinzhanCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &) const{$/;"	f	class:XinzhanCard
use	src/package/yjcm-package.cpp	/^void XuanfengCard::use(Room *room, ServerPlayer *lingtong, QList<ServerPlayer *> &targets) const{$/;"	f	class:XuanfengCard
use	src/package/yjcm2012-package.cpp	/^void AnxuCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:AnxuCard
use	src/package/yjcm2012-package.cpp	/^void ChunlaoCard::use(Room *, ServerPlayer *source, QList<ServerPlayer *> &) const{$/;"	f	class:ChunlaoCard
use	src/scenario/fancheng-scenario.cpp	/^void DujiangCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &) const{$/;"	f	class:DujiangCard
use	src/scenario/fancheng-scenario.cpp	/^void FloodCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &) const{$/;"	f	class:FloodCard
use	src/scenario/fancheng-scenario.cpp	/^void TaichenFightCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:TaichenFightCard
use	src/scenario/fancheng-scenario.cpp	/^void ZhiyuanCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:ZhiyuanCard
use	src/scenario/guandu-scenario.cpp	/^void ZhanShuangxiongCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:ZhanShuangxiongCard
use	swig/sanguosha_wrap.cxx	/^void LuaSkillCard::use(Room *room, ServerPlayer *source, QList<ServerPlayer *> &targets) const{$/;"	f	class:LuaSkillCard
useCard	src/server/ai.cpp	/^bool TrustAI::useCard(const Card *card){$/;"	f	class:TrustAI
useCard	src/server/room.cpp	/^void Room::useCard(const CardUseStruct &use, bool add_history){$/;"	f	class:Room
useCard	src/ui/roomscene.cpp	/^void RoomScene::useCard(const Card *card){$/;"	f	class:RoomScene
useSelectedCard	src/ui/roomscene.cpp	/^void RoomScene::useSelectedCard(){$/;"	f	class:RoomScene
use_extra	include/freetype/freetype/internal/ftgloadr.h	/^    FT_Bool          use_extra;$/;"	m	struct:FT_GlyphLoaderRec_
usedTimes	src/core/player.cpp	/^int Player::usedTimes(const QString &card_class) const{$/;"	f	class:Player
used_	src/jsoncpp/src/json_batchallocator.h	/^      AllocatedType *used_;$/;"	m	struct:Json::BatchAllocator::BatchInfo
user	include/freetype/freetype/ftimage.h	/^    void*                   user;$/;"	m	struct:FT_Raster_Params_
user	include/freetype/freetype/ftsystem.h	/^    void*            user;$/;"	m	struct:FT_MemoryRec_
user_data	include/freetype/freetype/internal/psaux.h	/^    void*         user_data;$/;"	m	struct:AFM_ParserRec_
user_string	src/core/card.h	/^    QString user_string;$/;"	m	class:SkillCard
userasynccancel	include/fmod/fmod.h	/^    FMOD_FILE_ASYNCCANCELCALLBACK  userasynccancel;    \/* [w] Optional. Specify 0 to ignore. Callback for seeking within this file. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
userasyncread	include/fmod/fmod.h	/^    FMOD_FILE_ASYNCREADCALLBACK    userasyncread;      \/* [w] Optional. Specify 0 to ignore. Callback for seeking within this file. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
userclose	include/fmod/fmod.h	/^    FMOD_FILE_CLOSECALLBACK        userclose;          \/* [w] Optional. Specify 0 to ignore. Callback for closing this file. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
userdata	include/fmod/fmod.h	/^    void                          *userdata;           \/* [w] Optional. Specify 0 to ignore. This is user data to be attached to the sound during creation.  Access via Sound::getUserData.  Note: This is not passed to FMOD_FILE_OPENCALLBACK, that is a different userdata that is file specific. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
userdata	include/fmod/fmod.h	/^    void           *userdata;       \/* [r] User data pointer. *\/$/;"	m	struct:__anon108
userdata	include/fmod/fmod_dsp.h	/^    void                        *userdata;           \/* [w] Optional. Specify 0 to ignore. This is user data to be attached to the DSP unit during creation.  Access via DSP::getUserData. *\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
useropen	include/fmod/fmod.h	/^    FMOD_FILE_OPENCALLBACK         useropen;           \/* [w] Optional. Specify 0 to ignore. Callback for opening this file. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
userproperty	include/fmod/fmod_memoryinfo.h	/^    unsigned int userproperty;                   \/* [out] User property objects *\/$/;"	m	struct:FMOD_MEMORY_USAGE_DETAILS
userread	include/fmod/fmod.h	/^    FMOD_FILE_READCALLBACK         userread;           \/* [w] Optional. Specify 0 to ignore. Callback for reading from this file. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
userseek	include/fmod/fmod.h	/^    FMOD_FILE_SEEKCALLBACK         userseek;           \/* [w] Optional. Specify 0 to ignore. Callback for seeking within this file. *\/$/;"	m	struct:FMOD_CREATESOUNDEXINFO
uuid_create_	src/breakpad/client/windows/handler/exception_handler.h	/^  UuidCreate_type uuid_create_;$/;"	m	class:google_breakpad::ExceptionHandler
uv	src/lua/lobject.h	/^  } uv;$/;"	m	union:Udata	typeref:struct:Udata::__anon92
uv	src/lua/lstate.h	/^  struct UpVal uv;$/;"	m	union:GCObject	typeref:struct:GCObject::UpVal
uvalue	src/lua/lobject.h	97;"	d
uvhead	src/lua/lstate.h	/^  UpVal uvhead;  \/* head of double-linked list of all open upvalues *\/$/;"	m	struct:global_State
v	src/lua/lobject.h	/^  TValue *v;  \/* points to stack or to its own value *\/$/;"	m	struct:UpVal
v	src/lua/lparser.c	/^  expdesc v;  \/* last list item read *\/$/;"	m	struct:ConsControl	file:
v	src/lua/lparser.c	/^  expdesc v;  \/* variable (global, local, upvalue, or indexed) *\/$/;"	m	struct:LHS_assign	file:
vadvance	include/freetype/freetype/internal/tttypes.h	/^    FT_Int           vadvance;$/;"	m	struct:TT_LoaderRec_
valid	include/freetype/freetype/internal/ftvalid.h	/^  ft_validator_run( FT_Validator  valid );$/;"	v
valid	src/breakpad/google_breakpad/processor/minidump.h	/^  bool valid() const { return valid_; }$/;"	f	class:google_breakpad::MinidumpObject
valid	src/breakpad/processor/windows_frame_info.h	/^  int valid;$/;"	m	struct:google_breakpad::WindowsFrameInfo
valid	src/ui/pixmapanimation.cpp	/^bool PixmapAnimation::valid()$/;"	f	class:PixmapAnimation
valid_	src/breakpad/google_breakpad/processor/minidump.h	/^  bool                      valid_;$/;"	m	class:google_breakpad::Minidump
valid_	src/breakpad/google_breakpad/processor/minidump.h	/^  bool      valid_;$/;"	m	class:google_breakpad::MinidumpObject
validate	src/core/WrappedCard.h	/^    inline virtual const Card *validate(const CardUseStruct *cardUse) const$/;"	f	class:WrappedCard
validate	src/core/card.cpp	/^const Card *Card::validate(const CardUseStruct *) const{$/;"	f	class:Card
validate	src/package/wind.cpp	/^const Card *GuhuoCard::validate(const CardUseStruct *card_use) const{$/;"	f	class:GuhuoCard
validate	src/package/yjcm2012-package.cpp	/^const Card *QiceCard::validate(const CardUseStruct *card_use) const{$/;"	f	class:QiceCard
validateInResposing	src/core/WrappedCard.h	/^    inline virtual const Card *validateInResposing(ServerPlayer *user, bool &continuable) const$/;"	f	class:WrappedCard
validateInResposing	src/core/card.cpp	/^const Card *Card::validateInResposing(ServerPlayer *, bool &continuable) const{$/;"	f	class:Card
validateInResposing	src/package/wind.cpp	/^const Card *GuhuoCard::validateInResposing(ServerPlayer *yuji, bool &continuable) const{$/;"	f	class:GuhuoCard
validateInResposing	src/package/yjcm2012-package.cpp	/^const Card *QiceCard::validateInResposing(ServerPlayer *xunyou, bool &continuable) const{$/;"	f	class:QiceCard
validate_data	src/breakpad/processor/postfix_evaluator_unittest.cc	/^  map<string, unsigned int> *validate_data;$/;"	m	struct:__anon75::EvaluateTestSet	file:
validity	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t validity;$/;"	m	struct:__anon49
validity_flag	src/breakpad/processor/cfi_frame_info.h	/^    int validity_flag;$/;"	m	struct:google_breakpad::SimpleCFIWalker::RegisterSet
valiswhite	src/lua/lgc.h	75;"	d
value	include/freetype/freetype/ftsystem.h	/^    long   value;$/;"	m	union:FT_StreamDesc_
value	include/freetype/freetype/internal/ftobjs.h	/^  ft_highpow2( FT_UInt32  value );$/;"	v
value	include/freetype/freetype/internal/ftstream.h	/^    FT_Byte    value;$/;"	m	struct:FT_Frame_Field_
value	include/freetype/freetype/internal/tttypes.h	/^    FT_FWord   value;  \/* kerning value                *\/$/;"	m	struct:TT_Kern0_PairRec_
value	src/breakpad/client/windows/common/ipc_protocol.h	/^  wchar_t value[kValueMaxLength];$/;"	m	struct:google_breakpad::CustomInfoEntry
value	src/breakpad/processor/postfix_evaluator_unittest.cc	/^  unsigned int value;$/;"	m	struct:__anon75::EvaluateForValueTest	file:
value	src/lua/lobject.h	/^    TValue value;  \/* the value (when closed) *\/$/;"	m	union:UpVal::__anon93
value 	lua/ai/smart-ai.lua	/^	value = function(a, b)$/;"	f
valueToQuotedString	src/jsoncpp/src/json_writer.cpp	/^std::string valueToQuotedString( const char *value )$/;"	f	namespace:Json
valueToString	src/jsoncpp/src/json_writer.cpp	/^std::string valueToString( Int value )$/;"	f	namespace:Json
valueToString	src/jsoncpp/src/json_writer.cpp	/^std::string valueToString( LargestInt value )$/;"	f	namespace:Json
valueToString	src/jsoncpp/src/json_writer.cpp	/^std::string valueToString( LargestUInt value )$/;"	f	namespace:Json
valueToString	src/jsoncpp/src/json_writer.cpp	/^std::string valueToString( UInt value )$/;"	f	namespace:Json
valueToString	src/jsoncpp/src/json_writer.cpp	/^std::string valueToString( bool value )$/;"	f	namespace:Json
valueToString	src/jsoncpp/src/json_writer.cpp	/^std::string valueToString( double value )$/;"	f	namespace:Json
value_	src/breakpad/processor/linked_ptr.h	/^  T* value_;$/;"	m	class:google_breakpad::linked_ptr
value_	src/jsoncpp/include/json/value.h	/^      } value_;$/;"	m	class:Json::Value	typeref:union:Json::Value::ValueHolder
value_serializer_	src/breakpad/processor/map_serializers.h	/^  SimpleSerializer<Value> value_serializer_;$/;"	m	class:google_breakpad::StdMapSerializer
variant_list	include/freetype/freetype/internal/ftobjs.h	/^    FT_CMap_VariantListFunc       variant_list;$/;"	m	struct:FT_CMap_ClassRec_
variantchar_list	include/freetype/freetype/internal/ftobjs.h	/^    FT_CMap_VariantCharListFunc   variantchar_list;$/;"	m	struct:FT_CMap_ClassRec_
varname	src/lua/lobject.h	/^  TString *varname;$/;"	m	struct:LocVar
vec	include/freetype/freetype/fttrigon.h	/^  FT_Vector_Length( FT_Vector*  vec );$/;"	v
vector_control	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int64_t  vector_control;$/;"	m	struct:__anon56
vector_register	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int128_t vector_register[MD_CONTEXT_AMD64_VR_COUNT];$/;"	m	struct:__anon56
vector_save	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  MDVectorSaveAreaPPC   vector_save;$/;"	m	struct:__anon11
vector_save	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	/^  MDVectorSaveAreaPPC   vector_save;$/;"	m	struct:__anon8
vendor_id	src/breakpad/google_breakpad/common/minidump_format.h	/^    u_int32_t vendor_id[3];               \/* cpuid 0: ebx, edx, ecx *\/$/;"	m	struct:__anon36::__anon37
verifier_module_	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^  HMODULE verifier_module_;$/;"	m	class:__anon67::HandleTraceData	file:
verifyNullificationResponse	src/server/room.cpp	/^bool Room::verifyNullificationResponse(ServerPlayer* player, const Json::Value& response, void* )$/;"	f	class:Room
version	include/fmod/fmod_codec.h	/^    unsigned int                    version;         \/* [in] Plugin writer's version number. *\/$/;"	m	struct:FMOD_CODEC_DESCRIPTION
version	include/fmod/fmod_dsp.h	/^    unsigned int                 version;            \/* [w] Plugin writer's version number. *\/$/;"	m	struct:FMOD_DSP_DESCRIPTION
version	include/fmod/fmod_output.h	/^    unsigned int                       version;               \/* [in] Plugin writer's version number. *\/$/;"	m	struct:FMOD_OUTPUT_DESCRIPTION
version	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  version;$/;"	m	struct:FT_WinFNT_HeaderRec_
version	include/freetype/freetype/internal/tttypes.h	/^    FT_Fixed   version;$/;"	m	struct:TTC_HeaderRec_
version	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort     version;$/;"	m	struct:TT_Gasp_
version	include/freetype/freetype/internal/tttypes.h	/^    FT_UShort     version;$/;"	m	struct:TT_HdmxRec_
version	include/freetype/freetype/t1tables.h	/^    FT_String*  version;$/;"	m	struct:PS_FontInfoRec_
version	include/freetype/freetype/tttables.h	/^    FT_Fixed   version;$/;"	m	struct:TT_MaxProfile_
version	include/freetype/freetype/tttables.h	/^    FT_UShort  version;                \/* 0x0001 - more or 0xFFFF *\/$/;"	m	struct:TT_OS2_
version	src/breakpad/google_breakpad/common/minidump_format.h	/^  u_int32_t version;$/;"	m	struct:__anon19
version	src/breakpad/processor/basic_code_module.h	/^  virtual string version() const { return version_; }$/;"	f	class:google_breakpad::BasicCodeModule
version	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  virtual string version() const { return ""; }$/;"	f	class:__anon71::TestCodeModule
version	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  virtual string version() const { return ""; }$/;"	f	class:__anon73::TestCodeModule
version	src/breakpad/processor/minidump.cc	/^string MinidumpModule::version() const {$/;"	f	class:google_breakpad::MinidumpModule
version	src/breakpad/processor/stackwalker_unittest_utils.h	/^  string version()          const { return version_; }$/;"	f	class:MockCodeModule
version_	src/breakpad/processor/basic_code_module.h	/^  string version_;$/;"	m	class:google_breakpad::BasicCodeModule
version_	src/breakpad/processor/stackwalker_unittest_utils.h	/^  string version_;$/;"	m	class:MockCodeModule
version_info	src/breakpad/google_breakpad/common/minidump_format.h	/^  MDVSFixedFileInfo    version_info;$/;"	m	struct:__anon26
version_information	src/breakpad/google_breakpad/common/minidump_format.h	/^    u_int32_t version_information;        \/* cpuid 1: eax *\/$/;"	m	struct:__anon36::__anon37
version_major	include/freetype/freetype/internal/ftobjs.h	/^    FT_Int             version_major;$/;"	m	struct:FT_LibraryRec_
version_minor	include/freetype/freetype/internal/ftobjs.h	/^    FT_Int             version_minor;$/;"	m	struct:FT_LibraryRec_
version_patch	include/freetype/freetype/internal/ftobjs.h	/^    FT_Int             version_patch;$/;"	m	struct:FT_LibraryRec_
vert	include/freetype/freetype/internal/tttypes.h	/^    TT_SBit_LineMetricsRec  vert;$/;"	m	struct:TT_SBit_ScaleRec_
vert	include/freetype/freetype/internal/tttypes.h	/^    TT_SBit_LineMetricsRec  vert;$/;"	m	struct:TT_SBit_StrikeRec_
vertAdvance	include/freetype/freetype/freetype.h	/^    FT_Pos  vertAdvance;$/;"	m	struct:FT_Glyph_Metrics_
vertAdvance	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte  vertAdvance;$/;"	m	struct:TT_SBit_MetricsRec_
vertBearingX	include/freetype/freetype/freetype.h	/^    FT_Pos  vertBearingX;$/;"	m	struct:FT_Glyph_Metrics_
vertBearingX	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  vertBearingX;$/;"	m	struct:TT_SBit_MetricsRec_
vertBearingY	include/freetype/freetype/freetype.h	/^    FT_Pos  vertBearingY;$/;"	m	struct:FT_Glyph_Metrics_
vertBearingY	include/freetype/freetype/internal/tttypes.h	/^    FT_Char  vertBearingY;$/;"	m	struct:TT_SBit_MetricsRec_
vertResolution	include/freetype/freetype/freetype.h	/^    FT_UInt               vertResolution;$/;"	m	struct:FT_Size_RequestRec_
vert_metrics	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*              vert_metrics;$/;"	m	struct:TT_FaceRec_
vert_metrics_offset	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              vert_metrics_offset;$/;"	m	struct:TT_FaceRec_
vert_metrics_size	include/freetype/freetype/internal/tttypes.h	/^    FT_ULong              vert_metrics_size;$/;"	m	struct:TT_FaceRec_
vertical	include/freetype/freetype/internal/tttypes.h	/^    TT_VertHeader         vertical;     \/* TT Vertical header, if present *\/$/;"	m	struct:TT_FaceRec_
vertical_info	include/freetype/freetype/internal/tttypes.h	/^    FT_Bool               vertical_info;$/;"	m	struct:TT_FaceRec_
vertical_resolution	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  vertical_resolution;$/;"	m	struct:FT_WinFNT_HeaderRec_
victim	src/ui/roomscene.h	/^    QComboBox *killer, *victim;$/;"	m	class:DeathNoteDialog
victims	src/server/serverplayer.h	/^    QList<ServerPlayer *> victims;$/;"	m	class:ServerPlayer
view	src/dialog/mainwindow.h	/^    FitView *view;$/;"	m	class:MainWindow
view	src/dialog/mainwindow.h	/^    QDeclarativeView *view;$/;"	m	class:AcknowledgementScene
view	src/ui/cardcontainer.cpp	/^void CardContainer::view(const ClientPlayer *player){$/;"	f	class:CardContainer
viewAs	src/client/aux-skills.cpp	/^const Card *ChoosePlayerSkill::viewAs() const{$/;"	f	class:ChoosePlayerSkill
viewAs	src/client/aux-skills.cpp	/^const Card *FreeDiscardSkill::viewAs(const QList<const Card *> &cards) const{$/;"	f	class:FreeDiscardSkill
viewAs	src/client/aux-skills.cpp	/^const Card *ResponseSkill::viewAs(const Card *originalCard) const{$/;"	f	class:ResponseSkill
viewAs	src/client/aux-skills.cpp	/^const Card *YijiViewAsSkill::viewAs(const QList<const Card *> &cards) const{$/;"	f	class:YijiViewAsSkill
viewAs	src/client/aux-skills.cpp	/^const Card* DiscardSkill::viewAs(const QList<const Card*> &cards) const{$/;"	f	class:DiscardSkill
viewAs	src/core/skill.cpp	/^const Card *OneCardViewAsSkill::viewAs(const QList<const Card *> &cards) const{$/;"	f	class:OneCardViewAsSkill
viewAs	src/core/skill.cpp	/^const Card *ZeroCardViewAsSkill::viewAs(const QList<const Card *> &cards) const{$/;"	f	class:ZeroCardViewAsSkill
viewAs	src/package/bgm-package.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:DaheViewAsSkill
viewAs	src/package/bgm-package.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:LihunSelect
viewAs	src/package/bgm-package.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:TanhuViewAsSkill
viewAs	src/package/bgm-package.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:YanxiaoVeiwAsSkill
viewAs	src/package/bgm-package.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Yanzheng
viewAs	src/package/firepackage.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:JiemingViewAsSkill
viewAs	src/package/firepackage.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const {$/;"	f	class:Lianhuan
viewAs	src/package/firepackage.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Huoji
viewAs	src/package/firepackage.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Kanpo
viewAs	src/package/firepackage.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Quhu
viewAs	src/package/firepackage.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:ShuangxiongViewAsSkill
viewAs	src/package/firepackage.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:TianyiViewAsSkill
viewAs	src/package/firepackage.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:Luanji
viewAs	src/package/firepackage.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:Qiangxi
viewAs	src/package/god.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:DawuViewAsSkill
viewAs	src/package/god.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:Gongxin
viewAs	src/package/god.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:JilveViewAsSkill
viewAs	src/package/god.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:KuangfengViewAsSkill
viewAs	src/package/god.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:Shenfen
viewAs	src/package/god.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:WuqianViewAsSkill
viewAs	src/package/god.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Wushen
viewAs	src/package/god.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:Longhun
viewAs	src/package/god.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:Yeyan
viewAs	src/package/lingpackage.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:NeoFanjian
viewAs	src/package/lingpackage.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:NeoLuoyi
viewAs	src/package/maneuvering.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{        $/;"	f	class:FanSkill
viewAs	src/package/mountainpackage.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:Jixi
viewAs	src/package/mountainpackage.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:QiaobianViewAsSkill
viewAs	src/package/mountainpackage.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:Tiaoxin
viewAs	src/package/mountainpackage.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:ZhibaPindian
viewAs	src/package/mountainpackage.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Zhijian
viewAs	src/package/nostalgia.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:NosXuanhuo
viewAs	src/package/nostalgia.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:NosJujian
viewAs	src/package/sp-package.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:WeidiViewAsSkill
viewAs	src/package/special3v3-package.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:HongyuanViewAsSkill
viewAs	src/package/special3v3-package.cpp	/^    virtual const Card *viewAs(const Card* to_select) const{$/;"	f	class:HuanshiViewAsSkill
viewAs	src/package/standard-cards.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:AxeViewAsSkill
viewAs	src/package/standard-cards.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:SpearSkill
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:Fanjian
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:JijiangViewAsSkill
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:Kurou
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:TuxiViewAsSkill
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:Yihun
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:GuicaiViewAsSkill
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Guose
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Jijiu
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Lijian
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:LiuliViewAsSkill
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Longdan
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Qingguo
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Qingnang
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Qixi
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Wusheng
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:Jieyin
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:RendeViewAsSkill
viewAs	src/package/standard-generals.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:Zhiheng
viewAs	src/package/thicket.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:Dimeng
viewAs	src/package/thicket.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:FangzhuViewAsSkill
viewAs	src/package/thicket.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:Luanwu
viewAs	src/package/thicket.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:YinghunViewAsSkill
viewAs	src/package/thicket.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Duanliang
viewAs	src/package/thicket.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Jiuchi
viewAs	src/package/thicket.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:HaoshiViewAsSkill
viewAs	src/package/wind.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:LeijiViewAsSkill
viewAs	src/package/wind.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Guhuo
viewAs	src/package/wind.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:GuidaoViewAsSkill
viewAs	src/package/wind.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Hongyan
viewAs	src/package/wind.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:HuangtianViewAsSkill
viewAs	src/package/wind.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:TianxiangViewAsSkill
viewAs	src/package/wind.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:ShensuViewAsSkill
viewAs	src/package/wisdompackage.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:BawangViewAsSkill
viewAs	src/package/wisdompackage.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:WeidaiViewAsSkill
viewAs	src/package/wisdompackage.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Shouye
viewAs	src/package/wisdompackage.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:Houyuan
viewAs	src/package/wisdompackage.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:JuaoViewAsSkill
viewAs	src/package/yitianpackage.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:LianliSlashViewAsSkill
viewAs	src/package/yitianpackage.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:LianliViewAsSkill
viewAs	src/package/yitianpackage.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:XunzhiViewAsSkill
viewAs	src/package/yitianpackage.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:YisheAsk
viewAs	src/package/yitianpackage.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Jueji
viewAs	src/package/yitianpackage.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:ChengxiangViewAsSkill
viewAs	src/package/yitianpackage.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:Guihan
viewAs	src/package/yitianpackage.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:Lexue
viewAs	src/package/yitianpackage.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:Taichen
viewAs	src/package/yitianpackage.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:YisheViewAsSkill
viewAs	src/package/yjcm-package.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:Ganlu
viewAs	src/package/yjcm-package.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:Jiushi
viewAs	src/package/yjcm-package.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:Paiyi
viewAs	src/package/yjcm-package.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:Xinzhan
viewAs	src/package/yjcm-package.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:XuanfengViewAsSkill
viewAs	src/package/yjcm-package.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:XuanhuoViewAsSkill
viewAs	src/package/yjcm-package.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Jinjiu
viewAs	src/package/yjcm-package.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:JujianViewAsSkill
viewAs	src/package/yjcm-package.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Mingce
viewAs	src/package/yjcm-package.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:XianzhenViewAsSkill
viewAs	src/package/yjcm2012-package.cpp	/^    const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Gongqi
viewAs	src/package/yjcm2012-package.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:Anxu
viewAs	src/package/yjcm2012-package.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:LihuoViewAsSkill
viewAs	src/package/yjcm2012-package.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:ChunlaoViewAsSkill
viewAs	src/package/yjcm2012-package.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:Qice
viewAs	src/scenario/fancheng-scenario.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:TaichenFight
viewAs	src/scenario/fancheng-scenario.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:ZhiyuanViewAsSkill
viewAs	src/scenario/fancheng-scenario.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:DujiangViewAsSkill
viewAs	src/scenario/fancheng-scenario.cpp	/^    virtual const Card *viewAs(const QList<const Card *> &cards) const{$/;"	f	class:Flood
viewAs	src/scenario/guandu-scenario.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:SmallTuxiViewAsSkill
viewAs	src/scenario/guandu-scenario.cpp	/^    virtual const Card *viewAs() const{$/;"	f	class:ZhanShuangxiong
viewAs	src/scenario/scenerule.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Scene27Skill	file:
viewAs	src/scenario/zombie-mode-scenario.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Ganran
viewAs	src/scenario/zombie-mode-scenario.cpp	/^    virtual const Card *viewAs(const Card *originalCard) const{$/;"	f	class:Peaching
viewAs	swig/sanguosha_wrap.cxx	/^const Card *LuaFilterSkill::viewAs(const Card *originalCard) const{$/;"	f	class:LuaFilterSkill
viewAs	swig/sanguosha_wrap.cxx	/^const Card *LuaViewAsSkill::viewAs(const QList<const Card *> &cards) const{$/;"	f	class:LuaViewAsSkill
viewDistance	src/ui/roomscene.cpp	/^void RoomScene::viewDistance(){$/;"	f	class:RoomScene
viewFilter	src/client/aux-skills.cpp	/^bool DiscardSkill::viewFilter(const QList<const Card *> &selected, const Card* card) const{$/;"	f	class:DiscardSkill
viewFilter	src/client/aux-skills.cpp	/^bool FreeDiscardSkill::viewFilter(const QList<const Card *> &, const Card *) const{$/;"	f	class:FreeDiscardSkill
viewFilter	src/client/aux-skills.cpp	/^bool ResponseSkill::viewFilter(const Card *card) const{$/;"	f	class:ResponseSkill
viewFilter	src/client/aux-skills.cpp	/^bool YijiViewAsSkill::viewFilter(const QList<const Card *> &, const Card* card) const{$/;"	f	class:YijiViewAsSkill
viewFilter	src/core/skill.cpp	/^bool OneCardViewAsSkill::viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:OneCardViewAsSkill
viewFilter	src/core/skill.cpp	/^bool ZeroCardViewAsSkill::viewFilter(const QList<const Card *> &, const Card *) const{$/;"	f	class:ZeroCardViewAsSkill
viewFilter	src/package/bgm-package.cpp	/^    virtual bool viewFilter(const Card *to_select) const{$/;"	f	class:DaheViewAsSkill
viewFilter	src/package/bgm-package.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:LihunSelect
viewFilter	src/package/bgm-package.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:TanhuViewAsSkill
viewFilter	src/package/bgm-package.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:YanxiaoVeiwAsSkill
viewFilter	src/package/bgm-package.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Yanzheng
viewFilter	src/package/firepackage.cpp	/^    virtual bool viewFilter(const Card *card) const{$/;"	f	class:ShuangxiongViewAsSkill
viewFilter	src/package/firepackage.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Huoji
viewFilter	src/package/firepackage.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Kanpo
viewFilter	src/package/firepackage.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Lianhuan
viewFilter	src/package/firepackage.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Quhu
viewFilter	src/package/firepackage.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:TianyiViewAsSkill
viewFilter	src/package/firepackage.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:Luanji
viewFilter	src/package/firepackage.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:Qiangxi
viewFilter	src/package/god.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Wushen
viewFilter	src/package/god.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *card) const{$/;"	f	class:Longhun
viewFilter	src/package/god.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:Yeyan
viewFilter	src/package/maneuvering.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:FanSkill
viewFilter	src/package/mountainpackage.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:ZhibaPindian
viewFilter	src/package/mountainpackage.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Zhijian
viewFilter	src/package/nostalgia.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:NosXuanhuo
viewFilter	src/package/nostalgia.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:NosJujian
viewFilter	src/package/special3v3-package.cpp	/^    virtual bool viewFilter(const Card *) const{$/;"	f	class:HuanshiViewAsSkill
viewFilter	src/package/standard-cards.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:AxeViewAsSkill
viewFilter	src/package/standard-cards.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:SpearSkill
viewFilter	src/package/standard-generals.cpp	/^    virtual bool viewFilter(const Card *) const{$/;"	f	class:Lijian
viewFilter	src/package/standard-generals.cpp	/^    virtual bool viewFilter(const Card *) const{$/;"	f	class:LiuliViewAsSkill
viewFilter	src/package/standard-generals.cpp	/^    virtual bool viewFilter(const Card* card) const{$/;"	f	class:Wusheng
viewFilter	src/package/standard-generals.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:GuicaiViewAsSkill
viewFilter	src/package/standard-generals.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Guose
viewFilter	src/package/standard-generals.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Jijiu
viewFilter	src/package/standard-generals.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Longdan
viewFilter	src/package/standard-generals.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Qingguo
viewFilter	src/package/standard-generals.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Qingnang
viewFilter	src/package/standard-generals.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Qixi
viewFilter	src/package/standard-generals.cpp	/^    virtual bool viewFilter(const QList<const Card *> &, const Card *) const{$/;"	f	class:Zhiheng
viewFilter	src/package/standard-generals.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:Jieyin
viewFilter	src/package/standard-generals.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:RendeViewAsSkill
viewFilter	src/package/thicket.cpp	/^    virtual bool viewFilter(const Card *card) const{$/;"	f	class:Duanliang
viewFilter	src/package/thicket.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Jiuchi
viewFilter	src/package/thicket.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:HaoshiViewAsSkill
viewFilter	src/package/wind.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Guhuo
viewFilter	src/package/wind.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:GuidaoViewAsSkill
viewFilter	src/package/wind.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Hongyan
viewFilter	src/package/wind.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:HuangtianViewAsSkill
viewFilter	src/package/wind.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:TianxiangViewAsSkill
viewFilter	src/package/wind.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:ShensuViewAsSkill
viewFilter	src/package/wisdompackage.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Shouye
viewFilter	src/package/wisdompackage.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:Houyuan
viewFilter	src/package/wisdompackage.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:JuaoViewAsSkill
viewFilter	src/package/yitianpackage.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Jueji
viewFilter	src/package/yitianpackage.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:ChengxiangViewAsSkill
viewFilter	src/package/yitianpackage.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:Guihan
viewFilter	src/package/yitianpackage.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:Lexue
viewFilter	src/package/yitianpackage.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:Taichen
viewFilter	src/package/yitianpackage.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:YisheViewAsSkill
viewFilter	src/package/yjcm-package.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Jinjiu
viewFilter	src/package/yjcm-package.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:JujianViewAsSkill
viewFilter	src/package/yjcm-package.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Mingce
viewFilter	src/package/yjcm-package.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:XianzhenViewAsSkill
viewFilter	src/package/yjcm2012-package.cpp	/^    virtual bool viewFilter(const Card *to_select) const{$/;"	f	class:Gongqi
viewFilter	src/package/yjcm2012-package.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:LihuoViewAsSkill
viewFilter	src/package/yjcm2012-package.cpp	/^    virtual bool viewFilter(const QList<const Card *> &, const Card* to_select) const{$/;"	f	class:ChunlaoViewAsSkill
viewFilter	src/package/yjcm2012-package.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:Qice
viewFilter	src/scenario/fancheng-scenario.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:ZhiyuanViewAsSkill
viewFilter	src/scenario/fancheng-scenario.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:DujiangViewAsSkill
viewFilter	src/scenario/fancheng-scenario.cpp	/^    virtual bool viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:Flood
viewFilter	src/scenario/scenerule.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Scene27Skill	file:
viewFilter	src/scenario/zombie-mode-scenario.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Ganran
viewFilter	src/scenario/zombie-mode-scenario.cpp	/^    virtual bool viewFilter(const Card* to_select) const{$/;"	f	class:Peaching
viewFilter	swig/sanguosha_wrap.cxx	/^bool LuaFilterSkill::viewFilter(const Card* to_select) const{$/;"	f	class:LuaFilterSkill
viewFilter	swig/sanguosha_wrap.cxx	/^bool LuaViewAsSkill::viewFilter(const QList<const Card *> &selected, const Card *to_select) const{$/;"	f	class:LuaViewAsSkill
view_as	extension-doc/5-Applications.lua	/^view_as=function(self, cards)$/;"	f
view_as	src/core/lua-wrapper.h	/^    LuaFunction view_as;$/;"	m	class:LuaFilterSkill
view_as	src/core/lua-wrapper.h	/^    LuaFunction view_as;$/;"	m	class:LuaViewAsSkill
view_as 	extension-doc/1-Start.lua	/^	view_as = function(self, cards)$/;"	f
view_as 	extension-doc/2-ViewAsSkill.lua	/^view_as = function(self, cards)$/;"	f
view_as 	extensions/0tagen.lua	/^  view_as = function(self, cards)$/;"	f
view_as_skill	src/core/skill.h	/^    const ViewAsSkill *view_as_skill;$/;"	m	class:TriggerSkill
view_as_skill	src/ui/dashboard.h	/^    const ViewAsSkill *view_as_skill;$/;"	m	class:Dashboard
view_filter	extension-doc/5-Applications.lua	/^view_filter=function(self, selected, to_select)$/;"	f
view_filter	src/core/lua-wrapper.h	/^    LuaFunction view_filter;$/;"	m	class:LuaFilterSkill
view_filter	src/core/lua-wrapper.h	/^    LuaFunction view_filter;$/;"	m	class:LuaViewAsSkill
view_filter 	extension-doc/1-Start.lua	/^	view_filter = function(self, selected, to_select)$/;"	f
view_filter 	extension-doc/2-ViewAsSkill.lua	/^view_filter = function(self, selected, to_select)$/;"	f
view_filter 	extensions/0tagen.lua	/^  view_filter = function(self, selected, to_select)$/;"	f
virtual_address_	src/breakpad/processor/disassembler_x86.h	/^    u_int32_t virtual_address_;$/;"	m	class:google_breakpad::DisassemblerX86
voice_obj	src/ui/roomscene.h	/^    QAxObject *voice_obj;$/;"	m	class:SpeakThread
vol0virtualvol	include/fmod/fmod.h	/^    float           vol0virtualvol;             \/* [r\/w] Optional. Specify 0 to ignore. For use with FMOD_INIT_VOL0_BECOMES_VIRTUAL.  If this flag is used, and the volume is 0.0, then the sound will become virtual.  Use this value to raise the threshold to a different point where a sound goes virtual. *\/$/;"	m	struct:FMOD_ADVANCEDSETTINGS
vrsave	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int32_t             vrsave;  \/* Vector save *\/$/;"	m	struct:__anon11
vrsave	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	/^  u_int64_t             vrsave;  \/* Vector save *\/$/;"	m	struct:__anon8
walker	src/breakpad/processor/cfi_frame_info_unittest.cc	/^  CFIWalker walker;$/;"	m	struct:SimpleCFIWalkerFixture	file:
warm_leader	src/server/roomthread3v3.h	/^    ServerPlayer *warm_leader, *cool_leader;$/;"	m	class:RoomThread3v3
warn	src/client/client.cpp	/^void Client::warn(const QString &reason){$/;"	f	class:Client
watch	src/util/recorder.h	/^    QTime watch;$/;"	m	class:Recorder
waveformat	include/fmod/fmod_codec.h	/^    FMOD_CODEC_WAVEFORMAT      *waveformat;    \/* [in] Pointer to an array of format structures containing information about each sample.  Can be 0 or NULL if FMOD_CODEC_GETWAVEFORMAT callback is preferred.  The number of entries here must equal the number of subsounds defined in the subsound parameter. If numsubsounds = 0 then there should be 1 instance of this structure. *\/$/;"	m	struct:FMOD_CODEC_STATE
wcstol_positive_strict	src/breakpad/common/windows/pdb_source_line_writer.cc	/^static bool wcstol_positive_strict(wchar_t *string, int *result) {$/;"	f	namespace:google_breakpad
weak	src/lua/lstate.h	/^  GCObject *weak;  \/* list of weak tables (to be cleared) *\/$/;"	m	struct:global_State
weapon	src/core/player.h	/^    WrappedCard *weapon, *armor, *defensive_horse, *offensive_horse;$/;"	m	class:Player
weight	include/freetype/freetype/ftwinfnt.h	/^    FT_UShort  weight;$/;"	m	struct:FT_WinFNT_HeaderRec_
weight	include/freetype/freetype/t1tables.h	/^    FT_String*  weight;$/;"	m	struct:PS_FontInfoRec_
weight_vector	include/freetype/freetype/t1tables.h	/^    FT_Fixed*        weight_vector;$/;"	m	struct:PS_BlendRec_
wfi_serializer_	src/breakpad/processor/module_serializer.h	/^                              linked_ptr<WindowsFrameInfo> > wfi_serializer_;$/;"	m	class:google_breakpad::ModuleSerializer
what	src/lua/lua.h	/^  const char *what;	\/* (S) `Lua', `C', `main', `tail' *\/$/;"	m	struct:lua_Debug
whilestat	src/lua/lparser.c	/^static void whilestat (LexState *ls, int line) {$/;"	f	file:
white2gray	src/lua/lgc.c	37;"	d	file:
who	src/core/structs.h	/^    ServerPlayer *who; \/\/ who is ask for help$/;"	m	struct:DyingStruct
who	src/core/structs.h	/^    ServerPlayer *who;$/;"	m	struct:JudgeStruct
who	src/core/structs.h	/^    ServerPlayer *who;$/;"	m	struct:RecoverStruct
wholeHandCards	src/server/serverplayer.cpp	/^DummyCard *ServerPlayer::wholeHandCards() const{$/;"	f	class:ServerPlayer
width	include/freetype/freetype/freetype.h	/^    FT_Long               width;$/;"	m	struct:FT_Size_RequestRec_
width	include/freetype/freetype/freetype.h	/^    FT_Pos  width;$/;"	m	struct:FT_Glyph_Metrics_
width	include/freetype/freetype/freetype.h	/^    FT_Short  width;$/;"	m	struct:FT_Bitmap_Size_
width	include/freetype/freetype/ftcache.h	/^    FT_Byte   width;$/;"	m	struct:FTC_SBitRec_
width	include/freetype/freetype/ftcache.h	/^    FT_Int      width;$/;"	m	struct:FTC_ImageTypeRec_
width	include/freetype/freetype/ftcache.h	/^    FT_UInt     width;$/;"	m	struct:FTC_ScalerRec_
width	include/freetype/freetype/ftimage.h	/^    int             width;$/;"	m	struct:FT_Bitmap_
width	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte  width;$/;"	m	struct:TT_SBit_MetricsRec_
width	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte  width;$/;"	m	struct:TT_SBit_Small_Metrics_
width	src/ui/dashboard.cpp	/^int Dashboard::width()$/;"	f	class:Dashboard
width	src/ui/indicatoritem.h	/^    qreal width;$/;"	m	class:IndicatorItem
width	src/ui/qsanbutton.cpp	/^int QSanInvokeSkillDock::width() const$/;"	f	class:QSanInvokeSkillDock
widths	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte*  widths;$/;"	m	struct:TT_HdmxEntryRec_
willThrow	src/core/WrappedCard.h	/^    inline virtual bool willThrow() const {$/;"	f	class:WrappedCard
willThrow	src/core/card.cpp	/^bool Card::willThrow() const{$/;"	f	class:Card
willThrow	src/package/nostalgia.cpp	/^    virtual bool willThrow() const{$/;"	f	class:EnyuanPattern
willThrow	src/package/package.h	/^    virtual bool willThrow() const{$/;"	f	class:CardPattern
will_throw	src/core/card.h	/^    bool will_throw;$/;"	m	class:Card
windows_frame_info	src/breakpad/google_breakpad/processor/stack_frame_cpu.h	/^  WindowsFrameInfo *windows_frame_info;$/;"	m	struct:google_breakpad::StackFrameX86
windows_frame_info_	src/breakpad/processor/basic_source_line_resolver_types.h	/^    windows_frame_info_[WindowsFrameInfo::STACK_INFO_LAST];$/;"	m	class:google_breakpad::BasicSourceLineResolver::Module
windows_frame_info_	src/breakpad/processor/fast_source_line_resolver_types.h	/^    windows_frame_info_[WindowsFrameInfo::STACK_INFO_LAST];$/;"	m	class:google_breakpad::FastSourceLineResolver::Module
windows_x86	src/breakpad/processor/synth_minidump.cc	/^const MDRawSystemInfo SystemInfo::windows_x86 = {$/;"	m	class:google_breakpad::SynthMinidump::SystemInfo	file:
windows_x86	src/breakpad/processor/synth_minidump.h	/^  static const MDRawSystemInfo windows_x86;$/;"	m	class:google_breakpad::SynthMinidump::SystemInfo
windows_x86_csd_version	src/breakpad/processor/synth_minidump.cc	/^const string SystemInfo::windows_x86_csd_version = "Service Pack 2";$/;"	m	class:google_breakpad::SynthMinidump::SystemInfo	file:
windows_x86_csd_version	src/breakpad/processor/synth_minidump.h	/^  static const string windows_x86_csd_version;$/;"	m	class:google_breakpad::SynthMinidump::SystemInfo
wrapt['quoted-printable'] 	lua/lib/mime.lua	/^wrapt['quoted-printable'] = function()$/;"	f
wrapt['text'] 	lua/lib/mime.lua	/^wrapt['text'] = function(length)$/;"	f
write	src/jsoncpp/src/json_writer.cpp	/^FastWriter::write( const Value &root )$/;"	f	class:Json::FastWriter
write	src/jsoncpp/src/json_writer.cpp	/^StyledStreamWriter::write( std::ostream &out, const Value &root )$/;"	f	class:Json::StyledStreamWriter
write	src/jsoncpp/src/json_writer.cpp	/^StyledWriter::write( const Value &root )$/;"	f	class:Json::StyledWriter
writeArrayValue	src/jsoncpp/src/json_writer.cpp	/^StyledStreamWriter::writeArrayValue( const Value &value )$/;"	f	class:Json::StyledStreamWriter
writeArrayValue	src/jsoncpp/src/json_writer.cpp	/^StyledWriter::writeArrayValue( const Value &value )$/;"	f	class:Json::StyledWriter
writeCommentAfterValueOnSameLine	src/jsoncpp/src/json_writer.cpp	/^StyledStreamWriter::writeCommentAfterValueOnSameLine( const Value &root )$/;"	f	class:Json::StyledStreamWriter
writeCommentAfterValueOnSameLine	src/jsoncpp/src/json_writer.cpp	/^StyledWriter::writeCommentAfterValueOnSameLine( const Value &root )$/;"	f	class:Json::StyledWriter
writeCommentBeforeValue	src/jsoncpp/src/json_writer.cpp	/^StyledStreamWriter::writeCommentBeforeValue( const Value &root )$/;"	f	class:Json::StyledStreamWriter
writeCommentBeforeValue	src/jsoncpp/src/json_writer.cpp	/^StyledWriter::writeCommentBeforeValue( const Value &root )$/;"	f	class:Json::StyledWriter
writeIndent	src/jsoncpp/src/json_writer.cpp	/^StyledStreamWriter::writeIndent()$/;"	f	class:Json::StyledStreamWriter
writeIndent	src/jsoncpp/src/json_writer.cpp	/^StyledWriter::writeIndent()$/;"	f	class:Json::StyledWriter
writeValue	src/jsoncpp/src/json_writer.cpp	/^FastWriter::writeValue( const Value &value )$/;"	f	class:Json::FastWriter
writeValue	src/jsoncpp/src/json_writer.cpp	/^StyledStreamWriter::writeValue( const Value &value )$/;"	f	class:Json::StyledStreamWriter
writeValue	src/jsoncpp/src/json_writer.cpp	/^StyledWriter::writeValue( const Value &value )$/;"	f	class:Json::StyledWriter
writeWithIndent	src/jsoncpp/src/json_writer.cpp	/^StyledStreamWriter::writeWithIndent( const std::string &value )$/;"	f	class:Json::StyledStreamWriter
writeWithIndent	src/jsoncpp/src/json_writer.cpp	/^StyledWriter::writeWithIndent( const std::string &value )$/;"	f	class:Json::StyledWriter
write_dump_	src/breakpad/client/windows/crash_generation/minidump_generator.h	/^  MiniDumpWriteDumpType write_dump_;$/;"	m	class:google_breakpad::MinidumpGenerator
write_eax_arg_to_call	src/breakpad/processor/disassembler_x86_unittest.cc	/^unsigned char write_eax_arg_to_call[] =$/;"	m	namespace:__anon68	file:
writer	src/lua/ldump.c	/^ lua_Writer writer;$/;"	m	struct:__anon87	file:
writer	src/lua/lstrlib.c	/^static int writer (lua_State *L, const void* b, size_t size, void* B) {$/;"	f	file:
wuqian_skill.getTurnUseCard	lua/ai/god-ai.lua	/^wuqian_skill.getTurnUseCard=function(self)$/;"	f
wushen_skill.getTurnUseCard	lua/ai/god-ai.lua	/^wushen_skill.getTurnUseCard=function(self)$/;"	f
wusheng_skill.getTurnUseCard	extension-doc/15-Activate.lua	/^wusheng_skill.getTurnUseCard=function(self,inclusive) $/;"	f
wusheng_skill.getTurnUseCard	lua/ai/standard-ai.lua	/^wusheng_skill.getTurnUseCard=function(self,inclusive)$/;"	f
x	include/fmod/fmod.h	/^	float x;        \/* X co-ordinate in 3D space. *\/$/;"	m	struct:__anon106
x	include/freetype/freetype/ftimage.h	/^    FT_Pos  x;$/;"	m	struct:FT_Vector_
x	include/freetype/freetype/ftimage.h	/^    short           x;$/;"	m	struct:FT_Span_
x	include/freetype/freetype/fttypes.h	/^    FT_F2Dot14  x;$/;"	m	struct:FT_UnitVector_
x	include/freetype/freetype/internal/ftcalc.h	/^  FT_Sqrt32( FT_Int32  x );$/;"	v
x	include/freetype/freetype/internal/ftcalc.h	/^  FT_SqrtFixed( FT_Int32  x );$/;"	v
x	include/freetype/freetype/internal/t1types.h	/^    FT_Int  x;$/;"	m	struct:AFM_KernPairRec_
x86	src/breakpad/google_breakpad/processor/minidump.h	/^    MDRawContextX86*   x86;$/;"	m	union:google_breakpad::MinidumpContext::__anon65
x86_cpu_info	src/breakpad/google_breakpad/common/minidump_format.h	/^  } x86_cpu_info;$/;"	m	union:__anon36	typeref:struct:__anon36::__anon37
x86_expected_contents	src/breakpad/processor/synth_minidump_unittest_data.h	/^static const u_int8_t x86_expected_contents[] = {$/;"	v
x86_raw_context	src/breakpad/processor/synth_minidump_unittest_data.h	/^static const MDRawContextX86 x86_raw_context = {$/;"	v
xAvgCharWidth	include/freetype/freetype/tttables.h	/^    FT_Short   xAvgCharWidth;$/;"	m	struct:TT_OS2_
xHeight	include/freetype/freetype/tttables.h	/^    FT_UShort  xHeight;$/;"	m	struct:TT_PCLT_
xMax	include/freetype/freetype/ftimage.h	/^    FT_Pos  xMax, yMax;$/;"	m	struct:FT_BBox_
xMax	include/freetype/freetype/tttables.h	/^    FT_Short   xMax;$/;"	m	struct:TT_Header_
xMax_Extent	include/freetype/freetype/tttables.h	/^    FT_Short   xMax_Extent;            \/* xmax extents          *\/$/;"	m	struct:TT_HoriHeader_
xMin	include/freetype/freetype/ftimage.h	/^    FT_Pos  xMin, yMin;$/;"	m	struct:FT_BBox_
xMin	include/freetype/freetype/tttables.h	/^    FT_Short   xMin;$/;"	m	struct:TT_Header_
x_offset	include/freetype/freetype/internal/tttypes.h	/^    FT_Char    x_offset;$/;"	m	struct:TT_SBit_ComponentRec_
x_ppem	include/freetype/freetype/freetype.h	/^    FT_Pos    x_ppem;$/;"	m	struct:FT_Bitmap_Size_
x_ppem	include/freetype/freetype/freetype.h	/^    FT_UShort  x_ppem;      \/* horizontal pixels per EM               *\/$/;"	m	struct:FT_Size_Metrics_
x_ppem	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte                 x_ppem;$/;"	m	struct:TT_SBit_ScaleRec_
x_ppem	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte                 x_ppem;$/;"	m	struct:TT_SBit_StrikeRec_
x_ppem_substitute	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte                 x_ppem_substitute;$/;"	m	struct:TT_SBit_ScaleRec_
x_res	include/freetype/freetype/ftcache.h	/^    FT_UInt     x_res;$/;"	m	struct:FTC_ScalerRec_
x_scale	include/freetype/freetype/freetype.h	/^    FT_Fixed   x_scale;     \/* scaling values used to convert font    *\/$/;"	m	struct:FT_Size_Metrics_
xadvance	include/freetype/freetype/ftcache.h	/^    FT_Char   xadvance;$/;"	m	struct:FTC_SBitRec_
xer	src/breakpad/google_breakpad/common/minidump_cpu_ppc.h	/^  u_int32_t             xer;     \/* Integer (fiXed-point) exception *\/$/;"	m	struct:__anon11
xer	src/breakpad/google_breakpad/common/minidump_cpu_ppc64.h	/^  u_int64_t             xer;     \/* Integer (fiXed-point) exception *\/$/;"	m	struct:__anon8
xfinal	lua/lib/sqlite3.lua	/^  local function xfinal(context)$/;"	f
xfunc	lua/lib/sqlite3.lua	/^  local function xfunc(context, num_values, values)$/;"	f
xianzhen_skill.getTurnUseCard	lua/ai/yjcm-ai.lua	/^xianzhen_skill.getTurnUseCard=function(self)$/;"	f
xinzhan_skill.getTurnUseCard	lua/ai/yjcm-ai.lua	/^xinzhan_skill.getTurnUseCard=function(self)$/;"	f
xmm0	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm0;$/;"	m	struct:__anon56::__anon57::__anon58
xmm1	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm1;$/;"	m	struct:__anon56::__anon57::__anon58
xmm10	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm10;$/;"	m	struct:__anon56::__anon57::__anon58
xmm11	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm11;$/;"	m	struct:__anon56::__anon57::__anon58
xmm12	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm12;$/;"	m	struct:__anon56::__anon57::__anon58
xmm13	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm13;$/;"	m	struct:__anon56::__anon57::__anon58
xmm14	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm14;$/;"	m	struct:__anon56::__anon57::__anon58
xmm15	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm15;$/;"	m	struct:__anon56::__anon57::__anon58
xmm2	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm2;$/;"	m	struct:__anon56::__anon57::__anon58
xmm3	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm3;$/;"	m	struct:__anon56::__anon57::__anon58
xmm4	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm4;$/;"	m	struct:__anon56::__anon57::__anon58
xmm5	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm5;$/;"	m	struct:__anon56::__anon57::__anon58
xmm6	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm6;$/;"	m	struct:__anon56::__anon57::__anon58
xmm7	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm7;$/;"	m	struct:__anon56::__anon57::__anon58
xmm8	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm8;$/;"	m	struct:__anon56::__anon57::__anon58
xmm9	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^      u_int128_t xmm9;$/;"	m	struct:__anon56::__anon57::__anon58
xmm_registers	src/breakpad/google_breakpad/common/minidump_cpu_amd64.h	/^  u_int128_t xmm_registers[16];$/;"	m	struct:__anon55
xstep	lua/lib/sqlite3.lua	/^  local function xstep(context, num_values, values)$/;"	f
xuid	include/freetype/freetype/t1tables.h	/^    FT_ULong        xuid[16];$/;"	m	struct:CID_FaceInfoRec_
xunzhi_skill.getTurnUseCard	lua/ai/yitian-ai.lua	/^function xunzhi_skill.getTurnUseCard(self)$/;"	f
xx	include/freetype/freetype/fttypes.h	/^    FT_Fixed  xx, xy;$/;"	m	struct:FT_Matrix_
xy	include/freetype/freetype/fttypes.h	/^    FT_Fixed  xx, xy;$/;"	m	struct:FT_Matrix_
y	include/fmod/fmod.h	/^    float y;        \/* Y co-ordinate in 3D space. *\/$/;"	m	struct:__anon106
y	include/freetype/freetype/ftimage.h	/^    FT_Pos  y;$/;"	m	struct:FT_Vector_
y	include/freetype/freetype/fttypes.h	/^    FT_F2Dot14  y;$/;"	m	struct:FT_UnitVector_
y	include/freetype/freetype/internal/t1types.h	/^    FT_Int  y;$/;"	m	struct:AFM_KernPairRec_
y	src/breakpad/google_breakpad/common/minidump_cpu_sparc.h	/^  u_int64_t     y;      \/* Y register (Y) *\/$/;"	m	struct:__anon64
yMax	include/freetype/freetype/ftimage.h	/^    FT_Pos  xMax, yMax;$/;"	m	struct:FT_BBox_
yMax	include/freetype/freetype/tttables.h	/^    FT_Short   yMax;$/;"	m	struct:TT_Header_
yMax_Extent	include/freetype/freetype/tttables.h	/^    FT_Short   yMax_Extent;             \/* xmax or ymax extents            *\/$/;"	m	struct:TT_VertHeader_
yMin	include/freetype/freetype/ftimage.h	/^    FT_Pos  xMin, yMin;$/;"	m	struct:FT_BBox_
yMin	include/freetype/freetype/tttables.h	/^    FT_Short   yMin;$/;"	m	struct:TT_Header_
yStrikeoutPosition	include/freetype/freetype/tttables.h	/^    FT_Short   yStrikeoutPosition;$/;"	m	struct:TT_OS2_
yStrikeoutSize	include/freetype/freetype/tttables.h	/^    FT_Short   yStrikeoutSize;$/;"	m	struct:TT_OS2_
ySubscriptXOffset	include/freetype/freetype/tttables.h	/^    FT_Short   ySubscriptXOffset;$/;"	m	struct:TT_OS2_
ySubscriptXSize	include/freetype/freetype/tttables.h	/^    FT_Short   ySubscriptXSize;$/;"	m	struct:TT_OS2_
ySubscriptYOffset	include/freetype/freetype/tttables.h	/^    FT_Short   ySubscriptYOffset;$/;"	m	struct:TT_OS2_
ySubscriptYSize	include/freetype/freetype/tttables.h	/^    FT_Short   ySubscriptYSize;$/;"	m	struct:TT_OS2_
ySuperscriptXOffset	include/freetype/freetype/tttables.h	/^    FT_Short   ySuperscriptXOffset;$/;"	m	struct:TT_OS2_
ySuperscriptXSize	include/freetype/freetype/tttables.h	/^    FT_Short   ySuperscriptXSize;$/;"	m	struct:TT_OS2_
ySuperscriptYOffset	include/freetype/freetype/tttables.h	/^    FT_Short   ySuperscriptYOffset;$/;"	m	struct:TT_OS2_
ySuperscriptYSize	include/freetype/freetype/tttables.h	/^    FT_Short   ySuperscriptYSize;$/;"	m	struct:TT_OS2_
y_offset	include/freetype/freetype/internal/tttypes.h	/^    FT_Char    y_offset;$/;"	m	struct:TT_SBit_ComponentRec_
y_ppem	include/freetype/freetype/freetype.h	/^    FT_Pos    y_ppem;$/;"	m	struct:FT_Bitmap_Size_
y_ppem	include/freetype/freetype/freetype.h	/^    FT_UShort  y_ppem;      \/* vertical pixels per EM                 *\/$/;"	m	struct:FT_Size_Metrics_
y_ppem	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte                 y_ppem;$/;"	m	struct:TT_SBit_ScaleRec_
y_ppem	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte                 y_ppem;$/;"	m	struct:TT_SBit_StrikeRec_
y_ppem_substitute	include/freetype/freetype/internal/tttypes.h	/^    FT_Byte                 y_ppem_substitute;$/;"	m	struct:TT_SBit_ScaleRec_
y_res	include/freetype/freetype/ftcache.h	/^    FT_UInt     y_res;$/;"	m	struct:FTC_ScalerRec_
y_scale	include/freetype/freetype/freetype.h	/^    FT_Fixed   y_scale;     \/* units to 26.6 fractional pixels        *\/$/;"	m	struct:FT_Size_Metrics_
yadvance	include/freetype/freetype/ftcache.h	/^    FT_Char   yadvance;$/;"	m	struct:FTC_SBitRec_
yamlCompatiblityEnabled_	src/jsoncpp/include/json/writer.h	/^      bool yamlCompatiblityEnabled_;$/;"	m	class:Json::FastWriter
yanxiao_skill.getTurnUseCard	lua/ai/bgm-ai.lua	/^yanxiao_skill.getTurnUseCard=function(self)$/;"	f
yeyan_skill.getTurnUseCard	lua/ai/god-ai.lua	/^yeyan_skill.getTurnUseCard=function(self)$/;"	f
yihun_skill.getTurnUseCard	lua/ai/standard-ai.lua	/^yihun_skill.getTurnUseCard=function(self)$/;"	f
yiji_skill	src/ui/roomscene.h	/^    YijiViewAsSkill *yiji_skill;$/;"	m	class:RoomScene
yindex	src/lua/lparser.c	/^static void yindex (LexState *ls, expdesc *v) {$/;"	f	file:
yishe_skill.getTurnUseCard 	extension-doc/17-Example.lua	/^yishe_skill.getTurnUseCard = function(self) -- getTurnUseCard 见 15-Activate.lua$/;"	f
yishe_skill.getTurnUseCard 	lua/ai/yitian-ai.lua	/^yishe_skill.getTurnUseCard = function(self)$/;"	f
yisheask_skill.getTurnUseCard 	extension-doc/17-Example.lua	/^yisheask_skill.getTurnUseCard = function(self)$/;"	f
yisheask_skill.getTurnUseCard 	lua/ai/yitian-ai.lua	/^yisheask_skill.getTurnUseCard = function(self)$/;"	f
yx	include/freetype/freetype/fttypes.h	/^    FT_Fixed  yx, yy;$/;"	m	struct:FT_Matrix_
yy	include/freetype/freetype/fttypes.h	/^    FT_Fixed  yx, yy;$/;"	m	struct:FT_Matrix_
z	include/fmod/fmod.h	/^    float z;        \/* Z co-ordinate in 3D space. *\/$/;"	m	struct:__anon106
z	src/lua/ldo.c	/^  ZIO *z;$/;"	m	struct:SParser	file:
z	src/lua/llex.h	/^  ZIO *z;  \/* input stream *\/$/;"	m	struct:LexState
zgetc	src/lua/lzio.h	22;"	d
zhiba_pindian_skill.getTurnUseCard 	lua/ai/mountain-ai.lua	/^zhiba_pindian_skill.getTurnUseCard = function(self)$/;"	f
zhiheng_skill.getTurnUseCard	lua/ai/standard-ai.lua	/^zhiheng_skill.getTurnUseCard=function(self)$/;"	f
zhijian_skill.getTurnUseCard 	extension-doc/15-Activate.lua	/^zhijian_skill.getTurnUseCard = function(self)$/;"	f
zhijian_skill.getTurnUseCard 	lua/ai/mountain-ai.lua	/^zhijian_skill.getTurnUseCard = function(self)$/;"	f
zhiyuan_skill.getTurnUseCard	lua/ai/fancheng-ai.lua	/^zhiyuan_skill.getTurnUseCard=function(self)$/;"	f
zombify	src/scenario/zombie-mode-scenario.cpp	/^    void zombify(ServerPlayer *player, ServerPlayer *killer = NULL) const{$/;"	f	class:ZombieRule
zone	include/freetype/freetype/internal/psaux.h	/^    T1_Decoder_Zone      zone;$/;"	m	struct:T1_DecoderRec_
zone	include/freetype/freetype/internal/tttypes.h	/^    TT_GlyphZoneRec  zone;$/;"	m	struct:TT_LoaderRec_
zones	include/freetype/freetype/internal/psaux.h	/^    T1_Decoder_ZoneRec   zones[T1_MAX_SUBRS_CALLS + 1];$/;"	m	struct:T1_DecoderRec_
~AutoCriticalSection	src/breakpad/client/windows/common/auto_critical_section.h	/^  ~AutoCriticalSection() {$/;"	f	class:google_breakpad::AutoCriticalSection
~AutoExceptionHandler	src/breakpad/client/windows/handler/exception_handler.cc	/^  ~AutoExceptionHandler() {$/;"	f	class:google_breakpad::AutoExceptionHandler
~AutoFileCloser	src/breakpad/processor/source_line_resolver_base_types.h	/^  ~AutoFileCloser() {$/;"	f	class:google_breakpad::SourceLineResolverBase::AutoFileCloser
~AutoImage	src/breakpad/common/windows/pdb_source_line_writer.cc	/^  ~AutoImage() {$/;"	f	class:google_breakpad::AutoImage
~AutoInternetHandle	src/breakpad/common/windows/http_upload.cc	/^  ~AutoInternetHandle() {$/;"	f	class:google_breakpad::HTTPUpload::AutoInternetHandle
~AutoStackClearer	src/breakpad/processor/postfix_evaluator-inl.h	/^  ~AutoStackClearer() { stack_->clear(); }$/;"	f	class:google_breakpad::AutoStackClearer
~BasicCodeModule	src/breakpad/processor/basic_code_module.h	/^  virtual ~BasicCodeModule() {}$/;"	f	class:google_breakpad::BasicCodeModule
~BasicCodeModules	src/breakpad/processor/basic_code_modules.cc	/^BasicCodeModules::~BasicCodeModules() {$/;"	f	class:google_breakpad::BasicCodeModules
~BasicModuleFactory	src/breakpad/processor/module_factory.h	/^  virtual ~BasicModuleFactory() { }$/;"	f	class:google_breakpad::BasicModuleFactory
~BasicSourceLineResolver	src/breakpad/google_breakpad/processor/basic_source_line_resolver.h	/^  virtual ~BasicSourceLineResolver() { }$/;"	f	class:google_breakpad::BasicSourceLineResolver
~BatchAllocator	src/jsoncpp/src/json_batchallocator.h	/^   ~BatchAllocator()$/;"	f	class:Json::BatchAllocator
~CZString	src/jsoncpp/src/json_value.cpp	/^Value::CZString::~CZString()$/;"	f	class:Json::Value::CZString
~CallStack	src/breakpad/processor/call_stack.cc	/^CallStack::~CallStack() {$/;"	f	class:google_breakpad::CallStack
~CardItem	src/ui/carditem.cpp	/^CardItem::~CardItem()$/;"	f	class:CardItem
~CardOverview	src/dialog/cardoverview.cpp	/^CardOverview::~CardOverview()$/;"	f	class:CardOverview
~ChatWidget	src/ui/chatwidget.cpp	/^ChatWidget::~ChatWidget()$/;"	f	class:ChatWidget
~ClientInfo	src/breakpad/client/windows/crash_generation/client_info.cc	/^ClientInfo::~ClientInfo() {$/;"	f	class:google_breakpad::ClientInfo
~CodeModule	src/breakpad/google_breakpad/processor/code_module.h	/^  virtual ~CodeModule() {}$/;"	f	class:google_breakpad::CodeModule
~CodeModules	src/breakpad/google_breakpad/processor/code_modules.h	/^  virtual ~CodeModules() {}$/;"	f	class:google_breakpad::CodeModules
~CommentInfo	src/jsoncpp/src/json_value.cpp	/^Value::CommentInfo::~CommentInfo()$/;"	f	class:Json::Value::CommentInfo
~ConfigDialog	src/dialog/configdialog.cpp	/^ConfigDialog::~ConfigDialog()$/;"	f	class:ConfigDialog
~ConnectionDialog	src/dialog/connectiondialog.cpp	/^ConnectionDialog::~ConnectionDialog()$/;"	f	class:ConnectionDialog
~ContainedRangeMap	src/breakpad/processor/contained_range_map-inl.h	/^ContainedRangeMap<AddressType, EntryType>::~ContainedRangeMap() {$/;"	f	class:google_breakpad::ContainedRangeMap
~CountedObject	src/breakpad/processor/address_map_unittest.cc	/^  ~CountedObject() { --count_; }$/;"	f	class:__anon76::CountedObject
~CountedObject	src/breakpad/processor/range_map_unittest.cc	/^  ~CountedObject() { --count_; }$/;"	f	class:__anon84::CountedObject
~CrashGenerationClient	src/breakpad/client/windows/crash_generation/crash_generation_client.cc	/^CrashGenerationClient::~CrashGenerationClient() {$/;"	f	class:google_breakpad::CrashGenerationClient
~CrashGenerationServer	src/breakpad/client/windows/crash_generation/crash_generation_server.cc	/^CrashGenerationServer::~CrashGenerationServer() {$/;"	f	class:google_breakpad::CrashGenerationServer
~DisassemblerX86	src/breakpad/processor/disassembler_x86.cc	/^DisassemblerX86::~DisassemblerX86() {$/;"	f	class:google_breakpad::DisassemblerX86
~DistanceViewDialog	src/dialog/distanceviewdialog.cpp	/^DistanceViewDialog::~DistanceViewDialog()$/;"	f	class:DistanceViewDialog
~Engine	src/core/engine.cpp	/^Engine::~Engine(){$/;"	f	class:Engine
~ExceptionHandler	src/breakpad/client/windows/handler/exception_handler.cc	/^ExceptionHandler::~ExceptionHandler() {$/;"	f	class:google_breakpad::ExceptionHandler
~Exploitability	src/breakpad/google_breakpad/processor/exploitability.h	/^  virtual ~Exploitability() {}$/;"	f	class:google_breakpad::Exploitability
~FastModuleFactory	src/breakpad/processor/module_factory.h	/^  virtual ~FastModuleFactory() { }$/;"	f	class:google_breakpad::FastModuleFactory
~FastSourceLineResolver	src/breakpad/google_breakpad/processor/fast_source_line_resolver.h	/^  virtual ~FastSourceLineResolver() { }$/;"	f	class:google_breakpad::FastSourceLineResolver
~FastWriter	src/jsoncpp/include/json/writer.h	/^      virtual ~FastWriter(){}$/;"	f	class:Json::FastWriter
~GeneralOverview	src/dialog/generaloverview.cpp	/^GeneralOverview::~GeneralOverview()$/;"	f	class:GeneralOverview
~HandleTraceData	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^HandleTraceData::~HandleTraceData() {$/;"	f	class:__anon67::HandleTraceData
~Handler	src/breakpad/processor/cfi_frame_info.h	/^    virtual ~Handler() { }$/;"	f	class:google_breakpad::CFIRuleParser::Handler
~LogStream	src/breakpad/processor/logging.cc	/^LogStream::~LogStream() {$/;"	f	class:google_breakpad::LogStream
~MainWindow	src/dialog/mainwindow.cpp	/^MainWindow::~MainWindow()$/;"	f	class:MainWindow
~MemoryRegion	src/breakpad/google_breakpad/processor/memory_region.h	/^  virtual ~MemoryRegion() {}$/;"	f	class:google_breakpad::MemoryRegion
~Minidump	src/breakpad/processor/minidump.cc	/^Minidump::~Minidump() {$/;"	f	class:google_breakpad::Minidump
~MinidumpAssertion	src/breakpad/processor/minidump.cc	/^MinidumpAssertion::~MinidumpAssertion() {$/;"	f	class:google_breakpad::MinidumpAssertion
~MinidumpContext	src/breakpad/processor/minidump.cc	/^MinidumpContext::~MinidumpContext() {$/;"	f	class:google_breakpad::MinidumpContext
~MinidumpException	src/breakpad/processor/minidump.cc	/^MinidumpException::~MinidumpException() {$/;"	f	class:google_breakpad::MinidumpException
~MinidumpGenerator	src/breakpad/client/windows/crash_generation/minidump_generator.cc	/^MinidumpGenerator::~MinidumpGenerator() {$/;"	f	class:google_breakpad::MinidumpGenerator
~MinidumpMemoryInfoList	src/breakpad/processor/minidump.cc	/^MinidumpMemoryInfoList::~MinidumpMemoryInfoList() {$/;"	f	class:google_breakpad::MinidumpMemoryInfoList
~MinidumpMemoryList	src/breakpad/processor/minidump.cc	/^MinidumpMemoryList::~MinidumpMemoryList() {$/;"	f	class:google_breakpad::MinidumpMemoryList
~MinidumpMemoryRegion	src/breakpad/processor/minidump.cc	/^MinidumpMemoryRegion::~MinidumpMemoryRegion() {$/;"	f	class:google_breakpad::MinidumpMemoryRegion
~MinidumpModule	src/breakpad/processor/minidump.cc	/^MinidumpModule::~MinidumpModule() {$/;"	f	class:google_breakpad::MinidumpModule
~MinidumpModuleList	src/breakpad/processor/minidump.cc	/^MinidumpModuleList::~MinidumpModuleList() {$/;"	f	class:google_breakpad::MinidumpModuleList
~MinidumpObject	src/breakpad/google_breakpad/processor/minidump.h	/^  virtual ~MinidumpObject() {}$/;"	f	class:google_breakpad::MinidumpObject
~MinidumpProcessor	src/breakpad/processor/minidump_processor.cc	/^MinidumpProcessor::~MinidumpProcessor() {$/;"	f	class:google_breakpad::MinidumpProcessor
~MinidumpStream	src/breakpad/google_breakpad/processor/minidump.h	/^  virtual ~MinidumpStream() {}$/;"	f	class:google_breakpad::MinidumpStream
~MinidumpStreamInfo	src/breakpad/google_breakpad/processor/minidump.h	/^    ~MinidumpStreamInfo() { delete stream; }$/;"	f	struct:google_breakpad::Minidump::MinidumpStreamInfo
~MinidumpSystemInfo	src/breakpad/processor/minidump.cc	/^MinidumpSystemInfo::~MinidumpSystemInfo() {$/;"	f	class:google_breakpad::MinidumpSystemInfo
~MinidumpThread	src/breakpad/processor/minidump.cc	/^MinidumpThread::~MinidumpThread() {$/;"	f	class:google_breakpad::MinidumpThread
~MinidumpThreadList	src/breakpad/processor/minidump.cc	/^MinidumpThreadList::~MinidumpThreadList() {$/;"	f	class:google_breakpad::MinidumpThreadList
~MockSymbolSupplier	src/breakpad/processor/stackwalker_unittest_utils.h	/^  virtual ~MockSymbolSupplier() {$/;"	f	class:MockSymbolSupplier
~Module	src/breakpad/processor/basic_source_line_resolver_types.h	/^  virtual ~Module() { }$/;"	f	class:google_breakpad::BasicSourceLineResolver::Module
~Module	src/breakpad/processor/fast_source_line_resolver_types.h	/^  virtual ~Module() { }$/;"	f	class:google_breakpad::FastSourceLineResolver::Module
~Module	src/breakpad/processor/source_line_resolver_base_types.h	/^  virtual ~Module() { };$/;"	f	class:google_breakpad::SourceLineResolverBase::Module
~ModuleComparer	src/breakpad/processor/module_comparer.h	/^  ~ModuleComparer() {$/;"	f	class:google_breakpad::ModuleComparer
~ModuleFactory	src/breakpad/processor/module_factory.h	/^  virtual ~ModuleFactory() { };$/;"	f	class:google_breakpad::ModuleFactory
~MyPixmapItem	src/ui/chatwidget.cpp	/^MyPixmapItem::~MyPixmapItem()$/;"	f	class:MyPixmapItem
~PDBSourceLineWriter	src/breakpad/common/windows/pdb_source_line_writer.cc	/^PDBSourceLineWriter::~PDBSourceLineWriter() {$/;"	f	class:google_breakpad::PDBSourceLineWriter
~ProcessState	src/breakpad/processor/process_state.cc	/^ProcessState::~ProcessState() {$/;"	f	class:google_breakpad::ProcessState
~RoomState	src/core/RoomState.cpp	/^RoomState::~RoomState()$/;"	f	class:RoomState
~SimpleSymbolSupplier	src/breakpad/processor/simple_symbol_supplier.h	/^  virtual ~SimpleSymbolSupplier() {}$/;"	f	class:google_breakpad::SimpleSymbolSupplier
~Sound	src/core/audio.cpp	/^    ~Sound(){$/;"	f	class:Sound
~SourceLineResolverBase	src/breakpad/processor/source_line_resolver_base.cc	/^SourceLineResolverBase::~SourceLineResolverBase() {$/;"	f	class:google_breakpad::SourceLineResolverBase
~SourceLineResolverInterface	src/breakpad/google_breakpad/processor/source_line_resolver_interface.h	/^  virtual ~SourceLineResolverInterface() {}$/;"	f	class:google_breakpad::SourceLineResolverInterface
~StackFrame	src/breakpad/google_breakpad/processor/stack_frame.h	/^  virtual ~StackFrame() {}$/;"	f	struct:google_breakpad::StackFrame
~StackFrameX86	src/breakpad/processor/stackwalker_x86.cc	/^StackFrameX86::~StackFrameX86() {$/;"	f	class:google_breakpad::StackFrameX86
~Stackwalker	src/breakpad/google_breakpad/processor/stackwalker.h	/^  virtual ~Stackwalker() {}$/;"	f	class:google_breakpad::Stackwalker
~StyledStreamWriter	src/jsoncpp/include/json/writer.h	/^      ~StyledStreamWriter(){}$/;"	f	class:Json::StyledStreamWriter
~StyledWriter	src/jsoncpp/include/json/writer.h	/^      virtual ~StyledWriter(){}$/;"	f	class:Json::StyledWriter
~SwigMovePointer	swig/sanguosha_wrap.cxx	/^    ~SwigMovePointer() { delete ptr; }$/;"	f	struct:SwigValueWrapper::SwigMovePointer
~SymbolSupplier	src/breakpad/google_breakpad/processor/symbol_supplier.h	/^  virtual ~SymbolSupplier() {}$/;"	f	class:google_breakpad::SymbolSupplier
~TestCodeModule	src/breakpad/processor/basic_source_line_resolver_unittest.cc	/^  virtual ~TestCodeModule() {}$/;"	f	class:__anon71::TestCodeModule
~TestCodeModule	src/breakpad/processor/fast_source_line_resolver_unittest.cc	/^  virtual ~TestCodeModule() {}$/;"	f	class:__anon73::TestCodeModule
~Value	src/jsoncpp/src/json_value.cpp	/^Value::~Value()$/;"	f	class:Json::Value
~WrappedCard	src/core/WrappedCard.cpp	/^WrappedCard::~WrappedCard()$/;"	f	class:WrappedCard
~Writer	src/jsoncpp/src/json_writer.cpp	/^Writer::~Writer()$/;"	f	class:Json::Writer
~jsJoystick	include/js.h	/^  ~jsJoystick () { close () ; }$/;"	f	class:jsJoystick
~linked_ptr	src/breakpad/processor/linked_ptr.h	/^  ~linked_ptr() { depart(); }$/;"	f	class:google_breakpad::linked_ptr
~scoped_array	src/breakpad/processor/scoped_ptr.h	/^  ~scoped_array() {$/;"	f	class:google_breakpad::scoped_array
~scoped_ptr	src/breakpad/processor/scoped_ptr.h	/^  ~scoped_ptr() {$/;"	f	class:google_breakpad::scoped_ptr
~scoped_ptr_malloc	src/breakpad/processor/scoped_ptr.h	/^  ~scoped_ptr_malloc() {$/;"	f	class:google_breakpad::scoped_ptr_malloc
在旧版 AI 中，对应的第一行为 sgs.ai_skill_invoke["@guicai"] 	extension-doc/14-Responsing.lua	/^在旧版 AI 中，对应的第一行为 sgs.ai_skill_invoke["@guicai"] = function(self, prompt)。$/;"	f
